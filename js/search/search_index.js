var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractComposeEffect.html",[0,0.082,1,2.596]],["body/classes/AbstractComposeEffect.html",[0,0.092,1,3.837,2,3.615,3,0.137,4,0.137,5,0.106,6,7.071,7,5.485,8,3.997,9,1.91,10,3.067,11,3.336,12,3.656,13,0.431,14,1.471,15,1.382,16,4.862,17,0.621,18,1.565,19,4.389,20,4.309,21,3.887,22,5.22,23,1.992,24,3.133,25,2.982,26,3.133,27,0.887,28,0.917,29,1.253,30,4.293,31,0.98,32,0.79,33,6.036,34,0.887,35,0.013,36,0.726,37,0.645,38,0.98,39,4.088,40,0.748,41,0.723,42,4.389,43,3.86,44,4.578,45,2.857,46,0.77,47,3.623,48,4.578,49,1.485,50,4.578,51,4.578,52,4.578,53,2.982,54,4.578,55,4.578,56,0.19,57,1.471,58,0.121,59,1.012,60,0.723,61,3.101,62,3.997,63,0.137,64,4.578,65,3.101,66,4.766,67,4.578,68,4.578,69,4.578,70,6.036,71,3.997,72,3.488,73,4.578,74,4.578,75,4.578,76,3.615,77,4.578,78,0.858,79,4.578,80,0.007,81,0.009,82,0.007]],["title/classes/AbstractServerActor.html",[0,0.082,83,2.324]],["body/classes/AbstractServerActor.html",[0,0.097,2,3.834,3,0.145,4,0.145,5,0.113,13,0.457,14,1.528,17,0.646,18,0.973,23,2.109,32,0.806,35,0.013,37,0.7,40,1.025,41,0.99,46,0.685,49,1.347,56,0.166,58,0.129,63,0.145,80,0.007,81,0.009,82,0.007,83,3.57,84,4.256,85,7.193,86,1.3,87,4.24,88,1.137,89,0.984,90,2.612,91,3.976,92,4.179,93,4.407,94,1.176,95,4.17,96,4.417,97,4.417,98,3.396,99,3.954,100,3.032,101,3.762,102,1.392,103,3.156,104,4.856,105,4.856,106,4.856,107,4.856,108,3.476,109,4.856,110,1.858,111,4.856,112,4.856,113,4.093,114,4.856,115,4.856,116,4.856,117,1.423,118,5.339,119,4.856,120,1.259,121,4.856,122,6.066,123,4.856,124,4.856,125,4.856,126,4.856]],["title/components/AmbientLightComponent.html",[127,0.04,128,0.6]],["body/components/AmbientLightComponent.html",[0,0.076,3,0.113,4,0.113,5,0.088,13,0.358,15,1.184,17,0.548,18,0.762,27,0.782,28,0.762,29,1.185,31,0.519,32,0.655,34,0.5,35,0.013,36,0.715,37,0.342,38,0.807,40,0.87,41,0.84,46,0.375,56,0.185,57,1.297,58,0.101,59,0.841,60,0.6,63,0.113,78,0.713,80,0.006,81,0.008,82,0.006,86,1.049,88,0.965,89,0.539,90,2.308,94,0.998,103,2.417,117,1.19,120,0.69,127,0.06,128,0.977,129,0.754,130,0.644,131,0.644,132,6.11,133,2.577,134,1.885,135,0.5,136,0.597,137,4.202,138,1.221,139,1.133,140,1.004,141,4.503,142,0.87,143,1.906,144,4.464,145,1.844,146,3.87,147,3.322,148,5.323,149,3.805,150,1.177,151,1.801,152,0.788,153,0.788,154,0.726,155,1.022,156,0.898,157,1.055,158,3.805,159,3.805,160,3.004,161,0.295,162,0.87,163,0.901,164,0.409,165,1.125,166,0.644,167,1.125,168,0.559,169,0.622,170,0.901,171,0.559,172,0.644,173,0.559,174,0.6,175,1.306,176,0.559,177,0.622,178,0.644,179,0.559,180,0.622,181,0.559,182,0.622,183,0.559,184,0.644,185,0.559,186,0.644,187,0.644,188,0.644,189,0.644,190,0.559,191,0.644,192,0.559,193,0.579,194,0.559,195,0.969,196,1.286,197,0.559,198,0.559,199,0.559,200,0.622,201,0.559,202,0.644,203,0.559,204,0.84,205,0.901,206,0.559,207,0.622,208,0.559,209,0.622,210,0.901,211,0.559,212,0.622,213,0.559,214,1.039,215,0.559,216,0.6,217,0.559,218,0.622,219,0.559,220,0.622,221,0.901,222,0.559,223,0.622,224,0.559,225,0.6,226,0.559,227,0.622,228,0.559,229,0.579,230,0.644,231,0.519,232,0.644,233,0.559,234,0.6,235,0.559,236,0.6,237,0.559,238,0.6,239,0.559,240,0.6,241,0.559,242,0.622,243,0.559,244,0.6,245,0.559,246,0.87,247,0.559,248,0.559,249,0.622,250,0.559,251,0.622,252,0.559,253,0.644,254,0.622,255,0.5,256,0.539,257,0.6,258,0.644,259,0.539,260,0.807,261,0.644,262,0.539,263,0.644,264,0.539,265,0.644,266,0.539,267,0.579,268,0.579,269,0.622,270,0.644]],["title/injectables/AnimationService.html",[271,2.11,272,1.933]],["body/injectables/AnimationService.html",[0,0.091,3,0.136,4,0.136,5,0.106,13,0.43,14,1.468,17,0.62,23,2.085,27,0.885,28,0.915,29,1.252,32,0.754,34,0.6,35,0.013,36,0.491,37,0.41,38,0.6,40,0.985,41,0.951,46,0.664,49,1.307,56,0.16,58,0.121,59,1.01,63,0.136,72,2.359,80,0.007,81,0.009,82,0.007,100,3.254,110,1.352,113,3.484,120,1.092,129,1.056,193,1.092,229,0.696,271,3.113,272,3.862,273,3.093,274,3.987,275,3.093,276,3.831,277,7.172,278,6.026,279,4.758,280,3.883,281,4.758,282,5.261,283,6.026,284,4.381,285,5.261,286,6.026,287,6.026,288,7.172,289,7.172,290,6.744,291,4.288,292,2.428,293,5.325,294,7.172,295,6.685,296,6.045,297,6.026,298,4.567,299,4.567,300,4.381,301,4.567,302,6.026,303,4.567,304,4.758,305,6.026,306,6.026,307,5.261,308,6.026,309,6.026,310,6.026,311,6.026,312,5.325,313,2.535,314,6.026,315,4.567,316,5.886,317,4.567,318,4.567,319,4.567,320,1.993,321,4.567,322,4.567,323,4.567,324,3.606,325,4.567]],["title/modules/AtftAnimationModule.html",[326,0.765,327,2.766]],["body/modules/AtftAnimationModule.html",[0,0.124,3,0.185,4,0.185,5,0.144,35,0.012,56,0.193,58,0.164,63,0.185,80,0.009,81,0.011,82,0.009,136,0.868,161,0.48,272,3.911,326,1.161,327,5.596,328,2.096,329,2.096,330,2.246,331,2.246,332,2.246,333,5.406,334,5.406,335,2.467,336,2.246,337,2.169,338,6.192,339,6.192,340,2.739,341,6.192]],["title/modules/AtftCameraModule.html",[326,0.765,342,2.766]],["body/modules/AtftCameraModule.html",[0,0.116,3,0.172,4,0.172,5,0.134,35,0.013,56,0.207,58,0.153,63,0.172,80,0.009,81,0.01,82,0.009,136,0.648,161,0.448,219,1.246,220,0.946,222,1.246,223,0.946,326,1.084,328,1.958,329,1.958,330,2.73,331,2.098,332,2.73,335,2.369,336,2.098,337,2.027,340,2.63,342,5.695,343,5.05,344,5.05,345,5.05,346,5.784,347,5.784,348,2.829,349,2.254,350,6.998,351,2.174]],["title/modules/AtftConnectorModule.html",[326,0.765,352,2.766]],["body/modules/AtftConnectorModule.html",[0,0.116,3,0.172,4,0.172,5,0.134,35,0.013,56,0.207,58,0.153,63,0.172,80,0.009,81,0.01,82,0.009,136,0.647,161,0.447,203,1.246,204,1.103,211,1.246,212,0.944,326,1.082,328,1.955,329,1.955,330,2.728,331,2.095,332,2.728,335,2.367,336,2.095,337,2.023,340,2.628,348,2.826,349,2.25,351,2.171,352,5.694,353,5.042,354,5.042,355,5.042,356,5.775,357,5.775,358,6.991]],["title/modules/AtftControlModule.html",[326,0.765,359,2.766]],["body/modules/AtftControlModule.html",[0,0.116,3,0.172,4,0.172,5,0.134,35,0.013,56,0.207,58,0.153,63,0.172,80,0.009,81,0.01,82,0.009,136,0.648,161,0.448,208,1.246,209,0.946,217,1.246,218,0.946,326,1.084,328,1.958,329,1.958,330,2.73,331,2.098,332,2.73,335,2.369,336,2.098,337,2.027,340,2.63,348,2.829,349,2.254,351,2.174,359,5.695,360,5.05,361,5.05,362,5.05,363,5.784,364,5.784,365,6.998]],["title/modules/AtftDataCenterActorModule.html",[326,0.765,366,2.969]],["body/modules/AtftDataCenterActorModule.html",[0,0.097,3,0.145,4,0.145,5,0.113,35,0.013,56,0.217,58,0.129,63,0.145,80,0.007,81,0.009,82,0.007,84,2.505,136,0.544,161,0.376,194,1.217,201,1.217,233,1.217,234,0.765,235,1.217,236,0.765,237,1.217,238,0.765,239,1.217,240,0.765,252,1.217,326,0.909,328,1.642,329,1.642,330,2.519,331,1.759,332,2.519,335,2.122,336,1.759,337,1.699,340,2.356,348,2.534,349,1.89,351,2.356,366,6.248,367,4.234,368,4.234,369,4.234,370,4.234,371,4.672,372,4.85,373,3.829,374,3.284,375,4.234,376,4.85,377,6.916,378,4.234,379,7.34,380,4.85,381,4.85]],["title/modules/AtftEffectModule.html",[326,0.765,382,2.766]],["body/modules/AtftEffectModule.html",[0,0.103,3,0.153,4,0.153,5,0.12,31,1.14,35,0.013,56,0.215,58,0.136,61,3.486,63,0.153,80,0.008,81,0.01,82,0.008,136,0.577,161,0.399,171,1.227,183,1.227,185,1.227,190,1.227,256,1.183,257,0.812,326,0.965,328,1.743,329,1.743,330,2.591,331,1.868,332,2.591,335,2.204,336,1.868,337,1.804,340,2.447,348,2.632,349,2.006,351,1.935,382,5.807,383,4.494,384,4.494,385,4.494,386,5.148,387,5.148,388,5.148,389,5.148,390,5.148,391,5.148,392,5.148,393,5.148,394,5.148]],["title/modules/AtftHelperModule.html",[326,0.765,395,2.766]],["body/modules/AtftHelperModule.html",[0,0.112,3,0.167,4,0.167,5,0.13,35,0.013,56,0.21,58,0.149,63,0.167,80,0.008,81,0.01,82,0.008,89,1.197,136,0.629,161,0.435,168,1.241,169,0.918,195,0.886,197,1.241,326,1.052,328,1.9,329,1.9,330,2.694,331,2.036,332,2.694,335,2.326,336,2.036,337,1.967,340,2.583,348,2.778,349,2.187,351,2.11,395,5.742,396,4.9,397,4.9,398,4.9,399,5.613,400,5.613,401,6.871,402,5.613]],["title/modules/AtftLightModule.html",[326,0.765,403,2.766]],["body/modules/AtftLightModule.html",[0,0.108,3,0.16,4,0.16,5,0.125,35,0.013,56,0.212,58,0.143,63,0.16,80,0.008,81,0.01,82,0.008,128,1.244,136,0.603,137,5.752,140,0.879,161,0.417,181,1.234,182,0.879,199,1.234,200,0.879,226,1.234,227,0.879,326,1.008,328,1.821,329,1.821,330,2.643,331,1.951,332,2.643,335,2.266,336,1.951,337,1.884,340,2.515,348,2.706,349,2.096,351,2.022,403,5.764,404,4.696,405,4.696,406,4.696,407,4.696,408,5.378,409,5.378,410,7.623]],["title/modules/AtftLoaderModule.html",[326,0.765,411,2.766]],["body/modules/AtftLoaderModule.html",[0,0.112,3,0.167,4,0.167,5,0.13,35,0.013,56,0.21,58,0.149,63,0.167,80,0.008,81,0.01,82,0.008,136,0.628,154,0.765,161,0.434,213,1.241,215,1.241,216,0.884,243,1.241,244,0.884,326,1.05,328,1.897,329,1.897,330,2.692,331,2.033,332,2.692,335,2.324,336,2.033,337,1.964,340,2.58,348,2.775,349,2.184,351,2.106,411,5.741,412,4.893,413,4.893,414,4.893,415,5.604,416,5.604,417,7.421]],["title/modules/AtftMeshModule.html",[326,0.765,418,2.766]],["body/modules/AtftMeshModule.html",[0,0.097,3,0.145,4,0.145,5,0.113,35,0.013,56,0.217,58,0.129,63,0.145,80,0.007,81,0.009,82,0.007,136,0.544,161,0.376,173,1.217,174,0.765,179,1.217,180,0.793,192,1.217,193,0.739,195,0.765,198,1.217,224,1.217,225,0.765,241,1.217,242,0.793,248,1.217,249,0.793,250,1.217,251,0.793,326,0.909,328,1.642,329,1.642,330,2.519,331,1.759,332,2.519,335,2.122,336,1.759,337,1.699,340,2.356,348,2.534,349,1.89,351,1.823,418,5.825,419,4.234,420,4.234,421,4.234,422,4.85,423,4.85,424,7.008]],["title/modules/AtftModule.html",[326,0.765,371,2.451]],["body/modules/AtftModule.html",[0,0.096,3,0.142,4,0.142,5,0.111,35,0.013,41,0.754,56,0.218,58,0.127,63,0.142,80,0.007,81,0.009,82,0.007,136,0.536,161,0.37,284,3.475,326,1.164,327,5.599,328,1.618,329,1.618,330,1.734,331,1.734,332,2.502,335,2.102,336,1.734,337,1.674,340,2.333,342,5.599,351,2.592,359,5.599,371,5.163,382,5.599,425,4.172,426,4.172,427,4.172,428,5.599,429,5.599,430,5.599,431,5.599,432,4.779,433,4.779,434,4.779,435,4.779,436,4.779,437,4.779,438,4.779,439,4.669,440,4.779,441,4.779,442,4.779,443,4.779,444,4.779,445,4.779,446,4.779,447,4.779,448,4.779,449,4.779,450,4.779,451,4.172,452,4.172,453,4.172,454,2.868,455,4.779,456,4.172,457,4.779]],["title/modules/AtftObjectModule.html",[326,0.765,428,2.766]],["body/modules/AtftObjectModule.html",[0,0.098,3,0.146,4,0.146,5,0.114,35,0.013,56,0.217,58,0.13,63,0.146,80,0.007,81,0.009,82,0.007,136,0.549,161,0.379,176,1.146,177,0.8,231,1.132,326,0.918,328,1.657,329,1.657,330,2.531,331,1.776,332,2.531,335,2.135,336,1.776,337,1.715,340,2.37,348,2.549,349,1.908,351,2.37,352,5.619,395,5.619,403,5.619,411,5.619,418,5.619,428,5.823,458,4.274,459,4.274,460,4.274,461,4.274,462,5.619,463,4.896,464,4.896,465,4.896,466,4.896,467,4.896,468,4.896,469,4.896,470,4.896,471,4.896,472,4.896,473,4.896,474,4.896,475,4.896,476,4.896,477,4.896,478,4.896]],["title/modules/AtftPipeModule.html",[326,0.765,439,2.766]],["body/modules/AtftPipeModule.html",[0,0.116,3,0.173,4,0.173,5,0.135,35,0.013,56,0.207,58,0.154,63,0.173,80,0.009,81,0.01,82,0.009,136,0.65,161,0.449,326,1.088,328,1.964,329,1.964,330,2.733,331,2.105,332,2.733,335,2.374,336,2.105,337,2.033,340,2.635,348,2.835,349,2.261,351,2.181,439,5.698,479,5.066,480,5.066,481,5.066,482,5.745,483,5.745,484,5.803,485,5.803,486,5.803,487,5.803]],["title/modules/AtftRaycasterModule.html",[326,0.765,429,2.766]],["body/modules/AtftRaycasterModule.html",[0,0.109,3,0.163,4,0.163,5,0.127,35,0.013,56,0.213,58,0.145,63,0.163,80,0.008,81,0.01,82,0.008,136,0.823,161,0.424,259,1.193,260,0.964,262,1.193,264,1.193,326,1.025,328,1.851,329,1.851,330,2.663,331,1.984,332,2.663,335,2.289,336,1.984,337,1.916,340,2.541,348,2.734,349,2.131,351,2.055,429,5.759,488,4.774,489,4.774,490,4.774,491,4.774,492,3.799,493,5.468,494,5.468,495,5.468,496,3.976,497,5.468,498,5.468]],["title/modules/AtftRendererModule.html",[326,0.765,430,2.766]],["body/modules/AtftRendererModule.html",[0,0.116,3,0.174,4,0.174,5,0.135,29,1.332,35,0.013,56,0.208,58,0.154,63,0.174,80,0.009,81,0.01,82,0.009,136,0.846,161,0.451,228,1.247,229,0.887,326,1.091,328,1.971,329,1.971,330,2.737,331,2.112,332,2.737,335,2.378,336,2.112,337,2.04,340,2.641,348,2.84,349,2.268,351,2.188,430,5.669,499,5.083,500,5.083,501,5.083,502,5.083,503,5.821,504,5.821,505,5.821,506,5.083]],["title/modules/AtftStatsModule.html",[326,0.765,431,2.766]],["body/modules/AtftStatsModule.html",[0,0.116,3,0.174,4,0.174,5,0.135,35,0.013,56,0.208,58,0.154,63,0.174,80,0.009,81,0.01,82,0.009,136,0.846,161,0.451,266,1.202,267,0.887,268,0.887,326,1.091,328,1.971,329,1.971,330,2.737,331,2.112,332,2.737,335,2.378,336,2.112,337,2.04,340,2.641,348,2.84,349,2.268,351,2.188,431,5.669,507,5.083,508,5.083,509,5.083,510,5.083,511,4.89,512,5.821,513,5.083,514,5.821]],["title/modules/AtftTextModule.html",[326,0.765,462,2.766]],["body/modules/AtftTextModule.html",[0,0.12,3,0.178,4,0.178,5,0.139,35,0.013,56,0.202,58,0.158,63,0.178,80,0.009,81,0.011,82,0.009,136,0.67,161,0.463,246,0.977,247,1.251,326,1.12,328,2.023,329,2.023,330,2.768,331,2.168,332,2.768,335,2.416,336,2.168,337,2.094,340,2.682,348,2.885,349,2.329,351,2.246,424,5.218,462,5.611,515,5.218,516,5.218,517,5.218,518,5.976,519,5.976]],["title/components/AxesHelperComponent.html",[127,0.04,168,0.6]],["body/components/AxesHelperComponent.html",[0,0.078,3,0.116,4,0.116,5,0.09,13,0.366,15,1.193,17,0.556,18,0.778,27,0.793,28,0.778,29,1.193,31,0.53,32,0.611,34,0.51,35,0.013,36,0.721,37,0.485,38,0.815,46,0.383,56,0.187,57,1.315,58,0.103,59,0.858,60,0.613,63,0.116,78,0.728,80,0.006,81,0.008,82,0.006,86,1.059,88,0.978,89,0.55,94,1.012,102,1.547,117,1.046,120,0.704,127,0.06,128,0.57,129,0.765,130,0.657,131,0.657,134,1.897,135,0.51,136,0.605,138,1.222,139,1.134,140,0.635,142,0.883,143,1.922,145,1.861,150,1.193,152,0.804,153,0.804,154,0.737,155,1.043,156,0.916,161,0.301,162,0.883,163,0.914,164,0.417,165,1.135,166,0.657,167,1.135,168,0.985,169,1.015,170,0.914,171,0.57,172,0.657,173,0.57,174,0.613,175,1.312,176,0.57,177,0.635,178,0.657,179,0.57,180,0.635,181,0.57,182,0.635,183,0.57,184,0.657,185,0.57,186,0.657,187,0.657,188,0.657,189,0.657,190,0.57,191,0.657,192,0.57,193,0.591,194,0.57,195,0.98,196,1.292,197,0.57,198,0.57,199,0.57,200,0.635,201,0.57,202,0.657,203,0.57,204,0.852,205,0.914,206,0.57,207,0.635,208,0.57,209,0.635,210,0.914,211,0.57,212,0.635,213,0.57,214,1.05,215,0.57,216,0.613,217,0.57,218,0.635,219,0.57,220,0.635,221,0.914,222,0.57,223,0.635,224,0.57,225,0.613,226,0.57,227,0.635,228,0.57,229,0.591,230,0.657,231,0.53,232,0.657,233,0.57,234,0.613,235,0.57,236,0.613,237,0.57,238,0.613,239,0.57,240,0.613,241,0.57,242,0.635,243,0.57,244,0.613,245,0.57,246,0.883,247,0.57,248,0.57,249,0.635,250,0.57,251,0.635,252,0.57,253,0.657,254,0.635,255,0.51,256,0.55,257,0.613,258,0.657,259,0.55,260,0.815,261,0.657,262,0.55,263,0.657,264,0.55,265,0.657,266,0.55,267,0.591,268,0.591,269,0.635,270,0.657,520,5.857,521,3.065,522,5.398,523,4.713,524,3.945,525,4.713,526,3.883,527,4.713,528,3.883,529,3.883]],["title/components/BlurComponent.html",[127,0.04,171,0.6]],["body/components/BlurComponent.html",[0,0.069,1,4.93,3,0.103,4,0.103,5,0.08,7,2.342,13,0.326,14,1.212,15,1.254,16,3.368,17,0.512,18,1.352,19,4.631,20,3.496,21,3.154,22,5.265,23,1.656,24,2.542,25,2.457,26,2.542,27,0.731,28,0.693,29,1.149,30,4.049,31,0.921,32,0.764,34,0.837,35,0.013,36,0.778,37,0.607,38,0.923,39,2.342,40,0.565,41,0.546,42,4.235,43,3.66,45,3.015,46,0.743,47,2.985,49,1.362,53,1.708,56,0.192,57,1.212,58,0.092,59,0.764,60,0.919,61,2.342,63,0.103,78,0.648,80,0.005,81,0.007,82,0.005,86,1.005,88,0.901,89,0.49,127,0.057,128,0.508,129,0.704,130,0.585,131,0.585,135,0.454,138,1.215,139,1.128,140,0.565,142,0.565,154,0.472,156,0.816,161,0.268,162,0.813,163,0.842,164,0.372,165,1.078,166,0.585,167,1.078,168,0.508,169,0.565,170,0.842,171,0.936,172,0.585,173,0.508,174,0.546,175,1.277,176,0.508,177,0.565,178,0.585,179,0.508,180,0.565,181,0.508,182,0.565,183,0.508,184,0.585,185,0.508,186,0.585,187,0.585,188,0.585,189,0.585,190,0.508,191,0.585,192,0.508,193,0.527,194,0.508,195,0.919,196,1.254,197,0.508,198,0.508,199,0.508,200,0.565,201,0.508,202,0.585,203,0.508,204,0.785,205,0.842,206,0.508,207,0.565,208,0.508,209,0.565,210,0.842,211,0.508,212,0.565,213,0.508,214,0.986,215,0.508,216,0.546,217,0.508,218,0.565,219,0.508,220,0.565,221,0.842,222,0.508,223,0.565,224,0.508,225,0.546,226,0.508,227,0.565,228,0.508,229,0.527,230,0.585,231,0.472,232,0.585,233,0.508,234,0.546,235,0.508,236,0.546,237,0.508,238,0.546,239,0.508,240,0.546,241,0.508,242,0.565,243,0.508,244,0.546,245,0.508,246,0.813,247,0.508,248,0.508,249,0.565,250,0.508,251,0.565,252,0.508,253,0.585,254,0.565,255,0.454,256,0.49,257,0.546,258,0.585,259,0.49,260,0.765,261,0.585,262,0.49,263,0.585,264,0.49,265,0.585,266,0.49,267,0.527,268,0.527,269,0.565,270,0.585,313,1.3,530,3.019,531,4.974,532,3.458,533,3.458,534,3.458,535,3.365,536,2.73,537,2.73,538,2.73,539,2.73,540,2.73,541,2.73,542,2.73,543,2.73,544,3.019,545,3.019,546,3.458,547,3.458,548,3.458,549,3.458,550,5.029,551,4.974,552,4.974,553,1.57,554,2.73]],["title/components/BoxMeshComponent.html",[127,0.04,173,0.6]],["body/components/BoxMeshComponent.html",[0,0.063,3,0.093,4,0.093,5,0.073,13,0.294,15,1.097,17,0.476,18,0.926,27,0.679,28,0.627,29,1.109,31,0.427,32,0.71,34,0.411,35,0.013,36,0.653,37,0.281,38,1.037,40,1.109,41,1.071,46,0.308,56,0.18,57,1.126,58,0.083,59,0.691,60,0.494,63,0.093,78,0.586,80,0.005,81,0.007,82,0.005,86,0.959,88,0.838,89,0.443,94,0.866,102,1.944,117,1.36,120,0.838,127,0.054,128,0.459,129,0.655,130,0.529,131,0.529,134,1.579,135,0.411,136,0.518,138,1.209,139,1.122,140,0.511,142,0.756,143,1.741,145,1.685,150,1.022,152,0.648,153,0.648,154,0.631,155,1.241,156,0.738,157,1.525,161,0.242,162,0.756,163,0.782,164,0.336,165,1.028,166,0.529,167,1.028,168,0.459,169,0.511,170,0.782,171,0.459,172,0.529,173,0.892,174,0.868,175,1.245,176,0.459,177,0.511,178,0.529,179,0.459,180,0.511,181,0.459,182,0.511,183,0.459,184,0.529,185,0.459,186,0.529,187,0.529,188,0.529,189,0.529,190,0.459,191,0.529,192,0.459,193,0.476,194,0.459,195,0.868,196,1.22,197,0.459,198,0.459,199,0.459,200,0.511,201,0.459,202,0.529,203,0.459,204,0.73,205,0.782,206,0.459,207,0.511,208,0.459,209,0.511,210,0.782,211,0.459,212,1.109,213,0.459,214,0.931,215,0.459,216,0.494,217,0.459,218,0.511,219,0.459,220,0.511,221,0.782,222,0.459,223,0.511,224,0.459,225,0.494,226,0.459,227,0.511,228,0.459,229,0.476,230,0.529,231,0.427,232,0.529,233,0.459,234,0.494,235,0.459,236,0.494,237,0.459,238,0.494,239,0.459,240,0.494,241,0.459,242,0.511,243,0.459,244,0.494,245,0.459,246,0.756,247,0.459,248,0.459,249,0.511,250,0.459,251,0.511,252,0.459,253,0.529,254,0.511,255,0.411,256,0.443,257,0.494,258,0.529,259,0.443,260,0.722,261,0.529,262,0.443,263,0.529,264,0.443,265,0.529,266,0.443,267,0.476,268,0.476,269,0.511,270,0.529,555,6.425,556,1.616,557,3.129,558,4.623,559,6.128,560,5.499,561,3.322,562,3.998,563,4.462,564,3.998,565,4.623,566,4.072,567,2.274,568,5.357,569,4.933,570,5.357,571,4.623,572,5.357,573,6.066,574,2.816,575,5.924,576,5.924,577,5.924,578,5.924,579,5.924,580,2.469,581,2.939,582,2.731,583,2.118,584,2.939,585,2.731,586,3.128,587,3.128,588,1.365,589,3.128,590,2.118,591,3.128,592,2.274,593,2.274,594,3.128,595,2.017,596,1.693,597,1.693,598,1.877]],["title/components/ContentProjectionComponent.html",[127,0.04,176,0.6]],["body/components/ContentProjectionComponent.html",[0,0.075,3,0.112,4,0.112,5,0.087,13,0.354,14,1.286,15,1.12,17,0.544,18,0.754,27,0.776,28,0.754,29,1.181,31,0.513,32,0.652,34,0.694,35,0.013,36,0.749,37,0.548,38,0.869,46,0.52,49,0.729,56,0.191,57,1.286,58,0.1,59,0.831,60,0.594,63,0.112,65,2.547,80,0.006,81,0.008,82,0.006,86,1.044,88,0.957,89,0.987,127,0.059,128,0.553,129,0.748,130,0.637,131,0.637,134,1.878,135,0.494,136,0.592,138,1.22,139,1.132,140,0.615,142,0.863,143,1.749,145,1.835,150,1.167,152,0.779,153,0.779,154,0.951,155,1.01,156,0.887,161,0.291,162,0.863,163,0.894,164,0.567,165,1.12,166,0.637,167,1.12,168,0.553,169,0.615,170,0.894,171,0.553,172,0.637,173,0.553,174,0.594,175,1.303,176,0.972,177,1.081,178,0.637,179,0.553,180,0.615,181,0.553,182,0.615,183,0.553,184,0.637,185,0.553,186,0.637,187,0.637,188,0.637,189,0.637,190,0.553,191,0.637,192,0.553,193,0.573,194,0.553,195,0.963,196,1.282,197,0.553,198,0.553,199,0.553,200,0.615,201,0.553,202,0.637,203,0.553,204,0.833,205,0.894,206,0.553,207,0.615,208,0.553,209,0.615,210,0.894,211,0.553,212,0.615,213,0.553,214,1.033,215,0.553,216,0.594,217,0.553,218,0.615,219,0.553,220,0.615,221,0.894,222,0.553,223,0.615,224,0.553,225,0.594,226,0.553,227,0.615,228,0.553,229,0.573,230,0.637,231,0.513,232,0.637,233,0.553,234,0.594,235,0.553,236,0.594,237,0.553,238,0.594,239,0.553,240,0.594,241,0.553,242,0.615,243,0.553,244,0.594,245,0.553,246,0.863,247,0.553,248,0.553,249,0.615,250,0.553,251,0.615,252,0.553,253,0.637,254,0.615,255,0.494,256,0.533,257,0.594,258,0.637,259,0.533,260,0.802,261,0.637,262,0.533,263,0.637,264,0.533,265,0.637,266,0.533,267,0.573,268,0.573,269,0.615,270,0.637,452,3.284,535,1.708,599,5.776,600,3.284,601,5.28,602,5.28,603,6.615,604,5.28,605,5.28,606,5.28,607,2.777,608,3.761,609,1.943,610,2.969,611,5.28,612,2.969,613,3.761,614,3.761,615,3.761,616,3.761,617,3.761,618,3.761,619,3.761,620,3.284,621,3.284,622,3.761]],["title/components/CylinderMeshComponent.html",[127,0.04,179,0.6]],["body/components/CylinderMeshComponent.html",[0,0.069,3,0.103,4,0.103,5,0.08,13,0.324,15,1.14,17,0.51,18,0.993,27,0.728,28,0.689,29,1.147,31,0.47,32,0.754,34,0.452,35,0.013,36,0.683,37,0.309,38,0.763,40,1.21,41,1.168,46,0.339,56,0.186,57,1.208,58,0.091,59,0.761,60,0.543,63,0.103,65,2.33,78,0.645,80,0.005,81,0.007,82,0.005,86,1.003,88,0.898,89,0.487,94,0.929,117,1.461,120,0.898,127,0.057,128,0.506,129,0.702,130,0.582,131,0.582,134,1.652,135,0.452,136,0.555,138,1.215,139,1.127,140,0.563,142,0.81,143,1.822,145,1.763,150,1.096,152,0.713,153,0.713,154,0.676,155,1.331,156,0.812,157,1.611,161,0.267,162,0.81,163,0.839,164,0.37,165,1.076,166,0.582,167,1.076,168,0.506,169,0.563,170,0.839,171,0.506,172,0.582,173,0.506,174,0.543,175,1.276,176,0.506,177,0.563,178,0.582,179,0.934,180,0.95,181,0.506,182,0.563,183,0.506,184,0.582,185,0.506,186,0.582,187,0.582,188,0.582,189,0.582,190,0.506,191,0.582,192,0.506,193,0.524,194,0.506,195,0.917,196,1.253,197,0.506,198,0.506,199,0.506,200,0.563,201,0.506,202,0.582,203,0.506,204,0.782,205,0.839,206,0.506,207,0.563,208,0.506,209,0.563,210,0.839,211,0.506,212,1.147,213,0.506,214,0.983,215,0.506,216,0.543,217,0.506,218,0.563,219,0.506,220,0.563,221,0.839,222,0.506,223,0.563,224,0.506,225,0.543,226,0.506,227,0.563,228,0.506,229,0.524,230,0.582,231,0.47,232,0.582,233,0.506,234,0.543,235,0.506,236,0.543,237,0.506,238,0.543,239,0.506,240,0.543,241,0.506,242,0.563,243,0.506,244,0.543,245,0.506,246,0.81,247,0.506,248,0.506,249,0.563,250,0.506,251,0.563,252,0.506,253,0.582,254,0.563,255,0.452,256,0.487,257,0.543,258,0.582,259,0.487,260,0.763,261,0.582,262,0.487,263,0.582,264,0.487,265,0.582,266,0.487,267,0.524,268,0.524,269,0.563,270,0.582,313,1.863,556,1.778,557,3.306,561,2.749,562,4.224,566,4.211,574,1.737,588,1.502,590,2.33,593,2.502,595,2.163,596,1.863,597,1.863,598,2.065,623,6.764,624,4.956,625,5.809,626,5.072,627,5.809,628,5.809,629,5.809,630,5.809,631,4.327,632,3.005,633,3.005,634,2.717,635,3.604,636,2.717,637,3.005,638,2.502,639,2.346,640,3.151,641,4.956,642,3.441,643,3.441,644,2.448,645,3.441,646,3.441,647,3.441,648,3.441,649,3.005,650,3.441,651,3.441,652,3.441]],["title/directives/DashedDrawDirective.html",[164,0.439,256,0.578]],["body/directives/DashedDrawDirective.html",[0,0.081,3,0.121,4,0.121,5,0.094,9,1.758,10,2.881,13,0.381,14,1.354,17,0.572,24,2.98,27,0.816,32,0.787,34,0.532,35,0.013,36,0.435,37,0.57,38,0.532,40,1.17,41,1.129,46,0.625,49,1.323,56,0.19,58,0.107,63,0.121,80,0.006,81,0.008,82,0.006,94,1.042,110,1.646,117,1.387,120,1.238,134,1.775,135,0.532,138,0.573,139,0.73,150,1.228,151,1.916,153,0.838,154,0.758,155,1.087,157,1.76,164,0.435,255,0.532,256,0.787,257,1.001,272,3.232,276,4.033,291,4.341,292,2.802,296,5.009,313,2.385,320,1.767,569,4.613,574,2.393,588,1.767,595,2.98,607,1.7,620,5.539,635,2.944,644,2.745,653,7.036,654,3.535,655,6.344,656,6.829,657,6.344,658,6.344,659,6.344,660,6.344,661,3.196,662,5.557,663,3.335,664,5.557,665,4.048,666,3.335,667,4.048,668,5.557,669,4.048,670,4.048,671,4.048,672,4.048,673,4.048,674,4.048,675,4.613,676,4.048,677,2.944,678,3.196,679,2.742,680,6.344,681,4.048,682,5.557,683,2.742,684,3.196,685,4.048,686,4.048,687,3.535,688,4.048,689,6.829,690,5.557,691,4.048,692,4.048,693,3.535,694,4.048,695,4.048,696,4.048,697,4.048,698,5.557,699,4.048,700,4.048,701,4.048,702,4.048,703,4.048,704,6.344,705,5.557,706,4.048,707,4.048,708,4.387,709,4.048,710,4.048,711,4.048,712,5.557,713,6.344,714,5.557,715,4.048,716,4.048,717,2.944,718,4.048,719,4.851,720,4.048,721,4.048,722,6.344]],["title/pipes/Deg2RadPipe.html",[482,2.766,723,2.766]],["body/pipes/Deg2RadPipe.html",[0,0.12,3,0.179,4,0.179,5,0.14,9,1.904,17,0.619,32,0.593,34,0.79,35,0.013,36,0.822,37,0.541,38,0.79,46,0.593,56,0.159,58,0.159,63,0.179,78,1.128,80,0.009,81,0.011,82,0.009,102,2.319,135,0.79,482,4.852,640,3.824,723,4.852,724,4.75,725,5.252,726,7.165,727,5.252,728,7.165,729,6.016,730,6.255,731,7.065,732,6.255,733,6.255,734,5.252,735,6.016,736,5.252]],["title/components/DirectionalLightComponent.html",[127,0.04,181,0.6]],["body/components/DirectionalLightComponent.html",[0,0.071,3,0.105,4,0.105,5,0.082,13,0.332,15,1.151,17,0.52,18,0.707,27,0.741,28,0.707,29,1.157,31,0.482,32,0.697,34,0.464,35,0.013,36,0.691,37,0.317,38,0.774,40,1.112,41,1.015,46,0.348,56,0.188,57,1.23,58,0.094,59,0.78,60,0.557,63,0.105,78,0.661,80,0.005,81,0.007,82,0.005,86,1.015,88,0.915,89,0.5,90,2.417,94,0.946,103,2.292,110,1.745,117,1.318,120,1.068,127,0.057,128,0.518,129,0.715,130,0.597,131,0.597,133,2.39,134,1.839,135,0.464,136,0.566,138,1.217,139,1.129,140,0.577,141,4.354,142,0.825,143,1.843,144,4.283,145,1.784,146,2.566,150,1.116,151,1.67,152,0.731,153,0.731,154,0.689,155,0.948,156,0.832,157,0.979,160,2.786,161,0.273,162,0.825,163,0.854,164,0.379,165,1.088,166,0.597,167,1.088,168,0.518,169,0.577,170,0.854,171,0.518,172,0.597,173,0.518,174,0.557,175,1.284,176,0.518,177,0.577,178,0.597,179,0.518,180,0.577,181,0.945,182,0.963,183,0.518,184,0.597,185,0.518,186,0.597,187,0.597,188,0.597,189,0.597,190,0.518,191,0.597,192,0.518,193,0.537,194,0.518,195,0.93,196,1.261,197,0.518,198,0.518,199,0.518,200,0.577,201,0.518,202,0.597,203,0.518,204,0.797,205,0.854,206,0.518,207,0.577,208,0.518,209,0.577,210,0.854,211,0.518,212,0.577,213,0.518,214,0.997,215,0.518,216,0.557,217,0.518,218,0.577,219,0.518,220,0.577,221,0.854,222,0.518,223,0.577,224,0.518,225,0.557,226,0.518,227,0.577,228,0.518,229,0.537,230,0.597,231,0.482,232,0.597,233,0.518,234,0.557,235,0.518,236,0.557,237,0.518,238,0.557,239,0.518,240,0.557,241,0.518,242,0.577,243,0.518,244,0.557,245,0.518,246,0.825,247,0.518,248,0.518,249,0.577,250,0.518,251,0.577,252,0.518,253,0.597,254,0.577,255,0.464,256,0.5,257,0.557,258,0.597,259,0.5,260,0.774,261,0.597,262,0.5,263,0.597,264,0.5,265,0.597,266,0.5,267,0.537,268,0.537,269,0.577,270,0.597,553,1.603,574,1.768,607,2.119,737,6.36,738,5.047,739,4.651,740,6.429,741,5.047,742,2.786,743,3.529,744,3.529,745,2.39,746,3.529,747,3.529,748,3.529,749,3.529,750,3.529,751,3.984,752,3.081,753,2.566,754,3.529,755,3.659,756,3.529,757,3.529,758,3.529,759,3.081,760,2.39,761,3.081,762,3.081,763,3.529,764,3.081,765,3.081,766,3.081]],["title/components/DofComponent.html",[127,0.04,183,0.6]],["body/components/DofComponent.html",[0,0.064,1,4.845,3,0.095,4,0.095,5,0.074,7,2.155,13,0.3,14,1.141,15,1.226,16,3.171,17,0.482,18,1.308,19,4.454,20,3.334,21,3.008,22,5.132,23,1.593,24,2.424,25,2.313,26,2.424,27,0.688,28,0.638,29,1.116,30,3.894,31,0.891,32,0.774,34,0.805,35,0.013,36,0.759,37,0.587,38,0.897,39,2.155,40,1.001,41,0.967,42,4.039,43,3.578,45,3.231,46,0.728,47,2.81,49,1.323,53,1.572,56,0.173,57,1.141,58,0.084,59,0.704,60,0.877,61,2.155,63,0.095,78,0.597,80,0.005,81,0.007,82,0.005,86,0.967,88,0.849,89,0.451,94,0.878,110,1.645,117,1.187,127,0.054,128,0.468,129,0.663,130,0.539,131,0.539,135,0.418,138,1.21,139,1.123,140,0.52,142,0.52,154,0.434,156,0.751,161,0.247,162,0.766,163,0.793,164,0.342,165,1.037,166,0.539,167,1.037,168,0.468,169,0.52,170,0.793,171,0.468,172,0.539,173,0.468,174,0.502,175,1.251,176,0.468,177,0.52,178,0.539,179,0.468,180,0.52,181,0.468,182,0.52,183,0.9,184,0.539,185,0.468,186,0.539,187,0.539,188,0.539,189,0.539,190,0.468,191,0.539,192,0.468,193,0.485,194,0.468,195,0.877,196,1.226,197,0.468,198,0.468,199,0.468,200,0.52,201,0.468,202,0.539,203,0.468,204,0.739,205,0.793,206,0.468,207,0.52,208,0.468,209,0.52,210,0.793,211,0.468,212,0.52,213,0.468,214,0.94,215,0.468,216,0.502,217,0.468,218,0.52,219,0.468,220,0.52,221,0.793,222,0.468,223,0.52,224,0.468,225,0.502,226,0.468,227,0.52,228,0.468,229,0.485,230,0.539,231,0.434,232,0.539,233,0.468,234,0.502,235,0.468,236,0.502,237,0.468,238,0.502,239,0.468,240,0.502,241,0.468,242,0.52,243,0.468,244,0.502,245,0.468,246,0.766,247,0.468,248,0.468,249,0.52,250,0.468,251,0.52,252,0.468,253,0.539,254,0.52,255,0.418,256,0.451,257,0.502,258,0.539,259,0.451,260,0.73,261,0.539,262,0.451,263,0.539,264,0.451,265,0.539,266,0.451,267,0.485,268,0.485,269,0.52,270,0.539,313,1.196,535,3.289,536,2.513,537,2.513,538,2.513,539,2.513,540,2.513,541,2.513,542,2.513,543,2.513,550,2.513,561,1.506,563,2.023,566,2.81,767,2.779,768,4.683,769,6.528,770,6.528,771,6.528,772,4.683,773,4.683,774,3.183,775,3.183,776,4.683,777,3.183,778,3.183,779,3.183,780,3.183,781,5.154,782,3.183,783,3.183,784,3.762,785,4.85,786,5.555,787,3.183,788,3.183,789,5.555,790,3.183,791,3.183,792,3.183,793,4.683,794,3.183,795,2.779,796,2.314,797,2.314]],["title/components/DotScreenComponent.html",[127,0.04,185,0.6]],["body/components/DotScreenComponent.html",[0,0.068,1,4.918,3,0.102,4,0.102,5,0.079,7,2.313,13,0.322,14,1.201,15,1.25,16,3.338,17,0.508,18,1.346,19,4.605,20,3.472,21,3.132,22,5.245,23,1.646,24,2.524,25,2.435,26,2.524,27,0.724,28,0.684,29,1.144,30,4.026,31,0.916,32,0.77,34,0.832,35,0.013,36,0.775,37,0.604,38,0.919,39,2.313,40,0.806,41,0.778,42,4.206,43,3.648,45,2.737,46,0.741,47,3.472,49,1.356,53,1.687,56,0.185,57,1.201,58,0.091,59,0.755,60,0.913,61,2.313,63,0.102,78,0.64,80,0.005,81,0.007,82,0.005,86,1,88,0.893,89,0.484,94,0.924,117,0.955,127,0.056,128,0.502,129,0.698,130,0.578,131,0.578,135,0.449,138,1.215,139,1.127,140,0.558,142,0.558,154,0.466,156,0.806,161,0.265,162,0.806,163,0.834,164,0.367,165,1.072,166,0.578,167,1.072,168,0.502,169,0.558,170,0.834,171,0.502,172,0.578,173,0.502,174,0.539,175,1.273,176,0.502,177,0.558,178,0.578,179,0.502,180,0.558,181,0.502,182,0.558,183,0.502,184,0.578,185,0.93,186,0.979,187,0.578,188,0.578,189,0.578,190,0.502,191,0.578,192,0.502,193,0.52,194,0.502,195,0.913,196,1.25,197,0.502,198,0.502,199,0.502,200,0.558,201,0.502,202,0.578,203,0.502,204,0.778,205,0.834,206,0.502,207,0.558,208,0.502,209,0.558,210,0.834,211,0.502,212,0.558,213,0.502,214,0.979,215,0.502,216,0.539,217,0.502,218,0.558,219,0.502,220,0.558,221,0.834,222,0.502,223,0.558,224,0.502,225,0.539,226,0.502,227,0.558,228,0.502,229,0.52,230,0.578,231,0.466,232,0.578,233,0.502,234,0.539,235,0.502,236,0.539,237,0.502,238,0.539,239,0.502,240,0.539,241,0.502,242,0.558,243,0.502,244,0.539,245,0.502,246,0.806,247,0.502,248,0.502,249,0.558,250,0.502,251,0.558,252,0.502,253,0.578,254,0.558,255,0.449,256,0.484,257,0.539,258,0.578,259,0.484,260,0.76,261,0.578,262,0.484,263,0.578,264,0.484,265,0.578,266,0.484,267,0.52,268,0.52,269,0.558,270,0.578,313,1.284,535,3.354,536,2.696,537,2.696,538,2.696,539,2.696,540,2.696,541,2.696,542,2.696,543,2.696,544,2.982,545,2.982,550,2.696,553,1.551,554,2.696,798,5.864,799,2.982,800,4.304,801,5.784,802,4.929,803,3.892,804,3.415,805,3.415,806,3.415,807,3.415,808,3.415]],["title/components/EffectComposerComponent.html",[31,0.557,127,0.04]],["body/components/EffectComposerComponent.html",[0,0.062,3,0.092,4,0.092,5,0.072,9,1.453,10,2.485,11,2.703,12,2.962,13,0.515,14,1.119,15,1.093,16,5.131,17,0.473,23,2.115,24,2.64,25,2.269,26,2.64,27,0.675,28,0.621,29,1.106,30,4.106,31,0.825,32,0.756,34,0.795,35,0.013,36,0.752,37,0.608,38,0.889,40,0.507,41,0.489,43,2.988,45,1.467,46,0.708,49,1.393,53,2.269,56,0.179,57,1.119,58,0.082,59,0.685,60,0.863,62,2.707,63,0.092,65,4.096,66,5.526,71,2.707,72,1.602,78,0.581,80,0.005,81,0.007,82,0.005,86,0.955,89,0.439,94,0.861,100,2.64,110,1.36,117,1.06,120,0.832,127,0.059,128,0.456,129,0.65,130,0.525,131,0.525,135,0.407,138,1.208,139,1.121,140,0.507,142,0.507,154,0.627,157,1.518,161,0.24,162,0.751,163,0.777,164,0.333,165,1.024,166,0.525,167,1.024,168,0.456,169,0.507,170,0.777,171,0.456,172,0.525,173,0.456,174,0.489,175,1.243,176,0.456,177,0.507,178,0.525,179,0.456,180,0.507,181,0.456,182,0.507,183,0.456,184,0.525,185,0.456,186,0.525,187,0.525,188,0.525,189,0.525,190,0.456,191,0.525,192,0.456,193,0.472,194,0.456,195,0.863,196,1.217,197,0.456,198,0.456,199,0.456,200,0.507,201,0.456,202,0.525,203,0.456,204,0.725,205,0.777,206,0.456,207,0.507,208,0.456,209,0.507,210,0.777,211,0.456,212,0.507,213,0.456,214,0.926,215,0.456,216,0.489,217,0.456,218,0.507,219,0.456,220,0.507,221,0.777,222,0.456,223,0.507,224,0.456,225,0.489,226,0.456,227,0.507,228,0.456,229,0.472,230,0.525,231,0.955,232,0.525,233,0.456,234,0.489,235,0.456,236,0.489,237,0.456,238,0.489,239,0.456,240,0.489,241,0.456,242,0.507,243,0.456,244,0.489,245,0.456,246,0.751,247,0.456,248,0.456,249,0.507,250,0.456,251,0.507,252,0.456,253,0.525,254,0.507,255,0.407,256,0.439,257,0.489,258,0.525,259,0.439,260,0.719,261,0.525,262,0.439,263,0.525,264,0.439,265,0.525,266,0.439,267,0.472,268,0.472,269,0.507,270,0.525,320,1.353,454,1.861,553,1.408,574,2.119,795,2.707,809,6.766,810,2.707,811,4.593,812,6.049,813,6.049,814,4.593,815,5.471,816,5.471,817,4.593,818,3.101,819,3.101,820,4.593,821,3.101,822,3.101,823,3.101,824,3.101,825,3.101,826,3.101,827,4.593,828,3.101,829,3.101,830,5.471,831,3.101,832,5.471,833,3.101,834,3.101,835,3.101,836,4.593,837,3.101,838,3.101,839,2.1,840,3.101,841,3.101,842,2.707,843,3.101,844,2.448,845,2.707,846,3.101,847,3.101,848,3.101,849,3.101,850,3.101,851,3.101,852,3.101,853,3.101,854,3.101,855,3.101,856,3.101,857,3.101,858,3.101,859,3.101,860,3.101]],["title/components/EmptyComponent.html",[89,0.578,127,0.04]],["body/components/EmptyComponent.html",[0,0.079,3,0.118,4,0.118,5,0.092,9,1.729,10,2.845,13,0.372,15,1.201,17,0.563,18,0.792,27,0.803,28,0.792,29,1.2,31,0.539,32,0.538,34,0.519,35,0.013,36,0.726,37,0.355,38,0.823,46,0.389,56,0.188,57,1.331,58,0.105,59,0.873,60,0.624,63,0.118,78,0.741,80,0.006,81,0.008,82,0.006,86,1.067,88,0.99,89,0.957,120,0.716,127,0.061,128,0.58,129,0.774,130,0.669,131,0.669,134,1.907,135,0.519,136,0.612,138,1.223,139,1.135,140,0.646,142,0.893,143,1.937,145,1.875,150,1.208,152,0.818,153,0.818,154,0.746,155,1.061,156,0.932,161,0.306,162,0.893,163,0.925,164,0.425,165,1.144,166,0.669,167,1.144,168,0.58,169,0.646,170,0.925,171,0.58,172,0.669,173,0.58,174,0.624,175,1.317,176,0.58,177,0.646,178,0.669,179,0.58,180,0.646,181,0.58,182,0.646,183,0.58,184,0.669,185,0.58,186,0.669,187,0.669,188,0.669,189,0.669,190,0.58,191,0.669,192,0.58,193,0.602,194,0.58,195,0.989,196,1.298,197,0.58,198,0.58,199,0.58,200,0.646,201,0.58,202,0.669,203,0.58,204,0.862,205,0.925,206,0.58,207,0.646,208,0.58,209,0.646,210,0.925,211,0.58,212,0.646,213,0.58,214,1.06,215,0.58,216,0.624,217,0.58,218,0.646,219,0.58,220,0.646,221,0.925,222,0.58,223,0.646,224,0.58,225,0.624,226,0.58,227,0.646,228,0.58,229,0.602,230,0.669,231,0.539,232,0.669,233,0.58,234,0.624,235,0.58,236,0.624,237,0.58,238,0.624,239,0.58,240,0.624,241,0.58,242,0.646,243,0.58,244,0.624,245,0.58,246,0.893,247,0.58,248,0.58,249,0.646,250,0.58,251,0.646,252,0.58,253,0.669,254,0.646,255,0.519,256,0.56,257,0.624,258,0.669,259,0.56,260,0.823,261,0.669,262,0.56,263,0.669,264,0.56,265,0.669,266,0.56,267,0.602,268,0.602,269,0.646,270,0.669,607,2.63,861,3.449,862,5.464,863,5.464,864,3.951,865,3.951]],["title/components/FogComponent.html",[127,0.04,190,0.6]],["body/components/FogComponent.html",[0,0.068,3,0.101,4,0.101,5,0.079,9,1.552,10,2.617,11,2.847,12,3.12,13,0.319,14,1.195,15,1.307,17,0.505,23,1.815,24,2.755,25,2.423,26,2.755,27,0.721,28,0.68,29,1.141,31,0.463,32,0.751,34,0.645,35,0.013,36,0.72,37,0.518,38,0.83,40,0.942,41,0.91,43,3.119,45,2.322,46,0.66,49,1.353,53,2.423,56,0.178,57,1.195,58,0.09,59,0.75,60,0.535,63,0.101,65,3.322,72,2.534,78,0.636,80,0.005,81,0.007,82,0.005,86,0.997,89,0.48,90,2.373,94,0.92,117,1.224,120,0.615,127,0.056,128,0.498,129,0.695,130,0.574,131,0.574,135,0.446,138,1.214,139,1.126,140,0.555,142,0.555,145,1.599,150,1.084,151,1.606,153,0.702,154,0.669,161,0.263,162,0.802,163,0.83,164,0.365,165,1.069,166,0.574,167,1.069,168,0.498,169,0.555,170,0.83,171,0.498,172,0.574,173,0.498,174,0.535,175,1.271,176,0.498,177,0.555,178,0.574,179,0.498,180,0.555,181,0.498,182,0.555,183,0.498,184,0.574,185,0.498,186,0.574,187,0.574,188,0.574,189,0.574,190,0.928,191,0.574,192,0.498,193,0.517,194,0.498,195,0.91,196,1.248,197,0.498,198,0.498,199,0.498,200,0.555,201,0.498,202,0.574,203,0.498,204,0.774,205,0.83,206,0.498,207,0.555,208,0.498,209,0.555,210,0.83,211,0.498,212,0.555,213,0.498,214,0.975,215,0.498,216,0.535,217,0.498,218,0.555,219,0.498,220,0.555,221,0.83,222,0.498,223,0.555,224,0.498,225,0.535,226,0.498,227,0.555,228,0.498,229,0.517,230,0.574,231,0.914,232,0.574,233,0.498,234,0.535,235,0.498,236,0.535,237,0.498,238,0.535,239,0.498,240,0.535,241,0.498,242,0.555,243,0.498,244,0.535,245,0.498,246,0.802,247,0.498,248,0.498,249,0.555,250,0.498,251,0.555,252,0.498,253,0.574,254,0.555,255,0.446,256,0.48,257,0.535,258,0.574,259,0.48,260,0.757,261,0.574,262,0.48,263,0.574,264,0.48,265,0.574,266,0.48,267,0.517,268,0.517,269,0.555,270,0.574,454,2.036,666,2.944,755,2.792,784,2.298,866,2.962,867,4.906,868,4.014,869,6.314,870,6.314,871,5.031,872,5.513,873,4.906,874,4.906,875,3.393,876,3.393,877,3.393,878,3.393,879,3.393,880,3.393,881,3.393,882,3.393,883,4.283,884,3.393,885,3.393,886,4.906,887,3.393,888,4.906,889,3.393,890,3.393,891,3.393,892,4.283,893,4.906,894,3.393,895,4.906,896,3.393,897,2.962,898,2.962,899,3.393,900,3.393,901,3.393]],["title/components/FrameMeshComponent.html",[127,0.04,192,0.6]],["body/components/FrameMeshComponent.html",[0,0.069,3,0.103,4,0.103,5,0.08,13,0.326,15,1.143,17,0.512,18,0.997,27,0.731,28,0.693,29,1.149,31,0.472,32,0.665,34,0.455,35,0.013,36,0.685,37,0.311,38,0.766,39,5.253,40,0.953,41,0.92,46,0.341,56,0.186,57,1.213,58,0.092,59,0.765,60,0.546,63,0.103,78,0.649,80,0.005,81,0.007,82,0.005,86,1.006,88,0.902,89,0.49,94,0.933,117,1.235,120,1.056,127,0.057,128,0.508,129,0.705,130,0.586,131,0.586,134,1.657,135,0.455,136,0.558,138,1.216,139,1.128,140,0.566,142,0.814,143,1.826,145,1.768,150,1.1,152,0.717,153,0.717,154,0.679,155,1.336,156,0.816,157,2.009,161,0.268,162,0.814,163,0.842,164,0.372,165,1.079,166,0.586,167,1.079,168,0.508,169,0.566,170,0.842,171,0.508,172,0.586,173,0.508,174,0.546,175,1.278,176,0.508,177,0.566,178,0.586,179,0.508,180,0.566,181,0.508,182,0.566,183,0.508,184,0.586,185,0.508,186,0.586,187,0.586,188,0.586,189,0.586,190,0.508,191,0.586,192,0.936,193,0.888,194,0.508,195,0.92,196,1.254,197,0.508,198,0.508,199,0.508,200,0.566,201,0.508,202,0.586,203,0.508,204,0.786,205,0.842,206,0.508,207,0.566,208,0.508,209,0.566,210,0.842,211,0.508,212,1.149,213,0.508,214,0.986,215,0.508,216,0.546,217,0.508,218,0.566,219,0.508,220,0.566,221,0.842,222,0.508,223,0.566,224,0.508,225,0.546,226,0.508,227,0.566,228,0.508,229,0.527,230,0.586,231,0.472,232,0.586,233,0.508,234,0.546,235,0.508,236,0.546,237,0.508,238,0.546,239,0.508,240,0.546,241,0.508,242,0.566,243,0.508,244,0.546,245,0.508,246,0.814,247,0.508,248,0.508,249,0.566,250,0.508,251,0.566,252,0.508,253,0.586,254,0.566,255,0.455,256,0.49,257,0.546,258,0.586,259,0.49,260,0.766,261,0.586,262,0.49,263,0.586,264,0.49,265,0.586,266,0.49,267,0.527,268,0.527,269,0.566,270,0.586,556,1.788,557,3.317,567,2.516,583,2.344,588,1.51,595,2.172,596,1.874,597,1.874,598,2.077,636,3.929,638,2.516,639,2.355,644,2.459,902,6.138,903,4.977,904,5.828,905,5.828,906,5.828,907,4.633,908,7.412,909,3.461,910,4.977,911,7.838,912,3.461,913,3.461,914,3.461,915,3.461,916,3.461,917,7.03,918,6.373,919,3.461]],["title/components/GridActorComponent.html",[127,0.04,194,0.6]],["body/components/GridActorComponent.html",[0,0.06,3,0.089,4,0.089,5,0.069,13,0.281,14,1.089,15,1.076,17,0.46,23,1.89,31,0.408,32,0.777,34,0.703,35,0.013,36,0.717,37,0.622,38,0.703,40,1.039,41,1.003,46,0.626,49,1.037,56,0.169,58,0.079,60,0.472,63,0.089,78,0.837,80,0.004,81,0.007,82,0.004,84,4.075,86,0.937,88,0.81,89,0.9,90,2.012,92,3.38,94,0.837,98,2.419,99,3.046,100,2.335,102,1.534,103,1.357,110,1.585,113,3.755,117,1.232,118,4.623,120,1.289,127,0.052,128,0.439,129,0.633,130,0.506,131,0.506,135,0.392,136,0.501,138,1.206,139,1.119,140,0.488,142,0.73,143,1.534,150,0.988,152,0.619,153,0.619,154,0.61,157,1.918,161,0.231,162,0.73,163,0.756,164,0.321,165,1.005,166,0.506,167,1.005,168,0.439,169,0.488,170,0.756,171,0.439,172,0.506,173,0.439,174,0.472,175,1.23,176,0.439,177,0.488,178,0.506,179,0.439,180,0.488,181,0.439,182,0.488,183,0.439,184,0.506,185,0.439,186,0.506,187,0.506,188,0.506,189,0.506,190,0.439,191,0.506,192,0.439,193,0.455,194,0.873,195,1.122,196,1.203,197,0.439,198,0.873,199,0.439,200,0.488,201,0.439,202,0.506,203,0.439,204,0.845,205,0.756,206,0.439,207,0.488,208,0.439,209,0.488,210,0.756,211,0.439,212,0.488,213,0.439,214,0.906,215,0.439,216,0.472,217,0.439,218,0.488,219,0.439,220,0.488,221,0.756,222,0.439,223,0.488,224,0.439,225,0.472,226,0.439,227,0.488,228,0.439,229,0.455,230,0.506,231,0.408,232,0.506,233,0.439,234,0.472,235,0.439,236,0.472,237,0.439,238,0.472,239,0.439,240,0.472,241,0.439,242,0.488,243,0.439,244,0.472,245,0.439,246,0.73,247,0.439,248,0.439,249,0.488,250,0.439,251,0.488,252,0.439,253,0.506,254,0.875,255,0.392,256,0.423,257,0.472,258,0.506,259,0.423,260,0.703,261,0.506,262,0.423,263,0.506,264,0.423,265,0.506,266,0.423,267,0.455,268,0.455,269,0.488,270,0.506,280,3.216,307,2.608,524,3.402,535,1.357,588,1.95,607,1.254,609,1.543,610,2.359,612,2.359,839,2.023,907,4.318,920,6.887,921,1.543,922,4.468,923,4.673,924,4.468,925,4.468,926,3.901,927,4.673,928,4.673,929,4.673,930,5.352,931,5.352,932,2.608,933,2.359,934,3.901,935,2.608,936,3.026,937,2.608,938,2.987,939,2.359,940,2.359,941,2.987,942,4.468,943,2.987,944,5.352,945,2.987,946,4.468,947,2.987,948,3.901,949,2.987,950,3.901,951,2.359,952,4.468,953,3.901,954,2.608,955,2.359,956,2.172,957,2.987,958,6.358,959,4.468,960,2.987,961,4.468,962,2.987,963,4.468,964,2.987,965,2.608,966,2.359,967,2.987,968,2.987,969,6.672,970,2.987,971,2.172,972,2.987,973,2.987,974,2.987,975,4.468,976,2.987,977,2.987,978,2.608,979,5.352,980,2.987,981,2.987,982,2.987,983,2.987,984,4.468,985,2.987,986,2.987,987,2.987,988,2.987,989,2.987,990,2.987,991,2.987]],["title/components/GridHelperComponent.html",[127,0.04,197,0.6]],["body/components/GridHelperComponent.html",[0,0.077,3,0.114,4,0.114,5,0.089,13,0.361,15,1.188,17,0.551,18,0.768,27,0.786,28,0.768,29,1.188,31,0.523,32,0.657,34,0.504,35,0.013,36,0.717,37,0.554,38,0.81,46,0.378,56,0.186,57,1.304,58,0.102,59,0.847,60,0.605,63,0.114,78,0.718,80,0.006,81,0.008,82,0.006,86,1.053,88,0.97,89,0.543,94,1.003,102,1.912,117,1.195,120,0.695,127,0.06,128,0.563,129,0.758,130,0.649,131,0.649,134,1.889,135,0.504,136,0.6,138,1.222,139,1.133,140,0.627,142,0.875,143,1.912,145,1.85,150,1.183,152,0.794,153,0.794,154,0.73,155,1.029,156,0.904,161,0.297,162,0.875,163,0.906,164,0.412,165,1.129,166,0.649,167,1.129,168,0.563,169,0.627,170,0.906,171,0.563,172,0.649,173,0.563,174,0.605,175,1.308,176,0.563,177,0.627,178,0.649,179,0.563,180,0.627,181,0.563,182,0.627,183,0.563,184,0.649,185,0.563,186,0.649,187,0.649,188,0.649,189,0.649,190,0.563,191,0.649,192,0.563,193,0.584,194,0.563,195,1.107,196,1.288,197,0.98,198,0.563,199,0.563,200,0.627,201,0.563,202,0.649,203,0.563,204,0.844,205,0.906,206,0.563,207,0.627,208,0.563,209,0.627,210,0.906,211,0.563,212,0.627,213,0.563,214,1.043,215,0.563,216,0.605,217,0.563,218,0.627,219,0.563,220,0.627,221,0.906,222,0.563,223,0.627,224,0.563,225,0.605,226,0.563,227,0.627,228,0.563,229,0.584,230,0.649,231,0.523,232,0.649,233,0.563,234,0.605,235,0.563,236,0.605,237,0.563,238,0.605,239,0.563,240,0.605,241,0.563,242,0.627,243,0.563,244,0.605,245,0.563,246,0.875,247,0.563,248,0.563,249,0.627,250,0.563,251,0.627,252,0.563,253,0.649,254,0.627,255,0.504,256,0.543,257,0.605,258,0.649,259,0.543,260,0.81,261,0.649,262,0.543,263,0.649,264,0.543,265,0.649,266,0.543,267,0.584,268,0.584,269,0.627,270,0.649,521,3.026,523,4.671,524,3.918,525,3.347,527,4.671,992,6.126,993,5.35,994,6.164,995,5.35,996,3.833,997,3.833,998,3.833,999,3.833]],["title/components/GridMeshComponent.html",[127,0.04,198,0.6]],["body/components/GridMeshComponent.html",[0,0.07,3,0.105,4,0.105,5,0.082,13,0.33,15,1.149,17,0.517,18,1.007,27,0.738,28,0.703,29,1.154,31,0.479,32,0.696,34,0.461,35,0.013,36,0.689,37,0.315,38,0.771,40,1.048,41,1.012,46,0.346,56,0.187,57,1.225,58,0.093,59,0.776,60,0.554,63,0.105,80,0.005,81,0.007,82,0.005,86,1.012,88,0.911,89,0.497,94,0.942,117,1.315,120,0.636,127,0.057,128,0.515,129,0.712,130,0.594,131,0.594,134,1.667,135,0.461,136,0.563,138,1.216,139,1.128,140,0.574,142,0.822,143,1.838,145,1.779,150,1.111,152,0.726,153,0.726,154,0.686,155,1.35,156,0.828,157,1.883,161,0.272,162,0.822,163,0.851,164,0.377,165,1.085,166,0.594,167,1.085,168,0.515,169,0.574,170,0.851,171,0.515,172,0.594,173,0.515,174,0.554,175,1.282,176,0.515,177,0.574,178,0.594,179,0.515,180,0.574,181,0.515,182,0.574,183,0.515,184,0.594,185,0.515,186,0.594,187,0.594,188,0.594,189,0.594,190,0.515,191,0.594,192,0.515,193,0.534,194,0.515,195,1.115,196,1.259,197,0.515,198,0.942,199,0.515,200,0.574,201,0.515,202,0.594,203,0.515,204,0.793,205,0.851,206,0.515,207,0.574,208,0.515,209,0.574,210,0.851,211,0.515,212,1.048,213,0.515,214,0.994,215,0.515,216,0.554,217,0.515,218,0.574,219,0.515,220,0.574,221,0.851,222,0.515,223,0.574,224,0.515,225,0.554,226,0.515,227,0.574,228,0.515,229,0.534,230,0.594,231,0.479,232,0.594,233,0.515,234,0.554,235,0.515,236,0.554,237,0.515,238,0.554,239,0.515,240,0.554,241,0.515,242,0.574,243,0.515,244,0.554,245,0.515,246,0.822,247,0.515,248,0.515,249,0.574,250,0.515,251,0.574,252,0.515,253,0.594,254,0.574,255,0.461,256,0.497,257,0.554,258,0.594,259,0.497,260,0.771,261,0.594,262,0.497,263,0.594,264,0.497,265,0.594,266,0.497,267,0.534,268,0.534,269,0.574,270,0.594,292,1.188,320,1.531,524,3.733,556,1.812,557,3.342,580,3.968,581,2.23,583,2.376,584,2.23,588,1.531,636,2.77,638,2.551,639,2.779,644,2.483,927,5.127,928,5.127,929,5.599,934,4.388,936,3.403,965,3.063,971,2.551,1000,6.349,1001,5.026,1002,6.412,1003,3.508,1004,3.508,1005,3.508,1006,5.872,1007,3.508,1008,5.872,1009,3.063,1010,3.508,1011,3.508,1012,3.508,1013,3.508,1014,5.026,1015,3.508,1016,5.026,1017,3.508]],["title/components/HemisphereLightComponent.html",[127,0.04,199,0.6]],["body/components/HemisphereLightComponent.html",[0,0.075,3,0.111,4,0.111,5,0.087,13,0.351,15,1.176,17,0.54,18,0.747,27,0.771,28,0.747,29,1.178,31,0.509,32,0.684,34,0.49,35,0.013,36,0.708,37,0.335,38,0.798,40,0.993,41,0.959,46,0.367,56,0.191,57,1.279,58,0.099,59,0.825,60,0.589,63,0.111,78,0.699,80,0.006,81,0.008,82,0.006,86,1.04,88,0.951,89,0.528,90,1.402,94,0.984,103,2.384,117,1.277,120,0.676,127,0.059,128,0.548,129,0.743,130,0.631,131,0.631,133,2.526,134,1.873,135,0.49,136,0.588,138,1.22,139,1.132,140,0.61,141,4.464,142,0.858,143,1.889,144,4.416,145,1.828,146,2.712,150,1.16,151,1.765,152,0.772,153,0.772,154,0.716,155,1.002,156,0.88,157,1.035,161,0.289,162,0.858,163,0.888,164,0.401,165,1.116,166,0.631,167,1.116,168,0.548,169,0.61,170,0.888,171,0.548,172,0.631,173,0.548,174,0.589,175,1.3,176,0.548,177,0.61,178,0.631,179,0.548,180,0.61,181,0.548,182,0.61,183,0.548,184,0.631,185,0.548,186,0.631,187,0.631,188,0.631,189,0.631,190,0.548,191,0.631,192,0.548,193,0.568,194,0.548,195,0.959,196,1.279,197,0.548,198,0.548,199,0.968,200,0.993,201,0.548,202,0.631,203,0.548,204,0.828,205,0.888,206,0.548,207,0.61,208,0.548,209,0.61,210,0.888,211,0.548,212,0.61,213,0.548,214,1.028,215,0.548,216,0.589,217,0.548,218,0.61,219,0.548,220,0.61,221,0.888,222,0.548,223,0.61,224,0.548,225,0.589,226,0.548,227,0.61,228,0.548,229,0.568,230,0.631,231,0.509,232,0.631,233,0.548,234,0.589,235,0.548,236,0.589,237,0.548,238,0.589,239,0.548,240,0.589,241,0.548,242,0.61,243,0.548,244,0.589,245,0.548,246,0.858,247,0.548,248,0.548,249,0.61,250,0.548,251,0.61,252,0.548,253,0.631,254,0.61,255,0.49,256,0.528,257,0.589,258,0.631,259,0.528,260,0.798,261,0.631,262,0.528,263,0.631,264,0.528,265,0.631,266,0.528,267,0.568,268,0.568,269,0.61,270,0.631,574,1.839,742,2.945,745,2.526,1018,6.291,1019,5.249,1020,6.073,1021,6.073,1022,4.583,1023,5.249,1024,3.257,1025,3.73,1026,3.73,1027,3.73,1028,3.73]],["title/components/LayerActorComponent.html",[127,0.04,201,0.6]],["body/components/LayerActorComponent.html",[0,0.066,3,0.098,4,0.098,5,0.077,13,0.311,14,1.171,15,0.814,17,0.495,23,1.939,31,0.45,32,0.784,34,0.433,35,0.013,36,0.767,37,0.681,38,0.433,40,0.539,41,0.521,46,0.653,49,1.208,56,0.15,58,0.087,60,0.521,63,0.098,78,0.618,80,0.005,81,0.007,82,0.005,84,4.113,86,0.984,88,0.871,89,0.938,90,2.132,91,3.374,92,3.547,93,3.74,94,0.901,98,2.603,99,3.228,100,2.475,101,3.071,102,2.226,108,2.275,113,3.688,117,1.208,118,4.531,120,1.028,122,4.952,127,0.055,128,0.485,129,0.681,130,0.558,131,0.558,135,0.433,136,0.539,138,1.213,139,1.125,140,0.539,142,0.786,143,1.626,152,0.683,153,0.683,154,0.45,161,0.256,162,0.786,163,0.814,164,0.355,165,1.055,166,0.558,167,1.055,168,0.485,169,0.539,170,0.814,171,0.485,172,0.558,173,0.485,174,0.521,175,1.263,176,0.485,177,0.539,178,0.558,179,0.485,180,0.539,181,0.485,182,0.539,183,0.485,184,0.558,185,0.485,186,0.558,187,0.558,188,0.558,189,0.558,190,0.485,191,0.558,192,0.485,193,0.503,194,0.485,195,0.895,196,1.238,197,0.485,198,0.485,199,0.485,200,0.539,201,0.916,202,0.96,203,0.485,204,0.759,205,0.814,206,0.485,207,0.539,208,0.485,209,0.539,210,0.814,211,0.485,212,0.539,213,0.485,214,0.96,215,0.485,216,0.521,217,0.485,218,0.539,219,0.485,220,0.539,221,0.814,222,0.485,223,0.539,224,0.485,225,0.521,226,0.485,227,0.539,228,0.485,229,0.503,230,0.558,231,0.45,232,0.558,233,0.485,234,0.521,235,0.485,236,0.521,237,0.485,238,0.521,239,0.485,240,0.521,241,0.485,242,0.539,243,0.485,244,0.521,245,0.485,246,0.786,247,0.485,248,0.485,249,0.539,250,0.485,251,0.539,252,0.485,253,0.558,254,0.927,255,0.433,256,0.467,257,0.521,258,0.558,259,0.467,260,0.745,261,0.558,262,0.467,263,0.558,264,0.467,265,0.558,266,0.467,267,0.503,268,0.503,269,0.539,270,0.558,292,1.92,535,1.498,561,2.684,563,4.538,607,1.385,609,1.704,639,1.562,666,1.98,921,1.704,923,4.952,933,2.605,939,2.605,940,2.605,950,5.441,951,2.605,956,2.399,1029,6.952,1030,4.808,1031,5.672,1032,3.056,1033,2.881,1034,3.796,1035,2.881,1036,2.881,1037,3.299,1038,3.299,1039,3.299,1040,2.881,1041,3.299,1042,3.299,1043,3.299,1044,2.098,1045,3.299,1046,5.672,1047,3.299,1048,3.299]],["title/components/LineConnectorComponent.html",[127,0.04,203,0.6]],["body/components/LineConnectorComponent.html",[0,0.07,3,0.104,4,0.104,5,0.081,13,0.329,14,1.222,15,0.849,17,0.516,18,1.175,23,1.524,27,0.737,28,0.701,29,1.153,31,0.477,32,0.695,34,0.46,35,0.013,36,0.688,37,0.527,38,0.77,40,0.572,41,0.792,46,0.494,49,0.972,56,0.193,57,1.222,58,0.093,59,0.773,60,0.552,63,0.104,72,1.807,78,0.656,80,0.005,81,0.007,82,0.005,86,1.011,88,0.909,89,0.495,90,1.885,94,0.94,117,0.972,120,0.909,127,0.057,128,0.514,129,0.71,130,0.592,131,0.592,134,1.665,135,0.46,136,0.562,138,1.216,139,1.128,140,0.572,142,0.82,145,1.776,150,1.109,151,1.656,152,0.724,153,0.724,154,0.684,155,0.939,156,0.825,157,0.97,161,0.271,162,0.82,163,0.849,164,0.376,165,1.084,166,0.592,167,1.084,168,0.514,169,0.572,170,0.849,171,0.514,172,0.592,173,0.514,174,0.552,175,1.281,176,0.514,177,0.572,178,0.592,179,0.514,180,0.572,181,0.514,182,0.572,183,0.514,184,0.592,185,0.514,186,0.592,187,0.592,188,0.592,189,0.592,190,0.514,191,0.592,192,0.514,193,0.533,194,0.514,195,0.925,196,1.258,197,0.514,198,0.514,199,0.514,200,0.572,201,0.514,202,0.592,203,0.941,204,1.147,205,0.849,206,0.514,207,0.572,208,0.514,209,0.572,210,0.849,211,0.514,212,0.572,213,0.514,214,0.992,215,0.514,216,0.552,217,0.514,218,0.572,219,0.514,220,0.572,221,0.849,222,0.514,223,0.572,224,0.514,225,0.552,226,0.514,227,0.572,228,0.514,229,0.764,230,0.592,231,0.477,232,0.592,233,0.514,234,0.552,235,0.514,236,0.552,237,0.514,238,0.552,239,0.514,240,0.552,241,0.514,242,0.572,243,0.514,244,0.552,245,0.514,246,0.82,247,0.514,248,0.514,249,0.572,250,0.514,251,0.572,252,0.514,253,0.592,254,0.572,255,0.46,256,0.495,257,0.552,258,0.592,259,0.495,260,0.77,261,0.592,262,0.495,263,0.592,264,0.495,265,0.592,266,0.495,267,0.533,268,0.533,269,0.572,270,0.592,284,2.543,292,2.388,553,1.589,574,1.757,588,2.558,595,2.189,745,2.369,844,2.762,971,3.646,1044,2.224,1049,6.344,1050,2.762,1051,5.119,1052,5.015,1053,4.629,1054,5.591,1055,5.591,1056,3.727,1057,4.379,1058,4.379,1059,3.498,1060,3.054,1061,6.404,1062,3.498,1063,3.498,1064,5.119,1065,4.379,1066,3.498,1067,3.054,1068,3.498,1069,3.054,1070,3.498,1071,3.498,1072,3.054,1073,3.498,1074,3.054,1075,3.498,1076,4.379,1077,2.762,1078,3.498,1079,4.379,1080,3.498,1081,3.498]],["title/components/LoaderActorComponent.html",[127,0.04,206,0.6]],["body/components/LoaderActorComponent.html",[0,0.058,3,0.086,4,0.086,5,0.067,9,1.375,10,2.376,11,2.585,12,2.833,13,0.271,14,1.058,15,1.336,17,0.447,23,1.87,24,2.544,26,2.544,27,0.638,28,0.577,29,1.075,31,0.393,32,0.772,34,0.378,35,0.013,36,0.626,37,0.562,38,0.687,40,0.953,41,0.92,46,0.693,49,1.275,56,0.181,57,1.058,58,0.076,60,0.454,63,0.086,78,0.539,80,0.004,81,0.006,82,0.004,86,0.92,88,0.787,89,0.886,94,0.814,102,0.825,110,1.55,117,1.014,120,1.056,127,0.051,128,0.423,129,0.615,130,0.487,131,0.487,134,1.515,135,0.378,136,0.487,138,1.203,139,1.116,140,0.47,142,0.47,143,1.5,145,1.617,150,0.96,152,0.596,153,0.596,154,0.593,156,0.679,157,1.205,161,0.223,162,0.71,163,0.735,164,0.309,165,0.987,166,0.487,167,0.987,168,0.423,169,0.47,170,0.735,171,0.423,172,0.487,173,0.423,174,0.454,175,1.218,176,0.423,177,0.47,178,0.487,179,0.423,180,0.47,181,0.423,182,0.47,183,0.423,184,0.487,185,0.423,186,0.487,187,0.487,188,0.487,189,0.487,190,0.423,191,0.487,192,0.423,193,0.438,194,0.423,195,0.826,196,1.19,197,0.423,198,0.423,199,0.423,200,0.47,201,0.423,202,0.487,203,0.423,204,0.686,205,0.735,206,0.856,207,0.855,208,0.423,209,0.47,210,0.735,211,0.423,212,0.47,213,0.423,214,0.886,215,0.423,216,0.454,217,0.423,218,0.47,219,0.423,220,0.47,221,0.735,222,0.423,223,0.47,224,0.423,225,0.454,226,0.423,227,0.47,228,0.423,229,0.662,230,0.487,231,0.393,232,0.487,233,0.423,234,0.454,235,0.423,236,0.454,237,0.423,238,0.454,239,0.423,240,0.454,241,0.423,242,0.47,243,0.423,244,0.454,245,0.423,246,0.71,247,0.423,248,0.423,249,0.47,250,0.423,251,0.47,252,0.423,253,0.487,254,0.855,255,0.378,256,0.408,257,0.454,258,0.487,259,0.408,260,0.687,261,0.487,262,0.408,263,0.487,264,0.408,265,0.487,266,0.408,267,0.438,268,0.438,269,0.47,270,0.487,272,3.232,276,1.829,279,4.602,291,3.326,292,2.633,295,5.089,296,4.602,313,1.967,320,2.544,324,4.131,535,1.307,553,1.307,574,2.305,588,1.256,595,2.544,596,1.558,597,2.833,607,1.208,609,1.487,640,1.829,644,3.25,666,3.14,675,3.158,683,1.949,719,2.512,755,1.638,907,3.804,921,1.487,932,2.512,933,3.429,936,1.949,954,2.512,955,2.272,956,2.092,1034,2.272,1056,3.326,1082,6.843,1083,4.344,1084,5.232,1085,5.232,1086,5.232,1087,4.602,1088,4.939,1089,2.878,1090,3.793,1091,2.878,1092,2.878,1093,2.878,1094,2.878,1095,2.878,1096,2.878,1097,2.878,1098,2.878,1099,1.949,1100,2.272,1101,2.878,1102,2.512,1103,2.878,1104,2.512,1105,2.092,1106,2.878,1107,2.878,1108,2.878,1109,2.878,1110,2.878,1111,4.344,1112,5.232,1113,2.878,1114,2.878,1115,2.878,1116,2.878,1117,2.878,1118,2.878,1119,2.878,1120,4.344,1121,2.878,1122,2.878,1123,2.878,1124,2.512,1125,2.512,1126,2.512,1127,5.089,1128,2.092,1129,2.878,1130,2.512,1131,2.878,1132,3.793,1133,4.344,1134,4.344,1135,2.878,1136,2.878,1137,2.878,1138,2.878,1139,2.512]],["title/components/MapControlsComponent.html",[127,0.04,208,0.6]],["body/components/MapControlsComponent.html",[0,0.061,3,0.091,4,0.091,5,0.071,9,1.432,12,2.927,13,0.286,15,1.136,17,0.466,18,0.609,25,2.235,27,0.665,28,0.609,29,1.097,31,0.415,32,0.767,34,0.594,35,0.013,36,0.688,37,0.486,38,0.594,40,1.233,41,1.19,43,2.958,45,1.438,46,0.446,49,0.877,53,2.235,56,0.178,58,0.081,59,0.672,60,0.479,63,0.091,72,2.337,78,0.569,80,0.005,81,0.007,82,0.005,86,0.945,88,0.82,89,0.43,94,0.848,102,1.297,117,1.48,120,0.551,127,0.053,128,0.446,129,0.641,130,0.514,131,0.514,135,0.399,138,1.207,139,1.12,140,0.497,142,0.74,154,0.415,156,0.717,161,0.235,162,0.74,163,0.766,164,0.326,165,1.014,166,0.514,167,1.014,168,0.446,169,0.497,170,0.766,171,0.446,172,0.514,173,0.446,174,0.479,175,1.236,176,0.446,177,0.497,178,0.514,179,0.446,180,0.497,181,0.446,182,0.497,183,0.446,184,0.514,185,0.446,186,0.514,187,0.514,188,0.514,189,0.514,190,0.446,191,0.514,192,0.446,193,0.463,194,0.446,195,0.853,196,1.209,197,0.446,198,0.446,199,0.446,200,0.497,201,0.446,202,0.514,203,0.446,204,0.714,205,0.766,206,0.446,207,0.497,208,0.88,209,0.884,210,0.766,211,0.446,212,0.497,213,0.446,214,0.915,215,0.446,216,0.479,217,0.446,218,0.74,219,0.446,220,0.497,221,0.766,222,0.446,223,0.497,224,0.446,225,0.479,226,0.446,227,0.497,228,0.446,229,0.463,230,0.514,231,0.415,232,0.514,233,0.446,234,0.479,235,0.446,236,0.479,237,0.446,238,0.479,239,0.446,240,0.479,241,0.446,242,0.497,243,0.446,244,0.479,245,0.446,246,0.74,247,0.446,248,0.446,249,0.497,250,0.446,251,0.497,252,0.446,253,0.514,254,0.497,255,0.399,256,0.43,257,0.479,258,0.514,259,0.43,260,0.71,261,0.514,262,0.43,263,0.514,264,0.43,265,0.514,266,0.43,267,0.463,268,0.463,269,0.497,270,0.514,272,3.382,313,2.523,492,3.382,553,1.38,561,1.438,566,2.715,574,1.064,639,2.141,640,2.876,663,1.823,678,2.398,755,1.729,760,4.056,907,3.289,1128,2.209,1140,2.398,1141,6.857,1142,2.398,1143,4.719,1144,4.719,1145,3.572,1146,4.719,1147,5.229,1148,5.405,1149,5.405,1150,5.405,1151,5.405,1152,5.405,1153,5.405,1154,5.405,1155,5.405,1156,4.719,1157,5.405,1158,4.719,1159,4.524,1160,3.038,1161,3.064,1162,3.038,1163,3.038,1164,3.038,1165,4.524,1166,3.038,1167,2.652,1168,3.038,1169,5.229,1170,2.652,1171,3.038,1172,3.038,1173,3.038,1174,3.038,1175,4.524,1176,2.398,1177,2.652,1178,2.652,1179,3.95,1180,2.398,1181,2.652,1182,3.95,1183,3.95,1184,2.652,1185,3.95,1186,3.95,1187,3.038,1188,3.038,1189,2.652,1190,2.652,1191,2.652,1192,3.038,1193,3.038,1194,3.038,1195,4.524,1196,3.038,1197,3.038,1198,3.038,1199,4.524,1200,3.038,1201,3.038,1202,3.038,1203,3.038,1204,3.038,1205,3.038,1206,3.038,1207,3.038,1208,3.038,1209,3.038,1210,4.524,1211,3.038,1212,3.038,1213,3.038,1214,2.209,1215,3.289]],["title/components/MeshLineConnectorComponent.html",[127,0.04,211,0.6]],["body/components/MeshLineConnectorComponent.html",[0,0.06,3,0.089,4,0.089,5,0.069,13,0.28,14,1.086,15,0.904,17,0.459,18,0.893,27,0.655,28,0.597,29,1.089,31,0.406,32,0.771,34,0.391,35,0.013,36,0.637,37,0.533,38,0.702,40,1.161,41,1.121,46,0.526,49,1.035,56,0.192,57,1.086,58,0.079,59,0.658,60,0.47,63,0.089,72,1.538,78,0.558,80,0.004,81,0.007,82,0.004,86,0.936,88,0.808,89,0.422,90,2.008,94,0.835,110,1.973,117,1.408,120,1.075,127,0.052,128,0.437,129,0.631,130,0.504,131,0.504,134,1.541,135,0.391,136,0.499,138,1.206,139,1.118,140,0.487,142,0.729,145,1.645,150,0.985,151,1.409,152,0.617,153,0.617,154,0.608,155,0.8,156,0.702,157,1.236,161,0.231,162,0.729,163,0.754,164,0.32,165,1.004,166,0.504,167,1.004,168,0.437,169,0.487,170,0.754,171,0.437,172,0.504,173,0.437,174,0.47,175,1.229,176,0.437,177,0.487,178,0.504,179,0.437,180,0.487,181,0.437,182,0.487,183,0.437,184,0.504,185,0.437,186,0.504,187,0.504,188,0.504,189,0.504,190,0.437,191,0.504,192,0.437,193,0.454,194,0.437,195,0.843,196,1.202,197,0.437,198,0.437,199,0.437,200,0.487,201,0.437,202,0.504,203,0.437,204,1.287,205,0.754,206,0.437,207,0.487,208,0.437,209,0.487,210,0.754,211,0.871,212,1.038,213,0.437,214,0.904,215,0.437,216,0.47,217,0.437,218,0.487,219,0.437,220,0.487,221,0.754,222,0.437,223,0.487,224,0.437,225,0.47,226,0.437,227,0.487,228,0.437,229,0.454,230,0.504,231,0.406,232,0.504,233,0.437,234,0.47,235,0.437,236,0.47,237,0.437,238,0.47,239,0.437,240,0.47,241,0.437,242,0.487,243,0.437,244,0.47,245,0.437,246,0.729,247,0.437,248,0.437,249,0.487,250,0.437,251,0.487,252,0.437,253,0.504,254,0.487,255,0.391,256,0.422,257,0.47,258,0.504,259,0.422,260,0.702,261,0.504,262,0.422,263,0.504,264,0.422,265,0.504,266,0.422,267,0.454,268,0.454,269,0.487,270,0.504,272,3.269,282,4.663,291,3.769,292,2.575,313,1.675,553,1.352,588,2.331,644,2.202,678,2.351,683,2.016,684,2.351,745,2.016,753,2.165,760,3.018,971,3.24,978,5.543,1050,2.351,1051,4.663,1053,4.217,1054,5.177,1055,5.177,1056,3.395,1057,2.6,1058,3.891,1060,2.6,1064,3.891,1065,3.891,1067,3.891,1076,5.543,1079,2.6,1161,4.016,1216,6.883,1217,4.457,1218,5.341,1219,5.341,1220,6.349,1221,4.616,1222,6.349,1223,4.457,1224,2.978,1225,4.457,1226,2.978,1227,2.978,1228,2.978,1229,2.978,1230,2.978,1231,2.978,1232,2.978,1233,2.978,1234,2.978,1235,5.929,1236,2.978,1237,6.349,1238,2.978,1239,2.351,1240,2.978,1241,2.978,1242,2.978,1243,4.457,1244,4.457,1245,4.457,1246,4.457,1247,4.457,1248,3.891,1249,4.457,1250,4.457,1251,4.457,1252,4.457,1253,4.457,1254,2.978,1255,2.978,1256,2.978,1257,2.978,1258,2.978,1259,2.6,1260,2.978,1261,2.978,1262,2.978,1263,2.978,1264,2.978,1265,2.978]],["title/interfaces/NearestIntersection.html",[1266,2.766,1267,2.969]],["body/interfaces/NearestIntersection.html",[0,0.079,3,0.118,4,0.118,5,0.092,9,1.25,11,2.699,13,0.372,14,1.331,20,2.371,21,2.139,23,1.907,26,1.724,27,0.58,35,0.013,37,0.491,47,2.371,56,0.188,58,0.105,63,0.118,76,3.119,78,1.437,80,0.006,81,0.008,82,0.006,101,2.139,110,1.618,120,0.99,134,1.42,150,1.208,154,1.026,155,1.061,157,1.875,260,0.888,271,2.823,280,2.139,292,2.737,293,3.119,300,2.872,304,3.119,313,2.54,316,5.336,320,2.733,492,1.87,574,1.914,581,4.296,584,3.474,607,2.978,639,2.586,677,2.872,717,2.872,796,2.872,797,2.872,839,4.242,966,6.336,1161,2.676,1266,2.676,1267,5.335,1268,3.951,1269,3.119,1270,5.469,1271,3.982,1272,2.872,1273,4.037,1274,2.872,1275,3.449,1276,4.771,1277,3.449,1278,3.449,1279,5.469,1280,3.449,1281,4.945,1282,3.119,1283,5.469,1284,3.449,1285,3.449,1286,3.449,1287,3.449,1288,3.449,1289,3.449,1290,3.449,1291,3.449,1292,3.449,1293,3.449,1294,3.449,1295,3.449,1296,5.469,1297,3.449,1298,3.449,1299,3.119,1300,3.449,1301,3.7,1302,3.449,1303,3.449,1304,3.449,1305,3.982,1306,3.449,1307,3.449,1308,4.771,1309,5.469,1310,4.771,1311,4.771,1312,6.194,1313,6.194,1314,4.771,1315,3.449,1316,3.449,1317,5.469,1318,3.119,1319,3.449,1320,4.771,1321,4.771,1322,3.449,1323,3.449,1324,3.449,1325,3.449,1326,3.449,1327,3.449,1328,3.449,1329,4.314,1330,3.449,1331,3.449,1332,3.449,1333,3.449,1334,3.449,1335,3.449,1336,3.449,1337,4.771,1338,4.314,1339,3.449,1340,5.901,1341,4.771,1342,3.449,1343,3.449,1344,3.449,1345,3.449]],["title/components/ObjLoaderComponent.html",[127,0.04,215,0.6]],["body/components/ObjLoaderComponent.html",[0,0.061,3,0.091,4,0.091,5,0.156,13,0.288,14,1.109,15,1.088,17,0.469,18,0.912,23,0.796,27,0.669,28,0.614,29,1.101,31,0.418,32,0.706,34,0.598,35,0.013,36,0.691,37,0.578,38,0.79,40,0.744,41,0.719,46,0.449,49,0.594,56,0.19,57,1.109,58,0.081,59,0.677,60,0.484,63,0.091,78,0.853,80,0.005,81,0.007,82,0.005,86,0.949,88,0.825,89,0.434,94,0.853,108,3.39,117,1.165,120,1.22,127,0.063,128,0.45,129,0.645,130,0.519,131,0.519,134,1.563,135,0.403,136,0.51,138,1.208,139,1.12,140,0.501,142,0.744,145,1.668,150,1.006,152,0.634,153,0.634,154,0.621,155,0.823,156,0.723,157,0.85,161,0.237,162,0.744,163,0.771,164,0.329,165,1.018,166,0.519,167,1.018,168,0.45,169,0.501,170,0.771,171,0.45,172,0.519,173,0.45,174,0.484,175,1.239,176,0.45,177,0.501,178,0.519,179,0.45,180,0.501,181,0.45,182,0.501,183,0.45,184,0.519,185,0.45,186,0.519,187,0.519,188,0.519,189,0.519,190,0.45,191,0.519,192,0.45,193,0.467,194,0.45,195,0.857,196,1.212,197,0.45,198,0.45,199,0.45,200,0.501,201,0.45,202,0.519,203,0.45,204,0.719,205,0.771,206,0.45,207,1.14,208,0.45,209,0.501,210,0.771,211,0.45,212,0.501,213,0.45,214,0.919,215,0.883,216,1.175,217,0.45,218,0.501,219,0.45,220,0.501,221,0.771,222,0.45,223,0.501,224,0.45,225,0.484,226,0.45,227,0.501,228,0.45,229,0.467,230,0.519,231,0.418,232,0.519,233,0.45,234,0.484,235,0.45,236,0.484,237,0.45,238,0.484,239,0.45,240,0.484,241,0.45,242,0.501,243,0.45,244,0.484,245,0.45,246,0.744,247,0.45,248,0.45,249,0.501,250,0.45,251,0.501,252,0.45,253,0.519,254,0.501,255,0.403,256,0.434,257,0.484,258,0.519,259,0.434,260,0.714,261,0.519,262,0.434,263,0.519,264,0.434,265,0.519,266,0.434,267,0.467,268,0.467,269,0.501,270,0.519,275,2.075,292,2.28,454,3.26,553,1.391,574,1.073,595,2.624,708,2.419,1032,2.894,1044,1.948,1346,6.39,1347,2.228,1348,4.552,1349,4.552,1350,5.432,1351,4.552,1352,2.675,1353,4.289,1354,4.552,1355,6.973,1356,3.95,1357,4.372,1358,5.25,1359,5.25,1360,4.552,1361,3.064,1362,6.426,1363,6.426,1364,6.426,1365,5.611,1366,6.426,1367,6.503,1368,3.975,1369,3.064,1370,4.743,1371,3.064,1372,3.064,1373,3.064,1374,4.552,1375,3.064,1376,3.064,1377,4.289,1378,3.064,1379,3.064,1380,3.064,1381,2.228,1382,3.064,1383,3.064,1384,5.432,1385,2.419,1386,3.064,1387,3.594,1388,4.748,1389,3.064,1390,4.552,1391,3.064,1392,2.675,1393,2.419,1394,2.419,1395,2.675,1396,2.675,1397,3.064,1398,3.064,1399,3.064,1400,3.064,1401,3.064,1402,3.064,1403,3.064,1404,3.064,1405,3.064,1406,3.064,1407,2.419,1408,2.675]],["title/components/ObjectLoaderComponent.html",[127,0.04,213,0.6]],["body/components/ObjectLoaderComponent.html",[0,0.075,3,0.111,4,0.111,5,0.087,13,0.351,14,1.278,15,1.175,17,0.54,18,1.051,27,0.771,28,0.746,29,1.178,31,0.508,32,0.598,34,0.49,35,0.013,36,0.708,37,0.335,38,0.797,40,0.609,41,0.588,46,0.367,56,0.191,57,1.278,58,0.099,59,0.824,60,0.588,63,0.111,78,0.698,80,0.006,81,0.008,82,0.006,86,1.04,88,0.951,89,0.528,100,1.626,120,1.1,127,0.059,128,0.547,129,0.743,130,0.631,131,0.631,134,1.713,135,0.49,136,0.588,138,1.22,139,1.132,140,0.609,142,0.857,145,1.828,150,1.16,152,0.772,153,0.772,154,0.899,155,1.001,156,0.879,161,0.289,162,0.857,163,0.888,164,0.4,165,1.115,166,0.631,167,1.115,168,0.547,169,0.609,170,0.888,171,0.547,172,0.631,173,0.547,174,0.588,175,1.3,176,0.547,177,0.609,178,0.631,179,0.547,180,0.609,181,0.547,182,0.609,183,0.547,184,0.631,185,0.547,186,0.631,187,0.631,188,0.631,189,0.631,190,0.547,191,0.631,192,0.547,193,0.568,194,0.547,195,0.958,196,1.279,197,0.547,198,0.547,199,0.547,200,0.609,201,0.547,202,0.631,203,0.547,204,0.828,205,0.888,206,0.547,207,1.21,208,0.547,209,0.609,210,0.888,211,0.547,212,0.609,213,0.968,214,1.027,215,0.547,216,0.588,217,0.547,218,0.609,219,0.547,220,0.609,221,0.888,222,0.547,223,0.609,224,0.547,225,0.588,226,0.547,227,0.609,228,0.547,229,0.568,230,0.631,231,0.508,232,0.631,233,0.547,234,0.588,235,0.547,236,0.588,237,0.547,238,0.588,239,0.547,240,0.588,241,0.547,242,0.609,243,0.547,244,0.588,245,0.547,246,0.857,247,0.547,248,0.547,249,0.609,250,0.547,251,0.609,252,0.547,253,0.631,254,0.609,255,0.49,256,0.528,257,0.588,258,0.631,259,0.528,260,0.797,261,0.631,262,0.528,263,0.631,264,0.528,265,0.631,266,0.528,267,0.568,268,0.568,269,0.609,270,0.631,292,2.055,454,2.236,1347,2.709,1353,4.792,1356,4.413,1357,4.79,1365,3.253,1367,3.253,1377,4.792,1387,2.942,1388,4.141,1407,2.942,1408,3.253,1409,5.752,1410,5.245,1411,5.245,1412,3.253,1413,5.245,1414,3.253,1415,3.726,1416,3.726,1417,3.726,1418,3.253,1419,3.726,1420,3.253,1421,3.726]],["title/components/OrbitControlsComponent.html",[127,0.04,217,0.6]],["body/components/OrbitControlsComponent.html",[0,0.072,3,0.108,4,0.108,5,0.084,9,1.627,12,3.236,13,0.341,15,1.163,17,0.529,18,0.725,25,2.539,27,0.755,28,0.725,29,1.167,31,0.494,32,0.677,34,0.675,35,0.013,36,0.738,37,0.462,38,0.675,40,0.84,41,0.811,43,3.213,45,1.714,46,0.506,49,0.996,53,2.539,56,0.182,58,0.096,59,0.8,60,0.572,63,0.108,78,0.679,80,0.005,81,0.008,82,0.005,86,1.027,88,0.932,89,0.513,94,0.964,117,1.158,120,0.656,127,0.058,128,0.532,129,0.728,130,0.613,131,0.613,135,0.476,138,1.218,139,1.13,140,0.592,142,0.84,154,0.494,156,0.854,161,0.28,162,0.84,163,0.87,164,0.389,165,1.101,166,0.613,167,1.101,168,0.532,169,0.592,170,0.87,171,0.532,172,0.613,173,0.532,174,0.572,175,1.291,176,0.532,177,0.592,178,0.613,179,0.532,180,0.592,181,0.532,182,0.592,183,0.532,184,0.613,185,0.532,186,0.613,187,0.613,188,0.613,189,0.613,190,0.532,191,0.613,192,0.532,193,0.552,194,0.532,195,0.943,196,1.269,197,0.532,198,0.532,199,0.532,200,0.592,201,0.532,202,0.613,203,0.532,204,0.811,205,0.87,206,0.532,207,0.592,208,0.532,209,0.592,210,0.87,211,0.532,212,0.592,213,0.532,214,1.011,215,0.532,216,0.572,217,0.956,218,1.063,219,0.532,220,0.592,221,0.87,222,0.532,223,0.592,224,0.532,225,0.572,226,0.532,227,0.592,228,0.532,229,0.552,230,0.613,231,0.494,232,0.613,233,0.532,234,0.572,235,0.532,236,0.572,237,0.532,238,0.572,239,0.532,240,0.572,241,0.532,242,0.592,243,0.532,244,0.572,245,0.532,246,0.84,247,0.532,248,0.532,249,0.592,250,0.532,251,0.592,252,0.532,253,0.613,254,0.592,255,0.476,256,0.513,257,0.572,258,0.613,259,0.513,260,0.785,261,0.613,262,0.513,263,0.613,264,0.513,265,0.613,266,0.513,267,0.552,268,0.552,269,0.592,270,0.613,492,3.55,561,1.714,566,3.085,574,1.269,663,2.173,755,2.061,1140,2.859,1142,2.859,1143,5.218,1144,5.218,1145,4.058,1146,5.218,1147,5.679,1156,5.218,1158,5.218,1167,3.162,1169,4.488,1170,4.488,1176,4.058,1177,3.162,1178,3.162,1179,4.488,1180,2.859,1181,3.162,1182,4.488,1183,4.488,1184,3.162,1185,4.488,1186,4.488,1189,3.162,1190,3.162,1191,3.162,1214,2.633,1215,3.737,1422,6.231,1423,3.621,1424,3.621]],["title/components/OrthographicCameraComponent.html",[127,0.04,219,0.6]],["body/components/OrthographicCameraComponent.html",[0,0.068,3,0.101,4,0.101,5,0.079,9,1.553,12,3.122,13,0.32,15,1.219,17,0.505,18,0.68,23,1.499,25,2.425,27,0.721,28,0.68,29,1.142,31,0.463,32,0.688,34,0.757,35,0.013,36,0.751,37,0.518,38,0.757,40,0.555,41,0.536,43,3.12,45,2.323,46,0.622,49,1.354,53,2.425,56,0.178,58,0.09,59,0.751,60,0.536,63,0.101,72,1.754,78,0.637,80,0.005,81,0.007,82,0.005,86,0.997,88,0.89,89,0.481,94,0.92,102,1.652,110,1.006,117,0.951,120,0.615,127,0.062,128,0.499,129,0.695,130,0.575,131,0.575,135,0.446,136,0.55,138,1.214,139,1.126,140,0.555,142,0.803,150,1.085,152,0.703,153,0.703,154,0.463,156,0.801,157,0.942,161,0.263,162,0.803,163,0.831,164,0.365,165,1.069,166,0.575,167,1.069,168,0.499,169,0.555,170,0.831,171,0.499,172,0.575,173,0.499,174,0.536,175,1.272,176,0.499,177,0.555,178,0.575,179,0.499,180,0.555,181,0.499,182,0.555,183,0.499,184,0.575,185,0.499,186,0.575,187,0.575,188,0.575,189,0.575,190,0.499,191,0.575,192,0.499,193,0.517,194,0.499,195,0.91,196,1.248,197,0.499,198,0.499,199,0.499,200,0.555,201,0.499,202,0.575,203,0.499,204,0.775,205,0.831,206,0.499,207,0.555,208,0.499,209,0.555,210,0.831,211,0.499,212,0.555,213,0.499,214,0.976,215,0.499,216,0.536,217,0.499,218,0.555,219,0.928,220,0.943,221,0.831,222,0.499,223,0.555,224,0.499,225,0.536,226,0.499,227,0.555,228,0.499,229,0.517,230,0.575,231,0.463,232,0.575,233,0.499,234,0.536,235,0.499,236,0.536,237,0.499,238,0.536,239,0.499,240,0.536,241,0.499,242,0.555,243,0.499,244,0.536,245,0.499,246,0.803,247,0.499,248,0.499,249,0.555,250,0.499,251,0.555,252,0.499,253,0.575,254,0.555,255,0.446,256,0.481,257,0.536,258,0.575,259,0.481,260,0.757,261,0.575,262,0.481,263,0.575,264,0.481,265,0.575,266,0.481,267,0.517,268,0.517,269,0.555,270,0.575,313,1.276,320,2.142,335,1.952,553,1.542,639,3.49,760,2.3,784,2.3,796,3.569,797,3.569,803,3.876,845,2.965,1271,4.26,1273,3.281,1301,3.325,1425,6.288,1426,2.681,1427,4.909,1428,5.515,1429,4.286,1430,6.317,1431,4.286,1432,3.396,1433,3.396,1434,4.286,1435,3.396,1436,4.987,1437,3.396,1438,3.396,1439,3.396,1440,3.396,1441,4.909,1442,5.766,1443,3.396,1444,3.396,1445,3.396,1446,3.396,1447,6.701,1448,3.396,1449,3.396,1450,3.396,1451,3.396,1452,3.396,1453,2.965,1454,3.396,1455,3.396]],["title/components/PerspectiveCameraComponent.html",[127,0.04,222,0.6]],["body/components/PerspectiveCameraComponent.html",[0,0.073,3,0.109,4,0.109,5,0.085,13,0.344,15,1.106,17,0.533,18,0.733,23,1.562,27,0.761,28,0.733,29,1.171,31,0.499,32,0.705,34,0.68,35,0.013,36,0.741,37,0.62,38,0.68,46,0.51,49,1.165,56,0.183,58,0.097,59,0.809,60,0.577,63,0.109,80,0.005,81,0.008,82,0.005,86,1.031,88,0.938,89,0.518,94,0.97,102,2.192,117,1.266,120,0.663,127,0.059,128,0.537,129,0.733,130,0.619,131,0.619,135,0.481,136,0.58,138,1.219,139,1.131,140,0.598,142,0.846,150,1.145,152,0.757,153,0.757,154,0.499,156,0.863,161,0.283,162,0.846,163,0.876,164,0.393,165,1.106,166,0.619,167,1.106,168,0.537,169,0.598,170,0.876,171,0.537,172,0.619,173,0.537,174,0.577,175,1.294,176,0.537,177,0.598,178,0.619,179,0.537,180,0.598,181,0.537,182,0.598,183,0.537,184,0.619,185,0.537,186,0.619,187,0.619,188,0.619,189,0.619,190,0.537,191,0.619,192,0.537,193,0.557,194,0.537,195,0.948,196,1.273,197,0.537,198,0.537,199,0.537,200,0.598,201,0.537,202,0.619,203,0.537,204,0.817,205,0.876,206,0.537,207,0.598,208,0.537,209,0.598,210,0.876,211,0.537,212,0.598,213,0.537,214,1.017,215,0.537,216,0.577,217,0.537,218,0.598,219,0.537,220,0.598,221,0.876,222,0.96,223,0.982,224,0.537,225,0.577,226,0.537,227,0.598,228,0.537,229,0.557,230,0.619,231,0.499,232,0.619,233,0.537,234,0.577,235,0.537,236,0.577,237,0.537,238,0.577,239,0.537,240,0.577,241,0.537,242,0.598,243,0.537,244,0.577,245,0.537,246,0.846,247,0.537,248,0.537,249,0.598,250,0.537,251,0.598,252,0.537,253,0.619,254,0.598,255,0.481,256,0.518,257,0.577,258,0.619,259,0.518,260,0.789,261,0.619,262,0.518,263,0.619,264,0.518,265,0.619,266,0.518,267,0.557,268,0.557,269,0.598,270,0.619,312,2.888,454,3.107,871,5.247,872,5.247,897,3.194,898,3.194,1271,4.384,1273,3.42,1301,2.477,1426,2.888,1428,5.705,1429,4.52,1431,3.194,1434,4.52,1436,4.744,1453,3.194,1456,6.427,1457,5.177,1458,6.009,1459,5.177,1460,3.658,1461,3.658,1462,3.658,1463,3.658,1464,3.658,1465,3.658,1466,3.658,1467,3.658,1468,3.658,1469,3.658]],["title/components/PlaneMeshComponent.html",[127,0.04,224,0.6]],["body/components/PlaneMeshComponent.html",[0,0.067,3,0.099,4,0.099,5,0.078,13,0.314,15,1.126,17,0.499,18,0.971,27,0.712,28,0.668,29,1.135,31,0.455,32,0.684,34,0.438,35,0.013,36,0.673,37,0.3,38,1.011,40,1.024,41,0.989,46,0.329,56,0.184,57,1.181,58,0.088,59,0.737,60,0.527,63,0.099,78,0.625,80,0.005,81,0.007,82,0.005,86,0.989,88,0.878,89,0.472,94,0.908,102,1.795,117,1.29,120,0.878,127,0.056,128,0.49,129,0.686,130,0.565,131,0.565,134,1.629,135,0.438,136,0.543,138,1.213,139,1.125,140,0.545,142,0.792,143,1.795,145,1.738,150,1.071,152,0.691,153,0.691,154,0.661,155,1.301,156,0.787,157,1.583,161,0.258,162,0.792,163,0.82,164,0.359,165,1.06,166,0.565,167,1.06,168,0.49,169,0.545,170,0.82,171,0.49,172,0.565,173,0.49,174,0.527,175,1.266,176,0.49,177,0.545,178,0.565,179,0.49,180,0.545,181,0.49,182,0.545,183,0.49,184,0.565,185,0.49,186,0.565,187,0.565,188,0.565,189,0.565,190,0.49,191,0.565,192,0.49,193,0.508,194,0.49,195,0.901,196,1.242,197,0.49,198,0.49,199,0.49,200,0.545,201,0.49,202,0.565,203,0.49,204,0.765,205,0.82,206,0.49,207,0.545,208,0.49,209,0.545,210,0.82,211,0.49,212,1.135,213,0.49,214,0.966,215,0.49,216,0.527,217,0.49,218,0.545,219,0.49,220,0.545,221,0.82,222,0.49,223,0.545,224,0.92,225,0.901,226,0.49,227,0.545,228,0.49,229,0.508,230,0.565,231,0.455,232,0.565,233,0.49,234,0.527,235,0.49,236,0.527,237,0.49,238,0.527,239,0.49,240,0.527,241,0.49,242,0.545,243,0.49,244,0.527,245,0.49,246,0.792,247,0.49,248,0.49,249,0.545,250,0.49,251,0.545,252,0.49,253,0.565,254,0.545,255,0.438,256,0.472,257,0.527,258,0.565,259,0.472,260,0.75,261,0.565,262,0.472,263,0.565,264,0.472,265,0.565,266,0.472,267,0.508,268,0.508,269,0.545,270,0.565,556,1.723,557,3.248,561,3.39,562,4.15,563,4.554,564,4.15,566,3.76,567,2.426,568,4.946,569,4.555,570,4.946,572,4.946,573,5.794,574,2.727,575,5.47,576,5.47,577,5.47,578,5.47,579,5.47,580,2.634,581,3.081,583,2.259,584,3.081,585,4.231,588,1.456,590,2.259,592,2.426,593,2.426,595,2.115,596,1.806,597,1.806,598,2.002,644,2.394,1470,6.254,1471,4.846,1472,3.336,1473,2.913]],["title/components/PointLightComponent.html",[127,0.04,226,0.6]],["body/components/PointLightComponent.html",[0,0.072,3,0.107,4,0.107,5,0.084,13,0.339,15,1.16,17,0.527,18,0.721,27,0.752,28,0.721,29,1.164,31,0.491,32,0.702,34,0.473,35,0.013,36,0.697,37,0.324,38,0.783,40,1.061,41,1.024,46,0.355,56,0.182,57,1.247,58,0.095,59,0.796,60,0.568,63,0.107,78,0.675,80,0.005,81,0.008,82,0.005,86,1.024,88,0.928,89,0.51,90,2.239,94,0.959,103,2.325,110,1.066,117,1.328,120,0.652,127,0.058,128,0.529,129,0.725,130,0.609,131,0.609,133,2.438,134,1.851,135,0.473,136,0.574,138,1.218,139,1.13,140,0.588,141,4.393,142,0.837,143,1.859,144,4.331,145,1.8,146,2.617,147,3.143,150,1.131,151,1.703,152,0.745,153,0.745,154,0.698,155,0.967,156,0.849,157,0.998,160,2.842,161,0.279,162,0.837,163,0.866,164,0.387,165,1.098,166,0.609,167,1.098,168,0.529,169,0.588,170,0.866,171,0.529,172,0.609,173,0.529,174,0.568,175,1.29,176,0.529,177,0.588,178,0.609,179,0.529,180,0.588,181,0.529,182,0.588,183,0.529,184,0.609,185,0.529,186,0.609,187,0.609,188,0.609,189,0.609,190,0.529,191,0.609,192,0.529,193,0.548,194,0.529,195,0.94,196,1.268,197,0.529,198,0.529,199,0.529,200,0.588,201,0.529,202,0.609,203,0.529,204,0.808,205,0.866,206,0.529,207,0.588,208,0.529,209,0.588,210,0.866,211,0.529,212,0.588,213,0.529,214,1.008,215,0.529,216,0.568,217,0.529,218,0.588,219,0.529,220,0.588,221,0.866,222,0.529,223,0.588,224,0.529,225,0.568,226,0.953,227,0.974,228,0.529,229,0.548,230,0.609,231,0.491,232,0.609,233,0.529,234,0.568,235,0.529,236,0.568,237,0.529,238,0.568,239,0.529,240,0.568,241,0.529,242,0.588,243,0.529,244,0.568,245,0.529,246,0.837,247,0.529,248,0.529,249,0.588,250,0.529,251,0.588,252,0.529,253,0.609,254,0.588,255,0.473,256,0.51,257,0.568,258,0.609,259,0.51,260,0.783,261,0.609,262,0.51,263,0.609,264,0.51,265,0.609,266,0.51,267,0.548,268,0.548,269,0.588,270,0.609,313,1.924,553,1.635,574,2.087,739,4.703,742,2.842,751,4.041,752,3.143,753,2.617,759,3.143,761,3.143,762,5.2,764,4.469,765,3.143,766,3.143,1022,4.469,1024,3.143,1161,2.438,1338,4.703,1474,6.397,1475,5.118,1476,3.599,1477,3.599,1478,3.599,1479,3.599,1480,3.599]],["title/pipes/Rad2DegPipe.html",[483,2.766,723,2.766]],["body/pipes/Rad2DegPipe.html",[0,0.12,3,0.179,4,0.179,5,0.139,9,1.897,17,0.617,32,0.591,34,0.788,35,0.013,36,0.821,37,0.539,38,0.788,46,0.591,56,0.159,58,0.159,63,0.179,78,1.124,80,0.009,81,0.011,82,0.009,102,2.317,135,0.788,275,4.06,483,4.842,640,3.812,723,4.842,724,4.734,727,5.235,730,6.243,731,6.243,732,7.239,733,6.243,734,5.235,736,5.235,1481,5.235,1482,7.15,1483,7.15,1484,5.996]],["title/directives/RaycasterCameraDirective.html",[164,0.439,259,0.578]],["body/directives/RaycasterCameraDirective.html",[0,0.117,3,0.175,4,0.175,5,0.136,9,2.232,10,3.436,13,0.552,17,0.726,24,3.427,27,1.036,32,0.695,34,0.77,35,0.013,36,0.63,37,0.527,38,0.77,46,0.577,49,1.367,56,0.201,58,0.155,63,0.175,80,0.009,81,0.01,82,0.009,135,0.77,138,0.83,139,0.927,164,0.63,255,0.77,259,0.999,260,0.927,292,2.388,492,3.906,496,4.26,661,4.626,663,4.233,679,3.968,1271,4.992,1272,4.26,1273,4.306,1485,5.124,1486,5.116,1487,5.859,1488,5.859,1489,5.859]],["title/directives/RaycasterEnableDirective.html",[164,0.439,262,0.578]],["body/directives/RaycasterEnableDirective.html",[0,0.119,3,0.178,4,0.178,5,0.139,9,2.256,10,3.463,13,0.562,17,0.734,21,3.86,24,3.447,27,1.047,32,0.702,34,0.784,35,0.013,36,0.641,37,0.536,38,0.784,46,0.588,49,1.382,56,0.189,58,0.158,63,0.178,80,0.009,81,0.011,82,0.009,135,0.784,138,0.845,139,0.937,164,0.641,255,0.784,260,0.937,262,1.01,292,2.02,492,3.878,496,4.338,679,4.04,1485,5.164,1490,5.209,1491,5.966,1492,5.966,1493,5.966,1494,5.966]],["title/directives/RaycasterGroupDirective.html",[164,0.439,264,0.578]],["body/directives/RaycasterGroupDirective.html",[0,0.085,3,0.127,4,0.127,5,0.099,9,1.823,10,2.961,11,3.221,13,0.402,17,0.593,24,3.046,26,3.046,27,0.846,32,0.795,34,0.857,35,0.013,36,0.701,37,0.627,38,0.857,46,0.756,49,1.533,56,0.185,58,0.113,63,0.127,80,0.006,81,0.009,82,0.006,91,3.119,98,3.119,113,3.966,118,5.076,120,1.182,129,0.989,134,1.815,135,0.561,138,0.605,139,0.917,154,0.583,155,1.146,157,1.598,164,0.459,216,1.029,255,0.561,260,1.039,264,0.816,275,2.891,280,3.947,284,4.189,292,2.82,492,3.634,496,3.104,661,3.37,663,3.458,677,3.104,679,2.891,687,5.03,926,5.03,948,5.03,1274,3.104,1281,5.148,1282,3.37,1305,4.438,1318,4.548,1485,5.505,1495,3.727,1496,5.761,1497,5.03,1498,5.03,1499,5.761,1500,5.761,1501,5.761,1502,5.761,1503,5.761,1504,6.981,1505,6.981,1506,6.981,1507,5.148,1508,5.693,1509,5.693,1510,5.761,1511,4.269,1512,4.269,1513,4.269,1514,4.269,1515,4.269,1516,4.269,1517,4.269,1518,4.269,1519,4.269,1520,6.521,1521,4.269,1522,6.521,1523,4.269,1524,4.269,1525,4.269,1526,4.269,1527,4.269,1528,4.269,1529,4.269,1530,4.269,1531,4.269,1532,4.269,1533,4.269,1534,4.269,1535,4.269,1536,4.269,1537,4.269]],["title/injectables/RaycasterService.html",[271,2.11,492,1.933]],["body/injectables/RaycasterService.html",[0,0.062,3,0.093,4,0.093,5,0.072,9,0.982,11,2.27,13,0.292,14,1.12,17,0.473,20,3.632,21,3.277,23,2.087,26,2.641,27,0.804,32,0.805,34,0.92,35,0.013,36,0.752,37,0.629,38,0.92,40,0.989,41,0.955,46,0.77,47,3.632,49,1.487,56,0.171,58,0.082,63,0.093,76,2.45,78,1.348,80,0.005,81,0.007,82,0.005,91,2.489,101,2.964,110,1.361,120,0.992,134,1.573,150,1.016,154,0.826,155,0.833,157,1.679,260,0.889,271,2.374,273,2.102,280,3.277,292,2.862,293,4.321,300,2.256,304,4.778,313,2.543,316,4.778,320,2.389,492,2.175,574,1.61,581,4.301,584,3.48,607,2.541,639,2.175,677,2.256,717,2.256,796,2.256,797,2.256,839,3.707,966,5.798,1032,2.922,1161,2.102,1266,2.102,1267,4.919,1269,2.45,1270,2.709,1271,4.301,1272,2.256,1273,4.092,1274,2.256,1275,4.013,1276,5.283,1277,4.013,1278,4.779,1279,4.779,1280,2.709,1281,4.321,1282,2.45,1283,4.779,1284,2.709,1285,2.709,1286,2.709,1287,2.709,1288,2.709,1289,2.709,1290,5.283,1291,2.709,1292,2.709,1293,2.709,1294,2.709,1295,5.283,1296,4.779,1297,5.283,1298,4.779,1299,3.629,1300,2.709,1301,3.113,1302,4.013,1303,2.709,1304,2.709,1305,3.847,1306,2.709,1307,4.013,1308,4.013,1309,4.779,1310,4.013,1311,4.013,1312,5.641,1313,5.641,1314,4.013,1315,2.709,1316,2.709,1317,4.779,1318,3.629,1319,2.709,1320,4.013,1321,4.013,1322,4.013,1323,4.779,1324,2.709,1325,2.709,1326,2.709,1327,4.013,1328,4.013,1329,3.629,1330,2.709,1331,2.709,1332,4.013,1333,2.709,1334,2.709,1335,2.709,1336,2.709,1337,4.013,1338,3.629,1339,2.709,1340,5.283,1341,4.013,1342,2.709,1343,2.709,1344,2.709,1345,2.709,1538,4.596,1539,4.596,1540,4.596,1541,4.596,1542,4.596,1543,4.013,1544,4.596,1545,3.103,1546,3.103,1547,3.103,1548,3.103,1549,3.103,1550,2.709,1551,3.103,1552,3.103,1553,3.103,1554,3.103,1555,3.103,1556,3.103,1557,3.103,1558,3.103,1559,3.103,1560,3.103,1561,3.103,1562,3.103,1563,3.103,1564,3.103,1565,3.103,1566,3.103]],["title/components/RendererCanvasComponent.html",[127,0.04,228,0.6]],["body/components/RendererCanvasComponent.html",[0,0.067,3,0.1,4,0.1,5,0.078,9,1.54,10,1.524,13,0.316,14,1.186,17,0.501,23,1.265,27,0.715,28,0.672,29,1.137,31,0.458,32,0.685,34,0.441,35,0.013,36,0.675,37,0.437,38,0.441,46,0.479,49,0.65,56,0.129,58,0.089,60,0.529,63,0.1,78,0.912,80,0.005,81,0.007,82,0.005,86,0.991,89,0.475,100,2.124,110,1.441,117,0.65,127,0.056,128,0.493,129,0.689,130,0.568,131,0.568,135,0.441,138,1.214,139,1.126,140,0.548,142,0.548,154,0.458,161,0.26,162,0.795,163,1.063,164,0.361,165,1.063,166,0.568,167,1.063,168,0.493,169,0.548,170,0.824,171,0.493,172,0.568,173,0.493,174,0.529,175,1.268,176,0.493,177,0.548,178,0.568,179,0.493,180,0.548,181,0.493,182,0.548,183,0.493,184,0.568,185,0.493,186,0.568,187,0.568,188,0.568,189,0.568,190,0.493,191,0.568,192,0.493,193,0.511,194,0.493,195,0.904,196,1.244,197,0.493,198,0.493,199,0.493,200,0.548,201,0.493,202,0.568,203,0.493,204,0.768,205,0.824,206,0.493,207,0.548,208,0.493,209,0.548,210,0.824,211,0.493,212,0.548,213,0.493,214,0.969,215,0.493,216,0.529,217,0.493,218,0.936,219,0.493,220,0.548,221,0.824,222,0.493,223,0.548,224,0.493,225,0.529,226,0.493,227,0.548,228,0.923,229,1.159,230,0.568,231,0.458,232,0.568,233,0.493,234,0.529,235,0.493,236,0.529,237,0.493,238,0.529,239,0.493,240,0.529,241,0.493,242,0.548,243,0.493,244,0.529,245,0.493,246,0.795,247,0.493,248,0.493,249,0.548,250,0.493,251,0.548,252,0.493,253,0.568,254,0.548,255,0.441,256,0.475,257,0.529,258,0.568,259,0.475,260,0.752,261,0.568,262,0.475,263,0.568,264,0.475,265,0.568,266,0.475,267,0.511,268,0.511,269,0.548,270,0.568,280,3.401,281,4.959,292,2.258,335,1.647,453,2.929,506,2.929,561,1.588,574,1.705,610,2.649,612,2.649,663,2.013,755,3.795,844,3.842,868,3.093,953,4.249,1032,3.093,1074,4.249,1077,3.842,1140,2.649,1145,3.842,1214,2.439,1215,4.567,1498,4.249,1567,6.264,1568,2.929,1569,5.726,1570,5.802,1571,5.726,1572,4.866,1573,4.866,1574,5.726,1575,6.281,1576,4.866,1577,4.866,1578,5.726,1579,4.866,1580,3.355,1581,3.355,1582,3.355,1583,3.355,1584,7.175,1585,4.866,1586,3.355,1587,3.355,1588,6.281,1589,4.866,1590,4.866,1591,4.866,1592,6.281,1593,4.866,1594,4.249,1595,4.866,1596,4.866,1597,4.866,1598,4.866,1599,4.866,1600,4.249,1601,4.249,1602,3.355,1603,3.355,1604,3.355,1605,3.355,1606,3.355,1607,3.355,1608,3.355,1609,3.355,1610,3.355,1611,2.929,1612,3.355,1613,3.355,1614,3.355,1615,3.355,1616,3.355,1617,3.355,1618,3.355,1619,3.355,1620,3.355,1621,3.355,1622,3.355,1623,4.866,1624,3.355,1625,3.355,1626,2.929]],["title/injectables/RendererService.html",[29,0.668,271,2.11]],["body/injectables/RendererService.html",[0,0.07,3,0.104,4,0.104,5,0.081,9,1.108,11,2.479,13,0.33,14,1.223,17,0.517,23,2.179,26,2.796,27,0.737,29,0.82,30,4.311,31,0.963,32,0.807,34,0.977,35,0.013,36,0.799,37,0.712,38,0.977,40,0.572,41,0.553,46,0.774,49,1.441,56,0.187,58,0.093,60,0.553,63,0.104,66,3.962,78,1.201,80,0.005,81,0.007,82,0.005,100,2.796,102,1.681,108,2.776,110,2.09,120,0.635,150,1.109,157,1.627,231,0.963,271,2.593,273,2.371,292,2.825,313,2.408,320,2.56,511,4.236,524,4.311,553,1.59,561,3.032,563,2.226,639,1.657,753,2.546,842,3.057,868,4.311,892,5.121,1088,4.631,1102,4.382,1271,4.486,1272,2.546,1273,4.016,1299,3.962,1301,4.339,1329,3.962,1436,4.631,1543,4.382,1570,5.572,1611,6.858,1626,3.057,1627,3.057,1628,5.121,1629,5.019,1630,6.407,1631,6.407,1632,6.407,1633,5.019,1634,5.019,1635,5.019,1636,5.019,1637,5.019,1638,3.057,1639,5.019,1640,5.019,1641,3.501,1642,3.501,1643,3.501,1644,3.501,1645,5.019,1646,3.501,1647,3.501,1648,3.501,1649,5.019,1650,3.501,1651,3.501,1652,5.019,1653,3.501,1654,5.019,1655,3.501,1656,5.019,1657,3.501,1658,3.501,1659,3.501,1660,3.501,1661,3.501,1662,5.866,1663,3.501,1664,3.501,1665,3.501,1666,5.019,1667,3.501,1668,3.501,1669,5.019,1670,3.501,1671,3.501,1672,5.019,1673,3.501,1674,3.501,1675,3.501,1676,3.501,1677,6.407,1678,3.501,1679,3.501,1680,3.501,1681,3.501,1682,3.501,1683,3.501,1684,3.501,1685,3.501,1686,3.501,1687,3.501,1688,5.019,1689,5.019,1690,3.501,1691,3.501,1692,3.501,1693,5.019,1694,3.501,1695,3.501,1696,3.501]],["title/components/SVGLoaderComponent.html",[127,0.04,243,0.6]],["body/components/SVGLoaderComponent.html",[0,0.065,3,0.097,4,0.097,5,0.076,13,0.308,14,1.163,15,1.117,17,0.491,18,0.956,27,0.701,28,0.654,29,1.126,31,0.446,32,0.755,34,0.627,35,0.013,36,0.709,37,0.619,38,0.815,40,1.079,41,1.123,46,0.47,49,0.633,56,0.197,57,1.163,58,0.087,59,0.722,60,0.516,63,0.097,78,0.895,80,0.005,81,0.007,82,0.005,86,0.979,88,0.865,89,0.463,94,0.895,102,2.196,110,1.837,117,1.379,120,1.124,127,0.055,128,0.48,129,0.676,130,0.553,131,0.553,134,1.612,135,0.429,136,0.535,138,1.212,139,1.124,140,0.534,142,0.78,145,1.721,150,1.055,151,1.546,152,0.676,153,0.676,154,0.651,155,0.877,156,0.771,157,1.324,161,0.253,162,0.78,163,0.808,164,0.351,165,1.05,166,0.553,167,1.05,168,0.48,169,0.534,170,0.808,171,0.48,172,0.553,173,0.48,174,0.516,175,1.259,176,0.48,177,0.534,178,0.553,179,0.48,180,0.534,181,0.48,182,0.534,183,0.48,184,0.553,185,0.48,186,0.553,187,0.553,188,0.553,189,0.553,190,0.48,191,0.553,192,0.48,193,0.498,194,0.48,195,0.89,196,1.235,197,0.48,198,0.48,199,0.48,200,0.534,201,0.48,202,0.553,203,0.48,204,0.753,205,0.808,206,0.48,207,1.163,208,0.48,209,0.534,210,0.808,211,0.48,212,0.534,213,0.48,214,0.954,215,0.48,216,0.516,217,0.48,218,0.534,219,0.48,220,0.534,221,0.808,222,0.48,223,0.534,224,0.48,225,0.516,226,0.48,227,0.534,228,0.48,229,0.498,230,0.553,231,0.446,232,0.553,233,0.48,234,0.516,235,0.48,236,0.516,237,0.48,238,0.516,239,0.48,240,0.516,241,0.48,242,0.534,243,0.911,244,0.89,245,0.48,246,0.78,247,0.48,248,0.48,249,0.534,250,0.48,251,0.534,252,0.48,253,0.553,254,0.534,255,0.429,256,0.463,257,0.516,258,0.553,259,0.463,260,0.741,261,0.553,262,0.463,263,0.553,264,0.463,265,0.553,266,0.463,267,0.498,268,0.498,269,0.534,270,0.553,292,2.333,320,1.425,373,2.579,374,2.212,454,2.864,595,2.461,1032,3.034,1044,2.077,1099,2.212,1105,3.47,1221,4.1,1305,2.077,1347,2.375,1353,4.452,1356,4.1,1357,4.51,1368,2.852,1377,2.579,1387,2.579,1388,2.579,1407,2.579,1412,2.852,1414,2.852,1697,6.767,1698,4.773,1699,5.639,1700,4.924,1701,5.639,1702,5.639,1703,6.598,1704,4.773,1705,3.266,1706,3.266,1707,3.266,1708,3.266,1709,3.266,1710,3.266,1711,3.266,1712,5.639,1713,3.266,1714,3.266,1715,2.375,1716,2.852,1717,2.579,1718,3.266,1719,2.852,1720,4.773,1721,3.266,1722,2.852,1723,3.266,1724,3.266,1725,3.266]],["title/components/SceneComponent.html",[127,0.04,231,0.557]],["body/components/SceneComponent.html",[0,0.072,3,0.107,4,0.107,5,0.083,9,1.617,12,3.222,13,0.338,15,1.267,17,0.526,18,0.72,23,1.547,25,2.525,27,0.751,28,0.72,29,1.164,31,0.49,32,0.675,34,0.671,35,0.013,36,0.736,37,0.459,38,0.852,40,0.587,41,0.567,43,3.202,45,2.419,46,0.586,49,0.991,53,2.525,56,0.189,57,1.245,58,0.095,59,0.794,60,0.567,63,0.107,72,1.856,78,0.958,80,0.005,81,0.008,82,0.005,86,1.023,88,0.926,89,0.509,90,1.35,94,0.958,103,2.321,110,1.064,117,0.991,120,1.078,127,0.058,128,0.528,129,0.724,130,0.608,131,0.608,134,1.85,135,0.472,136,0.573,138,1.218,139,1.13,140,0.587,142,0.836,143,1.858,145,1.9,150,1.13,151,1.7,152,0.744,153,0.744,154,0.697,155,0.965,156,0.847,157,0.996,161,0.278,162,0.836,163,0.865,164,0.549,165,1.097,166,0.608,167,1.097,168,0.528,169,0.587,170,0.865,171,0.528,172,0.608,173,0.528,174,0.567,175,1.289,176,0.528,177,0.587,178,0.608,179,0.528,180,0.587,181,0.528,182,0.587,183,0.528,184,0.608,185,0.528,186,0.608,187,0.608,188,0.608,189,0.608,190,0.528,191,0.608,192,0.528,193,0.547,194,0.528,195,0.939,196,1.267,197,0.528,198,0.528,199,0.528,200,0.587,201,0.528,202,0.608,203,0.528,204,0.807,205,0.865,206,0.528,207,0.587,208,0.528,209,0.587,210,0.865,211,0.528,212,0.587,213,0.528,214,1.007,215,0.528,216,0.567,217,0.528,218,0.587,219,0.528,220,0.587,221,0.865,222,0.528,223,0.587,224,0.528,225,0.567,226,0.528,227,0.587,228,0.528,229,0.547,230,0.608,231,0.884,232,0.608,233,0.528,234,0.567,235,0.528,236,0.567,237,0.528,238,0.567,239,0.528,240,0.567,241,0.528,242,0.587,243,0.528,244,0.567,245,0.528,246,0.836,247,0.528,248,0.528,249,0.587,250,0.528,251,0.587,252,0.528,253,0.608,254,0.587,255,0.472,256,0.509,257,0.567,258,0.608,259,0.509,260,0.782,261,0.608,262,0.509,263,0.608,264,0.509,265,0.608,266,0.509,267,0.547,268,0.547,269,0.587,270,0.608,313,1.35,553,1.631,745,2.433,781,4.697,784,2.433,868,4.354,883,5.195,1180,2.836,1726,3.136,1727,5.111,1728,6.481,1729,5.95,1730,5.111,1731,3.592,1732,3.592,1733,3.592,1734,3.592,1735,3.592,1736,5.111,1737,3.592,1738,3.592,1739,3.592,1740,3.592,1741,3.592]],["title/components/ServerBarrelActorComponent.html",[127,0.04,233,0.6]],["body/components/ServerBarrelActorComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,13,0.347,14,1.267,15,0.88,17,0.535,18,0.737,23,1.865,31,0.502,32,0.774,35,0.013,36,0.648,37,0.645,40,0.85,41,0.821,46,0.646,49,1.169,56,0.16,58,0.098,60,0.581,63,0.11,80,0.005,81,0.008,82,0.005,83,4.548,84,1.901,86,1.164,88,0.942,89,0.736,90,1.954,91,3.265,92,3.431,93,3.619,94,0.975,95,3.121,96,3.306,97,3.306,98,2.815,99,2.959,100,2.269,101,2.815,102,1.055,103,1.671,108,2.461,110,1.09,113,3.115,127,0.059,128,0.541,129,0.736,130,0.623,131,0.623,135,0.484,136,0.583,138,1.219,139,1.131,140,0.602,142,0.85,143,1.728,152,0.762,153,0.762,154,0.502,161,0.285,162,0.85,163,0.88,164,0.396,165,1.109,166,0.623,167,1.109,168,0.541,169,0.602,170,0.88,171,0.541,172,0.623,173,0.541,174,0.581,175,1.296,176,0.541,177,0.602,178,0.623,179,0.541,180,0.602,181,0.541,182,0.602,183,0.541,184,0.623,185,0.541,186,0.623,187,0.623,188,0.623,189,0.623,190,0.541,191,0.623,192,0.541,193,0.561,194,0.541,195,0.952,196,1.275,197,0.541,198,0.541,199,0.541,200,0.602,201,0.541,202,0.623,203,0.541,204,0.821,205,0.88,206,0.541,207,0.602,208,0.541,209,0.602,210,0.88,211,0.541,212,0.602,213,0.541,214,1.021,215,0.541,216,0.581,217,0.541,218,0.602,219,0.541,220,0.602,221,0.88,222,0.541,223,0.602,224,0.541,225,0.581,226,0.541,227,0.602,228,0.541,229,0.561,230,0.623,231,0.502,232,0.623,233,0.963,234,1.034,235,0.541,236,0.581,237,0.541,238,0.581,239,0.541,240,0.581,241,0.541,242,0.602,243,0.541,244,0.581,245,0.541,246,0.85,247,0.541,248,0.541,249,0.602,250,0.541,251,0.602,252,0.541,253,0.623,254,1.071,255,0.484,256,0.521,257,0.581,258,0.623,259,0.521,260,0.792,261,0.623,262,0.521,263,0.623,264,0.521,265,0.623,266,0.521,267,0.561,268,0.561,269,0.602,270,0.623,535,3.566,607,1.545,609,1.901,921,1.901,1742,2.492,1743,5.2,1744,2.492,1745,2.492,1746,2.492,1747,2.492,1748,2.492,1749,2.492,1750,2.492,1751,2.492,1752,2.492,1753,2.492]],["title/components/ServerCompactActorComponent.html",[127,0.04,235,0.6]],["body/components/ServerCompactActorComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,13,0.347,14,1.267,15,0.88,17,0.535,18,0.737,23,1.865,31,0.502,32,0.774,35,0.013,36,0.648,37,0.645,40,0.85,41,0.821,46,0.646,49,1.169,56,0.16,58,0.098,60,0.581,63,0.11,80,0.005,81,0.008,82,0.005,83,4.548,84,1.901,86,1.164,88,0.942,89,0.736,90,1.954,91,3.265,92,3.431,93,3.619,94,0.975,95,3.121,96,3.306,97,3.306,98,2.815,99,2.959,100,2.269,101,2.815,102,1.055,103,1.671,108,2.461,110,1.09,113,3.115,127,0.059,128,0.541,129,0.736,130,0.623,131,0.623,135,0.484,136,0.583,138,1.219,139,1.131,140,0.602,142,0.85,143,1.728,152,0.762,153,0.762,154,0.502,161,0.285,162,0.85,163,0.88,164,0.396,165,1.109,166,0.623,167,1.109,168,0.541,169,0.602,170,0.88,171,0.541,172,0.623,173,0.541,174,0.581,175,1.296,176,0.541,177,0.602,178,0.623,179,0.541,180,0.602,181,0.541,182,0.602,183,0.541,184,0.623,185,0.541,186,0.623,187,0.623,188,0.623,189,0.623,190,0.541,191,0.623,192,0.541,193,0.561,194,0.541,195,0.952,196,1.275,197,0.541,198,0.541,199,0.541,200,0.602,201,0.541,202,0.623,203,0.541,204,0.821,205,0.88,206,0.541,207,0.602,208,0.541,209,0.602,210,0.88,211,0.541,212,0.602,213,0.541,214,1.021,215,0.541,216,0.581,217,0.541,218,0.602,219,0.541,220,0.602,221,0.88,222,0.541,223,0.602,224,0.541,225,0.581,226,0.541,227,0.602,228,0.541,229,0.561,230,0.623,231,0.502,232,0.623,233,0.541,234,0.581,235,0.963,236,1.034,237,0.541,238,0.581,239,0.541,240,0.581,241,0.541,242,0.602,243,0.541,244,0.581,245,0.541,246,0.85,247,0.541,248,0.541,249,0.602,250,0.541,251,0.602,252,0.541,253,0.623,254,1.071,255,0.484,256,0.521,257,0.581,258,0.623,259,0.521,260,0.792,261,0.623,262,0.521,263,0.623,264,0.521,265,0.623,266,0.521,267,0.561,268,0.561,269,0.602,270,0.623,535,3.566,607,1.545,609,1.901,921,1.901,1742,2.492,1744,2.492,1745,2.492,1746,2.492,1747,2.492,1748,2.492,1749,2.492,1750,2.492,1751,2.492,1752,2.492,1753,2.492,1754,5.2]],["title/components/ServerIconActorComponent.html",[127,0.04,237,0.6]],["body/components/ServerIconActorComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,13,0.347,14,1.267,15,0.88,17,0.535,18,0.737,23,1.865,31,0.502,32,0.774,35,0.013,36,0.648,37,0.645,40,0.85,41,0.821,46,0.646,49,1.169,56,0.16,58,0.098,60,0.581,63,0.11,80,0.005,81,0.008,82,0.005,83,4.548,84,1.901,86,1.164,88,0.942,89,0.736,90,1.954,91,3.265,92,3.431,93,3.619,94,0.975,95,3.121,96,3.306,97,3.306,98,2.815,99,2.959,100,2.269,101,2.815,102,1.055,103,1.671,108,2.461,110,1.09,113,3.115,127,0.059,128,0.541,129,0.736,130,0.623,131,0.623,135,0.484,136,0.583,138,1.219,139,1.131,140,0.602,142,0.85,143,1.728,152,0.762,153,0.762,154,0.502,161,0.285,162,0.85,163,0.88,164,0.396,165,1.109,166,0.623,167,1.109,168,0.541,169,0.602,170,0.88,171,0.541,172,0.623,173,0.541,174,0.581,175,1.296,176,0.541,177,0.602,178,0.623,179,0.541,180,0.602,181,0.541,182,0.602,183,0.541,184,0.623,185,0.541,186,0.623,187,0.623,188,0.623,189,0.623,190,0.541,191,0.623,192,0.541,193,0.561,194,0.541,195,0.952,196,1.275,197,0.541,198,0.541,199,0.541,200,0.602,201,0.541,202,0.623,203,0.541,204,0.821,205,0.88,206,0.541,207,0.602,208,0.541,209,0.602,210,0.88,211,0.541,212,0.602,213,0.541,214,1.021,215,0.541,216,0.581,217,0.541,218,0.602,219,0.541,220,0.602,221,0.88,222,0.541,223,0.602,224,0.541,225,0.581,226,0.541,227,0.602,228,0.541,229,0.561,230,0.623,231,0.502,232,0.623,233,0.541,234,0.581,235,0.541,236,0.581,237,0.963,238,1.034,239,0.541,240,0.581,241,0.541,242,0.602,243,0.541,244,0.581,245,0.541,246,0.85,247,0.541,248,0.541,249,0.602,250,0.541,251,0.602,252,0.541,253,0.623,254,1.071,255,0.484,256,0.521,257,0.581,258,0.623,259,0.521,260,0.792,261,0.623,262,0.521,263,0.623,264,0.521,265,0.623,266,0.521,267,0.561,268,0.561,269,0.602,270,0.623,535,3.566,607,1.545,609,1.901,921,1.901,1742,2.492,1744,2.492,1745,2.492,1746,2.492,1747,2.492,1748,2.492,1749,2.492,1750,2.492,1751,2.492,1752,2.492,1753,2.492,1755,5.2]],["title/components/ServerStandActorComponent.html",[127,0.04,239,0.6]],["body/components/ServerStandActorComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,13,0.347,14,1.267,15,0.88,17,0.535,18,0.737,23,1.865,31,0.502,32,0.774,35,0.013,36,0.648,37,0.645,40,0.85,41,0.821,46,0.646,49,1.169,56,0.16,58,0.098,60,0.581,63,0.11,80,0.005,81,0.008,82,0.005,83,4.548,84,1.901,86,1.164,88,0.942,89,0.736,90,1.954,91,3.265,92,3.431,93,3.619,94,0.975,95,3.121,96,3.306,97,3.306,98,2.815,99,2.959,100,2.269,101,2.815,102,1.055,103,1.671,108,2.461,110,1.09,113,3.115,127,0.059,128,0.541,129,0.736,130,0.623,131,0.623,135,0.484,136,0.583,138,1.219,139,1.131,140,0.602,142,0.85,143,1.728,152,0.762,153,0.762,154,0.502,161,0.285,162,0.85,163,0.88,164,0.396,165,1.109,166,0.623,167,1.109,168,0.541,169,0.602,170,0.88,171,0.541,172,0.623,173,0.541,174,0.581,175,1.296,176,0.541,177,0.602,178,0.623,179,0.541,180,0.602,181,0.541,182,0.602,183,0.541,184,0.623,185,0.541,186,0.623,187,0.623,188,0.623,189,0.623,190,0.541,191,0.623,192,0.541,193,0.561,194,0.541,195,0.952,196,1.275,197,0.541,198,0.541,199,0.541,200,0.602,201,0.541,202,0.623,203,0.541,204,0.821,205,0.88,206,0.541,207,0.602,208,0.541,209,0.602,210,0.88,211,0.541,212,0.602,213,0.541,214,1.021,215,0.541,216,0.581,217,0.541,218,0.602,219,0.541,220,0.602,221,0.88,222,0.541,223,0.602,224,0.541,225,0.581,226,0.541,227,0.602,228,0.541,229,0.561,230,0.623,231,0.502,232,0.623,233,0.541,234,0.581,235,0.541,236,0.581,237,0.541,238,0.581,239,0.963,240,1.034,241,0.541,242,0.602,243,0.541,244,0.581,245,0.541,246,0.85,247,0.541,248,0.541,249,0.602,250,0.541,251,0.602,252,0.541,253,0.623,254,1.071,255,0.484,256,0.521,257,0.581,258,0.623,259,0.521,260,0.792,261,0.623,262,0.521,263,0.623,264,0.521,265,0.623,266,0.521,267,0.561,268,0.561,269,0.602,270,0.623,535,3.566,607,1.545,609,1.901,921,1.901,1742,2.492,1744,2.492,1745,2.492,1746,2.492,1747,2.492,1748,2.492,1749,2.492,1750,2.492,1751,2.492,1752,2.492,1753,2.492,1756,5.2]],["title/components/SphereMeshComponent.html",[127,0.04,241,0.6]],["body/components/SphereMeshComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,13,0.348,15,1.172,17,0.537,18,1.046,27,0.767,28,0.741,29,1.175,31,0.505,32,0.682,34,0.486,35,0.013,36,0.706,37,0.59,38,0.794,46,0.364,56,0.19,57,1.272,58,0.098,59,0.818,60,0.584,63,0.11,78,0.693,80,0.005,81,0.008,82,0.005,86,1.037,88,0.946,89,0.524,94,0.978,102,2.06,117,1.273,120,0.946,127,0.059,128,0.543,129,0.739,130,0.626,131,0.626,134,1.707,135,0.486,136,0.585,138,1.219,139,1.131,140,0.605,142,0.853,143,1.882,145,1.822,150,1.154,152,0.766,153,0.766,154,0.712,155,1.401,156,0.873,157,1.677,161,0.287,162,0.853,163,0.883,164,0.398,165,1.112,166,0.626,167,1.112,168,0.543,169,0.605,170,0.883,171,0.543,172,0.626,173,0.543,174,0.584,175,1.298,176,0.543,177,0.605,178,0.626,179,0.543,180,0.605,181,0.543,182,0.605,183,0.543,184,0.626,185,0.543,186,0.626,187,0.626,188,0.626,189,0.626,190,0.543,191,0.626,192,0.543,193,0.563,194,0.543,195,0.954,196,1.276,197,0.543,198,0.543,199,0.543,200,0.605,201,0.543,202,0.626,203,0.543,204,0.824,205,0.883,206,0.543,207,0.605,208,0.543,209,0.605,210,0.883,211,0.543,212,1.175,213,0.543,214,1.023,215,0.543,216,0.584,217,0.543,218,0.605,219,0.543,220,0.605,221,0.883,222,0.543,223,0.605,224,0.543,225,0.584,226,0.543,227,0.605,228,0.543,229,0.563,230,0.626,231,0.505,232,0.626,233,0.543,234,0.584,235,0.543,236,0.584,237,0.543,238,0.584,239,0.543,240,0.584,241,0.965,242,0.988,243,0.543,244,0.584,245,0.543,246,0.853,247,0.543,248,0.543,249,0.605,250,0.543,251,0.605,252,0.543,253,0.626,254,0.605,255,0.486,256,0.524,257,0.584,258,0.626,259,0.524,260,0.794,261,0.626,262,0.524,263,0.626,264,0.524,265,0.626,266,0.524,267,0.563,268,0.563,269,0.605,270,0.626,556,1.911,557,3.441,564,4.396,588,1.614,592,2.69,595,2.277,596,2.003,597,2.003,598,2.22,634,2.921,638,2.69,644,2.578,1757,6.274,1758,5.219,1759,6.046,1760,5.279,1761,4.556,1762,3.699,1763,3.699,1764,3.699,1765,3.699]],["title/directives/StatsAutoShowDirective.html",[164,0.439,266,0.578]],["body/directives/StatsAutoShowDirective.html",[0,0.118,3,0.176,4,0.176,5,0.137,9,2.245,10,3.451,13,0.557,17,0.73,24,3.438,27,1.042,32,0.699,34,0.777,35,0.013,36,0.636,37,0.532,38,0.777,46,0.583,49,1.375,56,0.188,58,0.157,63,0.176,80,0.009,81,0.011,82,0.009,135,0.777,138,0.838,139,0.932,164,0.636,255,0.777,266,1.005,267,1.081,268,1.227,269,1.16,292,2.003,511,4.909,513,5.166,679,4.007,1638,5.166,1766,6.634,1767,5.166,1768,5.917,1769,5.917,1770,5.917]],["title/injectables/StatsService.html",[271,2.11,511,2.451]],["body/injectables/StatsService.html",[0,0.105,3,0.156,4,0.156,5,0.122,9,1.657,11,3.251,13,0.493,14,1.604,17,0.678,23,2.177,26,3.295,27,1.057,32,0.794,35,0.013,37,0.471,46,0.767,49,1.539,56,0.174,58,0.139,63,0.156,80,0.008,81,0.01,82,0.008,267,1.228,271,3.4,273,3.547,280,2.836,292,2.437,511,3.95,839,4.458,1396,6.593,1771,4.573,1772,7.551,1773,7.551,1774,7.551,1775,6.582,1776,5.237,1777,5.237,1778,5.237,1779,5.237,1780,5.237,1781,5.237,1782,5.237,1783,5.237,1784,5.237,1785,5.237,1786,5.237,1787,7.941,1788,5.237,1789,6.582,1790,5.237,1791,5.237,1792,5.237,1793,5.237]],["title/components/TextActorComponent.html",[127,0.04,245,0.6]],["body/components/TextActorComponent.html",[0,0.056,3,0.084,4,0.084,5,0.065,9,1.348,10,2.339,11,2.544,12,2.789,13,0.264,14,1.038,15,1.18,17,0.438,23,1.974,24,2.51,25,2.104,26,2.51,27,0.626,28,0.562,29,1.065,31,0.383,32,0.787,34,0.677,35,0.013,36,0.7,37,0.627,38,0.813,40,1.14,41,1.101,43,2.544,45,2.437,46,0.687,49,1.262,53,1.385,56,0.173,57,1.038,58,0.074,60,0.443,63,0.084,72,1.448,80,0.004,81,0.006,82,0.004,86,0.908,88,0.772,89,0.876,94,0.798,102,1.867,108,2.722,110,1.525,117,1.262,127,0.05,128,0.412,129,0.603,130,0.475,131,0.475,134,1.495,135,0.368,136,0.477,138,1.201,139,1.114,140,0.458,142,0.696,143,1.476,145,1.596,152,0.581,153,0.581,154,0.581,156,0.661,161,0.217,162,0.696,163,0.721,164,0.301,165,0.974,166,0.475,167,0.974,168,0.412,169,0.458,170,0.721,171,0.412,172,0.475,173,0.412,174,0.443,175,1.209,176,0.412,177,0.458,178,0.475,179,0.412,180,0.458,181,0.412,182,0.458,183,0.412,184,0.475,185,0.412,186,0.475,187,0.475,188,0.475,189,0.475,190,0.412,191,0.475,192,0.412,193,0.427,194,0.412,195,0.813,196,1.18,197,0.412,198,0.412,199,0.412,200,0.458,201,0.412,202,0.475,203,0.412,204,0.672,205,0.721,206,0.412,207,0.458,208,0.412,209,0.458,210,0.721,211,0.412,212,0.458,213,0.412,214,0.872,215,0.412,216,0.443,217,0.412,218,0.458,219,0.412,220,0.458,221,0.721,222,0.412,223,0.458,224,0.412,225,0.443,226,0.412,227,0.458,228,0.412,229,0.649,230,0.475,231,0.383,232,0.475,233,0.412,234,0.443,235,0.412,236,0.443,237,0.412,238,0.443,239,0.412,240,0.443,241,0.412,242,0.458,243,0.412,244,0.443,245,0.845,246,1.107,247,0.412,248,0.412,249,0.458,250,0.412,251,0.458,252,0.412,253,0.475,254,0.842,255,0.368,256,0.397,257,0.443,258,0.475,259,0.397,260,0.677,261,0.475,262,0.397,263,0.475,264,0.397,265,0.475,266,0.397,267,0.427,268,0.427,269,0.458,270,0.475,272,3.203,276,1.782,279,4.541,291,3.274,292,2.66,313,2.162,320,3.117,324,4.066,535,1.273,607,1.177,609,1.448,666,2.556,683,2.884,781,4.066,784,2.884,921,1.448,935,2.448,936,2.884,937,2.448,939,2.214,940,2.214,951,2.214,955,2.214,956,2.039,1033,2.448,1034,2.214,1035,2.448,1036,2.448,1040,3.719,1056,3.274,1088,2.214,1090,3.719,1100,2.214,1124,2.448,1125,2.448,1126,2.448,1127,4.497,1128,2.039,1130,2.448,1132,3.719,1385,2.214,1794,6.979,1795,4.259,1796,5.15,1797,5.15,1798,5.15,1799,5.15,1800,5.15,1801,4.259,1802,5.752,1803,5.15,1804,5.15,1805,2.804,1806,2.804,1807,2.804,1808,2.804,1809,2.804,1810,3.719,1811,2.804,1812,2.804,1813,2.804,1814,2.804,1815,2.804,1816,5.15,1817,4.259,1818,5.752,1819,4.259,1820,2.804,1821,5.15,1822,2.804,1823,5.15,1824,4.259,1825,2.804,1826,2.804,1827,2.804,1828,4.259,1829,4.259,1830,2.804,1831,2.804]],["title/components/TextMeshComponent.html",[127,0.04,247,0.6]],["body/components/TextMeshComponent.html",[0,0.053,3,0.078,4,0.078,5,0.061,13,0.247,14,0.986,15,1.233,17,0.417,18,0.811,23,1.285,27,0.595,28,0.526,29,1.037,31,0.358,32,0.802,34,0.73,35,0.013,36,0.711,37,0.63,38,0.834,40,1.261,41,1.217,46,0.592,49,0.785,56,0.175,57,0.986,58,0.07,59,0.58,60,0.414,63,0.078,78,1.189,80,0.004,81,0.006,82,0.004,86,0.877,88,0.734,89,0.372,90,0.986,94,0.759,102,1.721,108,2.842,110,2.022,117,1.506,120,1.088,127,0.048,128,0.385,129,0.573,130,0.444,131,0.444,134,1.445,135,0.345,136,0.454,138,1.196,139,1.11,140,0.429,142,0.662,145,1.541,150,0.895,152,0.543,153,0.543,154,0.674,155,1.087,156,0.619,157,1.541,161,0.203,162,0.662,163,0.685,164,0.282,165,0.94,166,0.444,167,0.94,168,0.385,169,0.429,170,0.685,171,0.385,172,0.444,173,0.385,174,0.414,175,1.186,176,0.385,177,0.429,178,0.444,179,0.385,180,0.429,181,0.385,182,0.429,183,0.385,184,0.444,185,0.385,186,0.444,187,0.444,188,0.444,189,0.444,190,0.385,191,0.444,192,0.385,193,0.4,194,0.385,195,0.78,196,1.156,197,0.385,198,0.385,199,0.385,200,0.429,201,0.385,202,0.444,203,0.385,204,0.639,205,0.685,206,0.385,207,0.662,208,0.385,209,0.429,210,0.685,211,0.385,212,0.982,213,0.385,214,0.837,215,0.385,216,0.414,217,0.385,218,0.429,219,0.385,220,0.429,221,0.685,222,0.385,223,0.429,224,0.385,225,0.414,226,0.385,227,0.429,228,0.385,229,0.4,230,0.444,231,0.358,232,0.444,233,0.385,234,0.414,235,0.385,236,0.414,237,0.385,238,0.414,239,0.385,240,0.414,241,0.385,242,0.429,243,0.385,244,0.414,245,0.385,246,1.224,247,0.816,248,0.385,249,0.429,250,0.385,251,0.429,252,0.385,253,0.444,254,0.429,255,0.345,256,0.372,257,0.414,258,0.444,259,0.372,260,0.649,261,0.444,262,0.372,263,0.444,264,0.372,265,0.444,266,0.372,267,0.4,268,0.4,269,0.429,270,0.444,292,2.148,313,1.522,320,1.767,374,1.777,524,3.533,556,1.356,561,2.63,567,1.908,574,1.418,583,1.777,588,1.145,590,1.777,595,2.62,596,1.421,597,1.421,639,1.916,644,2,666,2.43,675,2.944,708,2.072,739,3.902,751,2.072,760,3.763,785,2.291,1009,2.291,1032,2.574,1044,2.574,1056,4.341,1087,4.387,1099,1.777,1104,2.291,1105,2.944,1221,3.594,1248,2.291,1356,3.594,1357,4.04,1700,4.316,1715,1.908,1716,2.291,1722,3.535,1761,2.291,1832,7.127,1833,4.943,1834,4.048,1835,4.943,1836,4.943,1837,4.943,1838,4.048,1839,5.557,1840,5.557,1841,5.557,1842,5.557,1843,5.557,1844,5.557,1845,4.943,1846,4.943,1847,4.048,1848,2.624,1849,2.624,1850,2.291,1851,2.624,1852,2.291,1853,2.624,1854,2.624,1855,2.624,1856,2.624,1857,4.048,1858,2.624,1859,4.048,1860,2.624,1861,4.048,1862,2.624,1863,2.291,1864,3.535,1865,2.624,1866,4.048,1867,6.004,1868,2.624,1869,6.004,1870,2.624,1871,4.048,1872,4.048,1873,2.624,1874,2.291,1875,2.624,1876,2.624,1877,2.291,1878,2.624,1879,2.624,1880,2.624,1881,4.048,1882,2.624,1883,4.048,1884,2.624,1885,4.048,1886,4.048,1887,2.624,1888,2.624,1889,2.624,1890,2.624,1891,2.624,1892,2.624,1893,2.624,1894,2.624,1895,2.624,1896,2.624,1897,4.048,1898,2.624,1899,2.624,1900,2.624,1901,2.624,1902,2.624]],["title/components/TorusMeshComponent.html",[127,0.04,248,0.6]],["body/components/TorusMeshComponent.html",[0,0.069,3,0.103,4,0.103,5,0.08,13,0.325,15,1.141,17,0.511,18,0.994,27,0.729,28,0.691,29,1.148,31,0.47,32,0.713,34,0.453,35,0.013,36,0.684,37,0.523,38,0.764,40,1.04,41,1.004,46,0.34,56,0.186,57,1.209,58,0.091,59,0.762,60,0.544,63,0.103,78,0.646,80,0.005,81,0.007,82,0.005,86,1.004,88,0.899,89,0.488,94,0.93,102,1.823,117,1.361,120,0.899,127,0.057,128,0.507,129,0.703,130,0.584,131,0.584,134,1.654,135,0.453,136,0.556,138,1.215,139,1.127,140,0.564,142,0.811,143,1.823,145,1.765,150,1.097,152,0.714,153,0.714,154,0.677,155,1.333,156,0.813,157,1.613,161,0.267,162,0.811,163,0.84,164,0.371,165,1.077,166,0.584,167,1.077,168,0.507,169,0.564,170,0.84,171,0.507,172,0.584,173,0.507,174,0.544,175,1.276,176,0.507,177,0.564,178,0.584,179,0.507,180,0.564,181,0.507,182,0.564,183,0.507,184,0.584,185,0.507,186,0.584,187,0.584,188,0.584,189,0.584,190,0.507,191,0.584,192,0.507,193,0.525,194,0.507,195,0.918,196,1.253,197,0.507,198,0.507,199,0.507,200,0.564,201,0.507,202,0.584,203,0.507,204,0.783,205,0.84,206,0.507,207,0.564,208,0.507,209,0.564,210,0.84,211,0.507,212,1.148,213,0.507,214,0.984,215,0.507,216,0.544,217,0.507,218,0.564,219,0.507,220,0.564,221,0.84,222,0.507,223,0.564,224,0.507,225,0.544,226,0.507,227,0.564,228,0.507,229,0.525,230,0.584,231,0.47,232,0.584,233,0.507,234,0.544,235,0.507,236,0.544,237,0.507,238,0.544,239,0.507,240,0.544,241,0.507,242,0.564,243,0.507,244,0.544,245,0.507,246,0.811,247,0.507,248,0.935,249,1.183,250,0.507,251,0.564,252,0.507,253,0.584,254,0.564,255,0.453,256,0.488,257,0.544,258,0.584,259,0.488,260,0.764,261,0.584,262,0.488,263,0.584,264,0.488,265,0.584,266,0.488,267,0.525,268,0.525,269,0.564,270,0.584,374,4.308,556,1.781,557,3.309,574,2.229,588,1.505,595,2.166,596,1.867,597,1.867,598,2.069,626,5.077,631,3.01,633,3.01,635,3.609,637,3.01,639,2.349,640,3.155,644,2.452,649,4.333,1760,6.317,1864,4.333,1874,3.01,1903,6.464,1904,4.963,1905,5.815,1906,7.235,1907,5.815,1908,4.963,1909,4.963,1910,3.448,1911,3.448,1912,4.963,1913,4.963,1914,3.448]],["title/modules/UxActorModule.html",[326,0.765,1915,2.969]],["body/modules/UxActorModule.html",[0,0.114,3,0.169,4,0.169,5,0.132,35,0.013,56,0.211,58,0.15,63,0.169,80,0.008,81,0.01,82,0.008,136,0.636,161,0.44,206,1.243,207,0.928,245,1.243,326,1.064,328,1.921,329,1.921,330,2.707,331,2.059,332,2.707,335,2.342,336,2.059,337,1.988,340,2.6,348,2.797,349,2.211,351,2.6,371,4.861,375,4.955,377,4.955,378,4.955,1915,6.151,1916,4.955,1917,4.955,1918,5.675,1919,4.955,1920,5.675,1921,5.675]],["title/components/VideoMeshComponent.html",[127,0.04,250,0.6]],["body/components/VideoMeshComponent.html",[0,0.058,3,0.086,4,0.13,5,0.067,9,1.379,10,2.382,11,2.591,13,0.272,14,1.062,15,1.365,17,0.449,18,0.873,24,2.549,26,2.549,27,0.64,28,0.579,29,1.077,31,0.394,32,0.773,34,0.38,35,0.013,36,0.628,37,0.592,38,0.898,40,1.178,41,1.137,46,0.617,49,1.132,56,0.181,57,1.062,58,0.077,59,0.639,60,0.456,63,0.086,78,0.817,80,0.004,81,0.006,82,0.004,86,0.922,88,0.79,89,0.409,94,0.817,102,1.249,103,1.312,110,1.951,117,1.364,120,1.058,127,0.051,128,0.424,129,0.617,130,0.489,131,0.489,134,1.518,135,0.38,136,0.488,138,1.203,139,1.116,140,0.472,142,0.712,143,1.674,145,1.62,150,0.963,152,0.598,153,0.598,154,0.595,155,1.17,156,0.682,157,1.828,161,0.224,162,0.712,163,0.737,164,0.311,165,0.989,166,0.489,167,0.989,168,0.424,169,0.472,170,0.737,171,0.424,172,0.489,173,0.424,174,0.456,175,1.219,176,0.424,177,0.472,178,0.489,179,0.424,180,0.472,181,0.424,182,0.472,183,0.424,184,0.489,185,0.424,186,0.489,187,0.489,188,0.489,189,0.489,190,0.424,191,0.489,192,0.424,193,0.44,194,0.424,195,0.828,196,1.191,197,0.424,198,0.424,199,0.424,200,0.472,201,0.424,202,0.489,203,0.424,204,0.688,205,0.737,206,0.424,207,0.472,208,0.424,209,0.712,210,0.737,211,0.424,212,1.077,213,0.424,214,0.888,215,0.424,216,0.456,217,0.424,218,0.472,219,0.424,220,0.472,221,0.737,222,0.424,223,0.472,224,0.424,225,0.456,226,0.424,227,0.472,228,0.424,229,0.44,230,0.489,231,0.394,232,0.489,233,0.424,234,0.456,235,0.424,236,0.456,237,0.424,238,0.456,239,0.424,240,0.456,241,0.424,242,0.472,243,0.424,244,0.456,245,0.424,246,0.712,247,0.424,248,0.424,249,0.472,250,0.858,251,1.077,252,0.424,253,0.489,254,0.472,255,0.38,256,0.409,257,0.456,258,0.489,259,0.409,260,0.689,261,0.489,262,0.409,263,0.489,264,0.409,265,0.489,266,0.409,267,0.44,268,0.44,269,0.472,270,0.489,272,3.236,276,1.837,291,3.713,300,3.814,313,1.086,556,1.493,557,2.985,561,2.966,562,3.814,563,3.984,564,3.814,566,3.505,568,4.611,569,4.246,570,4.611,572,4.611,573,4.611,574,2.466,581,2.77,582,2.523,584,2.77,588,1.261,590,1.957,592,2.101,593,2.101,595,2.549,596,1.564,597,1.564,598,1.734,632,2.523,634,2.281,644,2.152,683,1.957,684,2.281,693,2.523,1087,4.611,1100,2.281,1128,2.101,1139,2.523,1259,2.523,1420,3.804,1473,2.523,1850,2.523,1852,2.523,1863,2.523,1877,2.523,1922,6.894,1923,4.357,1924,5.245,1925,5.245,1926,4.58,1927,4.357,1928,2.889,1929,2.889,1930,4.357,1931,2.889,1932,2.889,1933,2.889,1934,2.889,1935,2.889,1936,4.357,1937,2.889,1938,2.889,1939,2.889,1940,2.889,1941,2.889,1942,2.889,1943,2.889,1944,2.889,1945,2.889,1946,2.889,1947,2.889,1948,2.889,1949,2.889,1950,2.889,1951,2.889,1952,2.889,1953,2.889,1954,2.889,1955,4.357,1956,2.889,1957,2.889,1958,2.889]],["title/components/WorkstationActorComponent.html",[127,0.04,252,0.6]],["body/components/WorkstationActorComponent.html",[0,0.073,3,0.109,4,0.109,5,0.085,13,0.344,14,1.262,15,0.876,17,0.533,18,0.733,23,1.861,31,0.499,32,0.78,35,0.013,36,0.646,37,0.644,40,0.846,41,0.817,46,0.644,49,1.165,56,0.159,58,0.097,60,0.577,63,0.109,80,0.005,81,0.008,82,0.005,83,4.543,84,2.675,86,1.088,88,0.938,89,0.733,90,1.946,91,3.254,92,3.42,93,3.607,94,0.97,95,3.107,96,3.291,97,3.291,98,2.803,99,2.946,100,2.259,101,2.803,102,1.048,103,1.661,108,2.45,110,1.083,113,3.104,117,1.003,127,0.059,128,0.537,129,0.733,130,0.619,131,0.619,135,0.481,136,0.58,138,1.219,139,1.131,140,0.598,142,0.846,143,1.722,152,0.757,153,0.757,154,0.499,161,0.283,162,0.846,163,0.876,164,0.393,165,1.106,166,0.619,167,1.106,168,0.537,169,0.598,170,0.876,171,0.537,172,0.619,173,0.537,174,0.577,175,1.294,176,0.537,177,0.598,178,0.619,179,0.537,180,0.598,181,0.537,182,0.598,183,0.537,184,0.619,185,0.537,186,0.619,187,0.619,188,0.619,189,0.619,190,0.537,191,0.619,192,0.537,193,0.557,194,0.537,195,0.948,196,1.273,197,0.537,198,0.537,199,0.537,200,0.598,201,0.537,202,0.619,203,0.537,204,0.817,205,0.876,206,0.537,207,0.598,208,0.537,209,0.598,210,0.876,211,0.537,212,0.598,213,0.537,214,1.017,215,0.537,216,0.577,217,0.537,218,0.598,219,0.537,220,0.598,221,0.876,222,0.537,223,0.598,224,0.537,225,0.577,226,0.537,227,0.598,228,0.537,229,0.557,230,0.619,231,0.499,232,0.619,233,0.537,234,0.577,235,0.537,236,0.577,237,0.537,238,0.577,239,0.537,240,0.577,241,0.537,242,0.598,243,0.537,244,0.577,245,0.537,246,0.846,247,0.537,248,0.537,249,0.598,250,0.537,251,0.598,252,0.96,253,1.017,254,1.068,255,0.481,256,0.518,257,0.577,258,0.619,259,0.518,260,0.789,261,0.619,262,0.518,263,0.619,264,0.518,265,0.619,266,0.518,267,0.557,268,0.557,269,0.598,270,0.619,535,3.562,607,1.536,609,1.89,921,1.89,1744,2.477,1745,2.477,1746,2.477,1747,2.477,1748,2.477,1749,2.477,1750,2.477,1751,2.477,1752,2.477,1753,2.477,1926,5.247,1959,4.52,1960,5.177,1961,3.658]],["title/changelog.html",[1962,2.686,1963,2.686,1964,2.971]],["body/changelog.html",[5,0.106,20,2.744,21,2.476,23,1.189,29,0.986,32,0.45,35,0.01,40,0.748,45,2.164,80,0.007,81,0.009,82,0.007,100,1.995,117,0.886,120,1.352,127,0.045,129,0.956,139,1.042,141,3.097,145,1.268,154,0.823,164,0.491,174,0.722,193,0.696,225,0.722,254,0.748,255,0.792,260,0.943,272,2.164,276,4.29,280,3.885,281,4.762,285,3.992,312,3.61,326,0.857,373,3.61,374,3.097,492,2.164,666,2.744,717,3.325,868,2.907,1053,3.61,1069,5.266,1077,3.61,1273,2.602,1305,4.29,1358,3.992,1359,3.992,1381,3.325,1385,3.61,1393,4.762,1394,4.762,1418,3.992,1497,6.265,1594,5.892,1600,3.992,1601,5.266,1628,3.992,1964,5.892,1965,6.265,1966,4.573,1967,6.265,1968,4.573,1969,4.573,1970,4.573,1971,4.573,1972,4.573,1973,4.573,1974,4.573,1975,4.573,1976,4.573,1977,4.573,1978,6.031,1979,4.573,1980,3.992,1981,4.573,1982,6.031,1983,5.266,1984,5.892,1985,4.573,1986,4.573,1987,4.573,1988,7.458,1989,3.992,1990,6.749,1991,4.573,1992,4.573,1993,4.573,1994,4.573,1995,4.573,1996,4.573,1997,4.573,1998,4.573,1999,4.573,2000,3.992,2001,4.573,2002,4.573,2003,6.031,2004,4.573,2005,4.573,2006,4.573,2007,7.458,2008,6.031,2009,4.573,2010,4.573,2011,6.031,2012,6.031,2013,7.175,2014,4.573,2015,4.573,2016,4.573,2017,6.031,2018,4.573,2019,4.573,2020,4.573,2021,4.573,2022,5.266,2023,3.992,2024,3.992,2025,6.031,2026,4.573,2027,4.573,2028,4.573,2029,3.992,2030,4.573,2031,4.573,2032,3.992,2033,4.573,2034,4.573,2035,4.573,2036,4.573,2037,4.573,2038,4.573,2039,4.573,2040,6.749,2041,5.266,2042,4.573,2043,6.749,2044,3.992,2045,4.573,2046,6.749,2047,4.573,2048,6.749,2049,4.573,2050,4.573,2051,4.573,2052,4.573,2053,4.573,2054,4.573,2055,4.573,2056,6.031,2057,4.573,2058,4.573,2059,4.573,2060,3.992,2061,4.573,2062,4.573,2063,4.573,2064,4.573,2065,4.573,2066,3.992,2067,5.266,2068,4.573,2069,4.573,2070,4.573,2071,4.573,2072,3.992,2073,4.573,2074,4.573,2075,4.573,2076,4.573,2077,4.573,2078,6.031,2079,4.573,2080,4.573]],["title/coverage.html",[2081,4.88]],["body/coverage.html",[0,0.104,1,2.333,5,0.085,6,3.203,7,2.485,8,3.203,29,0.6,31,0.501,35,0.013,37,0.33,80,0.005,81,0.008,82,0.005,83,2.088,84,3.888,85,3.203,86,0.579,87,3.203,89,0.52,120,0.665,127,0.083,128,0.539,132,3.203,133,4.431,151,1.736,152,0.76,164,0.742,168,0.539,171,0.539,173,0.539,176,0.539,179,0.539,181,0.539,183,0.539,185,0.539,190,0.539,192,0.539,194,0.539,197,0.539,198,0.539,199,0.539,201,0.539,203,0.539,204,0.579,206,0.539,208,0.539,211,0.539,213,0.539,215,0.539,217,0.539,219,0.539,222,0.539,224,0.539,226,0.539,228,0.539,231,0.501,233,0.539,234,0.579,235,0.539,236,0.579,237,0.539,238,0.579,239,0.539,240,0.579,241,0.539,243,0.539,245,0.539,247,0.539,248,0.539,250,0.539,252,0.539,256,0.52,259,0.52,262,0.52,264,0.52,266,0.52,268,0.559,271,3.38,272,1.736,274,3.203,320,3.764,482,2.485,483,2.485,492,1.736,511,2.202,520,3.203,521,4.096,530,3.203,555,3.203,556,3.954,599,3.203,600,3.203,623,3.203,635,2.668,653,3.203,654,3.203,723,3.514,725,3.203,737,3.203,755,2.953,767,3.203,798,3.203,799,3.203,809,3.203,810,3.203,861,3.203,866,3.203,902,3.203,920,3.203,921,3.954,992,3.203,1000,3.203,1018,3.203,1029,3.203,1049,3.203,1050,4.096,1082,3.203,1099,2.485,1141,3.203,1142,4.096,1216,3.203,1266,2.485,1267,2.668,1269,4.096,1346,3.203,1347,4.377,1409,3.203,1422,3.203,1425,3.203,1426,4.096,1456,3.203,1470,3.203,1474,3.203,1481,3.203,1485,4.076,1486,3.203,1490,3.203,1495,3.203,1567,3.203,1568,3.203,1627,3.203,1697,3.203,1715,2.668,1717,2.897,1726,3.203,1742,4.431,1757,3.203,1766,3.203,1767,3.203,1771,3.203,1794,3.203,1832,3.203,1903,3.203,1922,3.203,1959,3.203,2081,3.203,2082,2.897,2083,3.669,2084,3.669,2085,5.188,2086,3.669,2087,6.904,2088,7.167,2089,6.019,2090,3.669,2091,5.188,2092,5.188,2093,7.167,2094,5.188,2095,6.904,2096,3.669,2097,6.019,2098,3.669,2099,5.188,2100,6.904,2101,3.669,2102,3.669,2103,3.669,2104,3.669,2105,3.669,2106,3.669,2107,3.669,2108,3.669,2109,3.669,2110,7.167,2111,3.669,2112,3.669,2113,3.669,2114,3.669,2115,4.53,2116,3.203,2117,7.167,2118,5.188,2119,3.203,2120,3.203,2121,3.203,2122,3.203,2123,3.203,2124,3.203,2125,3.203,2126,3.203,2127,3.203,2128,3.203,2129,3.669,2130,3.669]],["title/dependencies.html",[329,1.664,1395,2.971]],["body/dependencies.html",[35,0.013,58,0.164,80,0.009,81,0.011,82,0.009,150,1.369,329,2.096,349,2.413,1072,5.406,1239,4.888,2131,6.192,2132,8.404,2133,6.192,2134,6.192,2135,7.288,2136,5.754,2137,6.192,2138,6.192,2139,6.192,2140,6.192,2141,6.192,2142,6.192,2143,6.192,2144,6.192,2145,6.192,2146,6.192,2147,6.192,2148,6.192]],["title/miscellaneous/enumerations.html",[2149,2.474,2150,4.292]],["body/miscellaneous/enumerations.html",[13,0.61,35,0.012,41,1.246,80,0.01,81,0.011,82,0.01,1274,5.442,1485,4.389,1507,5.909,1508,6.535,1509,6.535,2149,4.712,2150,5.659,2151,6.481,2152,7.485]],["title/miscellaneous/functions.html",[2149,2.474,2153,4.292]],["body/miscellaneous/functions.html",[13,0.513,21,2.947,34,1.053,35,0.012,36,0.862,37,0.606,38,1.053,40,0.89,41,0.859,46,0.722,47,4.047,80,0.008,81,0.01,82,0.008,90,2.878,95,3.267,102,2.099,108,2.576,117,1.055,127,0.053,151,3.191,152,1.396,275,4.566,451,4.752,456,4.752,559,4.752,595,2.942,675,3.958,1056,3.46,1099,4.566,1221,4.902,1305,4.657,1550,6.684,1715,4.902,1717,5.323,1810,5.887,2115,5.887,2116,5.887,2119,5.887,2120,4.752,2121,5.887,2122,5.887,2123,4.752,2124,5.887,2125,4.752,2126,5.887,2127,4.752,2128,5.887,2149,3.958,2153,4.752,2154,6.742,2155,5.443,2156,5.443,2157,5.443,2158,5.443,2159,5.443,2160,6.742,2161,7.325,2162,6.742,2163,5.443,2164,6.742,2165,5.443,2166,5.443,2167,5.443,2168,5.443,2169,5.443,2170,5.443,2171,6.742,2172,5.443]],["title/index.html",[13,0.32,1962,2.686,1963,2.686]],["body/index.html",[35,0.012,56,0.172,80,0.008,81,0.01,82,0.008,129,1.093,139,1.036,142,1.059,150,1.128,155,1.371,162,0.834,229,0.777,231,0.696,320,2.227,326,0.957,351,1.918,371,3.886,554,4.03,561,3.065,621,4.456,663,3.063,755,3.685,800,4.456,868,4.117,1044,3.245,1105,3.711,1176,4.03,1214,3.711,1215,3.711,1239,4.03,1273,2.904,1370,4.456,1381,3.711,1393,5.906,1394,5.906,1507,4.03,1570,4.03,1719,4.456,1965,6.741,1967,5.654,1983,6.741,1984,6.888,2022,4.456,2023,4.456,2024,5.654,2029,4.456,2032,4.456,2044,6.21,2060,4.456,2066,5.654,2067,4.456,2072,4.456,2082,5.616,2136,4.03,2173,5.104,2174,5.104,2175,5.104,2176,5.104,2177,5.104,2178,4.456,2179,6.476,2180,5.104,2181,5.104,2182,5.104,2183,5.104,2184,6.476,2185,5.104,2186,5.104,2187,5.104,2188,5.104,2189,5.104,2190,5.104,2191,5.104,2192,6.476,2193,6.476,2194,5.104,2195,5.104,2196,5.104,2197,5.104,2198,5.104,2199,5.104,2200,5.104,2201,5.104,2202,5.104,2203,5.104,2204,5.104,2205,5.104,2206,5.104,2207,6.476,2208,5.104,2209,5.104,2210,5.104,2211,7.481,2212,5.104,2213,5.104,2214,5.104,2215,5.104,2216,5.104,2217,5.104,2218,5.104,2219,5.104,2220,5.104,2221,5.104,2222,5.104,2223,5.104,2224,5.104,2225,5.104,2226,5.104,2227,4.456,2228,5.104,2229,5.104,2230,5.104,2231,5.104,2232,5.104]],["title/license.html",[1962,2.686,1963,2.686,2233,2.971]],["body/license.html",[35,0.01,80,0.009,81,0.01,82,0.009,280,3.107,337,2.01,1352,5.01,1381,5.063,1392,5.01,1980,6.08,2000,5.01,2082,4.53,2178,5.01,2227,5.01,2233,5.01,2234,5.738,2235,7.498,2236,5.738,2237,5.738,2238,5.738,2239,5.738,2240,6.964,2241,5.738,2242,5.738,2243,5.738,2244,5.738,2245,5.738,2246,6.964,2247,8.352,2248,5.738,2249,5.738,2250,7.498,2251,5.738,2252,5.738,2253,5.738,2254,5.738,2255,5.738,2256,5.738,2257,5.738,2258,5.738,2259,5.738,2260,5.738,2261,6.964,2262,5.738,2263,5.738,2264,5.738,2265,5.738,2266,5.738,2267,5.738,2268,6.964,2269,6.964,2270,5.738,2271,5.738,2272,5.738,2273,5.738,2274,5.738,2275,5.738,2276,5.738,2277,5.738,2278,5.738,2279,5.738,2280,5.738,2281,5.738,2282,5.738,2283,5.738,2284,5.738,2285,5.738,2286,5.738,2287,5.738,2288,5.738,2289,5.738,2290,5.738,2291,5.738,2292,5.738,2293,5.738,2294,5.738,2295,5.738,2296,5.738]],["title/modules.html",[328,1.892]],["body/modules.html",[35,0.01,80,0.009,81,0.01,82,0.009,244,1.357,327,3.898,328,1.949,342,3.898,352,3.898,359,3.898,366,4.185,371,3.455,382,3.898,395,3.898,403,3.898,411,3.898,418,3.898,428,3.898,429,3.898,430,3.898,431,3.898,439,3.898,462,3.898,1915,4.185,1989,7.507,2136,6.789,2297,8.599]],["title/overview.html",[2298,4.88]],["body/overview.html",[2,2.009,29,0.792,31,0.892,35,0.013,80,0.004,81,0.006,82,0.004,89,0.926,128,1.02,129,0.36,136,0.285,137,3.827,161,0.197,168,0.961,171,0.961,173,0.961,176,0.712,179,0.961,181,0.961,183,0.961,185,0.961,190,0.961,192,0.961,194,0.961,197,0.961,198,0.961,199,0.961,201,0.961,203,0.961,206,0.961,208,0.961,211,0.961,213,0.961,215,0.961,217,0.961,219,0.961,222,0.961,224,0.961,226,0.961,228,0.961,231,0.892,233,0.961,235,0.961,237,0.961,239,0.961,241,0.961,243,0.961,245,0.961,247,0.961,248,0.961,250,0.961,252,0.961,255,0.334,256,0.926,259,0.926,262,0.926,264,0.926,266,0.926,272,2.294,273,1.723,326,0.477,327,4.702,328,0.861,329,0.861,330,0.923,331,0.923,332,0.923,333,2.221,334,2.221,335,1.338,336,0.923,337,0.891,342,5.036,343,2.221,344,2.221,345,2.221,352,5.036,353,2.221,354,2.221,355,2.221,359,5.036,360,2.221,361,2.221,362,2.221,366,5.858,367,2.221,368,2.221,369,2.221,370,2.221,371,4.882,382,5.456,383,2.221,384,2.221,385,2.221,395,5.192,396,2.221,397,2.221,398,2.221,403,5.305,404,2.221,405,2.221,406,2.221,407,2.221,411,5.192,412,2.221,413,2.221,414,2.221,418,5.553,419,2.221,420,2.221,421,2.221,425,2.221,426,2.221,427,2.221,428,5.539,429,5.271,430,4.97,431,4.97,439,4.578,458,2.221,459,2.221,460,2.221,461,2.221,462,4.805,479,2.221,480,2.221,481,2.221,482,4.428,483,4.428,488,2.221,489,2.221,490,2.221,491,2.221,492,2.294,499,2.221,500,2.221,501,2.221,502,2.221,507,2.221,508,2.221,509,2.221,510,2.221,511,2.909,515,2.221,516,2.221,517,2.221,574,0.891,639,1.871,724,2.009,803,2.009,936,1.723,1266,1.723,1915,5.159,1916,2.221,1917,2.221,1919,2.221,2041,2.221,2298,2.221,2299,2.544]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":320,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{}}}],["0,0",{"_index":1012,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":746,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":641,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["0.0.0",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":766,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["0.002",{"_index":1225,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.01",{"_index":776,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":773,"title":{},"body":{"components/DofComponent.html":{}}}],["0.05",{"_index":1255,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.1",{"_index":760,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["0.11.3",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["0.123.0",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":668,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0.3",{"_index":1859,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":1908,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":1161,"title":{},"body":{"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":148,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0/1",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2088,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2089,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2086,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2085,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2090,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2087,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["0x0000aa",{"_index":874,"title":{},"body":{"components/FogComponent.html":{}}}],["0x444444",{"_index":1023,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x5dade2",{"_index":1090,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["0x999999",{"_index":694,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xa0a0a0",{"_index":950,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["0xa4a4a4",{"_index":1048,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["0xdadada",{"_index":1872,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0xff0000",{"_index":664,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xffa0a0",{"_index":126,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xfff0f0",{"_index":123,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xffff00",{"_index":1058,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["0xffffff",{"_index":103,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["1",{"_index":574,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"overview.html":{}}}],["1.0",{"_index":566,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1.0.2",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["1.05",{"_index":934,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["1.2",{"_index":1169,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["1.434.0",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1109,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["1/1",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":666,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["100",{"_index":755,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":1448,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":1440,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":1624,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":764,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["11.0.3",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1134,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["18",{"_index":2041,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["180",{"_index":736,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":639,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":910,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/17",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":907,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":1165,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":2237,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":975,"title":{},"body":{"components/GridActorComponent.html":{}}}],["3.8.0",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1002,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["37",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["379579926",{"_index":1264,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["39",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":155,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["4",{"_index":803,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"overview.html":{}}}],["4/7",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":2299,"title":{},"body":{"overview.html":{}}}],["5",{"_index":936,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"overview.html":{}}}],["50",{"_index":1120,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["500",{"_index":762,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1909,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["6.6.3",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1116,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["64",{"_index":1108,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["66",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1112,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["8",{"_index":635,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["95",{"_index":1416,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_materialcolor",{"_index":1835,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":1699,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":1836,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":1031,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["above",{"_index":2267,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":18,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractcamera",{"_index":1271,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractcomposeeffect",{"_index":1,"title":{"classes/AbstractComposeEffect.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:17",{"_index":538,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":537,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:36",{"_index":540,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:40",{"_index":542,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:44",{"_index":541,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:53",{"_index":539,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:55",{"_index":536,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:8",{"_index":543,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":1051,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["abstractions",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":1833,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":557,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1353,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":134,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":1143,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":83,"title":{"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractserveractor:10",{"_index":1748,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:13",{"_index":1749,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:16",{"_index":1747,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:19",{"_index":1746,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:21",{"_index":1753,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:24",{"_index":1745,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:26",{"_index":1752,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:31",{"_index":1751,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:36",{"_index":1750,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:7",{"_index":1744,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accessors",{"_index":1032,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":2290,"title":{},"body":{"license.html":{}}}],["actor",{"_index":254,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":196,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":377,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":921,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:104",{"_index":1805,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:113",{"_index":1811,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:118",{"_index":1807,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:17",{"_index":1089,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:19",{"_index":1033,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:20",{"_index":1091,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:22",{"_index":1034,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:23",{"_index":954,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:24",{"_index":1098,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:25",{"_index":937,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:26",{"_index":932,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:27",{"_index":933,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:28",{"_index":935,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:30",{"_index":941,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:31",{"_index":940,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:32",{"_index":938,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:33",{"_index":939,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1961,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:35",{"_index":1036,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:36",{"_index":951,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:37",{"_index":1035,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:38",{"_index":955,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:39",{"_index":1040,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:40",{"_index":949,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:41",{"_index":1041,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:43",{"_index":1039,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:45",{"_index":1092,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:47",{"_index":1038,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:48",{"_index":947,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:49",{"_index":1093,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:50",{"_index":1806,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:51",{"_index":1037,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:56",{"_index":1814,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:57",{"_index":943,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:69",{"_index":1095,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:79",{"_index":1808,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:80",{"_index":1094,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:84",{"_index":945,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:85",{"_index":1813,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:86",{"_index":1097,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:98",{"_index":1096,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.module.ts",{"_index":375,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.ts",{"_index":87,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:10",{"_index":115,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:13",{"_index":116,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:16",{"_index":114,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:19",{"_index":112,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:21",{"_index":104,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:24",{"_index":111,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:26",{"_index":107,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:31",{"_index":106,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:36",{"_index":105,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:7",{"_index":109,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actors",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":270,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":1187,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":604,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":606,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["added",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["addgroup",{"_index":1538,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1302,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addpass",{"_index":811,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":820,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["adheres",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":1211,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["afterviewinit",{"_index":10,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":2239,"title":{},"body":{"license.html":{}}}],["allows",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["along",{"_index":578,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["alpha",{"_index":1674,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":1077,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["ambient",{"_index":140,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":128,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["and/or",{"_index":2259,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1983,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":2131,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":349,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":291,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animate'].some(propname",{"_index":1830,"title":{},"body":{"components/TextActorComponent.html":{}}}],["animated",{"_index":282,"title":{},"body":{"injectables/AnimationService.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation",{"_index":276,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":445,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":339,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":341,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":678,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation/atft",{"_index":444,"title":{},"body":{"modules/AtftModule.html":{}}}],["animationincrement",{"_index":1219,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["animations",{"_index":302,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":272,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":294,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":1945,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["antialias",{"_index":1673,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":1399,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":769,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":788,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":2066,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":2174,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":151,"title":{},"body":{"components/AmbientLightComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":2159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this.color",{"_index":748,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.dashcolor",{"_index":701,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["appliedcolor(this.groundcolor",{"_index":1027,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":1028,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":1067,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":1026,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":1099,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":2163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1104,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":19,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":42,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["arc",{"_index":1905,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":1598,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arguments",{"_index":1580,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":2294,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1240,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["array",{"_index":1277,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["aspect",{"_index":1436,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1464,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":1857,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["associated",{"_index":2248,"title":{},"body":{"license.html":{}}}],["async",{"_index":1356,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":139,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":378,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":327,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":342,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":352,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":359,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":366,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":382,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":395,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":403,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":411,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":418,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":371,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":428,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":439,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":429,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":430,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":431,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":462,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":622,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["attribute",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":2283,"title":{},"body":{"license.html":{}}}],["auto",{"_index":268,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autoplay",{"_index":1924,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":1148,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1149,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":309,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":1404,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["axes",{"_index":169,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":168,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":572,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["background",{"_index":1729,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":1740,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":234,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["based",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1105,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["behaviour",{"_index":1618,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":2180,"title":{},"body":{"index.html":{}}}],["bevelenabled",{"_index":1839,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":1840,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":1841,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":1842,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":1843,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["binding",{"_index":2161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":2072,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":1419,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["blending",{"_index":1252,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["blur",{"_index":531,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":172,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":171,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2204,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":779,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":794,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":331,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["box",{"_index":174,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":173,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":2297,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2136,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":1415,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":2207,"title":{},"body":{"index.html":{}}}],["c",{"_index":2236,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":1010,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":1629,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":1640,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":2122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":2167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":288,"title":{},"body":{"injectables/AnimationService.html":{}}}],["camera",{"_index":1273,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":221,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":350,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1426,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":1431,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1460,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":1459,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:22",{"_index":1432,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":1461,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":1462,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:36",{"_index":1433,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":1437,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:56",{"_index":1435,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":497,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1486,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1488,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1487,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":434,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":347,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1272,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":433,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":261,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cant",{"_index":716,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":1570,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":230,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":1677,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":1693,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":505,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":1573,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":1571,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":1568,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":1579,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:21",{"_index":1583,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:35",{"_index":1587,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:39",{"_index":1603,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:44",{"_index":1582,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":1692,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":1691,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":1690,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":1686,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":1574,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":451,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["cast",{"_index":1397,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":739,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["center",{"_index":374,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":2124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":372,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":920,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":1029,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/server/abstract",{"_index":85,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/server",{"_index":1742,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":1959,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["centered",{"_index":1700,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":306,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1964,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":45,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":1181,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1184,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":2243,"title":{},"body":{"license.html":{}}}],["child",{"_index":620,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":691,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.findmesh",{"_index":692,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childs",{"_index":1499,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["claim",{"_index":2286,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"overview.html":{}}}],["click",{"_index":1507,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clone",{"_index":2208,"title":{},"body":{"index.html":{}}}],["cluster_atftanimationmodule",{"_index":333,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":334,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":343,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":344,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":345,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":353,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":354,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":355,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":360,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":361,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":362,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":367,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":368,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":370,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":369,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":383,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":384,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":385,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":396,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":397,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":398,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":404,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":406,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":405,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":407,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":412,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":413,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":414,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":419,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":420,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":421,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":425,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":427,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":426,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":458,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":459,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":461,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":460,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":479,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":480,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":481,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":488,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":489,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":490,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":491,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":499,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":500,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":501,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":502,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":507,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":508,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":509,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":510,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":515,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":516,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":517,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":1916,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":1917,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":1919,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":1918,"title":{},"body":{"modules/UxActorModule.html":{}}}],["code",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":90,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":2116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":2223,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":348,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["compact",{"_index":236,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":127,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":166,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["components",{"_index":129,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":7,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":394,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":390,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":391,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":393,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":30,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":188,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":61,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":810,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":818,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":819,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":817,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":824,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":826,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":825,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:42",{"_index":823,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:59",{"_index":821,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:65",{"_index":828,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:79",{"_index":829,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:85",{"_index":822,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":1503,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["conditions",{"_index":2266,"title":{},"body":{"license.html":{}}}],["config",{"_index":2215,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":2295,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1053,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":205,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":358,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":1050,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:100",{"_index":1233,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:17",{"_index":1059,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":1229,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:20",{"_index":1063,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":1057,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":1230,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":1228,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1060,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":1227,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":1224,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":1226,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:41",{"_index":1234,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:42",{"_index":1236,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:43",{"_index":1223,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:49",{"_index":1062,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:54",{"_index":1232,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:96",{"_index":1231,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.module",{"_index":466,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":357,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":465,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1500,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["console.error('contentprojectioncomponent",{"_index":616,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":64,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":73,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":67,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('add",{"_index":1300,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":528,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":587,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":785,"title":{},"body":{"components/DofComponent.html":{},"components/TextMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":645,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":646,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":680,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":710,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":991,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":899,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":834,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":852,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":840,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":835,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":837,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":853,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":894,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":964,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":890,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":884,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":961,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":997,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('lineposition",{"_index":990,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('loaderactorcomponent.animate",{"_index":1123,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.done",{"_index":1138,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.init",{"_index":1106,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngafterviewinit",{"_index":1101,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngondestroy",{"_index":1129,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updateanimation",{"_index":1131,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updatetext",{"_index":1122,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('looking",{"_index":981,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('meshlineconnectorcomponent.updatelinegeometry",{"_index":1262,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":885,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":1414,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["console.log('onclick",{"_index":1535,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":1438,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":1446,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1463,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1468,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":1533,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1303,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":1667,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.constructor",{"_index":1605,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":1671,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":1608,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":957,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":125,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":124,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":121,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":1763,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('textactorcomponent.animate",{"_index":1820,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngafterviewinit",{"_index":1815,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngondestroy",{"_index":1827,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updateanimation",{"_index":1829,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updatetext",{"_index":1817,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":1891,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":1884,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1291,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":1937,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(child",{"_index":695,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(event",{"_index":1324,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.edges",{"_index":703,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":718,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["const",{"_index":157,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":661,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(raycasterservice",{"_index":1491,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":28,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(statsservice",{"_index":1638,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["content",{"_index":177,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":603,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":176,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continuously",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2291,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2222,"title":{},"body":{"index.html":{}}}],["control",{"_index":1596,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["control.module",{"_index":438,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":364,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":437,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":1144,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":210,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":365,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1146,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1142,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:15",{"_index":1423,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":1170,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1172,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1160,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1162,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1164,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1424,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1163,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1171,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":1168,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":1166,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":1167,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":1159,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:46",{"_index":1173,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:61",{"_index":1174,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":730,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":965,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["copies",{"_index":2261,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2246,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2235,"title":{},"body":{"license.html":{}}}],["core",{"_index":1072,"title":{},"body":{"components/LineConnectorComponent.html":{},"dependencies.html":{}}}],["coverage",{"_index":2081,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1772,"title":{},"body":{"injectables/StatsService.html":{}}}],["createcamera",{"_index":1428,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createconnectorobject",{"_index":1054,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["creates",{"_index":2165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":305,"title":{},"body":{"injectables/AnimationService.html":{}}}],["css",{"_index":1619,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3drenderer",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["currentdelay",{"_index":1796,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currently",{"_index":1590,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentpos",{"_index":1797,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttext",{"_index":1798,"title":{},"body":{"components/TextActorComponent.html":{}}}],["curvesegments",{"_index":1844,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cylinder",{"_index":180,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":179,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":1008,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["damages",{"_index":2287,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1150,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dasharray",{"_index":1254,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashcolor",{"_index":657,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":257,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dasheddrawdirective",{"_index":256,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":658,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashoffset",{"_index":1256,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashratio",{"_index":1257,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["data",{"_index":373,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{}}}],["data.paths",{"_index":1724,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["deal",{"_index":2249,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2296,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":330,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":610,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":40,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["defaultcolor",{"_index":2160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":573,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["deg2rad",{"_index":726,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":486,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":482,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":735,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":731,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["demo",{"_index":2022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":329,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":2195,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1380,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":559,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":560,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthtest",{"_index":1220,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["depthwrite",{"_index":1221,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":275,"title":{},"body":{"injectables/AnimationService.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":99,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["details",{"_index":2221,"title":{},"body":{"index.html":{}}}],["detected",{"_index":891,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":2191,"title":{},"body":{"index.html":{}}}],["development",{"_index":2032,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["direct",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":182,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":181,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":164,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":679,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":255,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":20,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["disablefog",{"_index":869,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1214,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1338,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["distribute",{"_index":2257,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":994,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":1782,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":1791,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":1938,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":1936,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":2082,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":768,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":184,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":183,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":130,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["done",{"_index":1800,"title":{},"body":{"components/TextActorComponent.html":{}}}],["dot",{"_index":186,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dotscreencomponent",{"_index":185,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":806,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["draw",{"_index":655,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":388,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":654,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":665,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":667,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":669,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":670,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:15",{"_index":674,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":676,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":662,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:28",{"_index":672,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:39",{"_index":673,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:76",{"_index":671,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":258,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":1069,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["dynamic",{"_index":2137,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":2189,"title":{},"body":{"index.html":{}}}],["edges",{"_index":569,"title":{},"body":{"components/BoxMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["edgesgeom",{"_index":696,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["effect",{"_index":60,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":450,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":387,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":8,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:17",{"_index":50,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:28",{"_index":48,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:36",{"_index":52,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:40",{"_index":55,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:44",{"_index":54,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:53",{"_index":51,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:55",{"_index":44,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:8",{"_index":33,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":449,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":830,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":841,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":31,"title":{"components/EffectComposerComponent.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":163,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["elementref",{"_index":1584,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["embedded",{"_index":619,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":1497,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":278,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":322,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":325,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1348,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":863,"title":{},"body":{"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":189,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":402,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":89,"title":{"components/EmptyComponent.html":{}},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":609,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enable",{"_index":21,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":498,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":1490,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":1493,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":1492,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":263,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":293,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1151,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":870,"title":{},"body":{"components/FogComponent.html":{}}}],["end",{"_index":1687,"title":{},"body":{"injectables/RendererService.html":{}}}],["entire",{"_index":2200,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":2150,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":452,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["etc",{"_index":308,"title":{},"body":{"injectables/AnimationService.html":{}}}],["event",{"_index":280,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":1783,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":963,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.a",{"_index":984,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":986,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":988,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":1784,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1311,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1309,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1326,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":2152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":113,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["events",{"_index":1498,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":1594,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":2188,"title":{},"body":{"index.html":{}}}],["execution",{"_index":310,"title":{},"body":{"injectables/AnimationService.html":{}}}],["exploration",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":2177,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":455,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":332,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["exposition",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":2274,"title":{},"body":{"license.html":{}}}],["extends",{"_index":88,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":966,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":577,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["false",{"_index":313,"title":{},"body":{"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":871,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":901,"title":{},"body":{"components/FogComponent.html":{}}}],["favor",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2226,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1352,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":1378,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":1405,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["find",{"_index":717,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["findmesh",{"_index":689,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":715,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":709,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["fit",{"_index":1719,"title":{},"body":{"components/SVGLoaderComponent.html":{},"index.html":{}}}],["fit.ts",{"_index":2128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":2279,"title":{},"body":{"license.html":{}}}],["fix",{"_index":456,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":1715,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":1902,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1215,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32array(4",{"_index":974,"title":{},"body":{"components/GridActorComponent.html":{}}}],["focus",{"_index":770,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":783,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":867,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":191,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":389,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":190,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":2000,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":1869,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":1837,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fonturl",{"_index":1845,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["format",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":1238,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["found",{"_index":618,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["fov",{"_index":1458,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["frame",{"_index":193,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":192,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":2227,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":1447,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2153,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2264,"title":{},"body":{"license.html":{}}}],["general",{"_index":1011,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["geo",{"_index":967,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":970,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry",{"_index":588,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute('position",{"_index":972,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getcamera",{"_index":1630,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":1602,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getcomposer",{"_index":812,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfirstintersectedgroup",{"_index":1539,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1332,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getisenabled",{"_index":1565,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlineposition",{"_index":924,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":942,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":1087,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":1873,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getrenderpane",{"_index":1586,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscene",{"_index":1631,"title":{},"body":{"injectables/RendererService.html":{}}}],["gettext",{"_index":1876,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":1838,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":1866,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":1962,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getwebglrenderer",{"_index":1632,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":1042,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":2060,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["goals",{"_index":2182,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2242,"title":{},"body":{"license.html":{}}}],["grid",{"_index":195,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":194,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":930,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":931,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":197,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":198,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1020,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1305,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.directive",{"_index":495,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1495,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:13",{"_index":1511,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:14",{"_index":1512,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:15",{"_index":1510,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:26",{"_index":1513,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:31",{"_index":1518,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:38",{"_index":1519,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:47",{"_index":1517,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:51",{"_index":1516,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:56",{"_index":1515,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:61",{"_index":1514,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1304,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":265,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1276,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["halfx",{"_index":908,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":911,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":561,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["heightsegments",{"_index":562,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["helper",{"_index":523,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":170,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":401,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":521,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":525,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":995,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":526,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":996,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":468,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":400,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":467,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":613,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":2186,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":200,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":199,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":2241,"title":{},"body":{"license.html":{}}}],["hierarchical",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["hightsegments",{"_index":1759,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":2284,"title":{},"body":{"license.html":{}}}],["horizontalblurshader",{"_index":548,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":2201,"title":{},"body":{"index.html":{}}}],["host",{"_index":663,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":1604,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":1613,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":1576,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":162,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":1611,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":1379,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/makimenko/angular",{"_index":2209,"title":{},"body":{"index.html":{}}}],["https://github.com/spite/three.meshline/issues/51#issuecomment",{"_index":1263,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["i.e",{"_index":1597,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1317,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object",{"_index":1313,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1320,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["icon",{"_index":238,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["id",{"_index":617,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["ideas",{"_index":2230,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2083,"title":{},"body":{"coverage.html":{}}}],["ignorepaused",{"_index":1328,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":554,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":1591,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":9,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":2275,"title":{},"body":{"license.html":{}}}],["import",{"_index":56,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":351,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["included",{"_index":1392,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":1980,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":457,"title":{},"body":{"modules/AtftModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":2219,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":535,"title":{},"body":{"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["init",{"_index":1088,"title":{},"body":{"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{},"components/TextActorComponent.html":{}}}],["initcomposer",{"_index":813,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initial",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":1633,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":1645,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialopacity",{"_index":659,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":22,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":271,"title":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":273,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"overview.html":{}}}],["injected",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":117,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":94,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["install",{"_index":2024,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":690,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["instead",{"_index":1421,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":2187,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":144,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":1266,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1268,"title":{},"body":{"interfaces/NearestIntersection.html":{}}}],["intersection[0",{"_index":1344,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1343,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersections",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["isenabled",{"_index":1298,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isolated",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":2179,"title":{},"body":{"index.html":{}}}],["isready",{"_index":1540,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1327,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["issue",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":311,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":927,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":928,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["ivy",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["jetbrains",{"_index":2225,"title":{},"body":{"index.html":{}}}],["join",{"_index":2228,"title":{},"body":{"index.html":{}}}],["js",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1341,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["keep",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":2273,"title":{},"body":{"license.html":{}}}],["label",{"_index":95,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":1418,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"changelog.html":{}}}],["later",{"_index":1465,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":202,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":381,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":376,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":201,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lazy",{"_index":1879,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":161,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["length",{"_index":568,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":2173,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2288,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2285,"title":{},"body":{"license.html":{}}}],["library",{"_index":1965,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":2233,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":141,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":167,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":752,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":410,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":133,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":147,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":146,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":742,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1022,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":743,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:19",{"_index":741,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:24",{"_index":149,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.component.ts:26",{"_index":1024,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:28",{"_index":744,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":159,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":470,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":409,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":765,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":756,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":761,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":757,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":759,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":758,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":754,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":1479,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":763,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":1478,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":1480,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":749,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":469,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":2185,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":2252,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1070,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["limited",{"_index":2276,"title":{},"body":{"license.html":{}}}],["line",{"_index":204,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["line.geometry.attributes.position",{"_index":980,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineconnectorcomponent",{"_index":203,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":707,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["linematerial",{"_index":1218,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["lineposition",{"_index":979,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":983,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":985,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":987,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":989,"title":{},"body":{"components/GridActorComponent.html":{}}}],["linewidth",{"_index":1076,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["linewidth=1",{"_index":1068,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["listened",{"_index":1599,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":1350,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loaded",{"_index":1367,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":207,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":214,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":417,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1347,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":1411,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:20",{"_index":1709,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":1371,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:23",{"_index":1372,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1412,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:26",{"_index":1361,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:29",{"_index":1711,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:33",{"_index":1368,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:36",{"_index":1706,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:39",{"_index":1707,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":1360,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:42",{"_index":1708,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:45",{"_index":1705,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":1704,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:50",{"_index":1369,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:56",{"_index":1710,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load(this.fonturl",{"_index":1889,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loader.module",{"_index":472,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":416,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader/atft",{"_index":471,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loaderactorcomponent",{"_index":206,"title":{"components/LoaderActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadlazyobject",{"_index":1357,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":2214,"title":{},"body":{"index.html":{}}}],["logic",{"_index":283,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":300,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["main",{"_index":323,"title":{},"body":{"injectables/AnimationService.html":{}}}],["makimenko",{"_index":2067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":209,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":1175,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":208,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2205,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1496,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":595,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":2119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":1056,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":1880,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":1401,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialcreator.preload",{"_index":1402,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":2164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["math.pi",{"_index":640,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin(this.i",{"_index":1133,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["max",{"_index":1810,"title":{},"body":{"components/TextActorComponent.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":771,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":791,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdelay",{"_index":1803,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxdistance",{"_index":1152,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpolarangle",{"_index":1153,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpos",{"_index":1799,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxx",{"_index":1701,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":1702,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["meant",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2278,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2255,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":212,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh'},{'name",{"_index":175,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":1898,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":424,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":556,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:102",{"_index":1935,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:113",{"_index":1868,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":1762,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":638,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":1761,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":637,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":583,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":632,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":1861,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":636,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":633,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":580,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":634,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":1874,"title":{},"body":{"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":642,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:29",{"_index":1932,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":631,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":567,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:32",{"_index":1931,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":1864,"title":{},"body":{"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:35",{"_index":1928,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":1003,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":585,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:38",{"_index":1877,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":643,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:41",{"_index":1929,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":1910,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":582,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":1863,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":1927,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":1472,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":1860,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":565,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":1855,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":1848,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":1852,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":586,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":1851,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":1849,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":1850,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":1858,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":1853,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":1862,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":1856,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":1854,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:82",{"_index":1847,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":1933,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":1934,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:91",{"_index":1865,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:95",{"_index":1870,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.module",{"_index":474,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":423,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":1899,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":473,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["meshline",{"_index":1235,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["meshlineconnectorcomponent",{"_index":211,"title":{"components/MeshLineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meshlinematerial",{"_index":1237,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["meshposition",{"_index":969,"title":{},"body":{"components/GridActorComponent.html":{}}}],["metadata",{"_index":135,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["middle",{"_index":1013,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":2238,"title":{},"body":{"license.html":{}}}],["min",{"_index":1812,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindelay",{"_index":1804,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindistance",{"_index":1154,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":2149,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":2234,"title":{},"body":{"license.html":{}}}],["mode",{"_index":2220,"title":{},"body":{"index.html":{}}}],["model",{"_index":1377,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["modified",{"_index":781,"title":{},"body":{"components/DofComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["modify",{"_index":2254,"title":{},"body":{"license.html":{}}}],["module",{"_index":326,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":328,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2218,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1600,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mouseenter",{"_index":1508,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1509,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1333,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":844,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":1355,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["multiple",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["mustrerender",{"_index":1442,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":1925,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":872,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1337,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1340,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1267,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1342,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1345,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["necessary",{"_index":1389,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["new",{"_index":120,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newobject3dinstance",{"_index":143,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["newtexturepath",{"_index":1374,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["ng",{"_index":621,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":24,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":340,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":25,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngonchanges(changes",{"_index":53,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngondestroy",{"_index":26,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":1575,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["none",{"_index":1626,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["noninfringement",{"_index":2282,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":284,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/LineConnectorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":2268,"title":{},"body":{"license.html":{}}}],["now",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1394,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":839,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":102,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":216,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":1528,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1526,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1527,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":1531,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1529,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1530,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":154,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":436,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":464,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":688,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":677,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":435,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":956,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["object/helper/empty.component",{"_index":119,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["object/scene.component",{"_index":1664,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":2190,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":213,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":1370,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["objloadercomponent",{"_index":215,"title":{"components/ObjLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":2245,"title":{},"body":{"license.html":{}}}],["official",{"_index":2217,"title":{},"body":{"index.html":{}}}],["offset",{"_index":929,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["once",{"_index":289,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":12,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["onclick",{"_index":91,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["onclick(event",{"_index":1318,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":92,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["oninit",{"_index":1569,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onmouseclick",{"_index":925,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":946,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":926,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":948,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1504,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":1541,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1307,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onresize(event",{"_index":1614,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":93,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ontouchstart",{"_index":1542,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1322,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1222,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["openended",{"_index":625,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["opengl",{"_index":1071,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["optimization",{"_index":286,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":38,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2198,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":218,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":1176,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":217,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["original",{"_index":711,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":220,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":219,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["others",{"_index":1188,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":2293,"title":{},"body":{"license.html":{}}}],["out",{"_index":337,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1625,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":118,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":98,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["overridematerialcolor",{"_index":1703,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":1721,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":2298,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1395,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pane",{"_index":1588,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1155,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":570,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":734,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":145,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["parent.ts",{"_index":2126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentscene",{"_index":65,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":2171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":2280,"title":{},"body":{"license.html":{}}}],["pass",{"_index":16,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":855,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":857,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":859,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":858,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patch",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1362,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["paths",{"_index":1723,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["pause",{"_index":1295,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1278,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["performance",{"_index":285,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":2240,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2262,"title":{},"body":{"license.html":{}}}],["person",{"_index":2244,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2263,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":223,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":222,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":723,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":441,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":485,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":440,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":724,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":733,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixels",{"_index":1622,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":225,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":224,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platforms",{"_index":1075,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["point",{"_index":227,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pointlightcomponent",{"_index":226,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":2271,"title":{},"body":{"license.html":{}}}],["pos",{"_index":958,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":307,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{}}}],["positions",{"_index":982,"title":{},"body":{"components/GridActorComponent.html":{}}}],["preloading",{"_index":1384,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":1386,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep.then",{"_index":1406,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":292,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["profile",{"_index":1073,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["project",{"_index":1967,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":602,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":178,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":478,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":600,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:15",{"_index":605,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:24",{"_index":608,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projects/.../applied",{"_index":2154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../calculate",{"_index":2155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":2156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../provide",{"_index":2157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":2151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../scale",{"_index":2158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":84,"title":{},"body":{"classes/AbstractServerActor.html":{},"modules/AtftDataCenterActorModule.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":1082,"title":{},"body":{"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":1794,"title":{},"body":{"components/TextActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":1920,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":274,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":303,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":297,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":299,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:39",{"_index":301,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:45",{"_index":298,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":338,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":432,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":346,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":1425,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1456,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":363,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1141,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":1422,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":386,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":6,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":530,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":532,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:22",{"_index":534,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:29",{"_index":533,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":767,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":775,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":774,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":772,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:24",{"_index":777,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:50",{"_index":778,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":798,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":809,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":653,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":866,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":875,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":877,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:15",{"_index":876,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:17",{"_index":873,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:28",{"_index":880,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:37",{"_index":879,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:43",{"_index":878,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:49",{"_index":882,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:54",{"_index":881,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":463,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":356,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":1049,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/mesh",{"_index":1216,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/content",{"_index":599,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":399,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":520,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":861,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":864,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":865,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":992,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":132,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":408,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":737,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1018,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":1474,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":415,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1346,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":1409,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":1697,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":422,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":555,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":623,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":902,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":1000,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":1470,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":1757,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":1903,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":1922,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":1726,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":1730,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:26",{"_index":1731,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:32",{"_index":1733,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:36",{"_index":1732,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":518,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":1832,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":484,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":725,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":729,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1481,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1484,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":493,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1485,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1269,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":1554,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":1549,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":1548,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":1563,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":1564,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":1561,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":1560,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":1562,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":1544,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":1551,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":1558,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":1559,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":1547,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":1546,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":1555,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":1556,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":1566,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":1557,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":1545,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":1553,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":1552,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":503,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":1567,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":1627,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:103",{"_index":1657,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:11",{"_index":1660,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:110",{"_index":1643,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:114",{"_index":1642,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:118",{"_index":1644,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":1661,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:122",{"_index":1653,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":1659,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":1663,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":1658,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:17",{"_index":1639,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:25",{"_index":1647,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:30",{"_index":1655,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:34",{"_index":1651,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:39",{"_index":1648,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:54",{"_index":1646,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:82",{"_index":1650,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:95",{"_index":1641,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":1766,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":512,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":1771,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":1780,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":1779,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":1776,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":1778,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":1777,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":1775,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":2115,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":2120,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":2123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":2125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":2127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":1871,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":1387,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["promise(resolve",{"_index":1886,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["property",{"_index":1592,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":784,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["props",{"_index":753,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":15,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["provided",{"_index":2178,"title":{},"body":{"index.html":{},"license.html":{}}}],["provideparent",{"_index":152,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":137,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":522,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":558,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":2170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":601,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":624,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":738,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":862,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":903,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":922,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":993,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":1001,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1019,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":1030,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":1052,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(loaderactorcomponent",{"_index":1083,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["provideparent(meshlineconnectorcomponent",{"_index":1217,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":1410,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1354,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":1427,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":1457,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":1471,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":1475,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":1727,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":1743,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":1754,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":1755,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":1756,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":1758,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":1698,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textactorcomponent",{"_index":1795,"title":{},"body":{"components/TextActorComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":1834,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":1904,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":1923,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":1960,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["providers",{"_index":136,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["public",{"_index":23,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2256,"title":{},"body":{"license.html":{}}}],["published",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":2231,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2281,"title":{},"body":{"license.html":{}}}],["rad2deg",{"_index":1482,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":487,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":483,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":626,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":732,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":1760,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":627,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":628,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["randomint",{"_index":1801,"title":{},"body":{"components/TextActorComponent.html":{}}}],["randomint(min",{"_index":1809,"title":{},"body":{"components/TextActorComponent.html":{}}}],["raycaster",{"_index":260,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":447,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":494,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":496,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":446,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":1178,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":259,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterenabledirective",{"_index":262,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1274,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1321,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1316,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1315,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":264,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":492,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["readonly",{"_index":290,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":1846,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rectangular",{"_index":576,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["regardless",{"_index":1078,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["reject",{"_index":1388,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["relative",{"_index":1363,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":1396,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removepass",{"_index":814,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":827,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":100,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["rendered",{"_index":1589,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":229,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.module",{"_index":443,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":504,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":506,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":442,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":59,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":228,"title":{"components/RendererCanvasComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["rendererservice",{"_index":29,"title":{"injectables/RendererService.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":1734,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":1601,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":1578,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":832,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":846,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["rendertoscreen",{"_index":815,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["repo",{"_index":2183,"title":{},"body":{"index.html":{}}}],["request",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":287,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":318,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":2232,"title":{},"body":{"index.html":{}}}],["reset",{"_index":336,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resettling",{"_index":1621,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":1634,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":1649,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":1617,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1390,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resolve(model",{"_index":1408,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolve(this.gettextmesh(font",{"_index":1890,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["resolve(this.gettextmesh(this.fontcache",{"_index":1887,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["resourcepath",{"_index":1358,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":1364,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1595,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":2251,"title":{},"body":{"license.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["resume",{"_index":1297,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":78,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returns",{"_index":46,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2253,"title":{},"body":{"license.html":{}}}],["ring1",{"_index":1084,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring2",{"_index":1085,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring3",{"_index":1086,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["rotatespeed",{"_index":1156,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["run",{"_index":2211,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1785,"title":{},"body":{"injectables/StatsService.html":{}}}],["same",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":2196,"title":{},"body":{"index.html":{}}}],["scale",{"_index":801,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["scaletofit",{"_index":1717,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scene",{"_index":868,"title":{},"body":{"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":232,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":1735,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":477,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":816,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":231,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":800,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":187,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":392,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":799,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":802,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:23",{"_index":805,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:27",{"_index":804,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1157,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["see",{"_index":2044,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":1417,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":575,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":101,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["selector",{"_index":138,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["sell",{"_index":2260,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["separate",{"_index":845,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separating",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":86,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":379,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":380,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":233,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":235,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servericonactorcomponent",{"_index":237,"title":{"components/ServerIconActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverstandactorcomponent",{"_index":239,"title":{"components/ServerStandActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":277,"title":{},"body":{"injectables/AnimationService.html":{}}}],["set",{"_index":1044,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":1543,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1299,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":1635,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":1652,"title":{},"body":{"injectables/RendererService.html":{}}}],["setmaterialcolor(materialcolor",{"_index":1875,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":1713,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":1636,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":1654,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":1878,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":1373,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["setupcontrols",{"_index":1147,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":1043,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":544,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":808,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(horizontalblurshader",{"_index":552,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":551,"title":{},"body":{"components/BlurComponent.html":{}}}],["shadow",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":2269,"title":{},"body":{"license.html":{}}}],["shape",{"_index":914,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto",{"_index":917,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":918,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":916,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["show",{"_index":269,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":514,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":1767,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":1769,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":1768,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":96,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["side",{"_index":1250,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["sides",{"_index":579,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":2176,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":43,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["single",{"_index":1616,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":524,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":2121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":904,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":905,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skip",{"_index":1737,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":57,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":1021,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["snyk",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2247,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":1939,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":1941,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["sphere",{"_index":242,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":241,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.component.html",{"_index":2197,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":2206,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":2216,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":2203,"title":{},"body":{"index.html":{}}}],["stand",{"_index":240,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":295,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{}}}],["started",{"_index":1963,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":2084,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":953,"title":{},"body":{"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["stats",{"_index":267,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":513,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":448,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":1665,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":266,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":511,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["step",{"_index":1385,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["stop",{"_index":296,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["stories",{"_index":2023,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":1984,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":2029,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":1615,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":108,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1140,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1145,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":2265,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2258,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2229,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":304,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":324,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["subscribeevents",{"_index":1505,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["substantial",{"_index":2270,"title":{},"body":{"license.html":{}}}],["super(rendererservice",{"_index":156,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":1100,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":1180,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":1130,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["super.updateparent",{"_index":1738,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":1989,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":2224,"title":{},"body":{"index.html":{}}}],["svg",{"_index":244,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":1712,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["svgloadercomponent",{"_index":243,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgname",{"_index":97,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["switch",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":39,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{}}}],["table",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":740,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["targetopacity",{"_index":660,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["template",{"_index":142,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1572,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["test",{"_index":2192,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2212,"title":{},"body":{"index.html":{}}}],["text",{"_index":246,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":1882,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":476,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":519,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":475,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":1921,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":245,"title":{"components/TextActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":247,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":1420,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texturepath",{"_index":1359,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":1382,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1365,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":629,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":630,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":906,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._materialcolor",{"_index":1881,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":1720,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":1883,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":1046,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.addpass(renderpass",{"_index":847,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.animate",{"_index":683,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":684,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":321,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":317,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":319,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animated",{"_index":1244,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animation.animate.subscribe(this.animate",{"_index":685,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animation.start",{"_index":686,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animationincrement",{"_index":1261,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1212,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1259,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe(this.updateanimation",{"_index":1126,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.animationservice.animate.unsubscribe",{"_index":1139,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.start",{"_index":1128,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":314,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":315,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":789,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":79,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.applyshadowprops(mesh",{"_index":598,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.aspect",{"_index":1695,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":1952,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":1195,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1197,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":1894,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":1897,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":1896,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":1895,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.calculateaspectratio(canvas",{"_index":1696,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1301,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1469,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":1452,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1329,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.left",{"_index":1449,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":1454,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.right",{"_index":1450,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":1451,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":1666,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1453,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":1444,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":1610,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":1612,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":751,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.centered",{"_index":1901,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":1831,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1189,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit(event",{"_index":1536,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":122,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":66,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":71,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":856,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":854,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":74,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":1668,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":860,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":842,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":850,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.contentprojection",{"_index":614,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":615,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":1179,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1213,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":1194,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1196,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1200,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":1198,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1206,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1208,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1204,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1192,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1182,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1202,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1210,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1185,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":1790,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.currentdelay",{"_index":1824,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currentpos",{"_index":1821,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currenttext",{"_index":1823,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.curvesegments",{"_index":1893,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dampingfactor",{"_index":1201,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.dashincrement",{"_index":720,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.depth",{"_index":591,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":594,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthtest",{"_index":1249,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.depthwrite",{"_index":1248,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.disable",{"_index":76,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":900,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":1477,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":999,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.done",{"_index":1828,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.edges",{"_index":698,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":702,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":706,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":704,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":705,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":721,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.enable",{"_index":75,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":316,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1199,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":893,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":898,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.focus",{"_index":786,"title":{},"body":{"components/DofComponent.html":{}}}],["this.fontcache",{"_index":1885,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":1467,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.geometry",{"_index":1064,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.geometry.getattribute('position').array",{"_index":1241,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1310,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1325,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getlinegeometry",{"_index":1065,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.getlineposition(event",{"_index":959,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":596,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getobject().background",{"_index":1741,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":968,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":962,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":960,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groups",{"_index":1330,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1331,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1306,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":590,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":593,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hightsegments",{"_index":1765,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":681,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.host.getobject",{"_index":687,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.i",{"_index":1132,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.init",{"_index":1102,"title":{},"body":{"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":836,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialopacity",{"_index":712,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":69,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.intensity",{"_index":160,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isready",{"_index":1308,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1319,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":1005,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":1015,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":1017,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.line",{"_index":1079,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.line.geometry",{"_index":1081,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.setgeometry(arr",{"_index":1242,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.line.setgeometry(this.geometry",{"_index":1265,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial",{"_index":1243,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial.uniforms.dashoffset.value",{"_index":1260,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linewidth",{"_index":1247,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.listeningcontrolelement",{"_index":1190,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1191,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(this.model",{"_index":1407,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":1403,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.loop",{"_index":1948,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.material",{"_index":708,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":714,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":713,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.maxblur",{"_index":793,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdelay",{"_index":1826,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxdistance",{"_index":1207,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1209,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpos",{"_index":1822,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.mindistance",{"_index":1205,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mouseenter.emit(event",{"_index":1534,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit(this.host",{"_index":1532,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":1398,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":1400,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":1950,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.near",{"_index":897,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.object",{"_index":1739,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.object.add(this.ring1",{"_index":1113,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring2",{"_index":1117,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring3",{"_index":1121,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.offset",{"_index":1006,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1281,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1282,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1520,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1521,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1522,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1523,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1279,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1280,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":1606,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":1607,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1283,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1284,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1246,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.openended",{"_index":650,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.panspeed",{"_index":1193,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":887,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":888,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":889,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parentscene",{"_index":886,"title":{},"body":{"components/FogComponent.html":{}}}],["this.pass",{"_index":77,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":70,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":550,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":782,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":790,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":787,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":792,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1296,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.radialsegments",{"_index":649,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":1911,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":648,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.randomint(this.mindelay",{"_index":1825,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1335,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1524,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":1494,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1489,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":1900,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.remove",{"_index":1789,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.render",{"_index":1689,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":68,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":795,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":1609,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":72,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":1623,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":838,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":851,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":1679,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":843,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resourcepath",{"_index":1383,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.ring1",{"_index":1110,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.rotatez(math.sin(this.i",{"_index":1135,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.scale.set(70",{"_index":1111,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2",{"_index":1114,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.rotatez(math.cos(this.i",{"_index":1136,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.scale.set(60",{"_index":1115,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3",{"_index":1118,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.rotatez(math.sin(this.i",{"_index":1137,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.scale.set(50",{"_index":1119,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.rotatespeed",{"_index":1183,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":892,"title":{},"body":{"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":1678,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":895,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scenebackgroundtarget",{"_index":848,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":849,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1203,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1312,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1314,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.size",{"_index":1009,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":909,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":912,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.start",{"_index":1103,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.startloading",{"_index":1722,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":1787,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":1793,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":1792,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":1788,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":1770,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":1670,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.stop",{"_index":719,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["this.subscribe",{"_index":1285,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribed",{"_index":1127,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.subscribeevents",{"_index":1525,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.target",{"_index":750,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.targetopacity",{"_index":722,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.text",{"_index":1818,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.text.length",{"_index":1819,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.thetalength",{"_index":652,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":651,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":913,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":1786,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":1047,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.transparent",{"_index":1245,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.trytofindgeometry",{"_index":682,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":1912,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":1913,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":1942,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1286,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":1537,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.updateanimation",{"_index":1124,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updateanimation.bind(this",{"_index":1125,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":1688,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updatetext",{"_index":1816,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.updatezoom",{"_index":1441,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":1955,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":1954,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":1943,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":1946,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":1944,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":1953,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":1947,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":1949,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":1957,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play",{"_index":1956,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":1958,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":1940,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":1672,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":1685,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":1669,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":1684,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":1675,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":1676,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":1694,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":1681,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":1680,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":1682,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.widthsegments",{"_index":592,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.zoom",{"_index":1445,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1186,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":150,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(appliedcolor(this.color",{"_index":158,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":527,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":529,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":589,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":944,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":973,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":971,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":1736,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":647,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":747,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.doubleside",{"_index":1251,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":697,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face3",{"_index":1270,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(appliedcolor(this.color",{"_index":896,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":1867,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1888,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.gridhelper(this.size",{"_index":998,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":1725,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":1025,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1339,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":1393,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.line",{"_index":1061,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.line(geometry",{"_index":976,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.line(this.geometry",{"_index":1080,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial",{"_index":1066,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":977,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":700,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":699,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":675,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":644,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":597,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.line.geometry",{"_index":1258,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":693,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["three.meshline",{"_index":1239,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.normalblending",{"_index":1253,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.object3d",{"_index":607,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["three.objectloader",{"_index":1413,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1349,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":1439,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":1683,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1466,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":1473,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":1476,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1275,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.ringgeometry(0.85",{"_index":1107,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["three.scene",{"_index":883,"title":{},"body":{"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shape",{"_index":915,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":919,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":1764,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":1892,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":1914,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector3",{"_index":2168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":1455,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(x",{"_index":1334,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":1951,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":1662,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":1177,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":1781,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1375,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1376,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/svgloader",{"_index":1714,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":780,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":831,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":62,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":833,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":545,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":807,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":549,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":547,"title":{},"body":{"components/BlurComponent.html":{}}}],["threejs.git",{"_index":2210,"title":{},"body":{"index.html":{}}}],["todo",{"_index":553,"title":{},"body":{"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":1773,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":2292,"title":{},"body":{"license.html":{}}}],["torus",{"_index":249,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":248,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1323,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":727,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":728,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1483,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":1004,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":923,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["transparent",{"_index":978,"title":{},"body":{"components/GridActorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["tree",{"_index":131,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["true",{"_index":110,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["try",{"_index":1336,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["trytofindgeometry",{"_index":656,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tube",{"_index":1906,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":1907,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typescript",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1391,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["undefined",{"_index":454,"title":{},"body":{"modules/AtftModule.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["underlying",{"_index":1593,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":453,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["unsubscribe",{"_index":1290,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1506,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":2194,"title":{},"body":{"index.html":{}}}],["update",{"_index":1774,"title":{},"body":{"injectables/StatsService.html":{}}}],["updateanimation",{"_index":279,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["updateaspectratio",{"_index":1429,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":1434,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatechildcamerasaspectratio",{"_index":1637,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":1656,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":312,"title":{},"body":{"injectables/AnimationService.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updatelinegeometry",{"_index":1055,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["updateparent",{"_index":1728,"title":{},"body":{"components/SceneComponent.html":{}}}],["updatetext",{"_index":1802,"title":{},"body":{"components/TextActorComponent.html":{}}}],["updatezoom",{"_index":1430,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upgrade",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":2184,"title":{},"body":{"index.html":{}}}],["use",{"_index":1381,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":281,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["usefull",{"_index":1502,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":2175,"title":{},"body":{"index.html":{}}}],["util",{"_index":153,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/applied",{"_index":745,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":1716,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["util/scale",{"_index":1718,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["uxactormodule",{"_index":1915,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["v0.0.3",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":41,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":165,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["version",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["verticalblurshader",{"_index":546,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":2202,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":1007,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["very",{"_index":1501,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":2193,"title":{},"body":{"index.html":{}}}],["video",{"_index":251,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":1930,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":250,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videosrc",{"_index":1926,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":612,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":1585,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('contentprojection",{"_index":611,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":952,"title":{},"body":{"components/GridActorComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["want",{"_index":2199,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2277,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2272,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2213,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1351,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":2181,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":1074,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":1628,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":2289,"title":{},"body":{"license.html":{}}}],["width",{"_index":563,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":1045,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":564,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["window.addeventlistener('click",{"_index":1288,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1287,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1289,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":797,"title":{},"body":{"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":796,"title":{},"body":{"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1293,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1292,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1294,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":1577,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":1581,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["within",{"_index":1366,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":2250,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":1620,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":253,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":252,"title":{"components/WorkstationActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":2166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":584,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":1014,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y",{"_index":581,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":1016,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["yanked",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":1550,"title":{},"body":{"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":571,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["zone.js",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":335,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":1443,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1158,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractComposeEffect.html":{"url":"classes/AbstractComposeEffect.html","title":"class - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses();\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractServerActor.html":{"url":"classes/AbstractServerActor.html","title":"class - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EmptyComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:19\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper/empty.component';\n\nexport abstract class AbstractServerActor extends EmptyComponent {\n\n  @Input()\n  label: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Input()\n  svgName: string;\n\n  color = 0xffffff;\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = 0xfff0f0;\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = 0xffffff;\n  }\n\n  public onClick() {\n    // console.log('ServerActorComponent.onClick');\n    this.color = 0xffa0a0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xFFFFFF;\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(appliedColor(this.color));\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:39\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MeshLineConnectorComponent} from './mesh-line-connector.component';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Directive, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: THREE.Object3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection id not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animation: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animation\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Default value : 0xFF0000\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                \n                    \n                        Default value : 0.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            tryToFindGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Material\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {appliedColor} from '../util';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit {\n\n  @Input() dashColor = 0xFF0000;\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity = 0.2;\n  @Input() targetOpacity = 1;\n\n  private edges: any;\n\n  private material: THREE.Material;\n  private stop = false;\n\n\n  constructor(\n    private host: AbstractObject3D,\n    private animation: AnimationService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n\n    this.tryToFindGeometry();\n\n    this.animate = this.animate.bind(this);\n    this.animation.animate.subscribe(this.animate);\n    this.animation.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n        // child.findMesh = new THREE.MeshBasicMaterial({color: 0x999999});\n        // console.log(child);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: appliedColor(this.dashColor)}));\n        this.edges.computeLineDistances();\n        // console.log(this.edges);\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n\n\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity) {\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n\n        findMesh.add(this.edges);\n\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          // this.edges.parent.children = [];\n          if (this.targetOpacity) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  public initComposer() {\n    if (!this.composer) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0x0000AA\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\nimport {appliedColor} from '../util';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color = 0x0000AA;\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(appliedColor(this.color), this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLinePosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridMeshComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('grid', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper';\nimport {provideParent} from '../../../util';\nimport {GridMeshComponent} from '../../../object';\nimport * as THREE from 'three';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends EmptyComponent {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onMouseEnter(event) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event) {\n    console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                name\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EmptyComponent } from '../../../object/helper';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends EmptyComponent {\n  @Input() name: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Line\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractConnector } from './abstract-connector';\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  // TODO: move to abstract?\n  private geometry: THREE.BufferGeometry;\n\n  private line: THREE.Line;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createConnectorObject(): THREE.Line {\n    this.geometry = this.getLineGeometry();\n\n    const material = new THREE.LineBasicMaterial({\n      color: appliedColor(this.materialColor),\n      /**\n       * NOTE: linewidth=1: Due to limitations of the OpenGL Core Profile\n       * with the WebGL renderer on most platforms linewidth will always be 1\n       * regardless of the set value.\n       */\n      linewidth: 1\n    });\n\n    this.line = new THREE.Line(this.geometry, material);\n\n    return this.line;\n  }\n\n  updateLineGeometry(): void {\n    this.geometry = this.getLineGeometry();\n    this.line.geometry = this.geometry;\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderActorComponent.html":{"url":"components/LoaderActorComponent.html","title":"component - LoaderActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LoaderActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-loader-actor\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                ring1\n                            \n                            \n                                    Private\n                                ring2\n                            \n                            \n                                    Private\n                                ring3\n                            \n                            \n                                    Private\n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Protected\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {appliedMaterial, provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-loader-actor',\n  providers: [provideParent(LoaderActorComponent)],\n  template: ``\n})\nexport class LoaderActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  animate = true;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  private ring1: THREE.Mesh;\n  private ring2: THREE.Mesh;\n  private ring3: THREE.Mesh;\n\n  private subscribed = false;\n  private i = 0;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('LoaderActorComponent.ngAfterViewInit');\n    this.init();\n    this.start();\n  }\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, 'basic');\n  }\n\n  protected init() {\n    // console.log('LoaderActorComponent.init');\n    const geometry = new THREE.RingGeometry(0.85, 1, 64, 1, 0, Math.PI * 1.8);\n    const material = this.getMaterial();\n\n    this.ring1 = new THREE.Mesh(geometry, material);\n    this.ring1.scale.set(70, 70, 1);\n    this.object.add(this.ring1);\n\n    this.ring2 = new THREE.Mesh(geometry, material);\n    this.ring2.scale.set(60, 60, 1);\n    this.object.add(this.ring2);\n\n    this.ring3 = new THREE.Mesh(geometry, material);\n    this.ring3.scale.set(50, 50, 1);\n    this.object.add(this.ring3);\n\n\n  }\n\n  protected start() {\n    // console.log('LoaderActorComponent.updateText');\n    if (this.animate) {\n      // console.log('LoaderActorComponent.animate init');\n      this.updateAnimation = this.updateAnimation.bind(this);\n      this.animationService.animate.subscribe(this.updateAnimation);\n      this.subscribed = true;\n      this.animationService.start();\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('LoaderActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.stop();\n  }\n\n  protected updateAnimation() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.updateAnimation');\n      this.i++;\n      this.ring1.scale.set(70 + (Math.sin(this.i / 20) * 10) + 12, 70 + (Math.sin(this.i / 20) * 10) + 12, 1);\n\n      this.ring1.rotateZ(Math.sin(this.i / 100) / 5);\n      this.ring2.rotateZ(Math.cos(this.i / 70) / 10);\n      this.ring3.rotateZ(Math.sin(this.i / 50) / 20);\n    }\n  }\n\n  public stop() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.done');\n      this.subscribed = false;\n      this.i = 0;\n      // TODO: this.animationService.animate.unsubscribe();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                minDistance\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n\n  @Input() zoomSpeed = 1.2;\n\n  @Input() autoRotate = false;\n\n  @Input() autoRotateSpeed = 0.5;\n\n  @Input() enableDamping = false;\n\n  @Input() dampingFactor = 0.1;\n\n  @Input() screenSpacePanning = false;\n\n  @Input() minDistance = 20;\n\n  @Input() maxDistance = 200;\n\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n\n  @Input() panSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n      this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeshLineConnectorComponent.html":{"url":"components/MeshLineConnectorComponent.html","title":"component - MeshLineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeshLineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(MeshLineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-mesh-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                            \n                                    Private\n                                lineMaterial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                animationIncrement\n                            \n                            \n                                depthTest\n                            \n                            \n                                depthWrite\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                transparent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animationIncrement\n                    \n                \n                \n                    \n                        Default value : 0.002\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthTest\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        transparent\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lineMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport { provideParent } from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {MeshLine, MeshLineMaterial} from 'three.meshline';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\nimport {AnimationService} from '../../animation/animation.service';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-mesh-line-connector',\n  providers: [provideParent(MeshLineConnectorComponent)],\n  template: ''\n})\nexport class MeshLineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  @Input()\n  transparent = true;\n\n  @Input()\n  opacity = 0.5;\n\n  @Input()\n  lineWidth = 0.5;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  depthTest = true;\n\n  @Input()\n  animated = false;\n\n  @Input() animationIncrement = 0.002;\n\n  private geometry: THREE.BufferGeometry;\n  private line: MeshLine;\n  private lineMaterial: MeshLineMaterial;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  createConnectorObject(): THREE.Mesh {\n    this.geometry = this.getLineGeometry();\n\n    this.line = new MeshLine();\n    const arr = this.geometry.getAttribute('position').array;\n    this.line.setGeometry(arr);\n\n    this.lineMaterial = (this.animated ?\n        new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending,\n          // TODO: props\n          dashArray: 0.05,\n          dashOffset: 0.1,\n          dashRatio: 0.1\n        })\n        : new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending\n        })\n    );\n\n    const mesh = new THREE.Mesh(this.line.geometry, this.lineMaterial);\n    if (this.animated) {\n      this.animate = this.animate.bind(this);\n      this.animationService.animate.subscribe(this.animate);\n    }\n    return mesh;\n  }\n\n  private animate() {\n    this.lineMaterial.uniforms.dashOffset.value += this.animationIncrement;\n  }\n\n  updateLineGeometry(): void {\n    // console.log('MeshLineConnectorComponent.updateLineGeometry');\n    this.geometry = this.getLineGeometry();\n    // https://github.com/spite/THREE.MeshLine/issues/51#issuecomment-379579926\n    this.line.setGeometry(this.geometry);\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeshLineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        face\n                                \n                                \n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face3;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private loader = new OBJLoader();\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    const preloadingStep = new Promise((resolve, reject) => {\n      if (this.material === undefined) {\n        // No preloading necessary\n        resolve();\n      } else {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.loader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      }\n    });\n\n    // Await preloading and load final model\n    return preloadingStep.then(() => {\n      return new Promise((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        }, undefined, reject);\n      });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter>();\n  @Output() click = new EventEmitter>();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit(this.host);\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit(event);\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit(event);\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face3;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:44\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:35\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas);\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWebGlRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EffectComposerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    if (this.init && this.scene && this.camera) {\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SVGLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, appliedMaterial, provideParent } from '../../util';\nimport { fixCenter } from '../../util/fix-center';\nimport { scaleToFit } from '../../util/scale-to-fit';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): number {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: number) {\n    this._overrideMaterialColor = value;\n    this.startLoading();\n  }\n\n  private _overrideMaterialColor: number = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  private loader = new SVGLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, data => {\n          const paths = data.paths;\n          const group = new THREE.Group();\n\n          for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {appliedColor} from '../util/applied-color';\nimport {AbstractObject3D} from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background = 0xffffff;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    return scene;\n  }\n\n  protected updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(appliedColor(this.background));\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n  \n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n      \n\n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextActorComponent.html":{"url":"components/TextActorComponent.html","title":"component - TextActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-actor\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentDelay\n                            \n                            \n                                    Private\n                                currentPos\n                            \n                            \n                                    Private\n                                currentText\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                maxPos\n                            \n                            \n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                done\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                randomInt\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                updateText\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                            \n                                maxDelay\n                            \n                            \n                                minDelay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDelay\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDelay\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            done\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    done()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            randomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomInt(min, max)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateText()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\n\n@Component({\n  selector: 'atft-text-actor',\n  providers: [provideParent(TextActorComponent)],\n  template: `\n    \n    \n  `\n})\nexport class TextActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  text: string;\n\n  @Input()\n  animate = false;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  @Input()\n  minDelay = 5;\n\n  @Input()\n  maxDelay = 10;\n\n  subscribed = false;\n\n  private currentDelay: number;\n  private currentText: string;\n  private currentPos = 0;\n  private maxPos = 0;\n  private i = 0;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('TextActorComponent.ngAfterViewInit');\n    this.updateText();\n  }\n\n  protected updateText() {\n    // console.log('TextActorComponent.updateText');\n    if (this.text && this.text.length > 0) {\n      // console.log('TextActorComponent.updateText', this.text);\n      if (this.animate) {\n        // console.log('TextActorComponent.animate init');\n        if (!this.subscribed) {\n          this.updateAnimation = this.updateAnimation.bind(this);\n          this.animationService.animate.subscribe(this.updateAnimation);\n          this.subscribed = true;\n          this.animationService.start();\n        }\n\n        this.currentPos = 0;\n        this.maxPos = this.text.length;\n        this.currentText = '';\n        this.currentDelay = this.randomInt(this.minDelay, this.maxDelay);\n      } else {\n        this.currentText = this.text;\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('TextActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.done();\n  }\n\n  public updateAnimation() {\n    if (this.subscribed) {\n      // console.log('TextActorComponent.updateAnimation');\n      this.i++;\n      if (this.i % this.currentDelay === 0) {\n        // console.log('TextActorComponent.updateAnimation: step');\n        this.currentPos++;\n        if (this.currentPos  propName in changes)) {\n      this.updateText();\n      modified = true;\n    }\n\n    if (['animate'].some(propName => propName in changes)) {\n      if (this.animate) {\n        this.updateText();\n      } else {\n        this.done();\n        this.currentText = this.text;\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTextMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xDADADA\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fontCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Font\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:82\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:27\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:38\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor = 0xDADADA;\n  @Input()\n  set materialColor(materialColor: number) {\n    // console.log('change color', materialColor);\n    this._materialColor = materialColor;\n    this.startLoading();\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    this.startLoading();\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject');\n\n    if (this.fontCache) {\n      return new Promise(resolve => {\n        resolve(this.getTextMesh(this.fontCache));\n      });\n    } else {\n      return new Promise(resolve => {\n        const loader = new THREE.FontLoader();\n        loader.load(this.fontUrl, font => {\n          this.fontCache = font;\n          resolve(this.getTextMesh(font));\n        });\n      });\n    }\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh');\n    const geometry = new THREE.TextGeometry(this.text, {\n      font: font,\n      size: this.size,\n      height: this.height,\n      curveSegments: this.curveSegments,\n      bevelEnabled: this.bevelEnabled,\n      bevelThickness: this.bevelThickness,\n      bevelSize: this.bevelSize,\n      bevelOffset: this.bevelOffset,\n      bevelSegments: this.bevelOffset\n    });\n\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.castShadow = this.castShadow;\n    mesh.receiveShadow = this.receiveShadow;\n\n    if (this.centered) {\n      fixCenter(mesh);\n    }\n    return mesh;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:26\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:20\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            heightSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            widthSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  protected animate() {\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animationService.animate.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            class\n            AbstractServerActor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            class\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n            \n            component\n            MeshLineConnectorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                11 %\n                (2/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.0.3\n        \n            @angular/common : ^11.0.3\n        \n            @angular/compiler : ^11.0.3\n        \n            @angular/core : ^11.0.3\n        \n            @angular/forms : ^11.0.3\n        \n            @angular/platform-browser : ^11.0.3\n        \n            @angular/platform-browser-dynamic : ^11.0.3\n        \n            @angular/router : ^11.0.3\n        \n            core-js : ^3.8.0\n        \n            rxjs : ^6.6.3\n        \n            snyk : ^1.434.0\n        \n            three : ^0.123.0\n        \n            three.meshline : ^1.3.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    42 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
