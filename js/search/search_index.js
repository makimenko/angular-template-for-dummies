var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.331,1,2.684]],["body/injectables/AbstractAssetService.html",[0,1.867,1,3.765,2,2.164,3,0.11,4,0.188,5,0.088,6,5.92,7,3.318,8,0.356,9,1.141,10,1.716,11,4.769,12,1.238,13,0.877,14,0.751,15,1.945,16,4.849,17,4.849,18,4.849,19,4.849,20,4.166,21,4.849,22,4.849,23,1.043,24,0.955,25,6.053,26,4.206,27,2.828,28,4.471,29,0.953,30,0.01,31,0.681,32,0.645,33,0.785,34,1.166,35,0.945,36,4.922,37,4.206,38,5.725,39,4.471,40,4.206,41,4.491,42,4.471,43,4.491,44,4.471,45,4.491,46,4.471,47,4.491,48,4.471,49,4.067,50,1.141,51,4.491,52,4.471,53,1.087,54,0.718,55,0.699,56,0.972,57,4.471,58,0.11,59,0.178,60,1.782,61,3.318,62,3.318,63,0.148,64,1.582,65,2.781,66,4.206,67,0.121,68,3.318,69,3.935,70,3.935,71,3.935,72,1.582,73,3.935,74,3.935,75,1.268,76,3.935,77,3.935,78,3.935,79,5.327,80,5.327,81,3.935,82,3.935,83,3.107,84,3.935,85,3.318,86,3.935,87,0.005,88,0.007,89,0.005]],["title/classes/AbstractCacheService.html",[67,0.116,90,2.829]],["body/classes/AbstractCacheService.html",[3,0.143,4,0.143,5,0.115,6,5.658,8,0.466,9,1.358,10,1.617,12,1.33,14,0.893,15,1.718,24,0.882,27,2.698,29,0.867,30,0.01,31,0.619,32,0.574,33,0.714,35,0.84,49,4.955,53,1.064,54,0.939,55,0.914,56,1.156,60,1.809,63,0.143,67,0.158,75,1.188,87,0.006,88,0.008,89,0.006,90,4.722,91,4.34,92,5.148,93,5.79,94,5.344,95,4.624,96,5.004,97,5.849,98,5.344,99,5.849,100,5.339,101,5.344,102,5.849,103,7.803,104,5.849,105,5.849,106,5.849,107,5.849,108,7.803,109,5.849,110,5.849]],["title/classes/AbstractComposeEffect.html",[67,0.116,111,2.829]],["body/classes/AbstractComposeEffect.html",[3,0.119,4,0.119,5,0.095,8,0.387,9,1.207,10,1.643,12,1.35,14,0.794,15,1.787,23,0.973,24,0.96,29,0.861,30,0.01,31,0.615,32,0.606,33,0.783,35,0.965,36,3.626,50,1.53,54,0.781,55,0.759,58,0.186,59,0.193,63,0.119,67,0.131,75,0.802,87,0.005,88,0.007,89,0.005,91,3.606,111,4.196,112,7.544,113,5.957,114,4.277,115,1.824,116,3.231,117,2.934,118,3.463,119,5.284,120,4.749,121,4.73,122,4.308,123,5.643,124,3.217,125,2.89,126,2.849,127,1.07,128,1.53,129,4.691,130,1.255,131,6.4,132,4.749,133,3.735,134,4.86,135,2.796,136,3.626,137,4.86,138,4.86,139,4.86,140,4.86,141,2.89,142,4.86,143,4.86,144,1.644,145,1.315,146,0.893,147,3.377,148,4.277,149,4.86,150,3.377,151,5.127,152,4.86,153,4.86,154,4.86,155,6.4,156,4.277,157,3.733,158,4.86,159,4.86,160,4.86,161,3.893,162,4.86,163,4.86]],["title/injectables/ActorRepositoryService.html",[0,1.331,164,2.829]],["body/injectables/ActorRepositoryService.html",[0,2.098,2,2.584,3,0.131,4,0.131,5,0.105,8,0.425,9,1.282,12,1.321,14,0.844,15,1.833,23,1.034,24,0.92,27,2.712,29,0.901,30,0.01,31,0.644,32,0.682,33,0.742,35,0.793,50,1.282,53,1.005,54,0.857,55,0.834,56,1.092,58,0.167,59,0.212,60,1.577,63,0.131,67,0.144,75,0.881,87,0.008,88,0.008,89,0.006,164,4.459,165,2.944,166,7.323,167,4.698,168,7.485,169,7.485,170,6.801,171,5.448,172,5.339,173,6.935,174,6.801,175,5.985,176,6.801,177,5.339,178,6.935,179,7.485,180,6.801,181,0.136,182,5.339,183,5.339,184,1.153,185,1.153,186,1.153,187,1.153,188,1.153,189,1.153,190,0.98,191,5.339,192,5.339,193,5.339,194,5.339,195,5.339,196,5.339,197,5.339,198,7.485,199,5.339,200,5.339,201,5.339,202,5.339]],["title/components/AmbientLightComponent.html",[181,0.074,203,0.751]],["body/components/AmbientLightComponent.html",[3,0.097,4,0.097,5,0.077,8,0.314,10,0.783,12,1.147,13,0.709,14,0.688,23,0.843,24,0.788,29,0.474,30,0.01,31,0.599,32,0.314,33,0.636,34,0.55,35,0.46,53,0.582,54,0.891,55,0.867,56,0.633,58,0.18,59,0.157,60,0.914,63,0.097,67,0.106,75,0.65,87,0.004,88,0.006,89,0.004,127,0.868,128,1.436,130,0.65,144,1.425,145,1.066,146,0.724,181,0.111,184,0.668,185,0.668,186,0.668,187,0.668,188,0.668,189,0.668,190,1.28,203,1.213,204,0.915,205,0.763,206,0.763,207,6.464,208,2.738,209,0.867,210,2.008,211,0.633,212,4.444,213,1.549,214,1.427,215,1.21,216,4.842,217,1.046,218,2.771,219,1.286,220,2.716,221,4.764,222,1.986,223,4.116,224,3.288,225,3.468,226,5.548,227,3.941,228,1.378,229,1.286,230,2.056,231,0.89,232,0.89,233,0.891,234,1.184,235,0.987,236,3.941,237,3.941,238,3.157,239,0.446,240,1.046,241,1.046,242,0.534,243,1.349,244,0.763,245,1.349,246,0.686,247,0.743,248,1.074,249,0.686,250,0.763,251,0.686,252,0.724,253,1.572,254,0.686,255,0.743,256,0.763,257,0.686,258,0.743,259,0.686,260,1.179,261,0.763,262,0.705,263,0.763,264,0.686,265,0.763,266,0.686,267,0.763,268,0.686,269,0.705,270,0.763,271,0.686,272,0.743,273,0.686,274,0.763,275,0.686,276,0.763,277,0.763,278,0.763,279,0.686,280,0.763,281,0.686,282,0.763,283,0.686,284,0.705,285,0.686,286,1.179,287,1.572,288,0.686,289,0.686,290,0.686,291,0.743,292,0.686,293,0.763,294,0.686,295,0.724,296,0.763,297,0.686,298,0.668,299,0.686,300,1.074,301,0.633,302,0.686,303,1.242,304,0.686,305,0.686,306,0.686,307,0.743,308,0.686,309,0.743,310,1.074,311,0.686,312,0.743,313,0.686,314,0.724,315,0.686,316,0.743,317,0.686,318,0.686,319,0.763,320,0.65,321,0.763,322,0.724,323,0.724,324,0.724,325,0.686,326,0.743,327,0.686,328,0.724,329,0.686,330,1.046,331,0.686,332,0.686,333,0.743,334,0.686,335,0.743,336,0.763,337,0.743,338,0.633,339,0.668,340,0.705,341,0.763,342,0.668,343,1.003,344,0.763,345,0.668,346,0.763,347,0.65,348,0.763,349,0.668,350,0.705,351,0.705,352,0.743,353,0.763]],["title/injectables/AnimationService.html",[0,1.331,354,2.166]],["body/injectables/AnimationService.html",[0,1.948,2,2.306,3,0.117,4,0.117,5,0.094,8,0.38,9,1.191,14,0.784,15,1.863,23,0.96,24,0.912,29,0.573,30,0.01,31,0.41,32,0.38,33,0.472,35,0.827,50,1.336,54,1.014,55,0.987,56,1.014,58,0.155,59,0.189,63,0.117,67,0.128,72,1.686,87,0.005,88,0.007,89,0.005,127,1.049,128,1.521,145,1.289,157,2.485,204,1.295,284,1.349,318,0.83,354,4.323,355,4.193,356,3.124,357,3.743,358,6.044,359,6.316,360,5.059,361,4.097,362,4.687,363,5.558,364,6.316,365,4.687,366,5.558,367,6.316,368,6.316,369,4.263,370,7.545,371,7.545,372,7.086,373,4.645,374,2.525,375,6.044,376,7.545,377,7.1,378,6.463,379,6.316,380,4.764,381,4.764,382,4.687,383,4.764,384,6.316,385,4.014,386,4.764,387,5.059,388,6.316,389,6.316,390,4.141,391,6.316,392,6.316,393,6.316,394,6.316,395,5.257,396,2.307,397,6.316,398,4.764,399,4.764,400,6.463,401,1.51,402,4.764,403,4.764,404,6.316,405,4.764,406,4.764,407,4.764,408,4.764,409,3.816,410,3.816,411,4.764]],["title/modules/AtftAnimationModule.html",[412,1,413,2.998]],["body/modules/AtftAnimationModule.html",[3,0.161,4,0.161,5,0.129,13,1.048,30,0.01,58,0.189,59,0.261,63,0.161,67,0.177,87,0.007,88,0.009,89,0.007,239,0.741,354,4.389,412,1.52,413,6.075,414,2.456,415,2.456,416,2.607,417,2.607,418,2.607,419,5.769,420,5.769,421,2.89,422,2.53,423,2.53,424,6.556,425,6.556,426,3.162,427,6.556]],["title/modules/AtftCameraModule.html",[412,1,428,2.998]],["body/modules/AtftCameraModule.html",[3,0.15,4,0.15,5,0.12,13,0.784,30,0.01,58,0.203,59,0.244,63,0.15,67,0.165,87,0.007,88,0.008,89,0.007,239,0.693,308,1.562,309,1.155,311,1.562,312,1.155,412,1.421,414,2.296,415,2.296,416,3.167,417,2.437,418,3.167,421,2.776,422,2.365,423,2.365,426,3.038,428,6.182,429,5.393,430,5.393,431,5.393,432,6.128,433,6.128,434,3.237,435,2.592,436,7.409,437,2.512]],["title/modules/AtftConnectorModule.html",[412,1,438,2.998]],["body/modules/AtftConnectorModule.html",[3,0.155,4,0.155,5,0.124,13,0.809,30,0.01,58,0.198,59,0.252,63,0.155,67,0.171,87,0.007,88,0.008,89,0.007,239,0.716,294,1.568,295,1.162,412,1.467,414,2.372,415,2.372,416,3.211,417,2.517,418,3.211,421,2.831,422,2.442,423,2.442,426,3.097,434,3.3,435,2.678,437,2.595,438,6.091,439,5.57,440,5.57,441,5.57,442,6.33,443,6.33,444,6.33]],["title/modules/AtftControlModule.html",[412,1,445,2.998]],["body/modules/AtftControlModule.html",[3,0.15,4,0.15,5,0.12,13,0.784,30,0.01,53,0.906,58,0.203,59,0.244,63,0.15,67,0.165,87,0.007,88,0.008,89,0.007,239,0.693,299,1.562,306,1.562,307,1.155,412,1.421,414,2.296,415,2.296,416,3.167,417,2.437,418,3.167,421,2.776,422,2.365,423,2.365,426,3.038,434,3.237,435,2.592,437,2.512,445,6.182,446,5.393,447,5.393,448,5.393,449,6.128,450,6.128,451,7.409]],["title/modules/AtftDataCenterActorModule.html",[412,1,452,3.202]],["body/modules/AtftDataCenterActorModule.html",[3,0.106,4,0.106,5,0.085,13,0.862,30,0.01,34,0.603,58,0.211,59,0.172,63,0.106,67,0.116,87,0.005,88,0.007,89,0.005,164,5.139,165,1.527,184,1.466,185,1.466,186,1.466,187,1.466,188,1.466,189,1.466,190,0.793,239,0.488,259,1.505,262,1.546,264,1.486,266,1.505,268,1.486,285,1.486,292,1.486,322,0.793,323,0.793,324,0.793,358,3.457,412,1.001,414,1.617,415,1.617,416,2.679,417,1.716,418,2.679,421,2.214,422,1.665,423,1.665,426,2.423,434,2.581,435,1.826,437,2.423,452,6.782,453,3.798,454,3.798,455,3.798,456,3.798,457,3.798,458,4.876,459,4.316,460,3.457,461,3.202,462,3.798,463,5.909,464,4.316,465,7.063,466,3.798,467,7.247,468,4.316,469,4.316,470,2.344]],["title/modules/AtftEffectModule.html",[412,1,471,2.998]],["body/modules/AtftEffectModule.html",[3,0.134,4,0.134,5,0.107,13,0.698,30,0.01,58,0.211,59,0.217,63,0.134,67,0.147,87,0.006,88,0.008,89,0.006,130,1.459,147,3.794,239,0.617,249,1.539,273,1.539,275,1.539,281,1.539,339,1.499,340,0.976,412,1.266,414,2.046,415,2.046,416,3.007,417,2.171,418,3.007,421,2.585,422,2.107,423,2.107,426,2.828,434,3.014,435,2.31,437,2.238,471,6.304,472,4.805,473,4.805,474,4.805,475,5.46,476,5.46,477,5.46,478,5.46,479,5.46,480,5.46,481,5.46,482,5.46,483,5.46]],["title/modules/AtftHelperModule.html",[412,1,484,2.998]],["body/modules/AtftHelperModule.html",[3,0.146,4,0.146,5,0.117,13,0.761,30,0.01,58,0.206,59,0.236,63,0.146,67,0.16,87,0.007,88,0.008,89,0.007,239,0.673,246,1.557,247,1.121,279,1.557,286,1.092,288,1.557,412,1.379,414,2.229,415,2.229,416,3.126,417,2.365,418,3.126,421,2.726,422,2.295,423,2.295,426,2.983,434,3.179,435,2.516,437,2.439,484,6.234,485,5.235,486,5.235,487,5.235,488,5.949,489,5.949,490,7.276,491,5.949]],["title/modules/AtftLightModule.html",[412,1,492,2.998]],["body/modules/AtftLightModule.html",[3,0.14,4,0.14,5,0.112,13,0.729,30,0.01,58,0.207,59,0.227,63,0.14,67,0.154,87,0.006,88,0.008,89,0.006,203,1.56,212,6.179,215,1.075,239,0.645,271,1.548,272,1.075,290,1.548,291,1.075,315,1.548,316,1.075,412,1.322,414,2.136,415,2.136,416,3.067,417,2.267,418,3.067,421,2.656,422,2.2,423,2.2,426,2.906,434,3.097,435,2.412,437,2.338,492,6.258,493,5.018,494,5.018,495,5.018,496,5.018,497,5.702,498,5.702,499,8.071]],["title/modules/AtftLoaderModule.html",[412,1,500,2.998]],["body/modules/AtftLoaderModule.html",[3,0.146,4,0.146,5,0.117,13,0.759,30,0.01,58,0.206,59,0.236,63,0.146,67,0.16,87,0.007,88,0.008,89,0.007,233,0.954,239,0.671,302,1.556,304,1.556,305,1.034,327,1.556,328,1.091,412,1.377,414,2.225,415,2.225,416,3.124,417,2.362,418,3.124,421,2.724,422,2.292,423,2.292,426,2.98,434,3.176,435,2.513,437,2.435,500,6.232,501,5.227,502,5.227,503,5.227,504,5.939,505,5.939,506,7.856]],["title/modules/AtftMeshModule.html",[412,1,507,2.998]],["body/modules/AtftMeshModule.html",[3,0.126,4,0.126,5,0.101,13,0.658,30,0.01,58,0.212,59,0.204,63,0.126,67,0.139,87,0.006,88,0.007,89,0.006,239,0.582,251,1.527,252,0.945,257,1.527,258,0.97,283,1.527,284,0.92,286,0.945,289,1.527,313,1.527,314,0.945,325,1.527,326,0.97,332,1.527,333,0.97,334,1.527,335,0.97,412,1.193,414,1.928,415,1.928,416,2.925,417,2.046,418,2.925,421,2.489,422,1.986,423,1.986,426,2.723,434,2.902,435,2.177,437,2.11,507,6.324,508,4.529,509,4.529,510,4.529,511,5.146,512,5.146,513,7.477]],["title/modules/AtftModule.html",[412,1,458,2.684]],["body/modules/AtftModule.html",[3,0.124,4,0.124,5,0.1,13,0.648,30,0.01,55,0.792,58,0.213,59,0.202,63,0.124,67,0.137,87,0.006,88,0.007,89,0.006,239,0.573,365,3.763,412,1.526,413,6.08,414,1.9,415,1.9,416,2.017,417,2.017,418,2.905,421,2.466,422,1.957,423,1.957,426,2.698,428,6.08,437,2.995,445,6.08,458,5.661,471,6.08,514,4.463,515,4.463,516,4.463,517,6.08,518,6.08,519,6.08,520,6.08,521,5.072,522,5.072,523,5.072,524,5.072,525,5.072,526,5.072,527,5.072,528,5.076,529,5.072,530,5.072,531,5.072,532,5.072,533,5.072,534,5.072,535,5.072,536,5.072,537,5.072,538,5.072,539,5.072,540,4.463,541,4.463,542,4.463,543,2.754,544,5.072,545,4.463,546,5.072]],["title/modules/AtftObjectModule.html",[412,1,517,2.998]],["body/modules/AtftObjectModule.html",[3,0.119,4,0.119,5,0.095,13,0.914,30,0.01,58,0.212,59,0.193,63,0.119,67,0.131,87,0.005,88,0.007,89,0.005,239,0.549,254,1.412,255,0.915,298,0.823,320,1.435,412,1.125,414,1.819,415,1.819,416,2.843,417,1.93,418,2.843,421,2.396,422,1.873,423,1.873,426,2.622,434,2.794,435,2.054,437,2.622,438,6.041,484,6.041,492,6.041,500,6.041,507,6.041,517,6.35,547,4.272,548,4.272,549,4.272,550,4.272,551,4.272,552,6.041,553,5.318,554,4.595,555,5.318,556,5.318,557,5.318,558,4.854,559,4.854,560,4.854,561,4.854,562,4.854,563,4.854,564,4.854,565,4.854,566,4.854,567,4.854,568,4.854,569,4.854,570,4.854,571,4.854,572,4.854,573,4.854]],["title/modules/AtftPipeModule.html",[412,1,528,2.998]],["body/modules/AtftPipeModule.html",[3,0.151,4,0.151,5,0.121,13,0.786,30,0.01,58,0.203,59,0.244,63,0.151,67,0.166,87,0.007,88,0.008,89,0.007,239,0.695,412,1.425,414,2.304,415,2.304,416,3.171,417,2.445,418,3.171,421,2.782,422,2.372,423,2.372,426,3.044,434,3.243,435,2.601,437,2.521,528,6.185,574,5.41,575,5.41,576,5.41,577,6.237,578,6.237,579,6.148,580,6.148,581,6.148,582,6.148]],["title/modules/AtftRaycasterModule.html",[412,1,518,2.998]],["body/modules/AtftRaycasterModule.html",[3,0.142,4,0.142,5,0.114,13,0.994,30,0.01,58,0.208,59,0.23,63,0.142,67,0.156,87,0.006,88,0.008,89,0.006,239,0.655,342,1.511,343,1.214,345,1.511,347,1.47,412,1.344,414,2.172,415,2.172,416,3.09,417,2.305,418,3.09,421,2.683,422,2.237,423,2.237,426,2.936,434,3.128,435,2.452,437,2.376,518,6.252,583,5.101,584,5.101,585,5.101,586,5.101,587,4.111,588,5.796,589,5.796,590,5.796,591,4.028,592,5.796,593,5.796]],["title/modules/AtftRendererModule.html",[412,1,519,2.998]],["body/modules/AtftRendererModule.html",[3,0.148,4,0.148,5,0.119,13,1.013,30,0.01,58,0.207,59,0.241,63,0.148,67,0.163,87,0.007,88,0.008,89,0.007,128,1.619,239,0.685,317,1.56,318,1.055,412,1.405,414,2.271,415,2.271,416,3.152,417,2.41,418,3.152,421,2.758,422,2.339,423,2.339,426,3.017,434,3.215,435,2.564,437,2.485,519,6.202,594,5.334,595,5.334,596,5.334,597,5.334,598,5.63,599,6.061,600,6.061,601,6.061,602,5.334,603,5.334]],["title/modules/AtftStatsModule.html",[412,1,520,2.998]],["body/modules/AtftStatsModule.html",[3,0.151,4,0.151,5,0.121,13,1.021,30,0.01,58,0.203,59,0.245,63,0.151,67,0.166,87,0.007,88,0.008,89,0.007,239,0.697,349,1.522,350,1.103,351,1.103,412,1.43,414,2.311,415,2.311,416,3.175,417,2.452,418,3.175,421,2.787,422,2.38,423,2.38,426,3.049,434,3.249,435,2.609,437,2.529,520,6.154,604,5.428,605,5.428,606,5.428,607,5.428,608,5.363,609,6.168,610,5.428,611,6.168]],["title/modules/AtftTextModule.html",[412,1,552,2.998]],["body/modules/AtftTextModule.html",[3,0.155,4,0.155,5,0.124,13,0.809,30,0.01,58,0.198,59,0.252,63,0.155,67,0.171,87,0.007,88,0.008,89,0.007,239,0.716,330,1.193,331,1.568,412,1.467,414,2.372,415,2.372,416,3.211,417,2.517,418,3.211,421,2.831,422,2.442,423,2.442,426,3.097,434,3.3,435,2.678,437,2.595,513,5.57,552,6.091,612,5.57,613,5.57,614,5.57,615,6.33,616,6.33]],["title/components/AxesHelperComponent.html",[181,0.074,246,0.751]],["body/components/AxesHelperComponent.html",[3,0.098,4,0.098,5,0.079,8,0.32,10,0.797,12,1.155,13,0.718,14,0.697,23,0.853,24,0.733,29,0.483,30,0.01,31,0.604,32,0.32,33,0.643,34,0.56,35,0.468,53,0.593,54,0.644,55,0.627,56,0.644,58,0.181,59,0.159,63,0.098,67,0.108,75,0.662,87,0.004,88,0.006,89,0.004,127,0.883,128,1.444,130,0.662,144,1.443,145,1.085,146,0.736,181,0.112,184,0.68,185,0.68,186,0.68,187,0.68,188,0.68,189,0.68,190,1.29,203,0.698,204,0.927,205,0.776,206,0.776,209,0.877,210,2.02,211,0.644,213,1.55,214,1.428,215,0.756,217,1.059,218,2.792,219,1.302,222,2.001,228,1.206,229,1.302,231,0.906,232,0.906,233,0.902,234,1.205,235,1.004,239,0.453,240,1.059,241,1.059,242,0.544,243,1.359,244,0.776,245,1.359,246,1.223,247,1.222,248,1.087,249,0.698,250,0.776,251,0.698,252,0.736,253,1.578,254,0.698,255,0.756,256,0.776,257,0.698,258,0.756,259,0.698,260,1.187,261,0.776,262,0.717,263,0.776,264,0.698,265,0.776,266,0.698,267,0.776,268,0.698,269,0.717,270,0.776,271,0.698,272,0.756,273,0.698,274,0.776,275,0.698,276,0.776,277,0.776,278,0.776,279,0.698,280,0.776,281,0.698,282,0.776,283,0.698,284,0.717,285,0.698,286,1.19,287,1.578,288,0.698,289,0.698,290,0.698,291,0.756,292,0.698,293,0.776,294,0.698,295,0.736,296,0.776,297,0.698,298,0.68,299,0.698,300,1.087,301,0.644,302,0.698,303,1.254,304,0.698,305,0.698,306,0.698,307,0.756,308,0.698,309,0.756,310,1.087,311,0.698,312,0.756,313,0.698,314,0.736,315,0.698,316,0.756,317,0.698,318,0.698,319,0.776,320,0.662,321,0.776,322,0.736,323,0.736,324,0.736,325,0.698,326,0.756,327,0.698,328,0.736,329,0.698,330,1.059,331,0.698,332,0.698,333,0.756,334,0.698,335,0.756,336,0.776,337,0.756,338,0.644,339,0.68,340,0.717,341,0.776,342,0.68,343,1.013,344,0.776,345,0.68,346,0.776,347,0.662,348,0.776,349,0.68,350,0.717,351,0.717,352,0.756,353,0.776,617,6.18,618,3.212,619,5.616,620,4.943,621,4.249,622,4.943,623,4.499,624,4.01,625,4.943,626,4.01,627,4.01]],["title/interfaces/BaseAssetSource.html",[64,1.527,65,2.684]],["body/interfaces/BaseAssetSource.html",[0,2.144,1,3.435,3,0.135,4,0.186,5,0.108,6,3.837,7,4.097,8,0.44,9,1.31,10,1.633,11,3.837,12,1.086,13,0.706,15,1.849,20,3.128,23,0.839,26,3.837,27,2.775,30,0.01,32,0.44,34,1.148,36,4.755,37,3.837,38,5.832,40,3.837,41,4.097,43,4.097,45,4.097,47,4.097,49,3.273,51,4.097,53,1.027,56,0.887,58,0.135,59,0.219,60,1.906,61,4.097,62,4.097,63,0.17,64,1.954,65,4.322,66,5.713,67,0.149,68,4.097,69,4.86,70,4.86,71,4.86,72,1.954,73,4.86,74,4.86,75,1.357,76,4.86,77,4.86,78,4.86,79,6.115,80,6.115,81,4.86,82,4.86,83,3.837,84,4.86,85,4.097,86,4.86,87,0.006,88,0.008,89,0.006,628,2.999]],["title/interfaces/BaseInfo.html",[64,1.527,629,2.557]],["body/interfaces/BaseInfo.html",[3,0.148,4,0.148,5,0.118,8,0.48,9,1.382,27,2.869,30,0.01,31,0.707,32,0.672,33,0.815,34,0.841,58,0.148,63,0.207,64,2.983,87,0.007,88,0.008,89,0.007,165,2.131,209,1.235,220,2.548,260,1.177,301,0.967,470,3.27,628,3.27,629,4.997,630,2.915,631,3.949,632,4.578,633,4.466,634,3.142,635,3.949,636,3.412,637,1.909,638,3.27,639,3.949,640,4.185,641,4.292,642,3.949,643,3.27]],["title/injectables/BloomService.html",[0,1.331,598,2.829]],["body/injectables/BloomService.html",[0,1.668,2,1.839,3,0.093,4,0.093,5,0.075,8,0.303,9,1.019,12,1.353,14,0.671,15,1.774,20,3.063,23,0.957,24,0.944,29,0.825,30,0.01,31,0.541,32,0.577,33,0.624,35,0.8,50,1.493,54,1.101,55,1.176,56,1.341,58,0.197,59,0.151,60,1.868,63,0.132,67,0.103,72,1.345,87,0.004,88,0.006,89,0.004,229,1.459,305,0.942,318,0.942,369,3.723,374,2.519,390,2.492,396,2.359,401,1.995,409,4.331,598,3.545,641,2.936,644,3.044,645,6.295,646,6.295,647,6.295,648,6.295,649,6.295,650,6.295,651,4.925,652,5.408,653,5.408,654,5.408,655,5.408,656,3.801,657,5.408,658,5.492,659,5.803,660,4.104,661,6.295,662,3.801,663,3.801,664,5.408,665,3.801,666,6.376,667,3.801,668,5.408,669,3.801,670,4.759,671,4.759,672,3.801,673,3.801,674,3.801,675,3.801,676,3.345,677,3.345,678,3.801,679,3.801,680,3.345,681,4.331,682,3.044,683,5.408,684,3.801,685,3.801,686,3.801,687,3.044,688,3.801,689,2.358,690,5.042,691,4.759,692,4.759,693,6.376,694,3.345,695,3.345,696,3.345,697,3.345,698,4.759,699,3.063,700,5.042,701,4.759,702,4.759,703,6.034,704,5.539,705,3.345,706,4.759,707,3.801,708,3.044,709,3.801,710,3.801,711,3.801,712,3.801,713,3.801,714,3.801,715,4.374,716,1.66,717,3.757,718,3.801,719,3.801,720,3.801,721,6.295,722,3.801,723,3.801,724,2.641,725,3.801,726,3.801,727,5.408,728,3.801,729,1.983,730,3.801,731,3.801,732,3.801,733,3.801,734,3.801,735,3.801,736,2.492,737,3.801,738,3.801,739,3.801,740,3.801,741,3.801,742,3.801,743,3.801,744,3.801,745,3.801,746,6.857,747,3.801,748,3.801,749,5.408,750,3.801,751,3.801,752,3.801,753,3.801,754,5.408,755,3.801,756,3.801,757,6.857,758,6.295,759,3.801,760,3.801]],["title/components/BlurComponent.html",[181,0.074,249,0.751]],["body/components/BlurComponent.html",[3,0.088,4,0.088,5,0.071,8,0.286,9,0.979,10,1.408,12,1.219,14,0.644,15,1.471,23,0.789,24,0.924,29,0.804,30,0.01,31,0.655,32,0.565,33,0.732,34,0.501,35,0.927,36,2.035,50,1.393,53,0.531,54,0.577,55,0.561,58,0.187,59,0.143,63,0.088,67,0.097,75,0.593,87,0.004,88,0.006,89,0.004,111,5.358,113,2.496,119,3.608,120,4.958,121,3.793,122,3.455,123,5.652,124,2.58,125,2.345,126,2.285,127,0.791,128,1.393,129,4.381,130,1.17,132,4.525,133,3.522,135,2.919,136,2.942,141,1.622,144,1.334,145,0.972,146,1.12,147,2.496,181,0.105,184,0.609,185,0.609,186,0.609,187,0.609,188,0.609,189,0.609,190,1.227,203,0.625,204,0.857,205,0.695,206,0.695,209,0.811,211,0.577,213,1.542,214,1.421,215,0.677,217,0.677,233,0.577,235,0.899,239,0.406,240,0.979,241,0.979,242,0.487,243,1.293,244,0.695,245,1.293,246,0.625,247,0.677,248,1.005,249,1.163,250,0.695,251,0.625,252,0.66,253,1.538,254,0.625,255,0.677,256,0.695,257,0.625,258,0.677,259,0.625,260,1.138,261,0.695,262,0.642,263,0.695,264,0.625,265,0.695,266,0.625,267,0.695,268,0.625,269,0.642,270,0.695,271,0.625,272,0.677,273,0.625,274,0.695,275,0.625,276,0.695,277,0.695,278,0.695,279,0.625,280,0.695,281,0.625,282,0.695,283,0.625,284,0.642,285,0.625,286,1.12,287,1.538,288,0.625,289,0.625,290,0.625,291,0.677,292,0.625,293,0.695,294,0.625,295,0.66,296,0.695,297,0.625,298,0.609,299,0.625,300,1.005,301,0.577,302,0.625,303,1.18,304,0.625,305,0.625,306,0.625,307,0.677,308,0.625,309,0.677,310,1.005,311,0.625,312,0.677,313,0.625,314,0.66,315,0.625,316,0.677,317,0.625,318,0.625,319,0.695,320,0.593,321,0.695,322,0.66,323,0.66,324,0.66,325,0.625,326,0.677,327,0.625,328,0.66,329,0.625,330,0.979,331,0.625,332,0.625,333,0.677,334,0.625,335,0.677,336,0.695,337,0.677,338,0.577,339,0.609,340,0.642,341,0.695,342,0.609,343,0.953,344,0.695,345,0.609,346,0.695,347,0.593,348,0.695,349,0.609,350,0.642,351,0.642,352,0.677,353,0.695,396,1.169,681,2.877,682,2.877,729,1.874,761,3.161,762,5.193,763,3.592,764,3.592,765,3.592,766,4.069,767,2.877,768,2.877,769,2.877,770,2.877,771,2.877,772,2.877,773,2.877,774,2.877,775,3.592,776,3.592,777,3.592,778,3.592,779,5.352,780,5.193,781,5.193,782,2.877]],["title/components/BoxMeshComponent.html",[181,0.074,251,0.751]],["body/components/BoxMeshComponent.html",[3,0.08,4,0.08,5,0.064,8,0.26,10,0.96,12,1.064,13,0.618,14,0.6,23,0.735,24,0.858,29,0.392,30,0.01,31,0.548,32,0.26,33,0.825,34,0.455,35,0.38,53,0.481,54,1.146,55,1.115,56,0.776,58,0.175,59,0.129,60,1.336,63,0.08,67,0.088,75,0.538,87,0.004,88,0.005,89,0.004,127,0.717,128,1.345,130,0.538,144,1.242,145,0.881,146,0.598,181,0.099,184,0.552,185,0.552,186,0.552,187,0.552,188,0.552,189,0.552,190,1.171,203,0.567,204,0.798,205,0.63,206,0.63,209,0.755,210,1.681,211,0.523,213,1.535,214,1.414,215,0.614,217,0.911,218,2.536,219,1.121,222,1.817,228,1.586,229,1.121,231,0.736,232,0.736,233,0.776,234,1.452,235,0.816,239,0.368,240,0.911,241,0.911,242,0.442,243,1.234,244,0.63,245,1.234,246,0.567,247,0.614,248,0.935,249,0.567,250,0.63,251,1.111,252,1.058,253,1.5,254,0.567,255,0.614,256,0.63,257,0.567,258,0.614,259,0.567,260,1.094,261,0.63,262,0.583,263,0.63,264,0.567,265,0.63,266,0.567,267,0.63,268,0.567,269,0.583,270,0.63,271,0.567,272,0.614,273,0.567,274,0.63,275,0.567,276,0.63,277,0.63,278,0.63,279,0.567,280,0.63,281,0.567,282,0.63,283,0.567,284,0.583,285,0.567,286,1.058,287,1.5,288,0.567,289,0.567,290,0.567,291,0.614,292,0.567,293,0.63,294,0.567,295,0.598,296,0.63,297,0.567,298,0.552,299,0.567,300,0.935,301,0.523,302,0.567,303,1.115,304,0.567,305,0.567,306,0.567,307,0.614,308,0.567,309,0.614,310,0.935,311,0.567,312,0.614,313,0.567,314,0.598,315,0.567,316,0.614,317,0.567,318,0.567,319,0.63,320,0.538,321,0.63,322,0.598,323,0.598,324,0.598,325,0.567,326,0.614,327,0.567,328,0.598,329,0.567,330,0.911,331,0.567,332,0.567,333,0.614,334,0.567,335,0.614,336,0.63,337,0.614,338,0.523,339,0.552,340,0.583,341,0.63,342,0.552,343,0.901,344,0.63,345,0.552,346,0.63,347,0.538,348,0.63,349,0.552,350,0.583,351,0.583,352,0.614,353,0.63,637,2.261,643,3.875,689,3.179,699,4.043,783,6.822,784,1.769,785,3.416,786,4.834,787,3.699,788,6.502,789,5.764,790,3.452,791,4.277,792,4.378,793,4.277,794,4.834,795,2.609,796,5.717,797,5.717,798,4.834,799,5.717,800,6.489,801,6.281,802,6.281,803,6.281,804,6.281,805,6.281,806,2.609,807,3.169,808,3.258,809,2.417,810,3.169,811,2.867,812,3.258,813,3.258,814,1.522,815,3.258,816,2.136,817,3.258,818,2.417,819,2.417,820,3.258,821,2.34,822,1.845,823,1.845,824,2.026]],["title/interfaces/Composition.html",[64,1.527,632,2.343]],["body/interfaces/Composition.html",[3,0.151,4,0.151,5,0.121,8,0.491,9,1.401,27,2.845,30,0.01,31,0.53,32,0.636,33,0.737,34,0.86,58,0.151,63,0.208,64,3.001,87,0.007,88,0.008,89,0.007,165,2.179,209,1.295,220,2.605,260,1.193,301,0.989,470,3.344,628,3.344,629,5.027,630,2.98,631,4.037,632,4.334,633,3.344,634,3.212,635,5.434,636,3.488,637,1.951,638,3.344,639,4.037,640,4.279,641,4.334,642,4.037,643,3.344]],["title/components/ContentProjectionComponent.html",[181,0.074,254,0.751]],["body/components/ContentProjectionComponent.html",[3,0.095,4,0.095,5,0.076,8,0.311,9,1.038,10,0.774,12,1.083,13,0.704,14,0.683,23,0.836,24,0.784,29,0.662,30,0.01,31,0.653,32,0.509,33,0.687,34,0.544,35,0.642,50,0.735,53,0.576,58,0.186,59,0.155,63,0.095,67,0.105,83,2.708,87,0.004,88,0.006,89,0.004,127,0.858,128,1.431,130,0.643,144,1.414,145,1.054,146,0.716,150,2.708,181,0.11,184,0.661,185,0.661,186,0.661,187,0.661,188,0.661,189,0.661,190,1.273,203,0.679,204,0.908,205,0.754,206,0.754,209,0.86,210,2.136,211,0.626,213,1.548,214,1.426,215,0.735,217,1.038,218,2.537,222,1.976,229,1.276,231,0.881,232,0.881,233,1.175,234,1.171,235,0.976,239,0.441,240,1.038,241,1.038,242,0.746,243,1.342,244,0.754,245,1.342,246,0.679,247,0.735,248,1.065,249,0.679,250,0.754,251,0.679,252,0.716,253,1.568,254,1.207,255,1.307,256,0.754,257,0.679,258,0.735,259,0.679,260,1.175,261,0.754,262,0.697,263,0.754,264,0.679,265,0.754,266,0.679,267,0.754,268,0.679,269,0.697,270,0.754,271,0.679,272,0.735,273,0.679,274,0.754,275,0.679,276,0.754,277,0.754,278,0.754,279,1.274,280,0.754,281,0.679,282,0.754,283,0.679,284,0.697,285,0.679,286,1.172,287,1.568,288,0.679,289,0.679,290,0.679,291,0.735,292,0.679,293,0.754,294,0.679,295,0.716,296,0.754,297,0.679,298,0.661,299,0.679,300,1.065,301,0.626,302,0.679,303,1.235,304,0.679,305,0.679,306,0.679,307,0.735,308,0.679,309,0.735,310,1.065,311,0.679,312,0.735,313,0.679,314,0.716,315,0.679,316,0.735,317,0.679,318,0.679,319,0.754,320,0.643,321,0.754,322,0.716,323,0.716,324,0.716,325,0.679,326,0.735,327,0.679,328,0.716,329,0.679,330,1.038,331,0.679,332,0.679,333,0.735,334,0.679,335,0.735,336,0.754,337,0.735,338,0.626,339,0.661,340,0.697,341,0.754,342,0.661,343,0.997,344,0.754,345,0.661,346,0.754,347,0.643,348,0.754,349,0.661,350,0.697,351,0.697,352,0.735,353,0.754,541,3.429,766,2.033,825,6.102,826,3.429,827,5.504,828,5.504,829,6.934,830,5.504,831,5.504,832,5.504,833,3.897,834,3.121,835,2.309,836,2.708,837,5.504,838,2.708,839,3.897,840,3.897,841,3.897,842,3.897,843,3.897,844,3.429,845,3.429,846,3.897]],["title/components/CylinderMeshComponent.html",[181,0.074,257,0.751]],["body/components/CylinderMeshComponent.html",[3,0.088,4,0.088,5,0.07,8,0.285,10,1.028,12,1.105,13,0.662,14,0.642,23,0.786,24,0.911,29,0.43,30,0.01,31,0.573,32,0.285,33,0.603,34,0.499,35,0.417,53,0.528,54,1.251,55,1.217,56,0.831,58,0.181,59,0.142,60,1.41,63,0.088,67,0.096,75,0.59,87,0.004,88,0.006,89,0.004,127,0.787,128,1.39,130,0.59,144,1.33,145,0.967,146,0.656,150,2.484,181,0.105,184,0.606,185,0.606,186,0.606,187,0.606,188,0.606,189,0.606,190,1.224,203,0.623,204,0.854,205,0.692,206,0.692,209,0.809,210,1.758,211,0.574,213,1.542,214,1.421,215,0.674,217,0.976,218,2.651,219,1.2,222,1.9,228,1.704,229,1.2,231,0.808,232,0.808,233,0.831,234,1.555,235,0.895,239,0.404,240,0.976,241,0.976,242,0.485,243,1.29,244,0.692,245,1.29,246,0.623,247,0.674,248,1.001,249,0.623,250,0.692,251,0.623,252,0.656,253,1.536,254,0.623,255,0.674,256,0.692,257,1.161,258,1.147,259,0.623,260,1.136,261,0.692,262,0.639,263,0.692,264,0.623,265,0.692,266,0.623,267,0.692,268,0.623,269,0.639,270,0.692,271,0.623,272,0.674,273,0.623,274,0.692,275,0.623,276,0.692,277,0.692,278,0.692,279,0.623,280,0.692,281,0.623,282,0.692,283,0.623,284,0.639,285,0.623,286,1.117,287,1.536,288,0.623,289,0.623,290,0.623,291,0.674,292,0.623,293,0.692,294,0.623,295,0.656,296,0.692,297,0.623,298,0.606,299,0.623,300,1.001,301,0.574,302,0.623,303,1.177,304,0.623,305,0.623,306,0.623,307,0.674,308,0.623,309,0.674,310,1.001,311,0.623,312,0.674,313,0.623,314,0.656,315,0.623,316,0.674,317,0.623,318,0.623,319,0.692,320,0.59,321,0.692,322,0.656,323,0.656,324,0.656,325,0.623,326,0.674,327,0.623,328,0.656,329,0.623,330,0.976,331,0.623,332,0.623,333,0.674,334,0.623,335,0.674,336,0.692,337,0.674,338,0.574,339,0.606,340,0.639,341,0.692,342,0.606,343,0.95,344,0.692,345,0.606,346,0.692,347,0.59,348,0.692,349,0.606,350,0.639,351,0.639,352,0.674,353,0.692,396,1.685,689,1.939,699,4.178,716,2.261,784,1.941,785,3.605,787,3.842,790,2.842,791,4.513,814,1.67,816,2.344,819,2.653,821,2.505,822,2.025,823,2.025,824,2.224,847,7.185,848,5.175,849,6.083,850,5.353,851,6.083,852,6.083,853,6.083,854,6.083,855,3.84,856,3.146,857,3.146,858,3.146,859,3.84,860,2.653,861,2.864,862,2.653,863,3.393,864,4.554,865,3.575,866,3.575,867,2.81,868,3.575,869,3.575,870,3.575,871,3.575,872,3.146,873,3.575,874,3.575,875,3.575]],["title/components/DagreCompositionComponent.html",[181,0.074,259,0.751]],["body/components/DagreCompositionComponent.html",[3,0.064,4,0.064,5,0.051,8,0.208,9,0.769,12,1.303,13,0.522,14,0.506,15,1.803,23,0.62,24,0.96,27,1.801,29,0.605,30,0.01,31,0.625,32,0.636,33,0.612,34,0.364,35,0.868,50,1.402,53,0.385,54,0.655,55,0.637,56,0.807,58,0.167,59,0.104,60,0.604,63,0.064,67,0.07,75,0.43,83,1.812,87,0.003,88,0.005,89,0.003,115,1.163,117,2.06,126,2.13,127,0.574,128,1.233,130,0.43,144,1.048,146,0.479,165,3.014,171,2.088,181,0.087,184,0.442,185,0.442,186,0.442,187,0.442,188,0.442,189,0.442,190,1.044,203,0.454,204,0.673,205,0.505,206,0.505,209,0.637,210,1.498,211,0.419,213,1.515,214,1.398,215,0.492,217,0.769,219,0.946,220,2.126,222,1.62,228,1.404,231,0.589,232,0.589,233,0.655,235,0.653,239,0.295,240,0.769,241,0.769,242,0.354,243,1.1,244,0.505,245,1.1,246,0.454,247,0.492,248,0.789,249,0.454,250,0.505,251,0.454,252,0.479,253,1.407,254,0.454,255,0.492,256,0.505,257,0.454,258,0.492,259,0.99,260,1.217,261,0.505,262,0.466,263,0.505,264,0.99,265,0.505,266,0.454,267,0.505,268,0.454,269,0.466,270,0.505,271,0.454,272,0.492,273,0.454,274,0.505,275,0.454,276,0.505,277,0.505,278,0.505,279,0.454,280,0.505,281,0.454,282,0.505,283,0.454,284,0.466,285,0.454,286,0.923,287,1.407,288,0.454,289,0.454,290,0.454,291,0.492,292,0.454,293,0.505,294,0.454,295,0.479,296,0.505,297,0.454,298,0.442,299,0.454,300,0.789,301,0.655,302,0.454,303,0.972,304,0.454,305,0.454,306,0.454,307,0.492,308,0.454,309,0.492,310,0.789,311,0.454,312,0.492,313,0.454,314,0.923,315,0.454,316,0.492,317,0.454,318,0.71,319,0.505,320,0.43,321,0.505,322,0.479,323,0.479,324,0.479,325,0.454,326,0.492,327,0.454,328,0.479,329,0.454,330,0.769,331,0.454,332,0.454,333,0.492,334,0.454,335,0.492,336,0.505,337,0.492,338,0.419,339,0.442,340,0.466,341,0.505,342,0.442,343,0.785,344,0.505,345,0.442,346,0.505,347,0.43,348,0.505,349,0.442,350,0.466,351,0.466,352,0.492,353,0.505,369,2.728,374,1.902,385,3.872,390,1.709,470,3.35,630,4.123,632,3.552,633,3.086,634,2.965,635,3.294,637,2.441,716,1.139,790,3.194,792,2.978,816,1.709,876,2.295,877,3.294,878,4.025,879,4.079,880,5.025,881,4.422,882,4.422,883,5.025,884,5.002,885,4.553,886,4.217,887,4.553,888,5.002,889,5.002,890,5.002,891,3.59,892,2.674,893,4.025,894,3.728,895,2.417,896,6.016,897,5.025,898,5.684,899,4.079,900,2.607,901,2.607,902,4.079,903,2.607,904,2.607,905,2.607,906,2.607,907,2.607,908,2.607,909,2.607,910,2.607,911,2.607,912,2.607,913,2.607,914,2.607,915,2.607,916,3.59,917,3.728,918,2.607,919,1.935,920,2.607,921,4.553,922,2.607,923,2.607,924,2.978,925,2.607,926,2.607,927,2.607,928,2.607,929,3.368,930,2.295,931,1.477,932,1.622,933,2.607,934,5.025,935,2.607,936,1.935,937,2.607,938,2.607,939,5.002,940,2.295,941,2.607,942,2.295,943,2.295,944,2.295,945,2.295,946,4.422,947,2.295,948,2.295,949,2.295,950,3.59,951,2.607,952,3.837,953,2.295,954,2.295,955,2.088,956,4.553,957,2.295,958,2.607,959,2.295,960,4.553,961,3.59,962,1.709,963,2.295,964,2.607,965,1.935,966,1.812,967,2.295,968,3.027,969,2.295,970,2.295,971,2.295,972,2.295,973,2.607,974,2.295,975,2.295,976,2.295,977,2.295,978,2.607,979,2.088,980,2.295,981,2.088,982,2.295,983,2.088,984,2.607,985,2.607,986,2.607,987,2.607,988,1.477,989,2.295]],["title/components/DagreLayoutComponent.html",[181,0.074,264,0.751]],["body/components/DagreLayoutComponent.html",[3,0.068,4,0.068,5,0.055,8,0.221,9,0.807,12,1.204,13,0.548,14,0.531,15,1.781,23,0.651,24,0.956,29,0.629,30,0.01,31,0.577,32,0.535,33,0.63,34,0.388,35,0.865,50,1.319,53,0.41,54,1.19,55,1.158,56,0.446,58,0.171,59,0.11,63,0.068,67,0.075,72,2.08,75,0.863,87,0.003,88,0.005,89,0.003,115,1.221,116,2.361,117,2.144,118,2.531,124,2.487,125,1.934,126,2.203,127,0.611,128,1.265,130,0.458,133,2.654,135,1.871,141,1.934,144,1.1,146,0.51,157,2.234,165,3.004,181,0.09,184,0.471,185,0.471,186,0.471,187,0.471,188,0.471,189,0.471,190,1.079,203,0.483,204,0.707,205,0.537,206,0.537,209,0.669,210,1.55,211,0.446,213,1.521,214,1.402,215,0.523,217,0.807,219,0.993,222,1.675,228,1.625,231,0.627,232,0.627,233,0.688,235,0.695,239,0.314,240,0.807,241,0.807,242,0.377,243,1.138,244,0.537,245,1.138,246,0.483,247,0.523,248,0.829,249,0.483,250,0.537,251,0.483,252,0.51,253,1.434,254,0.483,255,0.523,256,0.537,257,0.483,258,0.523,259,0.483,260,1.237,261,0.537,262,0.497,263,0.537,264,1.024,265,0.537,266,0.483,267,0.537,268,0.483,269,0.497,270,0.537,271,0.483,272,0.523,273,0.483,274,0.537,275,0.483,276,0.537,277,0.537,278,0.537,279,0.483,280,0.537,281,0.483,282,0.537,283,0.483,284,0.497,285,0.483,286,0.96,287,1.434,288,0.483,289,0.483,290,0.483,291,0.523,292,0.483,293,0.537,294,0.483,295,0.51,296,0.537,297,0.483,298,0.471,299,0.483,300,0.829,301,0.84,302,0.483,303,1.012,304,0.483,305,0.483,306,0.483,307,0.523,308,0.483,309,0.523,310,0.829,311,0.483,312,0.523,313,0.483,314,0.51,315,0.483,316,0.523,317,0.483,318,0.746,319,0.537,320,0.458,321,0.537,322,0.51,323,0.51,324,0.51,325,0.483,326,0.523,327,0.483,328,0.51,329,0.483,330,0.807,331,0.483,332,0.483,333,0.523,334,0.483,335,0.523,336,0.537,337,0.523,338,0.446,339,0.471,340,0.497,341,0.537,342,0.471,343,0.817,344,0.537,345,0.471,346,0.537,347,0.458,348,0.537,349,0.471,350,0.497,351,0.497,352,0.523,353,0.537,385,2.962,395,3.88,396,0.904,401,1.657,470,3.798,543,2.326,630,4.109,638,3.645,642,1.82,643,1.508,689,1.605,716,1.871,877,3.429,892,2.808,917,4.713,919,2.06,929,2.538,952,1.727,956,4.709,962,1.82,979,2.224,981,2.224,983,2.224,988,2.427,990,2.443,991,5.229,992,4.283,993,5.879,994,5.879,995,5.879,996,5.879,997,4.283,998,6.352,999,4.189,1000,6.352,1001,6.352,1002,6.352,1003,6.352,1004,6.352,1005,5.879,1006,6.352,1007,4.283,1008,4.283,1009,2.776,1010,2.776,1011,2.776,1012,2.776,1013,2.776,1014,5.879,1015,2.776,1016,4.283,1017,2.776,1018,4.283,1019,4.283,1020,2.776,1021,2.776,1022,2.776,1023,2.776,1024,2.776,1025,2.776,1026,2.776,1027,2.776,1028,2.776,1029,2.776,1030,2.776,1031,4.283,1032,2.776,1033,2.776,1034,2.06,1035,2.776,1036,2.443,1037,2.443,1038,5.229,1039,1.929,1040,5.229,1041,3.769,1042,2.776,1043,2.776,1044,2.776,1045,2.776,1046,2.776,1047,2.776,1048,2.776,1049,2.776,1050,2.776,1051,6.352,1052,2.776,1053,2.776,1054,2.776,1055,2.776,1056,2.224,1057,2.776,1058,2.776,1059,1.727,1060,2.776,1061,3.429,1062,2.776,1063,1.573,1064,2.06]],["title/components/DagreNodeComponent.html",[181,0.074,266,0.751]],["body/components/DagreNodeComponent.html",[3,0.076,4,0.076,5,0.061,8,0.246,9,0.877,12,1.335,13,0.595,14,0.577,23,0.707,24,0.906,27,1.474,29,0.56,30,0.01,31,0.643,32,0.531,33,0.616,34,0.432,35,0.817,50,1.32,53,0.457,54,0.497,55,0.483,58,0.178,59,0.123,60,0.717,63,0.076,67,0.083,72,1.645,83,2.149,87,0.003,88,0.005,89,0.003,115,1.325,117,2.291,126,2.329,127,0.681,128,1.32,130,0.51,144,1.195,146,0.568,165,2.867,171,2.477,181,0.096,184,0.524,185,0.524,186,0.524,187,0.524,188,0.524,189,0.524,190,1.141,203,0.539,204,0.767,205,0.599,206,0.599,209,0.727,210,1.638,211,0.497,213,1.531,214,1.411,215,0.583,217,0.877,219,1.078,222,1.771,228,1.2,231,0.699,232,0.699,233,0.747,235,0.774,239,0.35,240,0.877,241,0.877,242,0.419,243,1.203,244,0.599,245,1.203,246,0.539,247,0.583,248,0.9,249,0.539,250,0.599,251,0.539,252,0.568,253,1.479,254,0.539,255,0.583,256,0.599,257,0.539,258,0.583,259,0.539,260,1.27,261,0.599,262,0.553,263,0.599,264,1.082,265,0.599,266,1.082,267,0.599,268,0.539,269,0.553,270,0.599,271,0.539,272,0.583,273,0.539,274,0.599,275,0.539,276,0.599,277,0.599,278,0.599,279,0.539,280,0.599,281,0.539,282,0.599,283,0.539,284,0.553,285,0.539,286,1.026,287,1.479,288,0.539,289,0.539,290,0.539,291,0.583,292,0.539,293,0.599,294,0.539,295,0.568,296,0.599,297,0.539,298,0.524,299,0.539,300,0.9,301,0.747,302,0.539,303,1.081,304,0.539,305,0.539,306,0.539,307,0.583,308,0.539,309,0.583,310,0.9,311,0.539,312,0.583,313,0.539,314,0.568,315,0.539,316,0.583,317,0.539,318,0.81,319,0.599,320,0.51,321,0.599,322,0.568,323,0.568,324,0.568,325,0.539,326,0.583,327,0.539,328,0.568,329,0.539,330,0.877,331,0.539,332,0.539,333,0.583,334,0.539,335,0.583,336,0.599,337,0.583,338,0.497,339,0.524,340,0.553,341,0.599,342,0.524,343,0.873,344,0.599,345,0.524,346,0.599,347,0.51,348,0.599,349,0.524,350,0.553,351,0.553,352,0.583,353,0.599,390,2.028,401,1.474,470,3.618,630,3.922,632,3.375,633,1.679,634,3.476,836,2.149,838,2.149,877,3.664,878,4.476,881,4.918,882,4.918,884,5.47,885,4.979,889,5.47,890,5.47,891,4.092,896,6.391,916,4.092,917,4.147,919,2.295,924,3.312,930,2.722,931,1.752,939,5.47,940,2.722,942,2.722,943,2.722,944,2.722,945,2.722,948,2.722,949,2.722,950,4.092,952,4.354,953,2.722,954,2.722,955,2.477,956,4.979,957,2.722,959,2.722,960,4.979,961,4.092,962,2.028,963,2.722,965,2.295,966,2.149,967,2.722,968,3.451,969,2.722,970,2.722,971,2.722,972,2.722,974,2.722,975,2.722,976,2.722,977,2.722,979,2.477,980,2.722,981,2.477,982,2.722,983,2.477,988,1.752,989,2.722,1041,2.722,1065,2.722,1066,4.65,1067,4.918,1068,5.588,1069,4.65,1070,3.093,1071,3.093,1072,3.093,1073,3.093,1074,3.093,1075,3.093,1076,3.093,1077,3.093,1078,4.092,1079,4.092,1080,4.918,1081,3.451,1082,3.093,1083,3.093,1084,3.093,1085,3.093,1086,3.093,1087,3.093,1088,3.093]],["title/classes/DagreUtils.html",[67,0.116,1034,3.202]],["body/classes/DagreUtils.html",[3,0.118,4,0.118,5,0.094,8,0.383,14,0.788,15,1.734,24,0.89,29,0.947,30,0.01,31,0.696,32,0.627,33,0.78,35,0.919,50,1.342,56,0.772,58,0.156,60,1.473,63,0.118,67,0.13,75,1.174,87,0.005,88,0.007,89,0.005,91,3.566,165,2.861,260,1.143,301,1.402,356,3.151,401,2.013,470,3.449,629,4.666,630,3.914,633,2.61,634,3.314,636,3.599,638,4.74,639,4.665,641,3.864,790,2.245,792,2.848,917,6.441,919,6.001,1034,4.714,1081,6.537,1089,4.229,1090,6.353,1091,6.353,1092,6.353,1093,6.353,1094,6.353,1095,6.353,1096,6.353,1097,6.353,1098,4.806,1099,6.353,1100,4.806,1101,6.353,1102,4.806,1103,6.353,1104,4.806,1105,6.353,1106,4.806,1107,4.806,1108,4.806,1109,4.806,1110,4.806,1111,4.806,1112,4.806,1113,6.353,1114,4.806,1115,4.806,1116,4.806,1117,4.229,1118,5.089,1119,5.591,1120,4.806,1121,4.806,1122,4.806,1123,4.806,1124,4.229,1125,4.806,1126,6.353,1127,4.806,1128,4.229,1129,4.806,1130,4.806]],["title/components/DagreYamlParserComponent.html",[181,0.074,268,0.751]],["body/components/DagreYamlParserComponent.html",[3,0.067,4,0.067,5,0.054,8,0.413,9,0.798,12,1.271,13,0.541,14,0.525,15,1.469,23,0.643,24,0.893,27,1.641,29,0.803,30,0.01,31,0.635,32,0.573,33,0.713,34,0.382,35,0.839,50,1.312,53,0.404,54,0.439,55,0.427,56,0.439,58,0.185,59,0.109,60,1.711,63,0.067,67,0.074,72,0.968,75,0.855,87,0.003,88,0.005,89,0.003,115,1.207,116,2.339,118,2.507,124,2.467,125,1.912,127,0.602,128,1.258,130,0.451,133,2.633,135,1.85,141,1.912,144,1.088,146,0.502,164,3.824,165,2.825,173,5.132,175,4.559,178,2.407,181,0.089,184,0.464,185,0.464,186,0.464,187,0.464,188,0.464,189,0.464,190,1.071,203,0.476,204,0.699,205,0.529,206,0.529,209,0.661,210,1.537,211,0.439,213,1.52,214,1.401,215,0.516,217,0.798,219,0.982,222,1.662,228,0.909,231,0.618,232,0.618,233,0.68,235,0.685,239,0.309,240,0.798,241,0.798,242,0.371,243,1.129,244,0.529,245,1.129,246,0.476,247,0.516,248,0.819,249,0.476,250,0.529,251,0.476,252,0.502,253,1.428,254,0.476,255,0.516,256,0.529,257,0.476,258,0.516,259,0.737,260,1.233,261,0.529,262,0.757,263,0.529,264,0.476,265,0.529,266,0.737,267,0.529,268,1.016,269,1.515,270,0.529,271,0.476,272,0.516,273,0.476,274,0.529,275,0.476,276,0.529,277,0.529,278,0.529,279,0.476,280,0.529,281,0.476,282,0.529,283,0.476,284,0.489,285,0.476,286,0.951,287,1.428,288,0.476,289,0.476,290,0.476,291,0.516,292,0.476,293,0.529,294,0.476,295,0.502,296,0.529,297,0.476,298,0.464,299,0.476,300,0.819,301,1.071,302,0.476,303,1.002,304,0.476,305,0.476,306,0.476,307,0.516,308,0.476,309,0.516,310,0.819,311,0.476,312,0.516,313,0.476,314,0.502,315,0.476,316,0.516,317,0.476,318,0.737,319,0.529,320,0.451,321,0.529,322,0.502,323,0.502,324,0.502,325,0.476,326,0.516,327,0.476,328,0.502,329,0.476,330,0.798,331,0.476,332,0.476,333,0.516,334,0.476,335,0.516,336,0.529,337,0.516,338,0.439,339,0.464,340,0.489,341,0.529,342,0.464,343,0.809,344,0.529,345,0.464,346,0.529,347,0.451,348,0.529,349,0.464,350,0.489,351,0.489,352,0.516,353,0.529,358,2.191,374,2.232,385,2.935,630,3.864,632,3.425,634,3.629,636,3.779,638,2.299,836,1.9,838,1.9,877,3.396,892,2.776,929,2.509,952,1.701,988,1.549,1039,1.9,1059,1.701,1063,1.549,1067,4.559,1078,3.726,1079,3.726,1080,4.559,1117,3.726,1119,2.407,1124,2.407,1128,2.407,1131,2.191,1132,4.234,1133,4.234,1134,5.18,1135,4.234,1136,4.234,1137,4.234,1138,5.832,1139,4.234,1140,5.832,1141,5.18,1142,5.18,1143,4.234,1144,2.735,1145,2.735,1146,4.234,1147,2.735,1148,4.234,1149,2.735,1150,4.234,1151,2.735,1152,2.735,1153,4.234,1154,2.735,1155,2.735,1156,2.735,1157,2.735,1158,2.735,1159,2.735,1160,2.735,1161,2.735,1162,2.191,1163,2.407,1164,2.407,1165,2.735,1166,4.234,1167,2.735,1168,2.735,1169,4.234,1170,2.191,1171,2.735,1172,2.735,1173,2.735,1174,2.735,1175,2.735,1176,2.735,1177,2.735,1178,2.735,1179,2.735,1180,2.735,1181,2.735,1182,5.18,1183,2.735,1184,2.735,1185,2.735,1186,2.735,1187,2.735,1188,2.735,1189,2.735,1190,2.735,1191,2.735,1192,2.735,1193,2.735,1194,5.18,1195,2.735,1196,2.735,1197,2.735,1198,2.735,1199,2.735,1200,2.735,1201,2.735,1202,2.735,1203,2.735,1204,2.735,1205,2.735,1206,2.735,1207,2.735,1208,2.735,1209,2.735,1210,4.234,1211,2.735,1212,2.735,1213,4.234,1214,2.735,1215,2.735,1216,2.735,1217,4.234,1218,2.735,1219,4.234,1220,2.735,1221,2.735,1222,2.735,1223,2.735,1224,2.735,1225,2.735,1226,2.735,1227,2.735,1228,2.735,1229,2.735,1230,2.735,1231,2.735,1232,4.234,1233,2.735,1234,4.234,1235,2.735,1236,2.735,1237,2.735,1238,2.735,1239,2.735]],["title/directives/DashedDrawDirective.html",[242,0.585,339,0.732]],["body/directives/DashedDrawDirective.html",[3,0.101,4,0.101,5,0.081,8,0.327,9,1.077,12,1.026,14,0.709,23,0.868,24,0.97,29,0.494,30,0.01,31,0.353,32,0.566,33,0.407,35,0.828,50,1.406,54,1.14,55,1.109,56,1.054,58,0.189,59,0.163,60,1.522,63,0.101,67,0.111,72,1.454,87,0.005,88,0.006,89,0.005,115,1.628,116,2.965,117,2.692,124,3.002,126,2.659,210,1.871,211,0.66,213,0.697,214,0.892,219,1.324,228,1.657,229,1.324,230,2.143,232,0.928,233,0.917,234,1.234,242,0.557,338,0.66,339,0.968,340,1.174,354,3.976,357,4.206,373,4.653,374,2.915,378,5.26,396,2.428,401,1.81,643,3.565,689,2.14,814,1.92,821,3.435,835,2.435,844,5.779,859,3.049,864,5.027,867,3.102,924,3.891,931,2.328,1240,7.596,1241,3.616,1242,6.566,1243,7.097,1244,6.566,1245,6.566,1246,6.566,1247,6.566,1248,6.566,1249,3.291,1250,5.712,1251,3.385,1252,5.712,1253,4.109,1254,3.553,1255,4.109,1256,4.109,1257,4.109,1258,4.109,1259,4.109,1260,4.109,1261,4.109,1262,4.109,1263,4.109,1264,4.872,1265,4.109,1266,4.109,1267,2.855,1268,3.616,1269,2.694,1270,4.109,1271,3.291,1272,4.109,1273,3.616,1274,6.566,1275,3.291,1276,5.712,1277,3.049,1278,3.616,1279,2.855,1280,3.616,1281,2.855,1282,3.291,1283,4.109,1284,7.097,1285,4.576,1286,4.109,1287,6.566,1288,4.109,1289,4.109,1290,4.109,1291,4.109,1292,4.109,1293,4.109,1294,6.566,1295,5.712,1296,4.109,1297,4.109,1298,4.238,1299,4.109,1300,4.109,1301,4.109,1302,6.566,1303,4.109,1304,6.566,1305,5.712,1306,4.109,1307,4.109,1308,3.049,1309,4.109,1310,5.027,1311,4.109,1312,4.109,1313,4.109,1314,6.566,1315,3.049]],["title/pipes/Deg2RadPipe.html",[577,2.998,1316,2.998]],["body/pipes/Deg2RadPipe.html",[3,0.156,4,0.156,5,0.125,14,0.791,24,0.72,29,0.767,30,0.01,31,0.696,32,0.508,33,0.632,35,0.743,58,0.156,59,0.253,63,0.156,67,0.172,75,1.051,87,0.007,88,0.008,89,0.007,115,1.816,211,1.023,577,5.27,637,2.713,863,4.177,1316,5.27,1317,5.104,1318,5.607,1319,7.584,1320,5.607,1321,7.584,1322,6.372,1323,6.675,1324,7.535,1325,6.675,1326,6.675,1327,5.607,1328,6.372,1329,5.607]],["title/components/DirectionalLightComponent.html",[181,0.074,271,0.751]],["body/components/DirectionalLightComponent.html",[3,0.09,4,0.09,5,0.072,8,0.292,10,0.728,12,1.116,13,0.673,14,0.653,23,0.8,24,0.841,29,0.441,30,0.01,31,0.58,32,0.292,33,0.611,34,0.511,35,0.427,53,0.541,54,1.147,55,1.053,56,0.99,58,0.182,59,0.146,60,0.849,63,0.09,67,0.099,75,0.605,87,0.004,88,0.006,89,0.004,127,0.807,128,1.402,130,0.605,144,1.353,145,0.991,146,0.673,181,0.106,184,0.621,185,0.621,186,0.621,187,0.621,188,0.621,189,0.621,190,1.238,203,0.638,204,0.869,205,0.709,206,0.709,208,2.546,209,0.823,210,1.961,211,0.588,213,1.544,214,1.423,215,0.691,216,4.685,217,0.993,218,2.681,219,1.221,220,2.852,221,4.576,222,1.922,223,2.718,224,3.121,228,1.533,229,1.221,230,1.911,231,0.828,232,0.828,233,0.846,234,1.1,235,0.917,238,2.934,239,0.414,240,0.993,241,0.993,242,0.497,243,1.305,244,0.709,245,1.305,246,0.638,247,0.691,248,1.019,249,0.638,250,0.709,251,0.638,252,0.673,253,1.545,254,0.638,255,0.691,256,0.709,257,0.638,258,0.691,259,0.638,260,1.147,261,0.709,262,0.655,263,0.709,264,0.638,265,0.709,266,0.638,267,0.709,268,0.638,269,0.655,270,0.709,271,1.174,272,1.163,273,0.638,274,0.709,275,0.638,276,0.709,277,0.709,278,0.709,279,0.638,280,0.709,281,0.638,282,0.709,283,0.638,284,0.655,285,0.638,286,1.132,287,1.545,288,0.638,289,0.638,290,0.638,291,0.691,292,0.638,293,0.709,294,0.638,295,0.673,296,0.709,297,0.638,298,0.621,299,0.638,300,1.019,301,0.588,302,0.638,303,1.193,304,0.638,305,0.638,306,0.638,307,0.691,308,0.638,309,0.691,310,1.019,311,0.638,312,0.691,313,0.638,314,0.673,315,0.638,316,0.691,317,0.638,318,0.638,319,0.709,320,0.605,321,0.709,322,0.673,323,0.673,324,0.673,325,0.638,326,0.691,327,0.638,328,0.673,329,0.638,330,0.993,331,0.638,332,0.638,333,0.691,334,0.638,335,0.691,336,0.709,337,0.691,338,0.588,339,0.621,340,0.655,341,0.709,342,0.621,343,0.963,344,0.709,345,0.621,346,0.709,347,0.605,348,0.709,349,0.621,350,0.655,351,0.655,352,0.691,353,0.709,401,1.954,689,1.973,717,2.546,729,1.911,835,3.121,1330,6.744,1331,5.267,1332,4.94,1333,6.743,1334,5.267,1335,2.934,1336,3.663,1337,3.663,1338,2.934,1339,3.663,1340,3.663,1341,3.663,1342,3.663,1343,3.663,1344,4.219,1345,3.224,1346,2.934,1347,3.663,1348,3.996,1349,3.663,1350,3.663,1351,3.663,1352,3.224,1353,3.224,1354,3.224,1355,3.663,1356,3.224,1357,3.224,1358,3.224]],["title/components/DofComponent.html",[181,0.074,273,0.751]],["body/components/DofComponent.html",[3,0.081,4,0.081,5,0.065,8,0.264,9,0.923,10,1.363,12,1.191,14,0.607,15,1.416,23,0.744,24,0.937,29,0.774,30,0.01,31,0.639,32,0.547,33,0.712,34,0.463,35,0.908,36,1.877,50,1.354,53,0.49,54,1.033,55,1.005,58,0.168,59,0.132,63,0.081,67,0.089,75,0.547,87,0.004,88,0.005,89,0.004,111,5.267,113,2.303,119,3.402,120,4.771,121,3.621,122,3.298,123,5.512,124,2.463,125,2.211,126,2.181,127,0.73,128,1.354,129,4.216,130,1.132,132,4.32,133,3.443,135,3.137,136,2.773,141,1.496,144,1.258,145,0.896,146,1.069,147,2.303,181,0.1,184,0.562,185,0.562,186,0.562,187,0.562,188,0.562,189,0.562,190,1.181,203,0.577,204,0.808,205,0.641,206,0.641,209,0.765,211,0.532,213,1.536,214,1.416,215,0.625,217,0.625,219,1.135,228,1.38,233,0.532,235,0.83,239,0.375,240,0.923,241,0.923,242,0.449,243,1.244,244,0.641,245,1.244,246,0.577,247,0.625,248,0.947,249,0.577,250,0.641,251,0.577,252,0.608,253,1.507,254,0.577,255,0.625,256,0.641,257,0.577,258,0.625,259,0.577,260,1.102,261,0.641,262,0.593,263,0.641,264,0.577,265,0.641,266,0.577,267,0.641,268,0.577,269,0.593,270,0.641,271,0.577,272,0.625,273,1.12,274,0.641,275,0.577,276,0.641,277,0.641,278,0.641,279,0.577,280,0.641,281,0.577,282,0.641,283,0.577,284,0.593,285,0.577,286,1.069,287,1.507,288,0.577,289,0.577,290,0.577,291,0.625,292,0.577,293,0.641,294,0.577,295,0.608,296,0.641,297,0.577,298,0.562,299,0.577,300,0.947,301,0.532,302,0.577,303,1.127,304,0.577,305,0.577,306,0.577,307,0.625,308,0.577,309,0.625,310,0.947,311,0.577,312,0.625,313,0.577,314,0.608,315,0.577,316,0.625,317,0.577,318,0.577,319,0.641,320,0.547,321,0.641,322,0.608,323,0.608,324,0.608,325,0.577,326,0.625,327,0.577,328,0.608,329,0.577,330,0.923,331,0.577,332,0.577,333,0.625,334,0.577,335,0.625,336,0.641,337,0.625,338,0.532,339,0.562,340,0.593,341,0.641,342,0.562,343,0.91,344,0.641,345,0.562,346,0.641,347,0.547,348,0.641,349,0.562,350,0.593,351,0.593,352,0.625,353,0.641,396,1.079,401,1.845,699,2.773,715,2.303,724,2.303,766,3.978,767,2.654,768,2.654,769,2.654,770,2.654,771,2.654,772,2.654,773,2.654,774,2.654,779,2.654,790,1.548,792,1.964,1061,4.498,1063,3.298,1359,2.916,1360,4.896,1361,6.861,1362,6.861,1363,6.861,1364,4.896,1365,4.896,1366,3.314,1367,3.314,1368,4.896,1369,3.314,1370,3.314,1371,3.314,1372,3.314,1373,3.314,1374,3.314,1375,5.822,1376,5.822,1377,3.314,1378,3.314,1379,5.822,1380,3.314,1381,3.314,1382,3.314,1383,4.896,1384,3.314,1385,2.916]],["title/components/DotScreenComponent.html",[181,0.074,275,0.751]],["body/components/DotScreenComponent.html",[3,0.087,4,0.087,5,0.07,8,0.283,9,0.97,10,1.401,12,1.215,14,0.639,15,1.463,23,0.782,24,0.932,29,0.8,30,0.01,31,0.653,32,0.562,33,0.729,34,0.495,35,0.924,36,2.01,50,1.387,53,0.524,54,0.827,55,0.804,58,0.18,59,0.141,63,0.087,67,0.096,75,0.586,87,0.004,88,0.006,89,0.004,111,5.345,113,2.466,119,3.577,120,4.93,121,3.768,122,3.431,123,5.631,124,2.562,125,2.324,126,2.269,127,0.782,128,1.387,129,4.356,130,1.164,132,4.494,133,3.51,135,2.646,136,3.431,141,1.602,144,1.322,145,0.96,146,1.112,147,2.466,181,0.104,184,0.602,185,0.602,186,0.602,187,0.602,188,0.602,189,0.602,190,1.22,203,0.618,204,0.849,205,0.687,206,0.687,209,0.804,211,0.57,213,1.541,214,1.42,215,0.669,217,0.669,219,1.193,228,1.105,233,0.57,235,0.889,239,0.401,240,0.97,241,0.97,242,0.481,243,1.286,244,0.687,245,1.286,246,0.618,247,0.669,248,0.996,249,0.618,250,0.687,251,0.618,252,0.652,253,1.533,254,0.618,255,0.669,256,0.687,257,0.618,258,0.669,259,0.618,260,1.133,261,0.687,262,0.635,263,0.687,264,0.618,265,0.687,266,0.618,267,0.687,268,0.618,269,0.635,270,0.687,271,0.618,272,0.669,273,0.618,274,0.687,275,1.157,276,1.172,277,0.687,278,0.687,279,0.618,280,0.687,281,0.618,282,0.687,283,0.618,284,0.635,285,0.618,286,1.112,287,1.533,288,0.618,289,0.618,290,0.618,291,0.669,292,0.618,293,0.687,294,0.618,295,0.652,296,0.687,297,0.618,298,0.602,299,0.618,300,0.996,301,0.57,302,0.618,303,1.172,304,0.618,305,0.618,306,0.618,307,0.669,308,0.618,309,0.669,310,0.996,311,0.618,312,0.669,313,0.618,314,0.652,315,0.618,316,0.669,317,0.618,318,0.618,319,0.687,320,0.586,321,0.687,322,0.652,323,0.652,324,0.652,325,0.618,326,0.669,327,0.618,328,0.652,329,0.618,330,0.97,331,0.618,332,0.618,333,0.669,334,0.618,335,0.669,336,0.687,337,0.669,338,0.57,339,0.602,340,0.635,341,0.687,342,0.602,343,0.946,344,0.687,345,0.602,346,0.687,347,0.586,348,0.687,349,0.602,350,0.635,351,0.635,352,0.669,353,0.687,396,1.155,681,2.843,682,2.843,729,1.851,766,4.055,767,2.843,768,2.843,769,2.843,770,2.843,771,2.843,772,2.843,773,2.843,774,2.843,779,2.843,782,2.843,1386,6.208,1387,3.123,1388,4.53,1389,6.057,1390,5.147,1391,4.53,1392,3.549,1393,3.549,1394,3.549,1395,3.549,1396,3.549]],["title/interfaces/Edge.html",[64,1.527,636,2.444]],["body/interfaces/Edge.html",[3,0.147,4,0.147,5,0.118,8,0.478,9,1.378,27,2.868,30,0.01,31,0.516,32,0.703,33,0.814,34,0.837,58,0.147,63,0.206,64,2.979,87,0.007,88,0.008,89,0.007,165,2.121,209,1.283,220,3.474,260,1.174,301,0.963,470,3.255,628,3.255,629,4.99,630,2.901,631,3.93,632,3.97,633,3.255,634,3.127,635,3.93,636,4.142,637,2.5,638,3.255,639,3.93,640,4.166,641,4.283,642,3.93,643,3.255]],["title/components/EffectComposerComponent.html",[130,0.712,181,0.074]],["body/components/EffectComposerComponent.html",[3,0.079,4,0.079,5,0.063,8,0.457,9,0.906,12,1.061,14,0.596,15,1.892,23,0.73,24,0.914,29,0.764,30,0.01,31,0.634,32,0.567,33,0.705,34,0.451,35,0.883,50,1.427,53,0.477,54,0.519,55,0.505,56,0.771,58,0.174,59,0.128,60,1.33,63,0.079,67,0.087,72,1.143,75,0.533,87,0.004,88,0.005,89,0.004,115,1.369,116,2.59,117,2.351,118,2.776,119,5.55,124,2.687,125,2.169,126,2.38,127,0.711,128,1.341,129,4.451,130,1.048,133,2.868,135,1.411,141,2.169,144,1.234,145,0.874,146,1.053,148,2.843,150,4.413,151,5.902,156,2.843,157,1.685,181,0.109,184,0.548,185,0.548,186,0.548,187,0.548,188,0.548,189,0.548,190,1.166,203,0.563,204,0.793,205,0.625,206,0.625,211,0.519,213,1.534,214,1.414,215,0.609,217,0.609,219,1.114,228,1.231,233,0.771,239,0.365,240,0.906,241,0.906,242,0.438,243,1.229,244,0.625,245,1.229,246,0.563,247,0.609,248,0.93,249,0.563,250,0.625,251,0.563,252,0.593,253,1.497,254,0.563,255,0.609,256,0.625,257,0.563,258,0.609,259,0.563,260,1.09,261,0.625,262,0.578,263,0.625,264,0.563,265,0.625,266,0.563,267,0.625,268,0.563,269,0.578,270,0.625,271,0.563,272,0.609,273,0.563,274,0.625,275,0.563,276,0.625,277,0.625,278,0.625,279,0.563,280,0.625,281,0.563,282,0.625,283,0.563,284,0.578,285,0.563,286,1.053,287,1.497,288,0.563,289,0.563,290,0.563,291,0.609,292,0.563,293,0.625,294,0.563,295,0.593,296,0.625,297,0.563,298,0.548,299,0.563,300,0.93,301,0.519,302,0.563,303,1.11,304,0.563,305,0.563,306,0.563,307,0.609,308,0.563,309,0.609,310,0.93,311,0.563,312,0.609,313,0.563,314,0.593,315,0.563,316,0.609,317,0.563,318,0.563,319,0.625,320,1.216,321,0.625,322,0.593,323,0.593,324,0.593,325,0.563,326,0.609,327,0.563,328,0.593,329,0.563,330,0.906,331,0.563,332,0.563,333,0.609,334,0.563,335,0.609,336,0.625,337,0.609,338,0.519,339,0.548,340,0.578,341,0.625,342,0.548,343,0.896,344,0.625,345,0.548,346,0.625,347,0.533,348,0.625,349,0.548,350,0.578,351,0.578,352,0.609,353,0.625,369,3.449,401,1.522,543,1.754,666,5.047,676,5.047,677,2.843,680,2.843,689,2.38,729,1.685,736,2.118,1385,2.843,1397,7.193,1398,2.843,1399,4.804,1400,6.351,1401,6.351,1402,4.804,1403,5.735,1404,5.735,1405,4.804,1406,3.23,1407,3.23,1408,4.804,1409,3.23,1410,3.23,1411,3.23,1412,3.23,1413,3.23,1414,3.23,1415,4.804,1416,3.23,1417,3.23,1418,3.23,1419,3.23,1420,4.804,1421,3.23,1422,3.23,1423,3.23,1424,3.23,1425,2.843,1426,3.23,1427,2.843,1428,2.843,1429,3.23,1430,3.23,1431,3.23,1432,3.23,1433,3.23,1434,3.23,1435,3.23,1436,3.23,1437,3.23,1438,3.23,1439,3.23,1440,3.23,1441,3.23,1442,3.23,1443,3.23]],["title/components/EmptyComponent.html",[181,0.074,279,0.751]],["body/components/EmptyComponent.html",[3,0.1,4,0.1,5,0.08,8,0.326,10,0.812,12,1.163,13,0.728,14,0.706,23,0.865,24,0.643,29,0.492,30,0.01,31,0.609,32,0.326,33,0.649,34,0.571,35,0.477,53,0.604,56,0.656,58,0.182,59,0.162,63,0.1,67,0.11,75,0.674,87,0.005,88,0.006,89,0.005,115,1.622,116,2.956,127,0.9,128,1.453,130,0.674,144,1.462,145,1.106,146,0.75,181,0.113,184,0.693,185,0.693,186,0.693,187,0.693,188,0.693,189,0.693,190,1.3,203,0.712,204,0.939,205,0.791,206,0.791,209,0.889,210,2.032,211,0.656,213,1.551,214,1.429,215,0.77,217,1.073,218,2.815,222,2.018,229,1.319,231,0.924,232,0.924,233,0.914,234,1.228,235,1.023,239,0.462,240,1.073,241,1.073,242,0.554,243,1.37,244,0.791,245,1.37,246,0.712,247,0.77,248,1.101,249,0.712,250,0.791,251,0.712,252,0.75,253,1.585,254,0.712,255,0.77,256,0.791,257,0.712,258,0.77,259,0.712,260,1.195,261,0.791,262,0.731,263,0.791,264,0.712,265,0.791,266,0.712,267,0.791,268,0.712,269,0.731,270,0.791,271,0.712,272,0.77,273,0.712,274,0.791,275,0.712,276,0.791,277,0.791,278,0.791,279,1.233,280,0.791,281,0.712,282,0.791,283,0.712,284,0.731,285,0.712,286,1.202,287,1.585,288,0.712,289,0.712,290,0.712,291,0.77,292,0.712,293,0.791,294,0.712,295,0.75,296,0.791,297,0.712,298,0.693,299,0.712,300,1.101,301,0.656,302,0.712,303,1.267,304,0.712,305,0.712,306,0.712,307,0.77,308,0.712,309,0.77,310,1.101,311,0.712,312,0.77,313,0.712,314,0.75,315,0.712,316,0.77,317,0.712,318,0.712,319,0.791,320,0.674,321,0.791,322,0.75,323,0.75,324,0.75,325,0.712,326,0.77,327,0.712,328,0.75,329,0.712,330,1.073,331,0.712,332,0.712,333,0.77,334,0.712,335,0.77,336,0.791,337,0.77,338,0.656,339,0.693,340,0.731,341,0.791,342,0.693,343,1.023,344,0.791,345,0.693,346,0.791,347,0.674,348,0.791,349,0.693,350,0.731,351,0.731,352,0.77,353,0.791,835,3.88,1037,5.008,1444,3.597,1445,5.691,1446,4.087,1447,4.087]],["title/components/FogComponent.html",[181,0.074,281,0.751]],["body/components/FogComponent.html",[3,0.086,4,0.086,5,0.069,8,0.281,9,0.966,12,1.272,14,0.636,15,1.617,23,0.779,24,0.909,29,0.617,30,0.01,31,0.605,32,0.481,33,0.657,34,0.492,35,0.821,50,1.384,53,0.521,54,0.969,55,0.943,56,0.566,58,0.172,59,0.14,63,0.086,67,0.095,75,0.582,87,0.004,88,0.006,89,0.004,115,1.46,116,2.725,117,2.474,118,2.921,124,2.802,125,2.313,126,2.482,127,0.777,128,1.384,130,0.582,133,2.991,135,2.238,141,2.313,144,1.316,145,0.954,146,0.647,150,3.56,157,2.673,181,0.104,184,0.598,185,0.598,186,0.598,187,0.598,188,0.598,189,0.598,190,1.216,203,0.614,204,0.845,205,0.682,206,0.682,211,0.566,213,1.541,214,1.42,215,0.665,217,0.665,219,1.188,220,2.802,222,1.72,228,1.422,229,1.188,230,1.839,232,0.797,233,0.823,239,0.399,240,0.966,241,0.966,242,0.478,243,1.282,244,0.682,245,1.282,246,0.614,247,0.665,248,0.991,249,0.614,250,0.682,251,0.614,252,0.647,253,1.531,254,0.614,255,0.665,256,0.682,257,0.614,258,0.665,259,0.614,260,1.13,261,0.682,262,0.631,263,0.682,264,0.614,265,0.682,266,0.614,267,0.682,268,0.614,269,0.631,270,0.682,271,0.614,272,0.665,273,0.614,274,0.682,275,0.614,276,0.682,277,0.682,278,0.682,279,0.614,280,0.682,281,1.153,282,0.682,283,0.614,284,0.631,285,0.614,286,1.108,287,1.531,288,0.614,289,0.614,290,0.614,291,0.665,292,0.614,293,0.682,294,0.614,295,0.647,296,0.682,297,0.614,298,0.598,299,0.614,300,0.991,301,0.566,302,0.614,303,1.168,304,0.614,305,0.614,306,0.614,307,0.665,308,0.614,309,0.665,310,0.991,311,0.614,312,0.665,313,0.614,314,0.647,315,0.614,316,0.665,317,0.614,318,0.614,319,0.682,320,1.161,321,0.682,322,0.647,323,0.647,324,0.647,325,0.614,326,0.665,327,0.614,328,0.647,329,0.614,330,0.966,331,0.614,332,0.614,333,0.665,334,0.614,335,0.665,336,0.682,337,0.665,338,0.566,339,0.598,340,0.631,341,0.682,342,0.598,343,0.943,344,0.682,345,0.598,346,0.682,347,0.582,348,0.682,349,0.598,350,0.631,351,0.631,352,0.665,353,0.682,543,1.915,651,4.12,659,4.104,708,4.104,1063,1.997,1254,3.187,1348,3.036,1448,3.103,1449,5.123,1450,6.624,1451,6.624,1452,5.311,1453,5.829,1454,5.123,1455,5.123,1456,3.526,1457,3.526,1458,3.526,1459,3.526,1460,3.526,1461,3.526,1462,3.526,1463,3.526,1464,3.526,1465,3.526,1466,5.123,1467,3.526,1468,5.123,1469,3.526,1470,3.526,1471,3.526,1472,5.123,1473,3.526,1474,5.123,1475,3.526,1476,3.103,1477,3.103,1478,3.526,1479,3.526,1480,3.526]],["title/injectables/FontService.html",[0,1.331,553,2.829]],["body/injectables/FontService.html",[0,2.201,2,2.789,3,0.141,4,0.141,5,0.113,8,0.459,9,1.345,10,1.539,12,1.343,14,0.885,15,1.571,24,0.916,27,2.725,29,0.933,30,0.01,31,0.667,32,0.618,33,0.768,35,0.904,49,4.593,53,0.851,54,0.925,55,0.9,56,1.245,58,0.19,59,0.229,60,1.336,63,0.141,67,0.155,75,0.951,87,0.006,88,0.008,89,0.006,90,5.562,93,5.294,94,6.01,95,4.228,96,4.958,98,5.751,100,5.311,101,4.275,209,1.115,229,1.654,298,0.977,553,4.678,766,4.043,1481,5.071,1482,5.762,1483,4.615,1484,4.615,1485,4.615,1486,4.615,1487,5.762,1488,5.762,1489,5.762,1490,5.071,1491,5.071]],["title/components/FrameMeshComponent.html",[181,0.074,283,0.751]],["body/components/FrameMeshComponent.html",[3,0.081,4,0.081,5,0.065,8,0.264,10,0.972,12,1.191,13,0.626,14,0.607,15,1.282,23,0.743,24,0.84,29,0.589,30,0.01,31,0.59,32,0.39,33,0.637,34,0.462,35,0.679,36,4.55,50,0.624,53,0.489,54,0.934,55,0.909,56,0.934,58,0.176,59,0.132,60,1.836,63,0.081,67,0.089,75,0.96,87,0.004,88,0.005,89,0.004,115,1.394,118,2.816,125,2.209,127,0.729,128,1.353,130,0.546,133,2.902,135,2.137,141,2.209,144,1.257,145,0.896,146,0.608,157,1.727,181,0.1,184,0.561,185,0.561,186,0.561,187,0.561,188,0.561,189,0.561,190,1.18,203,0.577,204,0.807,205,0.641,206,0.641,209,0.764,210,1.695,211,0.532,213,1.536,214,1.416,215,0.624,217,0.922,218,2.556,219,1.134,222,1.832,228,1.38,229,1.134,231,0.748,232,0.748,233,0.786,234,1.47,235,0.829,239,0.374,240,0.922,241,0.922,242,0.449,243,1.244,244,0.641,245,1.244,246,0.577,247,0.624,248,0.947,249,0.577,250,0.641,251,0.577,252,0.608,253,1.507,254,0.577,255,0.624,256,0.641,257,0.577,258,0.624,259,0.577,260,1.101,261,0.641,262,0.592,263,0.641,264,0.577,265,0.641,266,0.577,267,0.641,268,0.577,269,0.592,270,0.641,271,0.577,272,0.624,273,0.577,274,0.641,275,0.577,276,0.641,277,0.641,278,0.641,279,0.577,280,0.641,281,0.577,282,0.641,283,1.119,284,1.041,285,0.577,286,1.069,287,1.507,288,0.577,289,0.577,290,0.577,291,0.624,292,0.577,293,0.641,294,0.577,295,0.608,296,0.641,297,0.577,298,0.561,299,0.577,300,0.947,301,0.532,302,0.577,303,1.126,304,0.577,305,0.577,306,0.577,307,0.624,308,0.577,309,0.624,310,0.947,311,0.577,312,0.624,313,0.577,314,0.608,315,0.577,316,0.624,317,0.577,318,0.577,319,0.641,320,0.546,321,0.641,322,0.608,323,0.608,324,0.608,325,0.577,326,0.624,327,0.577,328,0.608,329,0.577,330,0.922,331,0.577,332,0.577,333,0.624,334,0.577,335,0.624,336,0.641,337,0.624,338,0.532,339,0.561,340,0.592,341,0.641,342,0.561,343,0.909,344,0.641,345,0.561,346,0.641,347,0.546,348,0.641,349,0.561,350,0.592,351,0.592,352,0.624,353,0.641,396,1.078,401,1.049,716,2.137,784,1.798,785,3.449,787,3.898,795,2.652,809,2.457,814,2.286,821,2.368,822,1.876,824,2.059,860,3.63,862,2.457,867,3.49,952,2.059,988,1.876,1059,2.059,1061,3.815,1063,1.876,1064,2.457,1285,3.919,1492,6.709,1493,4.893,1494,6.428,1495,6.428,1496,6.428,1497,5.819,1498,4.769,1499,6.428,1500,2.914,1501,2.914,1502,7.624,1503,3.311,1504,4.893,1505,8.128,1506,3.311,1507,3.311,1508,2.914,1509,3.311,1510,3.311,1511,7.179,1512,6.428,1513,2.914,1514,3.311,1515,3.311,1516,3.311,1517,4.306,1518,4.306,1519,2.914,1520,2.914,1521,3.311,1522,2.914,1523,2.914]],["title/interfaces/GraphModel.html",[64,1.527,638,2.343]],["body/interfaces/GraphModel.html",[3,0.145,4,0.145,5,0.116,8,0.472,9,1.368,27,2.805,30,0.01,31,0.509,32,0.68,33,0.866,34,0.827,58,0.145,63,0.206,64,2.969,87,0.007,88,0.008,89,0.007,165,2.095,209,1.226,220,2.505,260,1.165,301,0.951,470,4.44,628,3.215,629,4.846,630,2.866,631,3.882,632,3.94,633,3.215,634,3.089,635,3.882,636,3.354,637,1.876,638,3.94,639,5.144,640,5.682,641,4.778,642,5.361,643,4.44]],["title/components/GridActorComponent.html",[181,0.074,285,0.751]],["body/components/GridActorComponent.html",[3,0.076,4,0.076,5,0.061,8,0.247,9,0.877,12,0.874,13,0.595,14,0.577,15,1.684,24,0.933,29,0.673,30,0.01,31,0.602,32,0.621,33,0.554,34,0.432,35,0.725,50,1.054,53,0.457,54,1.07,55,1.041,56,1.2,58,0.172,59,0.123,60,1.684,63,0.076,67,0.083,75,0.768,87,0.003,88,0.005,89,0.003,130,0.511,146,0.568,165,2.942,181,0.096,184,0.525,185,0.525,186,0.525,187,0.525,188,0.525,189,0.525,190,1.142,203,0.539,204,0.768,205,0.599,206,0.599,209,0.727,211,0.497,213,1.531,214,1.411,215,0.584,217,0.877,219,1.079,220,2.365,224,1.834,228,1.431,229,1.079,231,0.699,232,0.699,233,0.747,239,0.35,240,0.877,241,0.877,242,0.42,243,1.203,244,0.599,245,1.203,246,0.539,247,0.584,248,0.9,249,0.539,250,0.599,251,0.539,252,0.568,253,1.48,254,0.539,255,0.584,256,0.599,257,0.539,258,0.584,259,0.539,260,1.07,261,0.599,262,0.554,263,0.599,264,0.539,265,0.599,266,0.539,267,0.599,268,0.539,269,0.554,270,0.599,271,0.539,272,0.584,273,0.539,274,0.599,275,0.539,276,0.599,277,0.599,278,0.599,279,0.81,280,0.599,281,0.539,282,0.599,283,0.539,284,0.554,285,1.083,286,1.372,287,1.48,288,0.539,289,1.083,290,0.539,291,0.584,292,0.539,293,0.599,294,0.539,295,0.854,296,0.599,297,0.539,298,0.525,299,0.539,300,0.9,301,0.497,302,0.539,303,1.082,304,0.539,305,0.539,306,0.539,307,0.584,308,0.539,309,0.584,310,0.9,311,0.539,312,0.584,313,0.539,314,0.568,315,0.539,316,0.584,317,0.539,318,0.539,319,0.599,320,0.511,321,0.599,322,0.568,323,0.568,324,0.568,325,0.539,326,0.584,327,0.539,328,0.568,329,0.539,330,0.877,331,0.539,332,0.539,333,0.584,334,0.539,335,0.584,336,0.599,337,1.054,338,0.497,339,0.525,340,0.554,341,0.599,342,0.525,343,0.971,344,0.599,345,0.525,346,0.599,347,0.511,348,0.599,349,0.525,350,0.554,351,0.554,352,0.584,353,0.599,361,3.376,369,3.036,385,4.332,390,2.029,401,1.772,621,3.666,637,1.772,736,2.029,814,2.174,836,2.151,838,2.151,877,3.666,887,4.981,892,3.051,893,4.479,921,3.727,929,3.95,936,3.453,1081,3.453,1498,4.614,1524,7.317,1525,1.615,1526,4.653,1527,4.92,1528,4.653,1529,4.653,1530,4.095,1531,4.92,1532,4.92,1533,4.92,1534,5.591,1535,5.591,1536,2.724,1537,2.479,1538,4.095,1539,2.479,1540,3.051,1541,2.724,1542,3.095,1543,2.479,1544,2.479,1545,2.724,1546,4.653,1547,5.412,1548,3.095,1549,5.591,1550,3.095,1551,4.653,1552,3.095,1553,3.727,1554,2.724,1555,2.479,1556,4.653,1557,2.724,1558,2.297,1559,2.297,1560,3.095,1561,6.666,1562,4.653,1563,3.095,1564,4.653,1565,3.095,1566,3.727,1567,3.095,1568,2.724,1569,2.151,1570,3.095,1571,3.095,1572,7.003,1573,3.095,1574,2.724,1575,3.095,1576,3.095,1577,3.095,1578,3.095,1579,3.095,1580,2.724,1581,5.591,1582,3.095,1583,3.095,1584,2.724,1585,3.095,1586,4.653,1587,3.095,1588,3.095,1589,3.095,1590,3.095,1591,3.095,1592,3.095,1593,3.095]],["title/components/GridHelperComponent.html",[181,0.074,288,0.751]],["body/components/GridHelperComponent.html",[3,0.097,4,0.097,5,0.078,8,0.316,10,0.788,12,1.151,13,0.713,14,0.692,23,0.847,24,0.79,29,0.478,30,0.01,31,0.601,32,0.514,33,0.639,34,0.554,35,0.463,53,0.587,56,0.637,58,0.18,59,0.158,63,0.097,67,0.107,75,0.655,87,0.004,88,0.006,89,0.004,127,0.874,128,1.44,130,0.655,144,1.432,145,1.074,146,0.729,181,0.111,184,0.673,185,0.673,186,0.673,187,0.673,188,0.673,189,0.673,190,1.284,203,0.691,204,0.92,205,0.768,206,0.768,209,0.871,210,2.013,211,0.637,213,1.549,214,1.428,215,0.748,217,1.051,218,2.78,219,1.293,222,1.992,228,1.383,229,1.293,231,0.897,232,0.897,233,0.895,234,1.192,235,0.994,239,0.449,240,1.051,241,1.051,242,0.538,243,1.353,244,0.768,245,1.353,246,0.691,247,0.748,248,1.079,249,0.691,250,0.768,251,0.691,252,0.729,253,1.575,254,0.691,255,0.748,256,0.768,257,0.691,258,0.748,259,0.691,260,1.183,261,0.768,262,0.71,263,0.768,264,0.691,265,0.768,266,0.691,267,0.768,268,0.691,269,0.71,270,0.768,271,0.691,272,0.748,273,0.691,274,0.768,275,0.691,276,0.768,277,0.768,278,0.768,279,0.691,280,0.768,281,0.691,282,0.768,283,0.691,284,0.71,285,0.691,286,1.352,287,1.575,288,1.217,289,0.691,290,0.691,291,0.748,292,0.691,293,0.768,294,0.691,295,0.729,296,0.768,297,0.691,298,0.673,299,0.691,300,1.079,301,0.637,302,0.691,303,1.247,304,0.691,305,0.691,306,0.691,307,0.748,308,0.691,309,0.748,310,1.079,311,0.691,312,0.748,313,0.691,314,0.729,315,0.691,316,0.748,317,0.691,318,0.691,319,0.768,320,0.655,321,0.768,322,0.729,323,0.729,324,0.729,325,0.691,326,0.748,327,0.691,328,0.729,329,0.691,330,1.051,331,0.691,332,0.691,333,0.748,334,0.691,335,0.748,336,0.768,337,0.748,338,0.637,339,0.673,340,0.71,341,0.768,342,0.673,343,1.007,344,0.768,345,0.673,346,0.768,347,0.655,348,0.768,349,0.673,350,0.71,351,0.71,352,0.748,353,0.768,618,3.179,620,4.907,621,4.226,622,3.493,625,4.907,637,2.215,1594,6.481,1595,5.576,1596,6.445,1597,5.576,1598,3.969,1599,3.969,1600,3.969,1601,3.969]],["title/components/GridMeshComponent.html",[181,0.074,289,0.751]],["body/components/GridMeshComponent.html",[3,0.089,4,0.089,5,0.072,8,0.29,10,1.042,12,1.114,13,0.671,14,0.651,23,0.797,24,0.839,29,0.438,30,0.01,31,0.578,32,0.29,33,0.609,34,0.509,35,0.425,53,0.538,54,1.08,55,1.051,56,0.585,58,0.182,59,0.145,60,1.652,63,0.089,67,0.098,72,1.289,87,0.004,88,0.006,89,0.004,127,0.802,128,1.399,130,0.601,144,1.348,145,0.985,146,0.669,181,0.106,184,0.618,185,0.618,186,0.618,187,0.618,188,0.618,189,0.618,190,1.235,203,0.634,204,0.866,205,0.705,206,0.705,209,0.82,210,1.773,211,0.585,213,1.543,214,1.422,215,0.687,217,0.989,218,2.674,219,1.216,222,1.917,228,1.53,229,1.216,231,0.823,232,0.823,233,0.842,234,1.576,235,0.912,239,0.412,240,0.989,241,0.989,242,0.494,243,1.301,244,0.705,245,1.301,246,0.634,247,0.687,248,1.015,249,0.634,250,0.705,251,0.634,252,0.669,253,1.543,254,0.634,255,0.687,256,0.705,257,0.634,258,0.687,259,0.634,260,1.145,261,0.705,262,0.651,263,0.705,264,0.634,265,0.705,266,0.634,267,0.705,268,0.634,269,0.651,270,0.705,271,0.634,272,0.687,273,0.634,274,0.705,275,0.634,276,0.705,277,0.705,278,0.705,279,0.634,280,0.705,281,0.634,282,0.705,283,0.634,284,0.651,285,0.634,286,1.363,287,1.543,288,0.634,289,1.171,290,0.634,291,0.687,292,0.634,293,0.705,294,0.634,295,0.669,296,0.705,297,0.634,298,0.618,299,0.634,300,1.015,301,0.585,302,0.634,303,1.19,304,0.634,305,0.634,306,0.634,307,0.687,308,0.634,309,0.687,310,1.015,311,0.634,312,0.687,313,0.634,314,0.669,315,0.634,316,0.687,317,0.634,318,0.634,319,0.705,320,0.601,321,0.705,322,0.669,323,0.669,324,0.669,325,0.634,326,0.687,327,0.634,328,0.669,329,0.634,330,0.989,331,0.634,332,0.634,333,0.687,334,0.634,335,0.687,336,0.705,337,0.687,338,0.585,339,0.618,340,0.651,341,0.705,342,0.618,343,0.96,344,0.705,345,0.618,346,0.705,347,0.601,348,0.705,349,0.618,350,0.651,351,0.651,352,0.687,353,0.705,374,1.219,621,4.03,716,2.685,784,1.978,785,3.643,787,3.338,806,4.202,807,2.388,809,2.703,810,2.388,814,1.702,860,2.703,862,2.703,867,2.848,1531,5.41,1532,5.41,1533,5.918,1538,4.616,1540,3.439,1568,3.206,1574,3.206,1602,6.732,1603,5.246,1604,6.725,1605,2.918,1606,3.643,1607,3.643,1608,6.147,1609,3.643,1610,6.147,1611,3.206,1612,3.643,1613,3.643,1614,3.643,1615,3.643,1616,5.246,1617,3.643,1618,5.246,1619,3.643]],["title/components/HemisphereLightComponent.html",[181,0.074,290,0.751]],["body/components/HemisphereLightComponent.html",[3,0.095,4,0.095,5,0.076,8,0.308,10,0.768,12,1.139,13,0.7,14,0.679,23,0.832,24,0.824,29,0.465,30,0.01,31,0.594,32,0.308,33,0.63,34,0.54,35,0.451,53,0.571,54,1.02,55,0.993,56,0.621,58,0.185,59,0.154,60,0.896,63,0.095,67,0.104,75,0.638,87,0.004,88,0.006,89,0.004,127,0.851,128,1.427,130,0.638,144,1.406,145,1.046,146,0.71,181,0.109,184,0.655,185,0.655,186,0.655,187,0.655,188,0.655,189,0.655,190,1.269,203,0.673,204,0.903,205,0.748,206,0.748,208,2.686,209,0.855,210,1.996,211,0.621,213,1.547,214,1.426,215,0.729,216,4.801,217,1.032,218,2.747,219,1.269,220,1.635,221,4.714,222,1.969,223,2.868,224,3.243,228,1.483,229,1.269,230,2.016,231,0.873,232,0.873,233,0.879,234,1.161,235,0.968,239,0.437,240,1.032,241,1.032,242,0.524,243,1.337,244,0.748,245,1.337,246,0.673,247,0.729,248,1.059,249,0.673,250,0.748,251,0.673,252,0.71,253,1.565,254,0.673,255,0.729,256,0.748,257,0.673,258,0.729,259,0.673,260,1.171,261,0.748,262,0.691,263,0.748,264,0.673,265,0.748,266,0.673,267,0.748,268,0.673,269,0.691,270,0.748,271,0.673,272,0.729,273,0.673,274,0.748,275,0.673,276,0.748,277,0.748,278,0.748,279,0.673,280,0.748,281,0.673,282,0.748,283,0.673,284,0.691,285,0.673,286,1.167,287,1.565,288,0.673,289,0.673,290,1.203,291,1.198,292,0.673,293,0.748,294,0.673,295,0.71,296,0.748,297,0.673,298,0.655,299,0.673,300,1.059,301,0.621,302,0.673,303,1.229,304,0.673,305,0.673,306,0.673,307,0.729,308,0.673,309,0.729,310,1.059,311,0.673,312,0.729,313,0.673,314,0.71,315,0.673,316,0.729,317,0.673,318,0.673,319,0.748,320,0.638,321,0.748,322,0.71,323,0.71,324,0.71,325,0.673,326,0.729,327,0.673,328,0.71,329,0.673,330,1.032,331,0.673,332,0.673,333,0.729,334,0.673,335,0.729,336,0.748,337,0.729,338,0.621,339,0.655,340,0.691,341,0.748,342,0.655,343,0.993,344,0.748,345,0.655,346,0.748,347,0.638,348,0.748,349,0.655,350,0.691,351,0.691,352,0.729,353,0.748,689,2.051,1335,3.096,1338,3.096,1620,6.663,1621,5.473,1622,6.353,1623,6.353,1624,4.816,1625,5.473,1626,3.402,1627,3.866,1628,3.866,1629,3.866,1630,3.866]],["title/injectables/IconService.html",[0,1.331,554,2.444]],["body/injectables/IconService.html",[0,1.787,1,5.284,2,2.03,3,0.103,4,0.163,5,0.082,8,0.334,9,1.092,10,1.636,11,5.221,12,1.244,13,0.741,14,0.719,15,1.871,16,5.735,17,5.735,18,4.641,19,4.641,20,4.512,21,4.641,22,4.641,24,0.967,26,4.612,27,2.804,29,0.977,30,0.01,31,0.698,32,0.664,33,0.805,34,1.085,35,0.973,36,4.598,37,4.612,38,5.221,40,4.612,41,3.112,43,3.112,45,3.112,47,3.112,49,3.434,50,1.251,51,3.112,53,0.856,54,0.93,55,0.905,56,0.673,58,0.142,59,0.167,63,0.142,64,1.484,65,3.604,66,5.639,67,0.113,75,0.956,85,3.112,87,0.005,88,0.006,89,0.005,136,3.76,209,1.037,396,2.786,401,2.381,554,3.282,766,4.297,1631,3.359,1632,4.194,1633,6.022,1634,4.194,1635,4.194,1636,3.691,1637,3.691,1638,3.691,1639,3.691,1640,3.691,1641,3.691,1642,3.691,1643,5.099,1644,4.194,1645,3.691,1646,3.691,1647,3.359,1648,7.142,1649,6.501,1650,6.501,1651,3.691,1652,3.691,1653,3.691,1654,3.691,1655,3.691,1656,3.691,1657,3.691,1658,3.691,1659,5.842,1660,3.691,1661,3.691,1662,3.691,1663,3.691,1664,3.691,1665,3.691,1666,3.691,1667,3.691,1668,3.691]],["title/interfaces/IconSource.html",[64,1.527,1633,3.202]],["body/interfaces/IconSource.html",[0,2.124,1,4.283,3,0.133,4,0.133,5,0.107,8,0.434,9,1.298,10,1.081,11,3.783,12,0.851,20,3.084,26,3.783,27,2.182,30,0.01,32,0.602,34,0.76,37,3.783,38,3.783,40,3.783,58,0.169,59,0.216,63,0.169,64,1.926,65,4.698,66,5.971,67,0.147,75,1.136,85,4.04,87,0.006,88,0.008,89,0.006,136,4.913,209,1.18,396,2.89,401,2.594,554,3.084,628,2.956,1631,4.361,1633,6.075,1643,4.791,1647,4.361,1648,7.737,1649,7.042,1650,7.042,1651,4.791,1652,4.791,1653,4.791,1654,4.791,1655,4.791,1656,4.791,1657,4.791,1658,4.791,1659,6.647,1660,4.791,1661,4.791,1662,4.791,1663,4.791,1664,4.791,1665,4.791,1666,4.791,1667,4.791,1668,4.791]],["title/components/LayerActorComponent.html",[181,0.074,292,0.751]],["body/components/LayerActorComponent.html",[3,0.085,4,0.085,5,0.068,8,0.275,9,0.951,13,0.645,14,0.626,15,1.733,24,0.944,27,1.599,29,0.416,30,0.01,31,0.564,32,0.637,33,0.342,34,0.482,35,0.765,50,1.237,53,0.51,54,0.555,55,0.54,56,0.958,58,0.161,59,0.137,63,0.085,67,0.093,75,0.57,87,0.004,88,0.006,89,0.004,130,0.57,146,0.634,165,2.975,181,0.103,184,0.585,185,0.585,186,0.585,187,0.585,188,0.585,189,0.585,190,1.204,203,0.601,204,0.833,205,0.668,206,0.668,209,0.788,211,0.555,213,1.539,214,1.419,215,0.651,217,0.951,219,1.17,220,2.523,228,1.408,231,0.78,232,0.78,233,0.81,239,0.39,240,0.951,241,0.951,242,0.468,243,1.269,244,0.668,245,1.269,246,0.601,247,0.651,248,0.977,249,0.601,250,0.668,251,0.601,252,0.634,253,1.523,254,0.601,255,0.651,256,0.668,257,0.601,258,0.651,259,0.601,260,1.12,261,0.668,262,0.618,263,0.668,264,0.601,265,0.668,266,0.601,267,0.668,268,0.601,269,0.618,270,0.668,271,0.601,272,0.651,273,0.601,274,0.668,275,0.601,276,0.668,277,0.668,278,0.668,279,0.879,280,0.668,281,0.601,282,0.668,283,0.601,284,0.618,285,0.601,286,1.095,287,1.523,288,0.601,289,0.601,290,0.601,291,0.651,292,1.142,293,1.154,294,0.601,295,0.634,296,0.668,297,0.601,298,0.585,299,0.601,300,0.977,301,0.555,302,0.601,303,1.154,304,0.601,305,0.601,306,0.601,307,0.651,308,0.601,309,0.651,310,0.977,311,0.601,312,0.651,313,0.601,314,0.634,315,0.601,316,0.651,317,0.601,318,0.601,319,0.668,320,0.57,321,0.668,322,0.634,323,0.634,324,0.634,325,0.601,326,0.651,327,0.601,328,0.634,329,0.601,330,0.951,331,0.601,332,0.601,333,0.651,334,0.601,335,0.651,336,0.668,337,1.124,338,0.555,339,0.585,340,0.618,341,0.668,342,0.585,343,0.932,344,0.668,345,0.585,346,0.668,347,0.57,348,0.668,349,0.585,350,0.618,351,0.618,352,0.651,353,0.668,369,3.238,374,1.995,385,4.264,633,3.238,637,2.598,716,1.509,790,2.786,792,4.46,877,3.91,886,4.867,887,5.254,888,5.772,892,3.308,893,4.777,894,4.425,895,2.991,921,5.254,929,3.887,932,2.148,946,5.248,947,3.039,1254,2.148,1525,1.801,1527,5.248,1537,2.766,1543,2.766,1544,2.766,1555,2.766,1559,2.562,1669,7.399,1670,5.046,1671,5.963,1672,3.039,1673,4.042,1674,3.039,1675,2.766,1676,3.453,1677,3.453,1678,3.453,1679,2.766,1680,3.453,1681,3.453,1682,3.453,1683,3.453,1684,5.963,1685,3.453]],["title/components/LineConnectorComponent.html",[181,0.074,294,0.751]],["body/components/LineConnectorComponent.html",[3,0.076,4,0.076,5,0.061,8,0.246,9,0.875,10,0.921,12,1.328,13,0.593,14,0.576,15,1.228,23,0.705,24,0.961,29,0.371,30,0.01,31,0.534,32,0.578,33,0.553,34,0.43,35,0.776,50,1.051,53,0.456,54,1.269,55,1.235,56,0.996,58,0.194,59,0.123,60,1.076,63,0.114,67,0.083,72,1.973,87,0.003,88,0.005,89,0.003,115,1.322,117,2.287,126,2.09,127,0.679,128,1.318,130,0.509,144,1.192,145,0.834,146,0.566,181,0.096,184,0.523,185,0.523,186,0.523,187,0.523,188,0.523,189,0.523,190,1.139,203,0.537,204,0.766,205,0.597,206,0.597,209,0.725,210,1.636,211,0.495,213,1.53,214,1.41,215,0.581,217,0.875,219,1.076,220,1.304,222,1.768,224,2.749,228,1.639,229,1.076,230,1.608,231,0.697,232,0.697,233,0.745,234,0.926,235,0.772,239,0.349,240,0.875,241,0.875,242,0.418,243,1.201,244,0.597,245,1.201,246,0.537,247,0.581,248,0.898,249,0.537,250,0.597,251,0.537,252,0.566,253,1.478,254,0.537,255,0.581,256,0.597,257,0.537,258,0.581,259,0.537,260,1.069,261,0.597,262,0.551,263,0.597,264,0.537,265,0.597,266,0.537,267,0.597,268,0.537,269,0.551,270,0.597,271,0.537,272,0.581,273,0.537,274,0.597,275,0.537,276,0.597,277,0.597,278,0.597,279,0.537,280,0.597,281,0.537,282,0.597,283,0.537,284,0.551,285,0.537,286,1.024,287,1.478,288,0.537,289,0.537,290,0.537,291,0.581,292,0.537,293,0.597,294,1.081,295,1.284,296,0.597,297,0.537,298,0.523,299,0.537,300,0.898,301,0.495,302,0.537,303,1.079,304,0.537,305,0.537,306,0.537,307,0.581,308,0.537,309,0.581,310,0.898,311,0.537,312,0.581,313,0.537,314,0.566,315,0.537,316,0.581,317,0.537,318,0.537,319,0.597,320,0.509,321,0.597,322,0.566,323,0.566,324,0.566,325,0.537,326,0.581,327,0.537,328,0.566,329,0.537,330,0.875,331,0.537,332,0.537,333,0.581,334,0.537,335,0.581,336,0.597,337,0.581,338,0.495,339,0.523,340,0.997,341,0.597,342,0.523,343,0.871,344,0.597,345,0.523,346,0.597,347,0.509,348,0.597,349,0.523,350,0.551,351,0.551,352,0.581,353,0.597,354,3.642,357,3.677,363,4.909,373,3.657,374,2.227,396,1.816,401,1.47,637,1.767,689,1.738,716,2.027,814,1.44,924,3.305,931,1.747,936,3.442,1271,2.47,1540,3.042,1580,2.713,1584,2.713,1686,6.84,1687,2.47,1688,5.578,1689,4.639,1690,4.909,1691,5.578,1692,5.578,1693,5.578,1694,5.578,1695,6.205,1696,5.578,1697,5.578,1698,6.205,1699,6.205,1700,6.153,1701,6.205,1702,3.876,1703,6.205,1704,5.856,1705,4.639,1706,3.083,1707,3.083,1708,3.224,1709,3.083,1710,4.639,1711,3.083,1712,3.083,1713,3.083,1714,3.083,1715,3.083,1716,3.083,1717,3.083,1718,6.655,1719,3.083,1720,3.083,1721,3.083,1722,3.083,1723,4.639,1724,3.083,1725,3.083,1726,6.205,1727,3.083,1728,3.083,1729,3.083,1730,4.639,1731,3.083,1732,3.083,1733,3.083,1734,3.083,1735,3.083,1736,3.083,1737,3.083,1738,3.083,1739,3.083,1740,3.083,1741,3.083,1742,3.083,1743,3.083,1744,4.639]],["title/components/LoaderActorComponent.html",[181,0.074,297,0.751]],["body/components/LoaderActorComponent.html",[3,0.073,4,0.073,5,0.058,8,0.236,9,0.85,12,1.321,13,0.576,14,0.559,15,1.664,20,3.707,23,0.685,24,0.94,29,0.357,30,0.01,31,0.523,32,0.549,33,0.54,34,0.414,35,0.861,50,1.299,53,0.438,54,0.977,55,0.951,56,0.977,58,0.181,59,0.118,60,1.045,63,0.073,67,0.08,68,2.201,72,2.153,75,0.49,87,0.003,88,0.005,89,0.003,115,1.284,116,2.46,117,2.234,118,2.637,124,2.574,126,2.28,127,0.653,128,1.299,130,0.49,144,1.158,146,0.545,181,0.094,184,0.503,185,0.503,186,0.503,187,0.503,188,0.503,189,0.503,190,1.117,203,0.517,204,0.744,205,0.574,206,0.574,209,0.704,210,1.604,211,0.476,213,1.527,214,1.407,215,0.559,217,0.559,218,2.167,219,1.045,222,1.734,228,1.17,229,1.045,231,0.67,232,0.67,233,0.724,235,0.743,239,0.335,240,0.85,241,0.85,242,0.402,243,1.178,244,0.574,245,1.178,246,0.517,247,0.559,248,0.872,249,0.517,250,0.574,251,0.517,252,0.545,253,1.462,254,0.517,255,0.559,256,0.574,257,0.517,258,0.559,259,0.517,260,1.051,261,0.574,262,0.531,263,0.574,264,0.517,265,0.574,266,0.517,267,0.574,268,0.517,269,0.531,270,0.574,271,0.517,272,0.559,273,0.517,274,0.574,275,0.517,276,0.574,277,0.574,278,0.574,279,1.14,280,0.574,281,0.517,282,0.574,283,0.517,284,0.531,285,0.517,286,1.001,287,1.462,288,0.517,289,0.517,290,0.517,291,0.559,292,0.517,293,0.574,294,0.517,295,0.545,296,0.574,297,1.06,298,0.924,299,0.517,300,0.872,301,0.476,302,0.517,303,1.054,304,0.517,305,0.517,306,0.517,307,0.559,308,0.517,309,0.559,310,0.872,311,0.517,312,0.559,313,0.517,314,0.545,315,0.517,316,0.559,317,0.517,318,0.785,319,0.574,320,0.49,321,0.574,322,0.545,323,0.545,324,0.545,325,0.517,326,0.559,327,0.517,328,0.545,329,0.517,330,0.85,331,0.517,332,0.517,333,0.559,334,0.517,335,0.559,336,0.574,337,1.027,338,0.476,339,0.503,340,0.531,341,0.574,342,0.503,343,0.851,344,0.574,345,0.503,346,0.574,347,0.49,348,0.574,349,0.503,350,0.531,351,0.531,352,0.559,353,0.574,354,3.595,357,3.606,360,4.874,373,3.572,374,2.74,377,5.355,378,4.874,396,1.774,401,1.727,410,4.365,623,3.61,637,0.94,689,2.582,766,1.548,814,1.386,821,2.945,822,1.681,823,3.087,834,2.376,835,1.758,863,1.945,867,3.741,924,3.229,931,1.681,962,1.945,1039,2.061,1254,3.389,1264,3.344,1277,2.201,1279,2.061,1281,2.061,1310,2.611,1315,2.201,1348,1.758,1498,4.043,1525,1.548,1536,2.611,1537,2.376,1539,3.61,1540,1.945,1557,2.611,1558,2.201,1559,2.201,1673,2.376,1702,3.786,1745,7.315,1746,4.506,1747,5.449,1748,5.449,1749,5.449,1750,4.874,1751,2.967,1752,3.966,1753,2.967,1754,2.967,1755,2.967,1756,2.967,1757,2.967,1758,2.967,1759,2.967,1760,2.967,1761,2.061,1762,2.967,1763,2.967,1764,2.611,1765,2.201,1766,2.967,1767,2.967,1768,2.967,1769,2.967,1770,2.967,1771,4.506,1772,5.449,1773,2.967,1774,2.967,1775,2.967,1776,2.967,1777,2.967,1778,2.967,1779,2.967,1780,2.967,1781,2.967,1782,2.967,1783,2.611,1784,2.611,1785,2.611,1786,5.355,1787,2.967,1788,2.967,1789,3.966,1790,4.506,1791,3.966,1792,2.967,1793,2.967,1794,2.967,1795,2.967]],["title/components/MapControlsComponent.html",[181,0.074,299,0.751]],["body/components/MapControlsComponent.html",[3,0.072,4,0.072,5,0.058,8,0.236,9,0.848,10,0.587,12,1.179,14,0.558,15,1.198,23,0.683,24,0.951,29,0.541,30,0.01,31,0.562,32,0.484,33,0.446,34,0.413,35,0.709,50,1.232,53,0.804,54,1.289,55,1.254,56,0.475,58,0.175,59,0.118,63,0.072,67,0.08,72,1.591,75,0.488,87,0.003,88,0.005,89,0.003,115,1.281,117,2.23,118,2.632,125,2.03,126,2.276,127,0.651,128,1.297,130,0.488,133,2.743,135,1.292,141,2.03,145,0.8,146,0.543,157,2.345,181,0.094,184,0.501,185,0.501,186,0.501,187,0.501,188,0.501,189,0.501,190,1.116,203,0.515,204,0.742,205,0.572,206,0.572,209,0.702,211,0.475,213,1.527,214,1.407,215,0.558,217,0.848,219,1.042,228,1.741,233,0.475,235,0.741,239,0.334,240,0.848,241,0.848,242,0.401,243,1.176,244,0.572,245,1.176,246,0.515,247,0.558,248,0.87,249,0.515,250,0.572,251,0.515,252,0.543,253,1.461,254,0.515,255,0.558,256,0.572,257,0.515,258,0.558,259,0.515,260,1.049,261,0.572,262,0.529,263,0.572,264,0.515,265,0.572,266,0.515,267,0.572,268,0.515,269,0.529,270,0.572,271,0.515,272,0.558,273,0.515,274,0.572,275,0.515,276,0.572,277,0.572,278,0.572,279,0.515,280,0.572,281,0.515,282,0.572,283,0.515,284,0.529,285,0.515,286,0.999,287,1.461,288,0.515,289,0.515,290,0.515,291,0.558,292,0.515,293,0.572,294,0.515,295,0.543,296,0.572,297,0.515,298,0.501,299,1.058,300,0.87,301,0.475,302,0.515,303,1.052,304,0.515,305,0.515,306,0.515,307,0.848,308,0.515,309,0.558,310,0.87,311,0.515,312,0.558,313,0.515,314,0.543,315,0.515,316,0.558,317,0.515,318,0.515,319,0.572,320,0.488,321,0.572,322,0.543,323,0.543,324,0.543,325,0.515,326,0.558,327,0.515,328,0.543,329,0.515,330,0.848,331,0.515,332,0.515,333,0.558,334,0.515,335,0.558,336,0.572,337,0.558,338,0.475,339,0.501,340,0.529,341,0.572,342,0.501,343,0.85,344,0.572,345,0.501,346,0.572,347,0.488,348,0.572,349,0.501,350,0.529,351,0.529,352,0.558,353,0.572,354,3.7,357,3.223,396,2.241,422,2.344,587,3.567,637,1.425,689,1.108,699,2.547,716,1.964,717,4.222,729,1.543,790,1.382,863,2.948,924,3.223,931,1.675,962,1.939,1059,1.84,1251,1.753,1268,2.603,1279,2.055,1281,2.055,1315,2.194,1348,1.753,1498,3.336,1708,3.124,1796,2.369,1797,7.438,1798,2.369,1799,4.786,1800,4.786,1801,3.601,1802,4.786,1803,5.347,1804,5.439,1805,5.439,1806,5.439,1807,5.439,1808,5.439,1809,5.439,1810,5.439,1811,5.439,1812,5.439,1813,5.439,1814,4.786,1815,5.439,1816,4.786,1817,4.496,1818,2.958,1819,2.958,1820,2.958,1821,2.958,1822,4.496,1823,2.603,1824,2.958,1825,4.496,1826,2.958,1827,2.958,1828,2.958,1829,5.347,1830,2.958,1831,2.958,1832,2.958,1833,2.958,1834,2.958,1835,2.958,1836,2.958,1837,2.958,1838,4.496,1839,2.369,1840,2.603,1841,2.603,1842,3.956,1843,2.603,1844,3.956,1845,3.956,1846,2.603,1847,3.956,1848,3.956,1849,2.958,1850,2.958,1851,2.603,1852,2.603,1853,2.603,1854,2.958,1855,2.958,1856,2.958,1857,4.496,1858,2.958,1859,2.958,1860,2.958,1861,4.496,1862,2.958,1863,2.958,1864,2.958,1865,2.958,1866,2.958,1867,2.958,1868,2.958,1869,2.958,1870,2.958,1871,2.958,1872,2.958,1873,2.958,1874,2.958,1875,2.958,1876,4.496,1877,2.958,1878,2.958,1879,2.958,1880,2.958,1881,2.194,1882,3.336]],["title/components/ModelActorComponent.html",[181,0.074,188,0.732]],["body/components/ModelActorComponent.html",[3,0.095,4,0.095,5,0.076,8,0.308,9,1.031,10,0.767,12,0.992,13,0.699,15,1.398,23,0.831,24,0.824,27,2.466,29,0.658,30,0.01,31,0.627,32,0.55,33,0.685,34,0.539,35,0.451,50,0.728,53,0.571,58,0.179,59,0.153,60,0.895,63,0.095,67,0.104,75,0.637,87,0.004,88,0.006,89,0.004,127,0.85,128,1.427,130,0.637,144,1.405,146,0.709,165,2.678,181,0.109,184,0.655,185,0.655,186,0.655,187,0.655,188,1.171,189,0.655,190,1.338,203,0.672,204,0.902,205,0.747,206,0.747,209,0.854,210,1.821,211,0.62,213,1.547,214,1.426,215,0.728,217,1.031,219,1.268,222,1.968,228,1.174,231,0.873,232,0.873,233,0.878,235,0.967,239,0.437,240,1.031,241,1.031,242,0.524,243,1.336,244,0.747,245,1.336,246,0.672,247,0.728,248,1.058,249,0.672,250,0.747,251,0.672,252,0.709,253,1.565,254,0.672,255,0.728,256,0.747,257,0.672,258,0.728,259,0.672,260,1.171,261,0.747,262,0.691,263,0.747,264,0.672,265,0.747,266,0.672,267,0.747,268,0.672,269,0.691,270,0.747,271,0.672,272,0.728,273,0.672,274,0.747,275,0.672,276,0.747,277,0.747,278,0.747,279,0.672,280,0.747,281,0.672,282,0.747,283,0.672,284,0.691,285,0.672,286,1.166,287,1.565,288,0.672,289,0.672,290,0.672,291,0.728,292,0.672,293,0.747,294,0.672,295,0.709,296,0.747,297,0.672,298,0.655,299,0.672,300,1.058,301,1.299,302,0.672,303,1.229,304,0.672,305,0.672,306,0.672,307,0.728,308,0.672,309,0.728,310,1.058,311,0.672,312,0.728,313,0.672,314,0.709,315,0.672,316,0.728,317,0.672,318,0.952,319,0.747,320,0.637,321,0.747,322,0.709,323,0.709,324,0.709,325,0.672,326,0.728,327,0.672,328,0.709,329,0.672,330,1.031,331,0.672,332,0.672,333,0.728,334,0.672,335,0.728,336,0.747,337,1.302,338,0.62,339,0.655,340,0.691,341,0.747,342,0.655,343,0.992,344,0.747,345,0.655,346,0.747,347,0.637,348,0.747,349,0.655,350,0.691,351,0.691,352,0.728,353,0.747,554,2.188,555,5.102,895,3.241,932,2.402,1525,2.014,1545,4.813,1675,3.093,1679,4.381,1883,6.661,1884,4.163,1885,5.469,1886,6.35,1887,3.862,1888,3.862,1889,3.862,1890,3.398,1891,3.862,1892,3.862,1893,3.398,1894,3.398]],["title/injectables/ModelService.html",[0,1.331,555,2.829]],["body/injectables/ModelService.html",[0,1.908,1,5.366,2,2.234,3,0.113,4,0.171,5,0.091,8,0.368,9,1.166,10,1.67,11,5.398,12,1.276,13,0.791,14,0.767,15,1.9,16,5.968,17,5.968,18,4.954,19,4.954,20,4.626,21,4.954,22,4.954,24,0.981,26,4.846,27,2.83,29,0.999,30,0.01,31,0.714,32,0.677,33,0.823,34,1.116,35,0.991,36,4.702,37,4.846,38,5.398,40,4.846,41,3.425,43,3.425,45,3.425,47,3.425,49,3.665,50,1.315,51,3.425,53,0.914,54,0.993,55,0.966,56,0.741,58,0.152,59,0.183,63,0.113,65,5.162,66,4.846,67,0.124,75,1.021,87,0.005,88,0.007,89,0.005,209,0.966,234,1.858,555,4.055,766,4.385,1636,4.062,1637,4.062,1638,4.062,1639,4.062,1640,4.062,1641,4.062,1642,4.062,1645,4.062,1646,4.062,1647,3.697,1895,4.062,1896,4.616,1897,4.616,1898,4.616,1899,4.616,1900,4.616,1901,4.616,1902,4.616]],["title/interfaces/NearestIntersection.html",[64,1.527,1903,3.202]],["body/interfaces/NearestIntersection.html",[0,1.789,3,0.103,4,0.103,5,0.082,8,0.335,9,1.093,15,1.712,23,0.638,30,0.01,32,0.462,56,0.931,58,0.184,59,0.167,60,1.661,63,0.103,64,1.485,67,0.113,72,2.35,75,1.34,87,0.005,88,0.006,89,0.005,115,1.196,117,2.377,121,2.611,122,2.378,126,1.573,136,2.378,161,3.363,210,1.529,229,1.344,233,1.279,234,1.261,343,1.119,361,2.28,374,2.863,375,3.363,382,3.115,387,3.363,396,2.332,400,5.737,401,1.837,587,2.032,628,2.28,641,2.28,660,4.258,689,2.172,715,2.917,716,2.533,724,2.917,736,4.354,807,4.696,810,3.801,835,4.455,894,3.115,965,3.115,1170,3.363,1267,2.917,1308,3.115,1569,5.903,1708,2.917,1903,5.767,1904,3.363,1905,4.928,1906,4.354,1907,3.115,1908,2.917,1909,3.695,1910,5.103,1911,3.695,1912,5.845,1913,3.695,1914,4.928,1915,3.115,1916,5.845,1917,3.695,1918,3.695,1919,3.695,1920,3.695,1921,3.695,1922,3.695,1923,3.695,1924,3.695,1925,3.695,1926,3.695,1927,3.695,1928,5.845,1929,3.695,1930,3.695,1931,3.363,1932,3.695,1933,4.029,1934,3.695,1935,3.695,1936,3.695,1937,4.131,1938,3.695,1939,3.695,1940,5.103,1941,5.845,1942,5.103,1943,5.103,1944,6.615,1945,6.615,1946,5.103,1947,3.695,1948,3.695,1949,5.845,1950,3.115,1951,3.695,1952,5.103,1953,5.103,1954,3.695,1955,3.695,1956,3.695,1957,3.695,1958,3.695,1959,3.695,1960,3.695,1961,4.644,1962,3.695,1963,3.695,1964,3.695,1965,3.695,1966,3.695,1967,3.695,1968,5.103,1969,4.644,1970,3.695,1971,6.303,1972,5.103,1973,3.695,1974,3.695,1975,3.695,1976,3.695]],["title/interfaces/Node.html",[64,1.527,634,2.251]],["body/interfaces/Node.html",[3,0.147,4,0.147,5,0.118,8,0.477,9,1.377,27,2.867,30,0.01,31,0.515,32,0.697,33,0.849,34,1.146,58,0.147,63,0.206,64,2.978,87,0.007,88,0.008,89,0.007,165,2.118,209,1.282,220,2.532,260,1.173,301,1.318,470,3.25,628,3.25,629,4.988,630,2.897,631,3.924,632,3.966,633,3.25,634,3.81,635,3.924,636,3.391,637,1.897,638,3.25,639,3.924,640,4.159,641,4.28,642,3.924,643,3.25]],["title/components/ObjLoaderComponent.html",[181,0.074,304,0.751]],["body/components/ObjLoaderComponent.html",[3,0.081,4,0.081,5,0.141,8,0.262,9,0.918,10,0.967,12,1.119,13,0.623,14,0.604,15,0.725,23,0.74,24,0.838,27,2.412,29,0.586,30,0.01,31,0.588,32,0.545,33,0.635,34,0.459,35,0.568,50,0.62,53,0.486,54,0.528,55,0.514,56,0.931,58,0.194,59,0.131,60,1.129,63,0.081,67,0.089,75,0.543,87,0.004,88,0.005,89,0.004,95,3.436,96,4.029,127,0.725,128,1.35,130,0.543,144,1.251,145,0.89,146,0.604,181,0.118,184,0.558,185,0.558,186,0.558,187,0.558,188,0.558,189,0.558,190,1.177,203,0.573,204,0.804,205,0.637,206,0.637,209,0.761,210,1.69,211,0.528,213,1.536,214,1.415,215,0.62,217,0.918,219,1.129,222,1.827,228,1.376,229,1.129,231,0.744,232,0.744,233,0.782,234,0.989,235,0.824,239,0.372,240,0.918,241,0.918,242,0.446,243,1.24,244,0.637,245,1.24,246,0.573,247,0.62,248,0.943,249,0.573,250,0.637,251,0.573,252,0.604,253,1.504,254,0.573,255,0.62,256,0.637,257,0.573,258,0.62,259,0.573,260,1.099,261,0.637,262,0.589,263,0.637,264,0.573,265,0.637,266,0.573,267,0.637,268,0.573,269,0.589,270,0.637,271,0.573,272,0.62,273,0.573,274,0.637,275,0.573,276,0.637,277,0.637,278,0.637,279,0.573,280,0.637,281,0.573,282,0.637,283,0.573,284,0.589,285,0.573,286,1.065,287,1.504,288,0.573,289,0.573,290,0.573,291,0.62,292,0.573,293,0.637,294,0.573,295,0.604,296,0.637,297,0.573,298,1.087,299,0.573,300,0.943,301,0.931,302,0.573,303,1.122,304,1.116,305,1.397,306,0.573,307,0.62,308,0.573,309,0.62,310,0.943,311,0.573,312,0.62,313,0.573,314,0.604,315,0.573,316,0.62,317,0.573,318,0.573,319,0.637,320,0.543,321,0.637,322,0.604,323,0.604,324,0.604,325,0.573,326,0.62,327,0.573,328,0.604,329,0.573,330,0.918,331,0.573,332,0.573,333,0.62,334,0.573,335,0.62,336,0.637,337,0.62,338,0.528,339,0.558,340,0.589,341,0.637,342,0.558,343,0.906,344,0.637,345,0.558,346,0.637,347,0.543,348,0.637,349,0.558,350,0.589,351,0.589,352,0.62,353,0.637,356,2.158,374,1.94,543,1.787,554,1.864,556,4.202,689,1.233,729,1.717,821,3.102,895,2.887,932,2.047,968,2.442,1298,2.442,1491,2.896,1977,6.698,1978,2.442,1979,4.871,1980,4.871,1981,4.871,1982,2.896,1983,4.645,1984,4.871,1985,6.523,1986,4.756,1987,5.64,1988,5.64,1989,5.134,1990,4.871,1991,3.291,1992,6.021,1993,6.841,1994,6.841,1995,6.021,1996,6.841,1997,6.959,1998,4.871,1999,3.291,2000,2.896,2001,3.291,2002,4.871,2003,2.896,2004,2.896,2005,3.291,2006,3.291,2007,2.896,2008,3.291,2009,3.291,2010,3.291,2011,2.442,2012,3.291,2013,3.291,2014,4.871,2015,2.636,2016,4.871,2017,2.442,2018,3.614,2019,3.291,2020,2.896,2021,2.636,2022,2.636,2023,2.896,2024,3.291,2025,3.291,2026,3.291,2027,3.291,2028,2.896,2029,3.291,2030,3.291,2031,4.645,2032,3.291,2033,3.291,2034,3.291]],["title/injectables/ObjLoaderService.html",[0,1.331,556,2.829]],["body/injectables/ObjLoaderService.html",[0,2.085,2,2.559,3,0.13,4,0.13,5,0.104,8,0.421,9,1.274,10,1.48,12,1.318,14,0.839,15,1.787,24,0.938,27,2.674,29,0.945,30,0.01,31,0.675,32,0.626,33,0.778,35,0.916,49,4.416,50,1.274,53,0.781,54,1.085,55,1.056,56,1.261,58,0.207,59,0.21,63,0.13,67,0.143,75,0.872,87,0.006,88,0.008,89,0.006,90,5.442,93,5.015,94,5.827,95,4.006,96,4.697,98,5.529,100,5.148,101,3.923,209,1.056,229,1.727,298,1.263,301,0.849,374,2.493,543,2.871,556,4.432,766,3.887,1483,4.235,1484,4.235,1485,4.235,1486,4.235,1985,4.653,1989,5.968,2003,4.653,2004,4.653,2017,3.923,2018,5.015,2028,4.653,2035,6.911,2036,4.235,2037,6.759,2038,5.287,2039,6.759,2040,7.451,2041,5.287,2042,5.287,2043,4.653,2044,3.674,2045,4.653,2046,4.653,2047,5.287,2048,5.287,2049,4.653,2050,5.287]],["title/components/ObjectLoaderComponent.html",[181,0.074,302,0.751]],["body/components/ObjectLoaderComponent.html",[3,0.095,4,0.095,5,0.076,8,0.308,9,1.031,10,1.086,12,1.139,13,0.699,14,0.679,23,0.831,24,0.718,29,0.465,30,0.01,31,0.594,32,0.308,33,0.629,34,0.539,35,0.451,53,0.571,54,0.62,55,0.603,56,1.02,58,0.185,59,0.153,63,0.095,67,0.104,75,0.637,87,0.004,88,0.006,89,0.004,95,3.763,127,0.85,128,1.427,130,0.637,144,1.405,145,1.045,146,0.709,181,0.109,184,0.655,185,0.655,186,0.655,187,0.655,188,0.655,189,0.655,190,1.268,203,0.672,204,0.902,205,0.747,206,0.747,209,0.854,210,1.821,211,0.62,213,1.547,214,1.426,215,0.728,217,1.031,222,1.968,229,1.268,231,0.873,232,0.873,233,1.109,234,1.16,235,0.967,239,0.437,240,1.031,241,1.031,242,0.524,243,1.336,244,0.747,245,1.336,246,0.672,247,0.728,248,1.058,249,0.672,250,0.747,251,0.672,252,0.709,253,1.565,254,0.672,255,0.728,256,0.747,257,0.672,258,0.728,259,0.672,260,1.171,261,0.747,262,0.691,263,0.747,264,0.672,265,0.747,266,0.672,267,0.747,268,0.672,269,0.691,270,0.747,271,0.672,272,0.728,273,0.672,274,0.747,275,0.672,276,0.747,277,0.747,278,0.747,279,0.672,280,0.747,281,0.672,282,0.747,283,0.672,284,0.691,285,0.672,286,1.166,287,1.565,288,0.672,289,0.672,290,0.672,291,0.728,292,0.672,293,0.747,294,0.672,295,0.709,296,0.747,297,0.672,298,1.319,299,0.672,300,1.058,301,1.109,302,1.203,303,1.229,304,0.672,305,0.672,306,0.672,307,0.728,308,0.672,309,0.728,310,1.058,311,0.672,312,0.728,313,0.672,314,0.709,315,0.672,316,0.728,317,0.672,318,0.672,319,0.747,320,0.637,321,0.747,322,0.709,323,0.709,324,0.709,325,0.672,326,0.728,327,0.672,328,0.709,329,0.672,330,1.031,331,0.672,332,0.672,333,0.728,334,0.672,335,0.728,336,0.747,337,0.728,338,0.62,339,0.655,340,0.691,341,0.747,342,0.655,343,0.992,344,0.747,345,0.655,346,0.747,347,0.637,348,0.747,349,0.655,350,0.691,351,0.691,352,0.728,353,0.747,369,2.097,374,2.125,543,2.097,671,3.398,1978,2.865,1983,5.086,1986,5.124,1995,3.398,1997,3.398,2000,3.398,2017,2.865,2018,4.058,2049,3.398,2051,6.078,2052,5.469,2053,5.469,2054,5.469,2055,3.862,2056,3.862,2057,3.862,2058,3.862,2059,3.862,2060,3.398,2061,3.398,2062,3.862]],["title/components/OrbitControlsComponent.html",[181,0.074,306,0.751]],["body/components/OrbitControlsComponent.html",[3,0.092,4,0.092,5,0.074,8,0.299,10,0.746,12,1.127,14,0.665,23,0.815,24,0.815,29,0.645,30,0.01,31,0.62,32,0.427,33,0.532,34,0.524,35,0.626,50,1.011,53,0.555,54,0.861,55,0.838,56,0.603,58,0.177,59,0.149,63,0.092,67,0.101,75,0.62,87,0.004,88,0.006,89,0.004,115,1.528,118,3.027,125,2.421,127,0.827,128,1.414,130,0.62,133,3.08,135,1.641,141,2.421,145,1.016,146,0.69,181,0.108,184,0.637,185,0.637,186,0.637,187,0.637,188,0.637,189,0.637,190,1.252,203,0.654,204,0.885,205,0.727,206,0.727,209,0.838,211,0.603,213,1.545,214,1.424,215,0.708,217,1.011,219,1.243,228,1.342,233,0.603,235,0.941,239,0.425,240,1.011,241,1.011,242,0.509,243,1.32,244,0.727,245,1.32,246,0.654,247,0.708,248,1.038,249,0.654,250,0.727,251,0.654,252,0.69,253,1.555,254,0.654,255,0.708,256,0.727,257,0.654,258,0.708,259,0.654,260,1.158,261,0.727,262,0.672,263,0.727,264,0.654,265,0.727,266,0.654,267,0.727,268,0.654,269,0.672,270,0.727,271,0.654,272,0.708,273,0.654,274,0.727,275,0.654,276,0.727,277,0.727,278,0.727,279,0.654,280,0.727,281,0.654,282,0.727,283,0.654,284,0.672,285,0.654,286,1.148,287,1.555,288,0.654,289,0.654,290,0.654,291,0.708,292,0.654,293,0.727,294,0.654,295,0.69,296,0.727,297,0.654,298,0.637,299,0.654,300,1.038,301,0.603,302,0.654,303,1.21,304,0.654,305,0.654,306,1.188,307,1.286,308,0.654,309,0.708,310,1.038,311,0.654,312,0.708,313,0.654,314,0.69,315,0.654,316,0.708,317,0.654,318,0.654,319,0.727,320,0.62,321,0.727,322,0.69,323,0.69,324,0.69,325,0.654,326,0.708,327,0.654,328,0.69,329,0.654,330,1.011,331,0.654,332,0.654,333,0.708,334,0.654,335,0.708,336,0.727,337,0.708,338,0.603,339,0.637,340,0.672,341,0.727,342,0.637,343,0.977,344,0.727,345,0.637,346,0.727,347,0.62,348,0.727,349,0.637,350,0.672,351,0.672,352,0.708,353,0.727,587,3.82,689,1.407,699,3.038,790,1.755,1059,2.337,1251,2.226,1348,2.226,1796,3.009,1798,3.009,1799,5.503,1800,5.503,1801,4.295,1802,5.503,1803,6.002,1814,5.503,1816,5.503,1823,3.306,1829,4.719,1839,4.295,1840,3.306,1841,3.306,1842,4.719,1843,3.306,1844,4.719,1845,4.719,1846,3.306,1847,4.719,1848,4.719,1851,3.306,1852,3.306,1853,3.306,1881,2.787,1882,3.979,2063,6.6,2064,5.362,2065,3.756,2066,3.756]],["title/components/OrthographicCameraComponent.html",[181,0.074,308,0.751]],["body/components/OrthographicCameraComponent.html",[3,0.086,4,0.086,5,0.069,8,0.281,10,0.701,12,1.184,13,0.655,14,0.636,15,1.33,23,0.779,24,0.83,29,0.727,30,0.01,31,0.631,32,0.481,33,0.599,34,0.493,35,0.773,50,1.384,53,0.522,54,0.567,55,0.551,56,0.567,58,0.172,59,0.14,60,0.818,63,0.086,67,0.095,72,1.814,75,0.582,87,0.004,88,0.006,89,0.004,115,1.461,118,2.922,125,2.315,127,0.777,128,1.384,130,0.582,133,2.992,135,2.24,141,2.315,145,0.955,146,0.648,157,1.841,181,0.114,184,0.598,185,0.598,186,0.598,187,0.598,188,0.598,189,0.598,190,1.217,203,0.615,204,0.846,205,0.683,206,0.683,209,0.801,211,0.567,213,1.541,214,1.42,215,0.665,217,0.967,219,1.189,228,1.1,229,1.189,231,0.797,232,0.797,233,0.567,235,0.884,239,0.399,240,0.967,241,0.967,242,0.479,243,1.282,244,0.683,245,1.282,246,0.615,247,0.665,248,0.992,249,0.615,250,0.683,251,0.615,252,0.648,253,1.531,254,0.615,255,0.665,256,0.683,257,0.615,258,0.665,259,0.615,260,1.13,261,0.683,262,0.631,263,0.683,264,0.615,265,0.683,266,0.615,267,0.683,268,0.615,269,0.631,270,0.683,271,0.615,272,0.665,273,0.615,274,0.683,275,0.615,276,0.683,277,0.683,278,0.683,279,0.615,280,0.683,281,0.615,282,0.683,283,0.615,284,0.631,285,0.615,286,1.109,287,1.531,288,0.615,289,0.615,290,0.615,291,0.665,292,0.615,293,0.683,294,0.615,295,0.648,296,0.683,297,0.615,298,0.598,299,0.615,300,0.992,301,0.567,302,0.615,303,1.168,304,0.615,305,0.615,306,0.615,307,0.665,308,1.154,309,1.138,310,0.992,311,0.615,312,0.665,313,0.615,314,0.648,315,0.615,316,0.665,317,0.615,318,0.615,319,0.683,320,0.582,321,0.683,322,0.648,323,0.648,324,0.648,325,0.615,326,0.665,327,0.615,328,0.648,329,0.615,330,0.967,331,0.615,332,0.615,333,0.665,334,0.615,335,0.665,336,0.683,337,0.665,338,0.567,339,0.598,340,0.631,341,0.683,342,0.598,343,0.943,344,0.683,345,0.598,346,0.683,347,0.582,348,0.683,349,0.598,350,0.631,351,0.631,352,0.665,353,0.683,396,1.149,401,1.118,421,2.262,637,1.913,660,3.421,715,3.562,716,3.391,717,2.452,724,3.562,729,1.841,1063,1.999,1391,4.512,1428,3.106,1906,4.615,1933,3.562,2067,6.668,2068,2.827,2069,5.127,2070,5.832,2071,4.512,2072,6.627,2073,4.512,2074,3.529,2075,3.529,2076,4.512,2077,3.529,2078,5.308,2079,3.529,2080,3.529,2081,3.529,2082,3.529,2083,5.127,2084,6.038,2085,3.529,2086,3.529,2087,3.529,2088,3.529,2089,7.039,2090,3.529,2091,3.529,2092,3.529,2093,3.529,2094,3.529,2095,3.106,2096,3.529,2097,3.529]],["title/components/PerspectiveCameraComponent.html",[181,0.074,311,0.751]],["body/components/PerspectiveCameraComponent.html",[3,0.093,4,0.093,5,0.074,8,0.302,10,0.753,12,1.07,13,0.69,14,0.67,15,1.385,23,0.821,24,0.851,29,0.65,30,0.01,31,0.623,32,0.577,33,0.535,34,0.53,35,0.63,50,1.185,53,0.561,56,0.609,58,0.177,59,0.151,63,0.093,67,0.102,87,0.004,88,0.006,89,0.004,127,0.835,128,1.419,130,0.626,145,1.026,146,0.697,181,0.108,184,0.643,185,0.643,186,0.643,187,0.643,188,0.643,189,0.643,190,1.258,203,0.661,204,0.891,205,0.734,206,0.734,209,0.844,211,0.609,213,1.546,214,1.425,215,0.715,217,1.018,219,1.252,228,1.47,229,1.252,231,0.857,232,0.857,233,0.609,235,0.95,239,0.429,240,1.018,241,1.018,242,0.514,243,1.326,244,0.734,245,1.326,246,0.661,247,0.715,248,1.045,249,0.661,250,0.734,251,0.661,252,0.697,253,1.558,254,0.661,255,0.715,256,0.734,257,0.661,258,0.715,259,0.661,260,1.163,261,0.734,262,0.678,263,0.734,264,0.661,265,0.734,266,0.661,267,0.734,268,0.661,269,0.678,270,0.734,271,0.661,272,0.715,273,0.661,274,0.734,275,0.661,276,0.734,277,0.734,278,0.734,279,0.661,280,0.734,281,0.661,282,0.734,283,0.661,284,0.678,285,0.661,286,1.155,287,1.558,288,0.661,289,0.661,290,0.661,291,0.715,292,0.661,293,0.734,294,0.661,295,0.697,296,0.734,297,0.661,298,0.643,299,0.661,300,1.045,301,0.609,302,0.661,303,1.217,304,0.661,305,0.661,306,0.661,307,0.715,308,0.661,309,0.715,310,1.045,311,1.193,312,1.185,313,0.661,314,0.697,315,0.661,316,0.715,317,0.661,318,0.661,319,0.734,320,0.626,321,0.734,322,0.697,323,0.697,324,0.697,325,0.661,326,0.715,327,0.661,328,0.697,329,0.661,330,1.018,331,0.661,332,0.661,333,0.715,334,0.661,335,0.715,336,0.734,337,0.715,338,0.609,339,0.643,340,0.678,341,0.734,342,0.643,343,0.982,344,0.734,345,0.643,346,0.734,347,0.626,348,0.734,349,0.643,350,0.678,351,0.678,352,0.715,353,0.734,395,2.815,543,2.932,637,2.552,660,3.562,1452,5.533,1453,5.533,1476,3.338,1477,3.338,1906,4.747,1933,2.636,2068,3.038,2070,6.029,2071,4.752,2073,3.338,2076,4.752,2078,5.036,2095,3.338,2098,6.813,2099,5.4,2100,6.288,2101,5.4,2102,3.793,2103,3.793,2104,3.793,2105,3.793,2106,3.793,2107,3.793,2108,3.793,2109,3.793,2110,3.793,2111,3.793]],["title/components/PlaneMeshComponent.html",[181,0.074,313,0.751]],["body/components/PlaneMeshComponent.html",[3,0.079,4,0.079,5,0.064,8,0.258,10,0.956,12,1.062,13,0.615,14,0.597,15,1.265,23,0.731,24,0.834,29,0.579,30,0.01,31,0.584,32,0.384,33,0.802,34,0.452,35,0.562,50,0.611,53,0.479,54,1.021,55,0.993,56,0.922,58,0.174,59,0.129,60,1.651,63,0.079,67,0.087,75,0.794,87,0.004,88,0.005,89,0.004,115,1.372,118,2.78,125,2.173,127,0.713,128,1.343,130,0.534,133,2.871,135,2.103,141,2.173,144,1.237,145,0.876,146,0.595,157,1.689,181,0.099,184,0.549,185,0.549,186,0.549,187,0.549,188,0.549,189,0.549,190,1.168,203,0.564,204,0.794,205,0.627,206,0.627,209,0.752,210,1.676,211,0.52,213,1.534,214,1.414,215,0.611,217,0.907,218,2.528,219,1.116,222,1.812,228,1.459,229,1.116,231,0.732,232,0.732,233,0.773,234,1.446,235,0.811,239,0.366,240,0.907,241,0.907,242,0.439,243,1.231,244,0.627,245,1.231,246,0.564,247,0.611,248,0.931,249,0.564,250,0.627,251,0.564,252,0.595,253,1.498,254,0.564,255,0.611,256,0.627,257,0.564,258,0.611,259,0.564,260,1.091,261,0.627,262,0.579,263,0.627,264,0.564,265,0.627,266,0.564,267,0.627,268,0.564,269,0.579,270,0.627,271,0.564,272,0.611,273,0.564,274,0.627,275,0.564,276,0.627,277,0.627,278,0.627,279,0.564,280,0.627,281,0.564,282,0.627,283,0.564,284,0.579,285,0.564,286,1.055,287,1.498,288,0.564,289,0.564,290,0.564,291,0.611,292,0.564,293,0.627,294,0.564,295,0.595,296,0.627,297,0.564,298,0.549,299,0.564,300,0.931,301,0.52,302,0.564,303,1.112,304,0.564,305,0.564,306,0.564,307,0.611,308,0.564,309,0.611,310,0.931,311,0.564,312,0.611,313,1.107,314,1.055,315,0.564,316,0.611,317,0.564,318,0.564,319,0.627,320,0.534,321,0.627,322,0.595,323,0.595,324,0.595,325,0.564,326,0.611,327,0.564,328,0.595,329,0.564,330,0.907,331,0.564,332,0.564,333,0.611,334,0.564,335,0.611,336,0.627,337,0.611,338,0.52,339,0.549,340,0.579,341,0.627,342,0.549,343,0.897,344,0.627,345,0.549,346,0.627,347,0.534,348,0.627,349,0.549,350,0.579,351,0.579,352,0.611,353,0.627,396,1.054,401,1.026,637,2.015,643,3.453,689,3.032,699,3.602,784,1.758,785,3.404,787,3.867,790,3.539,791,4.262,792,4.489,793,4.718,795,2.594,796,5.094,797,5.094,799,5.094,800,6.068,801,5.596,802,5.596,803,5.596,804,5.596,805,5.596,806,2.594,807,3.156,809,2.403,810,3.156,811,4.236,814,1.513,816,3.156,818,3.571,819,3.571,821,2.329,822,1.835,823,1.835,824,2.014,867,3.453,952,2.014,988,1.835,1059,2.014,1061,3.766,1063,1.835,1064,2.403,1285,3.855,1500,2.85,1517,4.236,1518,4.236,1519,2.85,1520,2.85,1522,2.85,1523,2.85,2112,6.667,2113,4.813,2114,2.85,2115,4.236,2116,3.239,2117,3.239,2118,4.813]],["title/components/PointLightComponent.html",[181,0.074,315,0.751]],["body/components/PointLightComponent.html",[3,0.091,4,0.091,5,0.073,8,0.298,10,0.742,12,1.124,13,0.683,14,0.663,23,0.811,24,0.846,29,0.449,30,0.01,31,0.585,32,0.298,33,0.618,34,0.521,35,0.436,53,0.552,54,1.092,55,1.063,56,0.6,58,0.176,59,0.148,60,0.866,63,0.091,67,0.101,75,0.616,87,0.004,88,0.006,89,0.004,127,0.822,128,1.411,130,0.616,144,1.372,145,1.01,146,0.686,181,0.107,184,0.633,185,0.633,186,0.633,187,0.633,188,0.633,189,0.633,190,1.249,203,0.65,204,0.881,205,0.723,206,0.723,208,2.595,209,0.834,210,1.973,211,0.6,213,1.545,214,1.424,215,0.704,216,4.727,217,1.007,218,2.705,219,1.238,220,2.637,221,4.625,222,1.939,223,2.771,224,3.165,225,3.286,228,1.545,229,1.238,230,1.948,231,0.844,232,0.844,233,0.858,234,1.122,235,0.935,238,2.991,239,0.422,240,1.007,241,1.007,242,0.506,243,1.316,244,0.723,245,1.316,246,0.65,247,0.704,248,1.033,249,0.65,250,0.723,251,0.65,252,0.686,253,1.553,254,0.65,255,0.704,256,0.723,257,0.65,258,0.704,259,0.65,260,1.156,261,0.723,262,0.668,263,0.723,264,0.65,265,0.723,266,0.65,267,0.723,268,0.65,269,0.668,270,0.723,271,0.65,272,0.704,273,0.65,274,0.723,275,0.65,276,0.723,277,0.723,278,0.723,279,0.65,280,0.723,281,0.65,282,0.723,283,0.65,284,0.668,285,0.65,286,1.145,287,1.553,288,0.65,289,0.65,290,0.65,291,0.704,292,0.65,293,0.723,294,0.65,295,0.686,296,0.723,297,0.65,298,0.633,299,0.65,300,1.033,301,0.6,302,0.65,303,1.206,304,0.65,305,0.65,306,0.65,307,0.704,308,0.65,309,0.704,310,1.033,311,0.65,312,0.704,313,0.65,314,0.686,315,1.185,316,1.175,317,0.65,318,0.65,319,0.723,320,0.616,321,0.723,322,0.686,323,0.686,324,0.686,325,0.65,326,0.704,327,0.65,328,0.686,329,0.65,330,1.007,331,0.65,332,0.65,333,0.704,334,0.65,335,0.704,336,0.723,337,0.704,338,0.6,339,0.633,340,0.668,341,0.723,342,0.633,343,0.974,344,0.723,345,0.633,346,0.723,347,0.616,348,0.723,349,0.633,350,0.668,351,0.668,352,0.704,353,0.723,396,1.739,401,1.183,689,2.336,729,1.948,1332,4.993,1335,2.991,1344,4.277,1345,3.286,1346,2.991,1352,3.286,1353,3.286,1354,5.486,1356,4.699,1357,3.286,1358,3.286,1624,4.699,1626,3.286,1708,2.595,1969,4.993,2119,6.782,2120,5.34,2121,3.734,2122,3.734,2123,3.734,2124,3.734,2125,3.734]],["title/pipes/Rad2DegPipe.html",[578,2.998,1316,2.998]],["body/pipes/Rad2DegPipe.html",[3,0.156,4,0.156,5,0.125,14,0.788,24,0.718,29,0.764,30,0.01,31,0.695,32,0.506,33,0.63,35,0.741,58,0.156,59,0.252,63,0.156,67,0.171,75,1.048,87,0.007,88,0.008,89,0.007,115,1.81,211,1.02,356,4.164,578,5.26,637,2.711,863,4.164,1316,5.26,1317,5.087,1320,5.589,1323,6.661,1324,6.661,1325,7.72,1326,6.661,1327,5.589,1329,5.589,2126,5.589,2127,7.57,2128,7.57,2129,6.351]],["title/directives/RaycasterCameraDirective.html",[242,0.585,342,0.732]],["body/directives/RaycasterCameraDirective.html",[3,0.152,4,0.152,5,0.122,8,0.495,14,0.926,23,1.135,24,0.844,29,0.747,30,0.01,31,0.534,32,0.495,33,0.615,35,0.724,50,1.408,58,0.196,59,0.247,63,0.152,67,0.167,87,0.007,88,0.008,89,0.007,115,2.128,116,3.616,124,3.515,211,0.997,213,1.052,214,1.167,242,0.842,338,0.997,342,1.266,343,1.167,374,2.498,587,4.226,591,4.313,660,4.537,1249,4.972,1251,4.425,1269,4.07,1906,5.448,1907,4.606,2130,5.251,2131,5.463,2132,6.207,2133,6.207,2134,6.207]],["title/interfaces/RaycasterEmitEvent.html",[64,1.527,1547,2.998]],["body/interfaces/RaycasterEmitEvent.html",[3,0.127,4,0.127,5,0.102,8,0.415,9,1.261,23,0.79,30,0.01,32,0.533,33,0.663,50,1.261,56,1.187,58,0.198,59,0.207,60,1.551,63,0.164,64,1.84,67,0.14,87,0.006,88,0.007,89,0.006,115,1.482,116,3.02,117,2.742,124,2.2,126,1.949,181,0.145,204,1.104,210,2.129,214,1.045,229,1.551,233,0.835,234,1.563,242,0.705,305,1.288,343,1.261,347,0.858,361,4.015,365,3.86,374,2.813,385,4.421,587,3.578,591,3.614,628,2.825,929,4.625,966,3.614,1251,3.083,1267,3.614,1269,3.41,1275,5.922,1282,5.358,1547,4.648,1553,4.167,1566,5.358,1569,5.743,1905,5.486,1908,3.614,1914,5.486,1915,3.86,1937,4.161,1950,3.86,2130,3.41,2135,4.167,2136,4.578,2137,4.167,2138,4.578,2139,4.578,2140,4.578,2141,4.578,2142,4.578,2143,4.167,2144,4.167,2145,3.86,2146,6.507,2147,4.578,2148,6.507,2149,4.578,2150,4.578,2151,4.578,2152,4.578,2153,4.578,2154,4.578,2155,4.578,2156,4.578,2157,4.578,2158,4.578,2159,4.578,2160,4.578,2161,4.578,2162,4.578,2163,4.578,2164,4.578,2165,4.578,2166,4.578]],["title/directives/RaycasterEnableDirective.html",[242,0.585,345,0.732]],["body/directives/RaycasterEnableDirective.html",[3,0.155,4,0.155,5,0.124,8,0.504,14,0.936,23,1.147,24,0.853,29,0.76,30,0.01,31,0.543,32,0.504,33,0.626,35,0.737,50,1.423,58,0.185,59,0.251,63,0.155,67,0.17,87,0.007,88,0.008,89,0.007,115,2.151,116,3.644,122,4.276,124,3.536,211,1.015,213,1.071,214,1.179,242,0.857,338,1.015,343,1.179,345,1.28,374,2.115,587,4.196,591,4.391,1269,4.143,2130,5.291,2167,5.561,2168,6.319,2169,6.319,2170,6.319,2171,6.319]],["title/directives/RaycasterGroupDirective.html",[242,0.585,347,0.712]],["body/directives/RaycasterGroupDirective.html",[3,0.108,4,0.108,5,0.086,8,0.351,14,0.743,23,0.91,24,0.96,29,0.819,30,0.01,31,0.585,32,0.582,33,0.675,35,0.941,50,1.569,56,1.093,58,0.187,59,0.175,60,1.388,63,0.147,64,1.557,67,0.119,87,0.005,88,0.007,89,0.005,115,1.706,116,3.073,117,2.79,124,3.09,126,2.737,181,0.126,204,1.205,210,2.015,211,0.707,213,0.746,214,1.141,229,1.388,233,0.707,234,1.322,242,0.597,305,1.185,338,0.707,343,1.3,347,0.988,356,2.885,361,4.15,365,4.443,374,2.939,385,4.57,587,3.904,591,3.057,886,4.443,892,3.925,929,4.329,966,4.16,1249,3.524,1251,3.548,1267,3.057,1269,2.885,1275,5.452,1282,4.796,1530,5.269,1547,3.057,1553,4.796,1566,4.796,1569,4.729,1905,3.265,1908,3.057,1914,5.05,1915,3.265,1937,4.544,1950,4.443,2130,5.613,2135,3.524,2136,5.269,2137,4.796,2138,5.269,2139,5.269,2140,5.269,2141,5.269,2142,5.269,2143,5.452,2144,5.452,2145,5.05,2146,5.989,2147,3.872,2148,5.989,2149,3.872,2150,3.872,2151,3.872,2152,6.429,2153,3.872,2154,3.872,2155,3.872,2156,6.429,2157,3.872,2158,3.872,2159,3.872,2160,6.429,2161,3.872,2162,3.872,2163,3.872,2164,3.872,2165,3.872,2166,3.872,2172,5.987,2173,4.4,2174,4.4,2175,4.4,2176,4.4,2177,4.4,2178,4.4,2179,4.4,2180,4.4,2181,4.4]],["title/injectables/RaycasterService.html",[0,1.331,587,2.088]],["body/injectables/RaycasterService.html",[0,1.506,2,1.598,3,0.081,4,0.081,5,0.065,8,0.263,9,0.921,14,0.606,15,1.872,23,0.883,24,0.977,29,0.893,30,0.01,31,0.638,32,0.591,33,0.736,35,0.966,50,1.532,54,1.031,55,1.003,56,0.933,58,0.168,59,0.131,60,1.488,63,0.081,64,1.168,67,0.089,72,2.056,75,1.257,87,0.004,88,0.005,89,0.004,115,0.941,117,2.002,121,3.993,122,3.637,126,2.405,136,3.637,161,2.645,210,1.692,229,1.132,233,1.031,234,0.992,343,1.121,361,3.486,374,2.994,375,4.654,382,2.45,387,5.142,396,2.335,400,5.142,401,1.547,587,2.363,641,2.652,660,4.316,689,1.83,715,2.295,716,2.133,724,2.295,736,3.809,807,4.702,810,3.809,835,3.805,886,3.623,894,4.311,895,2.894,965,4.763,1170,2.645,1267,2.295,1308,2.45,1569,5.406,1708,2.295,1903,5.322,1904,2.645,1905,2.45,1906,4.702,1907,2.45,1908,2.295,1909,4.297,1910,5.65,1911,5.113,1912,5.113,1913,2.906,1914,4.311,1915,2.45,1916,5.113,1917,2.906,1918,2.906,1919,2.906,1920,2.906,1921,2.906,1922,2.906,1923,2.906,1924,2.906,1925,2.906,1926,2.906,1927,5.65,1928,5.113,1929,5.65,1930,5.113,1931,3.912,1932,2.906,1933,3.393,1934,4.297,1935,2.906,1936,2.906,1937,3.993,1938,2.906,1939,4.297,1940,4.297,1941,5.113,1942,4.297,1943,4.297,1944,6.029,1945,6.029,1946,4.297,1947,2.906,1948,2.906,1949,5.113,1950,3.623,1951,2.906,1952,4.297,1953,4.297,1954,4.297,1955,5.113,1956,2.906,1957,2.906,1958,2.906,1959,4.297,1960,4.297,1961,3.912,1962,2.906,1963,2.906,1964,4.297,1965,2.906,1966,2.906,1967,2.906,1968,4.297,1969,3.912,1970,2.906,1971,5.65,1972,4.297,1973,2.906,1974,2.906,1975,2.906,1976,2.906,2182,4.883,2183,4.883,2184,4.883,2185,4.883,2186,4.883,2187,4.297,2188,4.883,2189,3.302,2190,3.302,2191,3.302,2192,3.302,2193,3.302,2194,2.906,2195,3.302,2196,3.302,2197,3.302,2198,3.302,2199,3.302,2200,3.302,2201,3.302,2202,3.302,2203,3.302,2204,3.302,2205,3.302,2206,3.302,2207,3.302,2208,3.302,2209,3.302,2210,3.302]],["title/components/RendererCanvasComponent.html",[181,0.074,317,0.751]],["body/components/RendererCanvasComponent.html",[3,0.083,4,0.083,5,0.066,8,0.27,9,0.937,12,0.921,14,0.617,15,1.095,23,0.755,24,0.867,29,0.407,30,0.01,31,0.559,32,0.396,33,0.335,34,0.472,35,0.688,50,0.937,53,0.5,54,0.543,55,0.529,58,0.122,59,0.134,63,0.083,67,0.091,75,0.82,87,0.004,88,0.006,89,0.004,115,1.417,127,0.745,128,1.364,130,0.558,146,0.621,181,0.102,184,0.574,185,0.574,186,0.574,187,0.574,188,0.574,189,0.574,190,1.193,203,0.589,204,0.82,205,0.655,206,0.655,211,0.543,213,1.538,214,1.417,215,0.638,217,0.638,219,1.153,228,1.067,233,0.543,239,0.383,240,0.937,241,1.225,242,0.459,243,1.257,244,0.655,245,1.257,246,0.589,247,0.638,248,0.962,249,0.589,250,0.655,251,0.589,252,0.621,253,1.515,254,0.589,255,0.638,256,0.655,257,0.589,258,0.638,259,0.589,260,1.111,261,0.655,262,0.605,263,0.655,264,0.589,265,0.655,266,0.589,267,0.655,268,0.589,269,0.605,270,0.655,271,0.589,272,0.638,273,0.589,274,0.655,275,0.589,276,0.655,277,0.655,278,0.655,279,0.589,280,0.655,281,0.589,282,0.655,283,0.589,284,0.605,285,0.589,286,1.082,287,1.515,288,0.589,289,0.589,290,0.589,291,0.638,292,0.589,293,0.655,294,0.589,295,0.621,296,0.655,297,0.589,298,0.574,299,0.589,300,0.962,301,0.543,302,0.589,303,1.14,304,0.589,305,0.589,306,0.589,307,1.111,308,0.589,309,0.638,310,0.962,311,0.589,312,0.638,313,0.589,314,0.621,315,0.589,316,0.638,317,1.131,318,1.386,319,0.655,320,0.558,321,0.655,322,0.621,323,0.621,324,0.621,325,0.589,326,0.638,327,0.589,328,0.621,329,0.589,330,0.937,331,0.589,332,0.589,333,0.638,334,0.589,335,0.638,336,0.655,337,0.638,338,0.543,339,0.574,340,0.605,341,0.655,342,0.574,343,0.921,344,0.655,345,0.574,346,0.655,347,0.558,348,0.655,349,0.574,350,0.605,351,0.605,352,0.638,353,0.655,361,3.527,362,4.82,369,2.699,374,2.315,396,1.619,401,1.575,421,1.863,542,2.978,602,2.978,651,3.092,689,1.863,790,1.581,836,2.351,838,2.351,878,4.721,885,5.203,895,2.946,966,3.454,1081,3.689,1251,2.005,1348,4.101,1427,4.375,1796,2.71,1801,3.982,1881,2.511,1882,4.82,2211,6.89,2212,2.978,2213,6.145,2214,5.893,2215,4.971,2216,4.971,2217,5.893,2218,6.496,2219,5.186,2220,4.971,2221,4.971,2222,5.893,2223,4.971,2224,3.384,2225,3.384,2226,3.384,2227,3.384,2228,3.384,2229,7.478,2230,4.971,2231,3.384,2232,3.384,2233,3.384,2234,6.496,2235,4.971,2236,4.971,2237,4.971,2238,4.971,2239,6.496,2240,4.375,2241,4.971,2242,4.375,2243,4.971,2244,4.971,2245,4.971,2246,4.971,2247,4.971,2248,4.375,2249,4.375,2250,3.384,2251,3.384,2252,3.384,2253,3.384,2254,3.384,2255,3.384,2256,3.384,2257,3.384,2258,3.384,2259,4.971,2260,3.384,2261,2.978,2262,3.384,2263,3.384,2264,3.384,2265,3.384,2266,3.384,2267,3.384,2268,3.384,2269,3.384,2270,3.384,2271,3.384,2272,3.384,2273,3.384,2274,4.971,2275,3.384,2276,3.384,2277,2.71]],["title/injectables/RendererService.html",[0,1.331,128,0.813]],["body/injectables/RendererService.html",[0,1.596,2,1.73,3,0.088,4,0.088,5,0.07,8,0.285,9,0.976,12,0.559,14,0.642,15,1.946,20,3.446,23,0.786,24,0.976,27,1.927,29,0.937,30,0.01,31,0.67,32,0.664,33,0.772,35,0.963,50,1.469,54,0.574,55,0.559,56,0.574,58,0.186,59,0.142,60,1.41,63,0.088,67,0.096,68,3.84,72,2.152,75,1.1,87,0.004,88,0.006,89,0.004,115,1.019,117,2.122,126,2.498,128,0.976,129,4.639,130,1.217,146,0.656,151,4.145,229,1.2,320,1.217,369,3.62,374,2.951,396,2.171,401,2.337,598,3.393,603,3.146,608,4.588,621,4.639,637,1.927,651,4.401,658,4.872,660,4.178,708,5.34,716,1.562,729,3.478,790,3.115,792,2.119,1036,4.554,1273,3.146,1346,2.864,1425,3.146,1906,4.836,1907,2.653,1931,4.145,1933,4.916,1961,5.667,2078,4.872,2187,4.554,2213,5.908,2219,6.226,2261,7.263,2277,2.864,2278,3.146,2279,5.175,2280,6.667,2281,6.667,2282,6.667,2283,5.175,2284,5.175,2285,5.175,2286,5.175,2287,3.146,2288,5.175,2289,5.175,2290,3.575,2291,3.575,2292,3.575,2293,3.575,2294,5.175,2295,3.575,2296,3.575,2297,3.575,2298,5.175,2299,3.575,2300,3.575,2301,5.175,2302,3.575,2303,5.175,2304,3.575,2305,5.175,2306,3.575,2307,3.575,2308,3.575,2309,3.575,2310,3.575,2311,6.083,2312,3.575,2313,3.575,2314,3.575,2315,3.575,2316,5.175,2317,3.575,2318,6.083,2319,3.575,2320,3.575,2321,3.575,2322,5.175,2323,3.575,2324,3.575,2325,5.175,2326,3.575,2327,3.575,2328,3.575,2329,3.575,2330,6.667,2331,3.575,2332,3.575,2333,3.575,2334,3.575,2335,3.575,2336,3.575,2337,3.575,2338,3.575,2339,3.575,2340,5.175,2341,5.175,2342,3.575,2343,3.575,2344,3.575,2345,3.575,2346,3.575,2347,3.575,2348,5.175,2349,3.575,2350,3.575,2351,3.575]],["title/components/SVGLoaderComponent.html",[181,0.074,327,0.751]],["body/components/SVGLoaderComponent.html",[3,0.075,4,0.075,5,0.06,8,0.245,9,0.871,10,0.918,12,1.132,13,0.591,14,0.573,23,0.702,24,0.932,27,2.104,29,0.669,30,0.01,31,0.6,32,0.594,33,0.658,34,1.041,35,0.649,50,0.871,53,0.453,54,1.121,55,1.165,56,0.994,58,0.183,59,0.122,60,1.802,63,0.075,67,0.083,72,1.086,75,0.918,87,0.003,88,0.005,89,0.003,95,3.296,100,3.031,127,0.676,128,1.316,130,0.506,144,1.188,145,0.83,146,0.563,181,0.096,184,0.52,185,0.52,186,0.52,187,0.52,188,0.52,189,0.52,190,1.137,203,0.534,204,0.763,205,0.594,206,0.594,209,0.722,210,1.632,211,0.493,213,1.53,214,1.41,215,0.578,217,0.871,219,1.072,220,1.298,222,1.764,228,1.668,229,1.289,230,1.601,231,0.693,232,0.693,233,0.742,234,0.922,235,0.768,239,0.347,240,0.871,241,0.871,242,0.416,243,1.198,244,0.594,245,1.198,246,0.534,247,0.578,248,0.895,249,0.534,250,0.594,251,0.534,252,0.563,253,1.476,254,0.534,255,0.578,256,0.594,257,0.534,258,0.578,259,0.534,260,1.066,261,0.594,262,0.549,263,0.594,264,0.534,265,0.594,266,0.534,267,0.594,268,0.534,269,0.549,270,0.594,271,0.534,272,0.578,273,0.534,274,0.594,275,0.534,276,0.594,277,0.594,278,0.594,279,0.534,280,0.594,281,0.534,282,0.594,283,0.534,284,0.549,285,0.534,286,1.021,287,1.476,288,0.534,289,0.534,290,0.534,291,0.578,292,0.534,293,0.594,294,0.534,295,0.563,296,0.594,297,0.534,298,1.049,299,0.534,300,0.895,301,0.742,302,0.534,303,1.076,304,0.534,305,0.534,306,0.534,307,0.578,308,0.534,309,0.578,310,0.895,311,0.534,312,0.578,313,0.534,314,0.563,315,0.534,316,0.578,317,0.534,318,0.534,319,0.594,320,0.506,321,0.594,322,0.563,323,0.563,324,0.563,325,0.534,326,0.578,327,1.078,328,1.021,329,0.534,330,0.871,331,0.534,332,0.534,333,0.578,334,0.534,335,0.578,336,0.594,337,0.578,338,0.493,339,0.52,340,0.549,341,0.594,342,0.52,343,0.869,344,0.594,345,0.52,346,0.594,347,0.506,348,0.594,349,0.52,350,0.549,351,0.549,352,0.578,353,0.594,374,1.861,396,2.272,401,1.465,543,3.02,554,4.103,557,4.059,637,2.501,787,1.666,814,1.433,821,3.214,823,1.738,895,2.739,932,2.875,988,1.738,999,4.455,1056,2.458,1298,2.277,1508,4.894,1513,2.7,1649,4.455,1650,4.455,1761,2.132,1765,3.43,1890,2.7,1893,2.7,1894,4.894,1937,2.875,1978,2.277,1983,4.455,1986,4.593,1992,2.7,2007,2.7,2031,2.458,2044,3.864,2352,7.306,2353,4.623,2354,5.562,2355,4.455,2356,5.562,2357,5.562,2358,6.641,2359,4.623,2360,3.068,2361,3.068,2362,4.623,2363,3.068,2364,3.068,2365,3.068,2366,3.068,2367,3.068,2368,3.068,2369,3.068,2370,3.068,2371,3.068,2372,3.068,2373,3.068,2374,3.068,2375,2.277,2376,2.458,2377,5.562,2378,3.068,2379,2.7,2380,3.068,2381,3.068,2382,3.068,2383,3.068,2384,3.068,2385,4.623,2386,3.068,2387,3.068,2388,3.068,2389,3.068,2390,4.623,2391,3.068,2392,3.068,2393,3.068,2394,3.068,2395,3.068,2396,2.7,2397,4.623,2398,3.068,2399,3.068,2400,3.068,2401,4.623,2402,2.7,2403,3.068,2404,2.7]],["title/components/SceneComponent.html",[181,0.074,320,0.712]],["body/components/SceneComponent.html",[3,0.091,4,0.091,5,0.073,8,0.297,10,0.74,12,1.123,13,0.682,14,0.662,15,1.648,23,0.81,24,0.813,29,0.642,30,0.01,31,0.618,32,0.425,33,0.674,34,0.52,35,0.726,50,1.005,53,0.551,54,0.599,55,0.582,56,1,58,0.183,59,0.148,60,0.864,63,0.091,67,0.101,75,0.88,87,0.004,88,0.006,89,0.004,115,1.52,118,3.014,125,2.408,127,0.821,128,1.41,130,0.615,133,3.069,135,2.33,141,2.408,144,1.37,145,1.008,146,0.684,157,1.944,181,0.107,184,0.632,185,0.632,186,0.632,187,0.632,188,0.632,189,0.632,190,1.248,203,0.649,204,0.88,205,0.721,206,0.721,209,0.833,210,1.972,211,0.599,213,1.545,214,1.424,215,0.703,217,1.005,218,2.702,219,1.236,220,1.577,222,2.049,224,3.16,228,1.145,229,1.236,230,1.944,231,0.842,232,0.842,233,0.856,234,1.12,235,0.933,239,0.421,240,1.005,241,1.005,242,0.723,243,1.315,244,0.721,245,1.315,246,0.649,247,0.703,248,1.032,249,0.649,250,0.721,251,0.649,252,0.684,253,1.552,254,0.649,255,0.703,256,0.721,257,0.649,258,0.703,259,0.649,260,1.155,261,0.721,262,0.667,263,0.721,264,0.649,265,0.721,266,0.649,267,0.721,268,0.649,269,0.667,270,0.721,271,0.649,272,0.703,273,0.649,274,0.721,275,0.649,276,0.721,277,0.721,278,0.721,279,0.649,280,0.721,281,0.649,282,0.721,283,0.649,284,0.667,285,0.649,286,1.143,287,1.552,288,0.649,289,0.649,290,0.649,291,0.703,292,0.649,293,0.721,294,0.649,295,0.684,296,0.721,297,0.649,298,0.632,299,0.649,300,1.032,301,0.599,302,0.649,303,1.205,304,0.649,305,0.649,306,0.649,307,0.703,308,0.649,309,0.703,310,1.032,311,0.649,312,0.703,313,0.649,314,0.684,315,0.649,316,0.703,317,0.649,318,0.649,319,0.721,320,1.121,321,0.721,322,0.684,323,0.684,324,0.684,325,0.649,326,0.703,327,0.649,328,0.684,329,0.649,330,1.005,331,0.649,332,0.649,333,0.703,334,0.649,335,0.703,336,0.721,337,0.703,338,0.599,339,0.632,340,0.667,341,0.721,342,0.632,343,0.973,344,0.721,345,0.632,346,0.721,347,0.615,348,0.721,349,0.632,350,0.667,351,0.667,352,0.703,353,0.721,396,1.214,401,1.181,651,4.473,659,4.988,729,1.944,988,2.111,1059,2.318,1061,4.082,1063,2.111,1338,2.986,2405,3.28,2406,5.333,2407,6.796,2408,6.227,2409,5.333,2410,3.727,2411,3.727,2412,3.727,2413,3.727,2414,3.727,2415,5.333,2416,3.727,2417,3.727,2418,3.727,2419,3.727]],["title/components/ServerBarrelActorComponent.html",[181,0.074,184,0.732]],["body/components/ServerBarrelActorComponent.html",[3,0.107,4,0.107,5,0.085,10,0.865,13,0.76,30,0.01,31,0.582,34,0.608,53,0.644,58,0.166,59,0.173,63,0.107,67,0.117,87,0.005,88,0.007,89,0.005,130,0.719,146,0.8,165,1.541,181,0.117,184,1.233,185,0.738,186,0.738,187,0.738,188,0.738,189,0.738,190,1.477,203,0.758,204,0.981,205,0.843,206,0.843,209,0.929,211,0.699,213,1.555,214,1.433,215,0.821,217,1.121,231,0.984,232,0.984,233,0.699,239,0.492,240,1.121,241,1.121,242,0.591,243,1.408,244,0.843,245,1.408,246,0.758,247,0.821,248,1.151,249,0.758,250,0.843,251,0.758,252,0.8,253,1.607,254,0.758,255,0.821,256,0.843,257,0.758,258,0.821,259,0.758,260,1.223,261,0.843,262,0.779,263,0.843,264,0.758,265,0.843,266,0.758,267,0.843,268,0.758,269,0.779,270,0.843,271,0.758,272,0.821,273,0.758,274,0.843,275,0.758,276,0.843,277,0.843,278,0.843,279,0.758,280,0.843,281,0.758,282,0.843,283,0.758,284,0.779,285,0.758,286,1.243,287,1.607,288,0.758,289,0.758,290,0.758,291,0.821,292,0.758,293,0.843,294,0.758,295,0.8,296,0.843,297,0.758,298,0.738,299,0.758,300,1.151,301,0.699,302,0.758,303,1.31,304,0.758,305,0.758,306,0.758,307,0.821,308,0.758,309,0.821,310,1.151,311,0.758,312,0.821,313,0.758,314,0.8,315,0.758,316,0.821,317,0.758,318,0.758,319,0.843,320,0.719,321,0.843,322,1.336,323,0.8,324,0.8,325,0.758,326,0.821,327,0.758,328,0.8,329,0.758,330,1.121,331,0.758,332,0.758,333,0.821,334,0.758,335,0.821,336,0.843,337,1.371,338,0.699,339,0.738,340,0.779,341,0.843,342,0.738,343,1.058,344,0.843,345,0.738,346,0.843,347,0.719,348,0.843,349,0.738,350,0.779,351,0.779,352,0.821,353,0.843,1525,2.272,1884,4.439,2420,3.026,2421,5.946]],["title/components/ServerCompactActorComponent.html",[181,0.074,185,0.732]],["body/components/ServerCompactActorComponent.html",[3,0.107,4,0.107,5,0.085,10,0.864,13,0.76,30,0.01,31,0.582,34,0.607,53,0.643,58,0.166,59,0.173,63,0.107,67,0.117,87,0.005,88,0.007,89,0.005,130,0.718,146,0.799,165,1.539,181,0.117,184,0.737,185,1.233,186,0.737,187,0.737,188,0.737,189,0.737,190,1.477,203,0.758,204,0.98,205,0.842,206,0.842,209,0.928,211,0.699,213,1.555,214,1.433,215,0.82,217,1.12,228,0.934,231,0.983,232,0.983,233,0.699,239,0.492,240,1.12,241,1.12,242,0.59,243,1.407,244,0.842,245,1.407,246,0.758,247,0.82,248,1.15,249,0.758,250,0.842,251,0.758,252,0.799,253,1.607,254,0.758,255,0.82,256,0.842,257,0.758,258,0.82,259,0.758,260,1.222,261,0.842,262,0.778,263,0.842,264,0.758,265,0.842,266,0.758,267,0.842,268,0.758,269,0.778,270,0.842,271,0.758,272,0.82,273,0.758,274,0.842,275,0.758,276,0.842,277,0.842,278,0.842,279,0.758,280,0.842,281,0.758,282,0.842,283,0.758,284,0.778,285,0.758,286,1.242,287,1.607,288,0.758,289,0.758,290,0.758,291,0.82,292,0.758,293,0.842,294,0.758,295,0.799,296,0.842,297,0.758,298,0.737,299,0.758,300,1.15,301,0.699,302,0.758,303,1.309,304,0.758,305,0.758,306,0.758,307,0.82,308,0.758,309,0.82,310,1.15,311,0.758,312,0.82,313,0.758,314,0.799,315,0.758,316,0.82,317,0.758,318,0.758,319,0.842,320,0.718,321,0.842,322,0.799,323,1.335,324,0.799,325,0.758,326,0.82,327,0.758,328,0.799,329,0.758,330,1.12,331,0.758,332,0.758,333,0.82,334,0.758,335,0.82,336,0.842,337,1.371,338,0.699,339,0.737,340,0.778,341,0.842,342,0.737,343,1.057,344,0.842,345,0.737,346,0.842,347,0.718,348,0.842,349,0.737,350,0.778,351,0.778,352,0.82,353,0.842,1525,2.269,1884,4.436,2420,3.023,2422,5.941]],["title/components/ServerIconActorComponent.html",[181,0.074,186,0.732]],["body/components/ServerIconActorComponent.html",[3,0.107,4,0.107,5,0.086,10,0.871,13,0.764,30,0.01,31,0.584,34,1.018,53,0.648,58,0.166,59,0.174,63,0.107,67,0.118,87,0.005,88,0.007,89,0.005,130,0.724,146,0.805,165,1.551,181,0.117,184,0.743,185,0.743,186,1.237,187,0.743,188,0.743,189,0.743,190,1.48,203,0.764,204,0.986,205,0.849,206,0.849,209,0.933,211,0.704,213,1.555,214,1.433,215,0.827,217,1.126,231,0.991,232,0.991,233,0.704,239,0.496,240,1.126,241,1.126,242,0.595,243,1.412,244,0.849,245,1.412,246,0.764,247,0.827,248,1.156,249,0.764,250,0.849,251,0.764,252,0.805,253,1.61,254,0.764,255,0.827,256,0.849,257,0.764,258,0.827,259,0.764,260,1.226,261,0.849,262,0.784,263,0.849,264,0.764,265,0.849,266,0.764,267,0.849,268,0.764,269,0.784,270,0.849,271,0.764,272,0.827,273,0.764,274,0.849,275,0.764,276,0.849,277,0.849,278,0.849,279,0.764,280,0.849,281,0.764,282,0.849,283,0.764,284,0.784,285,0.764,286,1.248,287,1.61,288,0.764,289,0.764,290,0.764,291,0.827,292,0.764,293,0.849,294,0.764,295,0.805,296,0.849,297,0.764,298,0.743,299,0.764,300,1.156,301,0.704,302,0.764,303,1.315,304,0.764,305,0.764,306,0.764,307,0.827,308,0.764,309,0.827,310,1.156,311,0.764,312,0.827,313,0.764,314,0.805,315,0.764,316,0.827,317,0.764,318,0.764,319,0.849,320,0.724,321,0.849,322,0.805,323,0.805,324,0.805,325,0.764,326,0.827,327,0.764,328,0.805,329,0.764,330,1.126,331,0.764,332,0.764,333,0.827,334,0.764,335,0.827,336,0.849,337,1.375,338,0.704,339,0.743,340,0.784,341,0.849,342,0.743,343,1.061,344,0.849,345,0.743,346,0.849,347,0.724,348,0.849,349,0.743,350,0.784,351,0.784,352,0.827,353,0.849,1525,2.287,1884,4.454,2420,3.047,2423,5.973]],["title/components/ServerStandActorComponent.html",[181,0.074,187,0.732]],["body/components/ServerStandActorComponent.html",[3,0.107,4,0.107,5,0.085,10,0.865,13,0.76,30,0.01,31,0.582,34,0.608,53,0.644,58,0.166,59,0.173,63,0.107,67,0.117,87,0.005,88,0.007,89,0.005,130,0.719,146,0.8,165,1.541,181,0.117,184,0.738,185,0.738,186,0.738,187,1.233,188,0.738,189,0.738,190,1.477,203,0.758,204,0.981,205,0.843,206,0.843,209,0.929,211,0.699,213,1.555,214,1.433,215,0.821,217,1.121,231,0.984,232,0.984,233,0.699,239,0.492,240,1.121,241,1.121,242,0.591,243,1.408,244,0.843,245,1.408,246,0.758,247,0.821,248,1.151,249,0.758,250,0.843,251,0.758,252,0.8,253,1.607,254,0.758,255,0.821,256,0.843,257,0.758,258,0.821,259,0.758,260,1.223,261,0.843,262,0.779,263,0.843,264,0.758,265,0.843,266,0.758,267,0.843,268,0.758,269,0.779,270,0.843,271,0.758,272,0.821,273,0.758,274,0.843,275,0.758,276,0.843,277,0.843,278,0.843,279,0.758,280,0.843,281,0.758,282,0.843,283,0.758,284,0.779,285,0.758,286,1.243,287,1.607,288,0.758,289,0.758,290,0.758,291,0.821,292,0.758,293,0.843,294,0.758,295,0.8,296,0.843,297,0.758,298,0.738,299,0.758,300,1.151,301,0.699,302,0.758,303,1.31,304,0.758,305,0.758,306,0.758,307,0.821,308,0.758,309,0.821,310,1.151,311,0.758,312,0.821,313,0.758,314,0.8,315,0.758,316,0.821,317,0.758,318,0.758,319,0.843,320,0.719,321,0.843,322,0.8,323,0.8,324,1.336,325,0.758,326,0.821,327,0.758,328,0.8,329,0.758,330,1.121,331,0.758,332,0.758,333,0.821,334,0.758,335,0.821,336,0.843,337,1.371,338,0.699,339,0.738,340,0.779,341,0.843,342,0.738,343,1.058,344,0.843,345,0.738,346,0.843,347,0.719,348,0.843,349,0.738,350,0.779,351,0.779,352,0.821,353,0.843,385,2.467,929,2.581,1525,2.272,1884,4.439,2420,3.026,2424,5.946]],["title/components/SphereMeshComponent.html",[181,0.074,325,0.751]],["body/components/SphereMeshComponent.html",[3,0.094,4,0.094,5,0.075,8,0.306,10,1.081,12,1.136,13,0.696,14,0.675,23,0.827,24,0.822,29,0.461,30,0.01,31,0.592,32,0.549,33,0.627,34,0.535,35,0.447,53,0.567,56,0.874,58,0.185,59,0.152,60,1.466,63,0.094,67,0.103,75,0.633,87,0.004,88,0.006,89,0.004,127,0.845,128,1.424,130,0.633,144,1.398,145,1.037,146,0.704,181,0.109,184,0.65,185,0.65,186,0.65,187,0.65,188,0.65,189,0.65,190,1.264,203,0.668,204,0.898,205,0.742,206,0.742,209,0.85,210,1.815,211,0.616,213,1.547,214,1.425,215,0.723,217,1.026,218,2.737,219,1.262,222,1.962,228,1.478,229,1.262,231,0.867,232,0.867,233,0.874,234,1.635,235,0.96,239,0.434,240,1.026,241,1.026,242,0.52,243,1.332,244,0.742,245,1.332,246,0.668,247,0.723,248,1.053,249,0.668,250,0.742,251,0.668,252,0.704,253,1.562,254,0.668,255,0.723,256,0.742,257,0.668,258,0.723,259,0.668,260,1.167,261,0.742,262,0.686,263,0.742,264,0.668,265,0.742,266,0.668,267,0.742,268,0.668,269,0.686,270,0.742,271,0.668,272,0.723,273,0.668,274,0.742,275,0.668,276,0.742,277,0.742,278,0.742,279,0.668,280,0.742,281,0.668,282,0.742,283,0.668,284,0.686,285,0.668,286,1.162,287,1.562,288,0.668,289,0.668,290,0.668,291,0.723,292,0.668,293,0.742,294,0.668,295,0.704,296,0.742,297,0.668,298,0.65,299,0.668,300,1.053,301,0.616,302,0.668,303,1.224,304,0.668,305,0.668,306,0.668,307,0.723,308,0.668,309,0.723,310,1.053,311,0.668,312,0.723,313,0.668,314,0.704,315,0.668,316,0.723,317,0.668,318,0.668,319,0.742,320,0.633,321,0.742,322,0.704,323,0.704,324,0.704,325,1.199,326,1.192,327,0.668,328,0.704,329,0.668,330,1.026,331,0.668,332,0.668,333,0.723,334,0.668,335,0.723,336,0.742,337,0.723,338,0.616,339,0.65,340,0.686,341,0.742,342,0.65,343,0.988,344,0.742,345,0.65,346,0.742,347,0.633,348,0.742,349,0.65,350,0.686,351,0.686,352,0.723,353,0.742,637,2.393,784,2.082,785,3.749,787,3.947,793,4.693,814,1.792,818,2.845,821,2.634,822,2.172,823,2.172,824,2.385,858,3.375,862,2.845,867,2.955,2425,6.646,2426,5.442,2427,6.326,2428,5.567,2429,5.442,2430,3.835,2431,3.835,2432,3.835,2433,3.835]],["title/directives/StatsAutoShowDirective.html",[242,0.585,349,0.732]],["body/directives/StatsAutoShowDirective.html",[3,0.154,4,0.154,5,0.123,8,0.499,14,0.932,23,1.141,24,0.849,29,0.754,30,0.01,31,0.539,32,0.499,33,0.621,35,0.731,50,1.416,58,0.184,59,0.249,63,0.154,67,0.169,87,0.007,88,0.008,89,0.007,115,2.14,116,3.631,124,3.527,211,1.007,213,1.063,214,1.173,242,0.85,338,1.007,349,1.273,350,1.343,351,1.524,352,1.416,374,2.097,608,5.383,610,5.516,1269,4.109,2287,5.516,2434,7.077,2435,5.516,2436,6.268,2437,6.268,2438,6.268]],["title/injectables/StatsService.html",[0,1.331,608,2.684]],["body/injectables/StatsService.html",[0,2.151,2,2.688,3,0.136,4,0.136,5,0.109,8,0.443,9,1.315,14,0.865,15,1.951,23,1.158,24,0.964,30,0.01,32,0.443,35,0.961,50,1.585,58,0.171,59,0.221,63,0.136,67,0.15,87,0.006,88,0.008,89,0.006,115,1.583,117,2.859,126,2.996,350,1.526,361,3.016,374,2.551,608,4.338,736,4.572,955,6.404,960,6.404,968,5.932,2439,4.888,2440,7.995,2441,6.974,2442,5.554,2443,5.554,2444,5.554,2445,5.554,2446,5.554,2447,5.554,2448,5.554,2449,5.554,2450,5.554,2451,5.554,2452,5.554,2453,8.406,2454,5.554,2455,6.974,2456,5.554,2457,5.554,2458,5.554,2459,5.554]],["title/injectables/SvgLoaderService.html",[0,1.331,557,2.829]],["body/injectables/SvgLoaderService.html",[0,2.175,2,2.735,3,0.138,4,0.138,5,0.111,8,0.45,9,1.329,10,1.526,12,1.338,14,0.875,15,1.553,24,0.91,27,2.714,29,0.925,30,0.01,31,0.661,32,0.612,33,0.762,35,0.896,49,4.554,53,0.835,54,0.908,55,0.883,56,1.234,58,0.197,59,0.225,60,1.31,63,0.138,67,0.152,75,0.933,87,0.006,88,0.008,89,0.006,90,5.535,93,5.231,94,5.969,95,4.178,96,4.899,98,5.701,100,5.275,101,4.194,209,1.101,229,1.31,298,0.958,460,4.527,543,3.069,557,4.622,766,4.008,1483,4.527,1484,4.527,1485,4.527,1486,4.527,1490,4.974,2017,4.194,2018,5.231,2036,4.527,2043,4.974,2044,4.899,2045,4.974,2046,4.974,2460,6.204,2461,5.652,2462,5.652,2463,5.652]],["title/components/TextActorComponent.html",[181,0.074,329,0.751]],["body/components/TextActorComponent.html",[3,0.071,4,0.071,5,0.057,8,0.23,9,0.832,12,1.216,13,0.565,14,0.548,15,1.76,20,1.637,23,0.671,24,0.957,27,1.902,29,0.645,30,0.01,31,0.586,32,0.598,33,0.641,34,0.403,35,0.854,50,1.285,53,0.427,54,1.175,55,1.143,58,0.174,59,0.115,63,0.071,67,0.078,72,2.653,87,0.003,88,0.005,89,0.003,115,1.258,116,2.42,117,2.198,118,2.594,124,2.539,125,1.994,126,2.249,127,0.636,128,1.285,130,0.477,133,2.42,135,2.342,141,1.304,144,1.134,146,0.53,157,1.507,181,0.092,184,0.49,185,0.49,186,0.49,187,0.49,188,0.49,189,0.49,190,1.102,203,0.503,204,0.729,205,0.559,206,0.559,209,0.69,210,1.582,211,0.464,213,1.525,214,1.405,215,0.545,217,0.832,218,2.131,219,1.024,222,1.711,228,1.464,231,0.653,232,0.653,233,0.709,235,0.723,239,0.327,240,0.832,241,0.832,242,0.392,243,1.162,244,0.559,245,1.162,246,0.503,247,0.545,248,0.855,249,0.503,250,0.559,251,0.503,252,0.53,253,1.451,254,0.503,255,0.545,256,0.559,257,0.503,258,0.545,259,0.503,260,1.038,261,0.559,262,0.517,263,0.559,264,0.503,265,0.559,266,0.503,267,0.559,268,0.503,269,0.517,270,0.559,271,0.503,272,0.545,273,0.503,274,0.559,275,0.503,276,0.559,277,0.559,278,0.559,279,1.126,280,0.559,281,0.503,282,0.559,283,0.503,284,0.517,285,0.503,286,0.984,287,1.451,288,0.503,289,0.503,290,0.503,291,0.545,292,0.503,293,0.559,294,0.503,295,0.53,296,0.559,297,0.503,298,0.49,299,0.503,300,0.855,301,0.464,302,0.503,303,1.037,304,0.503,305,0.503,306,0.503,307,0.545,308,0.503,309,0.545,310,0.855,311,0.503,312,0.545,313,0.503,314,0.53,315,0.503,316,0.545,317,0.503,318,0.769,319,0.559,320,0.477,321,0.559,322,0.53,323,0.53,324,0.53,325,0.503,326,0.545,327,0.503,328,0.53,329,1.045,330,1.337,331,0.503,332,0.503,333,0.545,334,0.503,335,0.545,336,0.559,337,1.011,338,0.464,339,0.49,340,0.517,341,0.559,342,0.49,343,0.837,344,0.559,345,0.49,346,0.559,347,0.477,348,0.559,349,0.49,350,0.517,351,0.517,352,0.545,353,0.559,354,3.562,357,3.557,360,4.808,373,3.514,374,2.769,396,1.954,401,1.699,410,4.294,637,2.161,766,1.507,834,2.314,835,1.712,924,3.177,931,1.637,962,1.894,1039,2.007,1061,3.514,1063,2.502,1064,2.143,1254,2.747,1277,3.277,1279,2.007,1281,2.007,1525,1.507,1539,2.314,1540,2.895,1541,2.542,1543,2.314,1544,2.314,1554,3.886,1555,2.314,1558,2.143,1559,2.143,1672,2.542,1673,2.314,1674,2.542,1675,2.314,1679,2.314,1702,3.725,1752,3.886,1783,2.542,1784,2.542,1785,2.542,1786,4.717,1789,3.886,2015,2.314,2464,7.448,2465,4.416,2466,5.36,2467,5.36,2468,5.36,2469,5.36,2470,5.36,2471,4.416,2472,6.002,2473,5.36,2474,5.36,2475,2.889,2476,2.889,2477,2.889,2478,2.889,2479,2.889,2480,3.886,2481,2.889,2482,2.889,2483,2.889,2484,2.889,2485,2.889,2486,5.36,2487,4.416,2488,5.282,2489,4.416,2490,2.889,2491,5.36,2492,2.889,2493,5.36,2494,4.416,2495,2.889,2496,2.889,2497,2.889,2498,4.416,2499,4.416,2500,2.889]],["title/components/TextMeshComponent.html",[181,0.074,331,0.751]],["body/components/TextMeshComponent.html",[3,0.066,4,0.066,5,0.053,8,0.215,9,0.789,10,0.831,12,1.213,13,0.535,14,0.519,15,1.13,23,0.636,24,0.97,27,1.985,29,0.696,30,0.01,31,0.595,32,0.585,33,0.657,34,0.376,35,0.731,50,0.789,53,0.398,54,1.303,55,1.267,56,0.824,58,0.175,59,0.107,60,1.341,63,0.066,67,0.073,72,1.48,75,1.094,87,0.003,88,0.005,89,0.003,95,3.04,100,2.743,127,0.593,128,1.25,130,0.444,144,1.075,145,0.729,146,0.495,181,0.088,184,0.457,185,0.457,186,0.457,187,0.457,188,0.457,189,0.457,190,1.062,203,0.469,204,0.69,205,0.521,206,0.521,209,0.654,210,1.525,211,0.432,213,1.518,214,1.399,215,0.508,217,0.789,219,0.97,222,1.648,228,1.755,229,0.97,231,0.609,232,0.609,233,0.824,234,1.257,235,0.674,239,0.304,240,0.789,241,0.789,242,0.365,243,1.119,244,0.521,245,1.119,246,0.469,247,0.508,248,0.81,249,0.469,250,0.521,251,0.469,252,0.495,253,1.421,254,0.469,255,0.508,256,0.521,257,0.469,258,0.508,259,0.469,260,1.006,261,0.521,262,0.482,263,0.521,264,0.469,265,0.521,266,0.469,267,0.521,268,0.469,269,0.482,270,0.521,271,0.469,272,0.508,273,0.469,274,0.521,275,0.469,276,0.521,277,0.521,278,0.521,279,0.469,280,0.521,281,0.469,282,0.521,283,0.469,284,0.482,285,0.469,286,0.942,287,1.421,288,0.469,289,0.469,290,0.469,291,0.508,292,0.469,293,0.521,294,0.469,295,0.495,296,0.521,297,0.469,298,0.457,299,0.469,300,0.81,301,0.432,302,0.469,303,0.993,304,0.469,305,0.469,306,0.469,307,0.508,308,0.469,309,0.508,310,0.81,311,0.469,312,0.508,313,0.469,314,0.495,315,0.469,316,0.508,317,0.469,318,0.469,319,0.521,320,0.444,321,0.521,322,0.495,323,0.495,324,0.495,325,0.469,326,0.508,327,0.469,328,0.495,329,0.469,330,1.516,331,1.007,332,0.469,333,0.508,334,0.469,335,0.508,336,0.521,337,0.508,338,0.432,339,0.457,340,0.482,341,0.521,342,0.457,343,0.801,344,0.521,345,0.457,346,0.521,347,0.444,348,0.521,349,0.457,350,0.482,351,0.482,352,0.508,353,0.521,374,2.218,396,1.362,401,2.266,461,1.998,553,3.792,621,3.792,637,1.985,689,1.567,716,1.827,717,4.019,784,1.462,787,3.141,790,2.702,814,1.258,816,1.766,821,3.031,822,1.526,823,1.526,855,1.998,856,2.37,860,3.104,861,2.157,867,2.785,895,2.479,932,2.602,952,3.598,988,2.37,999,4.109,1056,2.157,1254,2.602,1264,3.104,1298,1.998,1332,4.109,1344,2.157,1501,2.37,1605,3.351,1611,2.37,1702,5.104,1750,4.633,1761,1.871,1764,2.37,1765,3.104,1986,4.291,2031,2.157,2355,4.109,2375,1.998,2379,3.681,2396,2.37,2488,3.681,2501,7.573,2502,5.13,2503,4.183,2504,5.13,2505,5.13,2506,5.13,2507,4.183,2508,5.784,2509,5.784,2510,5.784,2511,5.784,2512,5.784,2513,5.784,2514,5.13,2515,5.13,2516,7.345,2517,4.183,2518,2.693,2519,2.693,2520,2.693,2521,2.693,2522,2.693,2523,2.693,2524,2.693,2525,2.693,2526,4.183,2527,2.693,2528,4.183,2529,2.693,2530,2.693,2531,2.693,2532,2.693,2533,4.183,2534,6.263,2535,2.693,2536,2.693,2537,4.183,2538,2.693,2539,2.693,2540,2.693,2541,2.693,2542,2.37,2543,2.693,2544,2.693,2545,2.693,2546,2.693,2547,2.693,2548,4.183,2549,4.183,2550,2.693,2551,4.183,2552,4.183,2553,2.693,2554,2.693,2555,2.693,2556,2.693,2557,2.693,2558,2.693,2559,2.693,2560,2.693,2561,4.183,2562,2.693,2563,2.693,2564,2.693,2565,2.693]],["title/components/TorusMeshComponent.html",[181,0.074,332,0.751]],["body/components/TorusMeshComponent.html",[3,0.088,4,0.088,5,0.07,8,0.285,10,1.029,12,1.106,13,0.663,14,0.643,23,0.787,24,0.86,29,0.431,30,0.01,31,0.574,32,0.485,33,0.604,34,0.5,35,0.418,53,0.529,54,1.072,55,1.043,56,0.832,58,0.181,59,0.142,60,1.412,63,0.088,67,0.097,75,0.591,87,0.004,88,0.006,89,0.004,127,0.789,128,1.391,130,0.591,144,1.331,145,0.969,146,0.658,181,0.105,184,0.607,185,0.607,186,0.607,187,0.607,188,0.607,189,0.607,190,1.225,203,0.624,204,0.855,205,0.693,206,0.693,209,0.81,210,1.759,211,0.575,213,1.542,214,1.421,215,0.675,217,0.977,218,2.653,219,1.201,222,1.902,228,1.584,229,1.201,231,0.809,232,0.809,233,0.832,234,1.557,235,0.897,239,0.405,240,0.977,241,0.977,242,0.486,243,1.291,244,0.693,245,1.291,246,0.624,247,0.675,248,1.003,249,0.624,250,0.693,251,0.624,252,0.658,253,1.537,254,0.624,255,0.675,256,0.693,257,0.624,258,0.675,259,0.624,260,1.137,261,0.693,262,0.641,263,0.693,264,0.624,265,0.693,266,0.624,267,0.693,268,0.624,269,0.641,270,0.693,271,0.624,272,0.675,273,0.624,274,0.693,275,0.624,276,0.693,277,0.693,278,0.693,279,0.624,280,0.693,281,0.624,282,0.693,283,0.624,284,0.641,285,0.624,286,1.118,287,1.537,288,0.624,289,0.624,290,0.624,291,0.675,292,0.624,293,0.693,294,0.624,295,0.658,296,0.693,297,0.624,298,0.607,299,0.624,300,1.003,301,0.575,302,0.624,303,1.178,304,0.624,305,0.624,306,0.624,307,0.675,308,0.624,309,0.675,310,1.003,311,0.624,312,0.675,313,0.624,314,0.658,315,0.624,316,0.675,317,0.624,318,0.624,319,0.693,320,0.591,321,0.693,322,0.658,323,0.658,324,0.658,325,0.624,326,0.675,327,0.624,328,0.658,329,0.624,330,0.977,331,0.624,332,1.162,333,1.435,334,0.624,335,0.675,336,0.693,337,0.675,338,0.575,339,0.607,340,0.641,341,0.693,342,0.607,343,0.951,344,0.693,345,0.607,346,0.693,347,0.591,348,0.693,349,0.607,350,0.641,351,0.641,352,0.675,353,0.693,461,4.951,637,2.114,689,2.5,716,2.264,784,1.945,785,3.608,787,3.844,814,1.673,821,2.508,822,2.029,823,2.029,824,2.228,850,5.358,855,2.658,857,3.152,859,3.845,861,2.869,863,3.397,867,2.814,872,4.56,2428,6.698,2566,6.859,2567,5.182,2568,6.089,2569,7.611,2570,6.089,2571,4.56,2572,3.152,2573,5.182,2574,5.182,2575,3.152,2576,3.582,2577,5.182,2578,5.182,2579,3.582]],["title/modules/UxActorModule.html",[412,1,2580,3.202]],["body/modules/UxActorModule.html",[3,0.147,4,0.147,5,0.118,13,0.769,30,0.01,58,0.206,59,0.239,63,0.147,67,0.162,87,0.007,88,0.008,89,0.007,239,0.68,297,1.559,298,1.019,329,1.559,412,1.394,414,2.253,415,2.253,416,3.141,417,2.391,418,3.141,421,2.745,422,2.32,423,2.32,426,3.003,434,3.2,435,2.544,437,3.003,458,5.331,462,5.292,465,5.292,466,5.292,2580,6.642,2581,5.292,2582,5.292,2583,6.014,2584,5.292,2585,6.014,2586,6.014]],["title/components/VideoMeshComponent.html",[181,0.074,334,0.751]],["body/components/VideoMeshComponent.html",[3,0.073,4,0.111,5,0.058,8,0.237,9,0.851,10,0.897,12,1.343,13,0.577,14,0.56,23,0.686,24,0.94,29,0.358,30,0.01,31,0.524,32,0.571,33,0.71,34,0.415,35,0.764,50,1.149,53,0.667,54,1.214,55,1.181,56,0.978,58,0.181,59,0.118,60,1.599,63,0.073,67,0.08,75,0.745,87,0.003,88,0.005,89,0.003,115,1.286,116,2.464,117,2.237,124,2.577,126,2.283,127,0.655,128,1.3,130,0.491,144,1.16,145,0.804,146,0.546,181,0.094,184,0.504,185,0.504,186,0.504,187,0.504,188,0.504,189,0.504,190,1.119,203,0.518,204,0.745,205,0.575,206,0.575,209,0.705,210,1.606,211,0.478,213,1.527,214,1.407,215,0.561,217,0.851,218,2.422,219,1.047,222,1.736,224,1.762,228,1.585,229,1.047,231,0.672,232,0.672,233,0.725,234,1.356,235,0.745,239,0.336,240,0.851,241,0.851,242,0.403,243,1.179,244,0.575,245,1.179,246,0.518,247,0.561,248,0.874,249,0.518,250,0.575,251,0.518,252,0.546,253,1.463,254,0.518,255,0.561,256,0.575,257,0.518,258,0.561,259,0.518,260,1.052,261,0.575,262,0.532,263,0.575,264,0.518,265,0.575,266,0.518,267,0.575,268,0.518,269,0.532,270,0.575,271,0.518,272,0.561,273,0.518,274,0.575,275,0.518,276,0.575,277,0.575,278,0.575,279,0.518,280,0.575,281,0.518,282,0.575,283,0.518,284,0.532,285,0.518,286,1.002,287,1.463,288,0.518,289,0.518,290,0.518,291,0.561,292,0.518,293,0.575,294,0.518,295,0.546,296,0.575,297,0.518,298,0.504,299,0.518,300,0.874,301,0.478,302,0.518,303,1.056,304,0.518,305,0.518,306,0.518,307,0.561,308,0.518,309,0.561,310,0.874,311,0.518,312,0.561,313,0.518,314,0.546,315,0.518,316,0.561,317,0.518,318,0.518,319,0.575,320,0.491,321,0.575,322,0.546,323,0.546,324,0.546,325,0.518,326,0.561,327,0.518,328,0.546,329,0.518,330,0.851,331,0.518,332,0.518,333,0.561,334,1.061,335,1.3,336,0.575,337,0.561,338,0.478,339,0.504,340,0.532,341,0.575,342,0.504,343,0.852,344,0.575,345,0.504,346,0.575,347,0.491,348,0.575,349,0.504,350,0.532,351,0.532,352,0.561,353,0.575,354,3.598,357,3.611,373,3.994,382,4.049,396,0.968,401,2.185,637,1.43,643,3.308,670,2.617,689,2.766,699,3.451,784,1.615,785,3.234,787,3.557,790,3.06,791,4.049,792,3.882,793,4.049,796,4.88,797,4.88,799,4.88,800,4.88,807,2.96,810,2.96,814,1.389,816,1.95,818,2.206,819,2.206,821,2.949,822,1.685,823,1.685,824,1.85,855,2.206,867,2.451,924,3.234,931,1.685,1039,2.066,1277,2.206,1278,2.617,1279,2.066,1280,2.617,1281,2.066,1315,2.206,1605,2.382,1750,4.88,2061,3.973,2114,2.617,2115,2.617,2542,2.617,2571,2.617,2572,2.617,2575,2.617,2587,7.364,2588,4.514,2589,5.457,2590,5.457,2591,4.802,2592,4.514,2593,2.974,2594,4.514,2595,2.974,2596,2.974,2597,2.974,2598,2.974,2599,2.974,2600,2.974,2601,4.514,2602,2.974,2603,2.974,2604,2.974,2605,2.974,2606,2.974,2607,2.974,2608,2.974,2609,2.974,2610,2.974,2611,2.974,2612,2.974,2613,2.974,2614,2.974,2615,2.974,2616,2.974,2617,2.974,2618,2.974,2619,2.974,2620,2.974,2621,4.514,2622,2.974,2623,2.974,2624,2.974]],["title/components/WorkstationActorComponent.html",[181,0.074,189,0.732]],["body/components/WorkstationActorComponent.html",[3,0.105,4,0.105,5,0.084,8,0.342,10,0.852,13,0.753,24,0.485,30,0.01,31,0.578,34,0.599,53,0.634,54,0.689,55,0.671,58,0.165,59,0.171,63,0.105,67,0.116,87,0.005,88,0.007,89,0.005,130,0.708,146,0.788,165,2.083,181,0.116,184,0.728,185,0.728,186,0.728,187,0.728,188,0.728,189,1.226,190,1.391,203,0.747,204,0.971,205,0.831,206,0.831,209,0.92,211,0.689,213,1.554,214,1.432,215,0.809,217,1.363,219,1.365,228,1.264,231,0.97,232,0.97,233,0.689,239,0.485,240,1.11,241,1.11,242,0.582,243,1.399,244,0.831,245,1.399,246,0.747,247,0.809,248,1.139,249,0.747,250,0.831,251,0.747,252,0.788,253,1.602,254,0.747,255,0.809,256,0.831,257,0.747,258,0.809,259,0.747,260,1.217,261,0.831,262,0.768,263,0.831,264,0.747,265,0.831,266,0.747,267,0.831,268,0.747,269,0.768,270,0.831,271,0.747,272,0.809,273,0.747,274,0.831,275,0.747,276,0.831,277,0.831,278,0.831,279,0.747,280,0.831,281,0.747,282,0.831,283,0.747,284,0.768,285,0.747,286,1.234,287,1.602,288,0.747,289,0.747,290,0.747,291,0.809,292,0.747,293,0.831,294,0.747,295,0.788,296,0.831,297,0.747,298,0.728,299,0.747,300,1.139,301,0.689,302,0.747,303,1.3,304,0.747,305,0.747,306,0.747,307,0.809,308,0.747,309,0.809,310,1.139,311,0.747,312,0.809,313,0.747,314,0.788,315,0.747,316,0.809,317,0.747,318,0.747,319,0.831,320,0.708,321,0.831,322,0.788,323,0.788,324,0.788,325,0.747,326,0.809,327,0.747,328,0.788,329,0.747,330,1.11,331,0.747,332,0.747,333,0.809,334,0.747,335,0.809,336,1.3,337,1.363,338,0.689,339,0.728,340,0.768,341,0.831,342,0.728,343,1.05,344,0.831,345,0.728,346,0.831,347,0.708,348,0.831,349,0.728,350,0.768,351,0.768,352,0.809,353,0.831,1525,2.239,1558,3.185,1884,4.405,2591,5.913,2625,5.181,2626,5.887,2627,5.887,2628,5.887]],["title/changelog.html",[2629,2.879,2630,2.879,2631,3.163]],["body/changelog.html",[5,0.095,15,1.069,24,0.549,30,0.008,54,0.78,56,1.268,87,0.005,88,0.007,89,0.005,121,3.019,122,2.75,128,1.206,135,2.121,181,0.084,204,1.18,214,1.311,216,3.373,222,1.383,228,1.042,233,1.027,242,0.658,252,0.891,284,0.868,314,0.891,337,0.915,338,1.027,343,1.188,354,2.437,357,4.238,361,4.127,362,4.745,366,4.272,369,2.636,395,3.602,412,1.125,460,3.888,461,3.602,587,2.349,651,3.019,658,3.888,660,2.75,1118,5.122,1254,3.019,1308,3.602,1690,4.272,1937,4.448,1987,4.272,1988,4.272,2011,3.602,2015,3.888,2021,5.122,2022,5.122,2060,4.272,2137,6.088,2240,4.272,2242,6.293,2248,4.272,2249,5.628,2631,6.293,2632,6.689,2633,4.854,2634,6.689,2635,4.854,2636,4.854,2637,4.272,2638,4.854,2639,4.854,2640,4.854,2641,4.854,2642,4.854,2643,4.854,2644,4.854,2645,6.395,2646,4.854,2647,4.272,2648,4.854,2649,6.395,2650,5.628,2651,6.293,2652,4.854,2653,4.854,2654,4.854,2655,7.899,2656,4.272,2657,7.151,2658,4.854,2659,4.854,2660,4.854,2661,4.854,2662,4.854,2663,4.854,2664,4.854,2665,4.854,2666,4.854,2667,4.272,2668,4.854,2669,4.854,2670,6.395,2671,4.854,2672,4.854,2673,4.854,2674,7.899,2675,6.395,2676,4.854,2677,4.854,2678,6.395,2679,6.395,2680,7.601,2681,4.854,2682,4.854,2683,4.854,2684,6.395,2685,4.854,2686,4.854,2687,4.854,2688,4.854,2689,5.628,2690,4.272,2691,4.272,2692,6.395,2693,4.854,2694,4.854,2695,4.854,2696,4.272,2697,4.854,2698,4.854,2699,4.272,2700,4.854,2701,4.854,2702,4.854,2703,4.854,2704,4.854,2705,4.854,2706,4.854,2707,7.151,2708,4.854,2709,7.151,2710,4.272,2711,4.854,2712,7.151,2713,6.395,2714,4.854,2715,7.151,2716,4.854,2717,4.854,2718,4.854,2719,4.854,2720,4.854,2721,4.854,2722,4.854,2723,6.395,2724,4.854,2725,4.854,2726,4.854,2727,4.272,2728,4.854,2729,4.854,2730,4.854,2731,4.854,2732,4.854,2733,4.272,2734,5.628,2735,4.854,2736,4.854,2737,4.854,2738,4.854,2739,4.272,2740,4.854,2741,4.854,2742,4.854,2743,4.854,2744,4.854,2745,6.395,2746,4.854,2747,4.854]],["title/coverage.html",[2748,5.2]],["body/coverage.html",[0,2.491,1,1.994,5,0.063,6,4.702,7,4.695,30,0.01,32,0.255,34,0.448,56,0.515,61,2.379,62,2.379,64,2.731,65,1.994,67,0.154,72,3.238,87,0.004,88,0.005,89,0.004,90,2.102,92,2.822,111,2.102,112,2.822,113,2.228,114,2.822,128,0.604,130,0.529,164,2.102,165,3.036,166,2.822,167,2.822,181,0.155,184,0.544,185,0.544,186,0.544,187,0.544,188,0.544,189,0.544,203,0.558,207,2.822,208,4.397,230,1.672,231,0.724,242,0.918,246,0.558,249,0.558,251,0.558,254,0.558,257,0.558,259,0.558,262,0.573,264,0.558,266,0.558,268,0.558,269,0.854,271,0.558,273,0.558,275,0.558,279,0.558,281,0.558,283,0.558,285,0.558,288,0.558,289,0.558,290,0.558,292,0.558,294,0.558,297,0.558,299,0.558,302,0.558,304,0.558,306,0.558,308,0.558,311,0.558,313,0.558,315,0.558,317,0.558,320,0.529,322,0.589,323,0.589,324,0.589,325,0.558,327,0.558,329,0.558,331,0.558,332,0.558,334,0.558,339,0.544,342,0.544,345,0.544,347,0.529,349,0.544,351,0.573,354,1.61,355,2.822,553,2.102,554,1.816,555,2.102,556,2.102,557,2.102,577,2.228,578,2.228,587,1.552,598,2.102,608,1.994,617,2.822,618,3.827,623,2.568,629,1.9,630,3.908,631,4.436,632,1.741,634,1.672,636,1.816,638,1.741,644,5.068,687,2.568,690,2.568,700,2.568,761,2.822,783,2.822,784,4.192,825,2.822,826,2.822,847,2.822,859,2.379,876,2.822,990,2.822,1034,2.379,1065,2.822,1089,2.822,1131,3.827,1162,6.05,1240,2.822,1241,2.822,1316,3.32,1318,2.822,1330,2.822,1348,2.831,1359,2.822,1386,2.822,1387,2.822,1397,2.822,1398,2.822,1444,2.822,1448,2.822,1481,2.822,1492,2.822,1524,2.822,1525,4.099,1547,2.228,1594,2.822,1602,2.822,1620,2.822,1631,3.827,1633,2.379,1669,2.822,1686,2.568,1687,2.568,1745,2.822,1761,2.228,1797,2.822,1798,3.827,1883,2.822,1895,2.822,1903,2.379,1904,3.827,1977,2.822,1978,4.237,2035,2.822,2036,3.827,2044,2.228,2051,2.822,2063,2.822,2067,2.822,2068,3.827,2098,2.822,2112,2.822,2119,2.822,2126,2.822,2130,4.149,2131,2.822,2135,3.827,2167,2.822,2211,2.822,2212,2.822,2278,2.822,2352,2.822,2375,2.379,2376,2.568,2405,2.822,2420,4.397,2425,2.822,2434,2.822,2435,2.822,2439,2.822,2460,2.822,2464,2.822,2501,2.822,2566,2.822,2587,2.822,2625,2.822,2748,2.822,2749,2.568,2750,3.206,2751,3.206,2752,3.206,2753,7.095,2754,4.777,2755,2.822,2756,3.206,2757,3.206,2758,7.35,2759,5.71,2760,7.35,2761,3.206,2762,3.206,2763,5.71,2764,2.822,2765,8.464,2766,6.767,2767,3.206,2768,4.777,2769,3.206,2770,3.206,2771,7.35,2772,4.777,2773,3.206,2774,3.206,2775,4.777,2776,5.71,2777,3.206,2778,7.095,2779,3.206,2780,3.206,2781,7.095,2782,3.206,2783,3.206,2784,4.777,2785,3.206,2786,3.206,2787,3.206,2788,3.206,2789,3.206,2790,3.206,2791,2.822,2792,2.822,2793,4.204,2794,2.822,2795,4.777,2796,2.822,2797,2.822,2798,2.822,2799,2.822,2800,2.822,2801,2.822,2802,2.822,2803,2.822,2804,2.822,2805,2.822,2806,2.822,2807,2.822,2808,3.206,2809,3.206]],["title/dependencies.html",[415,1.946,2023,3.163]],["body/dependencies.html",[30,0.01,59,0.258,87,0.007,88,0.009,89,0.007,229,1.505,260,1.042,269,1.161,415,2.432,435,2.745,931,3.676,2810,6.49,2811,8.876,2812,6.49,2813,6.49,2814,7.667,2815,6.142,2816,6.49,2817,6.49,2818,6.49,2819,6.49,2820,6.49,2821,6.49,2822,6.49,2823,6.49,2824,6.49,2825,6.49,2826,6.49,2827,6.49,2828,6.49,2829,6.49,2830,6.49]],["title/miscellaneous/enumerations.html",[2831,2.356,2832,4.572]],["body/miscellaneous/enumerations.html",[8,0.499,30,0.01,55,1.406,87,0.007,88,0.008,89,0.007,165,2.218,295,1.379,340,1.121,630,3.034,1271,5.021,1686,5.021,1687,6.016,1700,6.609,1704,6.609,1908,5.219,2130,4.109,2143,6.016,2144,6.016,2145,5.573,2277,6.016,2755,7.077,2831,4.109,2832,5.516,2833,7.511,2834,6.609,2835,7.511,2836,6.268,2837,6.268,2838,7.511,2839,7.511,2840,7.511,2841,7.511,2842,7.511,2843,7.511]],["title/miscellaneous/functions.html",[2831,2.356,2844,4.572]],["body/miscellaneous/functions.html",[8,0.605,27,1.747,29,1.037,30,0.01,31,0.741,32,0.553,33,0.854,35,0.886,54,0.886,55,1.085,87,0.006,88,0.008,89,0.006,122,3.124,136,3.933,165,1.951,181,0.095,220,3.373,228,1.184,230,3.621,231,1.569,241,1.309,269,1.241,356,4.551,540,4.853,545,4.853,630,2.669,633,2.994,637,2.408,641,2.994,788,4.853,821,3.36,1131,5.561,1163,4.853,1164,6.109,1264,4.092,1702,3.832,1761,4.824,1937,4.726,2194,7.018,2355,5.561,2375,5.151,2376,5.561,2402,4.853,2404,4.853,2480,6.109,2764,6.109,2793,6.109,2794,6.109,2796,6.109,2797,4.853,2798,6.109,2799,6.109,2800,4.853,2801,6.109,2802,4.853,2803,6.109,2804,4.853,2805,6.109,2806,4.853,2807,6.109,2831,3.615,2834,4.853,2844,4.853,2845,6.942,2846,5.514,2847,5.514,2848,5.514,2849,5.514,2850,5.514,2851,5.514,2852,6.942,2853,7.598,2854,6.942,2855,5.514,2856,6.942,2857,5.514,2858,5.514,2859,5.514,2860,5.514,2861,5.514,2862,6.942,2863,5.514]],["title/index.html",[8,0.286,2629,2.879,2630,2.879]],["body/index.html",[30,0.01,58,0.167,72,1.897,87,0.006,88,0.008,89,0.006,204,1.345,214,1.322,217,1.286,229,1.243,234,1.61,240,1.011,318,0.934,320,0.885,362,3.978,412,1.243,437,2.198,458,4.242,651,4.242,660,3.037,782,4.294,790,3.186,845,4.718,932,3.335,1251,3.177,1348,4.041,1388,4.718,1765,3.978,1839,4.294,1881,3.978,1882,3.978,1989,4.294,2011,3.978,2021,6.322,2022,6.322,2145,3.978,2213,4.294,2632,7.331,2634,6.6,2637,4.718,2650,7.172,2651,7.331,2689,4.718,2690,4.718,2691,6.001,2696,4.718,2699,4.718,2710,6.6,2727,4.718,2733,6.001,2734,4.718,2739,4.718,2749,6.007,2815,4.294,2864,5.361,2865,5.361,2866,5.361,2867,5.361,2868,5.361,2869,4.718,2870,6.819,2871,5.361,2872,5.361,2873,5.361,2874,5.361,2875,6.819,2876,5.361,2877,5.361,2878,5.361,2879,5.361,2880,5.361,2881,5.361,2882,5.361,2883,6.819,2884,6.819,2885,5.361,2886,5.361,2887,5.361,2888,5.361,2889,5.361,2890,5.361,2891,5.361,2892,5.361,2893,5.361,2894,5.361,2895,5.361,2896,5.361,2897,5.361,2898,5.361,2899,5.361,2900,5.361,2901,5.361,2902,6.819,2903,5.361,2904,5.361,2905,5.361,2906,7.893,2907,5.361,2908,5.361,2909,5.361,2910,5.361,2911,5.361,2912,5.361,2913,5.361,2914,5.361,2915,5.361,2916,5.361,2917,5.361,2918,5.361,2919,5.361,2920,5.361,2921,5.361,2922,4.718,2923,5.361,2924,5.361,2925,5.361,2926,5.361,2927,5.361]],["title/license.html",[2629,2.879,2630,2.879,2928,3.163]],["body/license.html",[30,0.008,87,0.007,88,0.008,89,0.007,361,3.301,423,2.346,1982,5.351,2011,5.471,2020,5.351,2647,6.489,2667,5.351,2749,4.87,2869,5.351,2922,5.351,2928,5.351,2929,6.08,2930,7.937,2931,6.08,2932,6.08,2933,6.08,2934,6.08,2935,7.374,2936,6.08,2937,6.08,2938,6.08,2939,6.08,2940,6.08,2941,7.374,2942,8.837,2943,6.08,2944,6.08,2945,7.937,2946,6.08,2947,6.08,2948,6.08,2949,6.08,2950,6.08,2951,6.08,2952,6.08,2953,6.08,2954,6.08,2955,6.08,2956,7.374,2957,6.08,2958,6.08,2959,6.08,2960,6.08,2961,6.08,2962,6.08,2963,7.374,2964,7.374,2965,6.08,2966,6.08,2967,6.08,2968,6.08,2969,6.08,2970,6.08,2971,6.08,2972,6.08,2973,6.08,2974,6.08,2975,6.08,2976,6.08,2977,6.08,2978,6.08,2979,6.08,2980,6.08,2981,6.08,2982,6.08,2983,6.08,2984,6.08,2985,6.08,2986,6.08,2987,6.08,2988,6.08,2989,6.08,2990,6.08,2991,6.08]],["title/modules.html",[414,2.214]],["body/modules.html",[30,0.008,87,0.007,88,0.008,89,0.007,328,1.67,413,4.238,414,2.285,428,4.238,438,4.238,445,4.238,452,4.526,458,3.794,471,4.238,484,4.238,492,4.238,500,4.238,507,4.238,517,4.238,518,4.238,519,4.238,520,4.238,528,4.238,552,4.238,2580,4.526,2656,8.005,2815,7.287,2992,9.097]],["title/overview.html",[2993,5.2]],["body/overview.html",[2,1.222,13,0.323,30,0.01,87,0.003,88,0.004,89,0.003,91,1.874,128,0.928,130,1.114,164,3.227,184,1.145,185,1.145,186,1.145,187,1.145,188,1.145,189,1.145,203,1.254,204,0.417,212,3.943,239,0.285,246,1.176,249,1.176,251,1.176,254,0.857,257,1.176,259,1.176,262,1.208,264,1.176,266,1.176,268,1.176,271,1.176,273,1.176,275,1.176,279,1.176,281,1.176,283,1.176,285,1.176,288,1.176,289,1.176,290,1.176,292,1.176,294,1.176,297,1.176,299,1.176,302,1.176,304,1.176,306,1.176,308,1.176,311,1.176,313,1.176,315,1.176,317,1.176,320,1.114,325,1.176,327,1.176,329,1.176,331,1.176,332,1.176,334,1.176,338,0.406,339,1.145,342,1.145,345,1.145,347,1.114,349,1.145,354,2.471,412,0.585,413,5.003,414,0.946,415,0.946,416,1.004,417,1.004,418,1.004,419,2.222,420,2.222,421,1.491,422,0.974,423,0.974,428,5.386,429,2.222,430,2.222,431,2.222,438,5.121,439,2.222,440,2.222,441,2.222,445,5.386,446,2.222,447,2.222,448,2.222,452,6.556,453,2.222,454,2.222,455,2.222,456,2.222,457,2.222,458,5.313,471,5.873,472,2.222,473,2.222,474,2.222,484,5.566,485,2.222,486,2.222,487,2.222,492,5.697,493,2.222,494,2.222,495,2.222,496,2.222,500,5.566,501,2.222,502,2.222,503,2.222,507,5.986,508,2.222,509,2.222,510,2.222,514,2.222,515,2.222,516,2.222,517,6.096,518,5.658,519,5.454,520,5.31,528,4.862,547,2.222,548,2.222,549,2.222,550,2.222,551,2.222,552,5.121,553,3.227,554,2.788,555,3.227,556,3.227,557,3.227,574,2.222,575,2.222,576,2.222,577,4.693,578,4.693,583,2.222,584,2.222,585,2.222,586,2.222,587,2.382,594,2.222,595,2.222,596,2.222,597,2.222,598,3.227,604,2.222,605,2.222,606,2.222,607,2.222,608,3.062,612,2.222,613,2.222,614,2.222,628,1.371,716,1.103,936,1.874,1118,2.023,1317,2.023,1540,1.656,1791,2.222,2580,5.469,2581,2.222,2582,2.222,2584,2.222,2993,2.222,2994,2.525,2995,2.525]],["title/miscellaneous/variables.html",[2831,2.356,2996,4.572]],["body/miscellaneous/variables.html",[6,3.962,7,5.724,8,0.454,27,2.246,30,0.01,32,0.615,50,1.336,54,1.378,55,1.322,61,5.26,62,5.26,72,2.017,87,0.006,88,0.008,89,0.006,390,3.738,409,5.678,637,1.807,644,4.567,687,5.678,690,5.678,691,6.239,692,6.239,693,7.305,694,5.018,695,5.018,696,5.018,697,5.018,698,6.239,699,4.016,700,5.678,701,6.239,702,6.239,703,6.239,704,6.239,705,5.018,706,6.239,1162,4.567,2044,4.926,2791,5.018,2792,5.018,2831,3.738,2996,5.018,2997,7.715,2998,7.089,2999,5.702,3000,7.089,3001,5.702,3002,5.702,3003,5.702,3004,5.702,3005,5.702,3006,5.702,3007,5.702,3008,5.702,3009,5.702,3010,5.702,3011,5.702,3012,5.702,3013,7.089,3014,5.702]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0,0",{"_index":1614,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":1339,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":864,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["0.0.0",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":1358,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["0.01",{"_index":1368,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1365,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":717,"title":{},"body":{"injectables/BloomService.html":{},"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["0.127.0",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2528,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":2573,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":1708,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":226,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":2821,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2773,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["0x0000aa",{"_index":1455,"title":{},"body":{"components/FogComponent.html":{}}}],["0x444444",{"_index":1625,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x5dade2",{"_index":1752,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["0xa0a0a0",{"_index":921,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["0xa4a4a4",{"_index":947,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["0xdadada",{"_index":2537,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0xff0000",{"_index":1252,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xffffff",{"_index":224,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1",{"_index":689,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1.0",{"_index":699,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["1.05",{"_index":1538,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["1.10.2",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1829,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["1.3.4",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["1.518.0",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1769,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["1/1",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1254,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["100",{"_index":1348,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":2090,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":2082,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2275,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":1356,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["11.2.7",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1791,"title":{},"body":{"components/LoaderActorComponent.html":{},"overview.html":{}}}],["15",{"_index":1014,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["16",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1118,"title":{},"body":{"classes/DagreUtils.html":{},"changelog.html":{},"overview.html":{}}}],["180",{"_index":1329,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":716,"title":{},"body":{"injectables/BloomService.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1504,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/18",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1498,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":1822,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":2932,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":936,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"overview.html":{}}}],["3.10.1",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1604,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["39",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":234,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["4",{"_index":1391,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["4/7",{"_index":2770,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":2994,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1540,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"overview.html":{}}}],["50",{"_index":623,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["500",{"_index":1354,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":2574,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["6.6.7",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1776,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["64",{"_index":1768,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["66",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1772,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["8",{"_index":859,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["8.3.2",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2995,"title":{},"body":{"overview.html":{}}}],["90",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":2058,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_height",{"_index":880,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["_materialcolor",{"_index":2504,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":2354,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":2505,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":1671,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["above",{"_index":2962,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:13",{"_index":1646,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":1645,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:20",{"_index":1640,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":1641,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":1642,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":1638,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":1639,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:55",{"_index":1637,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:57",{"_index":1636,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":90,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:20",{"_index":1483,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1485,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1484,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcamera",{"_index":1906,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractcomposeeffect",{"_index":111,"title":{"classes/AbstractComposeEffect.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:17",{"_index":769,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":768,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:36",{"_index":771,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:40",{"_index":773,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:44",{"_index":772,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:53",{"_index":770,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:55",{"_index":767,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:8",{"_index":774,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":1688,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["abstractemptydirective",{"_index":877,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["abstractions",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":2502,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":785,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1983,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":210,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":1799,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":1884,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accepted",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":895,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":2985,"title":{},"body":{"license.html":{}}}],["actor",{"_index":337,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":287,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":465,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":1525,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:105",{"_index":2475,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:114",{"_index":2481,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:119",{"_index":2477,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:18",{"_index":1751,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:20",{"_index":1672,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:21",{"_index":1753,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:23",{"_index":1673,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:24",{"_index":1557,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:25",{"_index":1760,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:26",{"_index":1541,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:27",{"_index":1536,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:28",{"_index":1537,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:29",{"_index":1539,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:31",{"_index":1545,"title":{},"body":{"components/GridActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:32",{"_index":1544,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:33",{"_index":1542,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1543,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:36",{"_index":1675,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:37",{"_index":1555,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:38",{"_index":1674,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:39",{"_index":1558,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:40",{"_index":1679,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:41",{"_index":1554,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:42",{"_index":1680,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:44",{"_index":1678,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:46",{"_index":1754,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:48",{"_index":1677,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:49",{"_index":1552,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:50",{"_index":1755,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:51",{"_index":2476,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:52",{"_index":1676,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:57",{"_index":2484,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:58",{"_index":1548,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:70",{"_index":1757,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:80",{"_index":2478,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:81",{"_index":1756,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:85",{"_index":1550,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:86",{"_index":2483,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:87",{"_index":1759,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:99",{"_index":1758,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.module.ts",{"_index":462,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actorrepository",{"_index":1142,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["actorrepositoryservice",{"_index":164,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actors",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":353,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":1849,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":830,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":832,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["added",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["addgroup",{"_index":2182,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1934,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addnode",{"_index":884,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["addpass",{"_index":1399,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1408,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["adheres",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":1877,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["aftercontentinit",{"_index":991,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["afterviewinit",{"_index":116,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":2934,"title":{},"body":{"license.html":{}}}],["align",{"_index":998,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["allowcoloroverride",{"_index":1648,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allows",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["along",{"_index":804,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["alpha",{"_index":2327,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":2240,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["ambient",{"_index":215,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":203,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["and/or",{"_index":2954,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":435,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":373,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animate'].some(propname",{"_index":2500,"title":{},"body":{"components/TextActorComponent.html":{}}}],["animated",{"_index":363,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{}}}],["animation",{"_index":357,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":534,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":425,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":427,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1268,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":533,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":384,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":354,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":376,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":2611,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["antialias",{"_index":2326,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":2026,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":1361,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1378,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":2733,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":2865,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":230,"title":{},"body":{"components/AmbientLightComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":2851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this._overridematerialcolor",{"_index":2393,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedcolor(this.color",{"_index":1341,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.dashcolor",{"_index":1292,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["appliedcolor(this.groundcolor",{"_index":1629,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":1630,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":1737,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":1628,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":1761,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(color",{"_index":2395,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedmaterial(materialcolor",{"_index":2855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1764,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":120,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":132,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["arc",{"_index":2568,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":2246,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":2224,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":2989,"title":{},"body":{"license.html":{}}}],["array",{"_index":641,"title":{},"body":{"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["arrow",{"_index":2843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":2078,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":2106,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":1647,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":2526,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["assets/svg/?.svg",{"_index":1656,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":2943,"title":{},"body":{"license.html":{}}}],["association",{"_index":2840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":214,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":466,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":413,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":428,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":438,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":445,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":452,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":471,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":484,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":492,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":500,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":507,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":458,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":517,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":528,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":518,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":519,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":520,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":552,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":846,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["attribute",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":2978,"title":{},"body":{"license.html":{}}}],["auto",{"_index":351,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autoplay",{"_index":2589,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":1804,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1805,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":392,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":2031,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["axes",{"_index":247,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":246,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":799,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["background",{"_index":2408,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2418,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":322,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":2637,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["baseinfo",{"_index":629,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1115,"title":{},"body":{"classes/DagreUtils.html":{}}}],["basetexture",{"_index":703,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":1765,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["behaviour",{"_index":2269,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":2871,"title":{},"body":{"index.html":{}}}],["bevelenabled",{"_index":2508,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":2509,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":2510,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":2511,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":2512,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["binding",{"_index":2853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":2739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":671,"title":{},"body":{"injectables/BloomService.html":{},"components/ObjectLoaderComponent.html":{}}}],["bloom",{"_index":2315,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":603,"title":{},"body":{"modules/AtftRendererModule.html":{},"injectables/RendererService.html":{}}}],["bloom_scene_layer",{"_index":688,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":645,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2342,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":646,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":712,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":718,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":598,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":704,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":762,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":250,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":249,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2897,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1371,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1384,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":417,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":635,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["box",{"_index":252,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":251,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":2992,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2815,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":1016,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["bug",{"_index":2057,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":2902,"title":{},"body":{"index.html":{}}}],["c",{"_index":2931,"title":{},"body":{"license.html":{}}}],["cache",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1486,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:20",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":1612,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":2279,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":2289,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":2799,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":2859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":370,"title":{},"body":{"injectables/AnimationService.html":{}}}],["camera",{"_index":660,"title":{},"body":{"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":310,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":436,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":2068,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":2073,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":2102,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":2101,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:22",{"_index":2074,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":2103,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":2104,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:36",{"_index":2075,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":2079,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:56",{"_index":2077,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":592,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":2131,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":2133,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":2132,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":523,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":433,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1907,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":522,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":344,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cant",{"_index":1307,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":2213,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":319,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":2330,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2348,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":601,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":2216,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":2214,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":2212,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":2231,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":2223,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":2227,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":2233,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":2251,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:47",{"_index":2226,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:51",{"_index":2228,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2347,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2346,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2345,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2339,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":2217,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":540,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["cast",{"_index":2024,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":1332,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["catch",{"_index":1181,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["cdref",{"_index":897,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["center",{"_index":461,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":2801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":459,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":1524,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":1669,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/layout/dagre",{"_index":630,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["center/server/model",{"_index":1883,"title":{},"body":{"components/ModelActorComponent.html":{},"coverage.html":{}}}],["center/server/server",{"_index":2420,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":2625,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["center/service/actor",{"_index":166,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centered",{"_index":999,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":389,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["changedetectorref",{"_index":898,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["changelog",{"_index":2631,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":135,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":1843,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1846,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":2938,"title":{},"body":{"license.html":{}}}],["child",{"_index":844,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1286,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["children",{"_index":953,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["childs",{"_index":2138,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claim",{"_index":2981,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"classes/DagreUtils.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"classes/DagreUtils.html":{},"overview.html":{}}}],["click",{"_index":2145,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clock",{"_index":1691,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["clone",{"_index":2903,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1662,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":419,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":420,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":429,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":430,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":431,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":439,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":440,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":441,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":446,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":447,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":448,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":453,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":454,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":456,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":455,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":457,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":472,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":473,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":474,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":485,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":486,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":487,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":493,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":495,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":494,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":496,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":501,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":502,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":503,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":508,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":509,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":510,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":514,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":516,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":515,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":547,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":548,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":550,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":549,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":551,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":574,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":575,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":576,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":583,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":584,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":585,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":586,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":594,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":595,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":596,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":597,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":604,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":605,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":606,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":607,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":612,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":613,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":614,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":2581,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":2582,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":2584,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":2583,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":220,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":2794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":2918,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":434,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":200,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":323,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":181,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":244,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["componentfactory",{"_index":179,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":173,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["components",{"_index":204,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":113,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":483,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":479,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":480,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":482,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":129,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":278,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":147,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1398,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1406,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1407,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1405,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1412,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1414,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1413,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:42",{"_index":1411,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:59",{"_index":1409,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:65",{"_index":1416,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:79",{"_index":1417,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:85",{"_index":1410,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":2142,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":632,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":261,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composition.border",{"_index":1238,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component",{"_index":1159,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component.ts",{"_index":876,"title":{},"body":{"components/DagreCompositionComponent.html":{},"coverage.html":{}}}],["composition.component.ts:119",{"_index":909,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:125",{"_index":914,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:143",{"_index":918,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:161",{"_index":915,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:34",{"_index":903,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:36",{"_index":900,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:38",{"_index":920,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:40",{"_index":902,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:48",{"_index":927,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:52",{"_index":904,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:53",{"_index":906,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:54",{"_index":907,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:55",{"_index":905,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:57",{"_index":901,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:59",{"_index":922,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:60",{"_index":925,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:61",{"_index":923,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:62",{"_index":899,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:81",{"_index":913,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:85",{"_index":912,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:89",{"_index":911,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:93",{"_index":910,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:99",{"_index":908,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.composition",{"_index":1236,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.label",{"_index":1234,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.name",{"_index":1232,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref",{"_index":1230,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.border",{"_index":1237,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.composition",{"_index":1235,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.label",{"_index":1233,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.name",{"_index":1231,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositions",{"_index":640,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1107,"title":{},"body":{"classes/DagreUtils.html":{}}}],["conditions",{"_index":2961,"title":{},"body":{"license.html":{}}}],["config",{"_index":2910,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":2990,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1690,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":296,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":444,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":1687,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.component.ts:106",{"_index":1720,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:113",{"_index":1716,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":1713,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:26",{"_index":1715,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:27",{"_index":1712,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":1707,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:29",{"_index":1709,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:30",{"_index":1714,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1711,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:33",{"_index":1706,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":1722,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:35",{"_index":1727,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":1728,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":1724,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":1725,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":1705,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:51",{"_index":1717,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:84",{"_index":1721,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:91",{"_index":1719,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.module",{"_index":561,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":443,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":560,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":2139,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.error('contentprojectioncomponent",{"_index":842,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":149,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":158,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":152,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":2116,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":197,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":1932,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":402,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":399,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":626,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":707,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":813,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1375,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":868,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":869,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dagrecompositioncomponent.addnode",{"_index":951,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.layout",{"_index":978,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.removenode",{"_index":964,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.syncgraphnodes",{"_index":973,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.update",{"_index":987,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrelayoutcomponent.layout",{"_index":1041,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('dagrelayoutcomponent.ngonchanges",{"_index":1060,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrelayoutcomponent.syncgraphcontainer",{"_index":1055,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrenodecomponent.addnode",{"_index":1085,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.removenode",{"_index":1086,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraph",{"_index":1088,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraphnodes",{"_index":1087,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1113,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('dagreyamlparsercomponent",{"_index":1224,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createcomposition",{"_index":1228,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createedge",{"_index":1209,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createnode",{"_index":1188,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.destroyall",{"_index":1222,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.ngonchanges",{"_index":1167,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.parseandcreate",{"_index":1169,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('darkennonbloomed",{"_index":756,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1274,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1300,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":1593,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":1478,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1418,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1435,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1423,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1419,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1421,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1436,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1473,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":1567,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":1470,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1464,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1487,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('framemeshcomponent.ngonchanges",{"_index":1515,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":1564,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1599,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1665,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1303,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('lineposition",{"_index":1592,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('loaderactorcomponent.animate",{"_index":1782,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.done",{"_index":1795,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.init",{"_index":1766,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngafterviewinit",{"_index":1762,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngondestroy",{"_index":1787,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updateanimation",{"_index":1788,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updatetext",{"_index":1781,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('looking",{"_index":1583,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":1465,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('node",{"_index":975,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":2055,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":2047,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":2164,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":2080,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":2088,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":2105,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":2110,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":2162,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1935,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2320,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2265,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2253,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2324,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2256,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":1560,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":2431,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('svgloadercomponent.icon",{"_index":2381,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloadercomponent.loadlazyobject",{"_index":2389,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2462,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('textactorcomponent.animate",{"_index":2490,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngafterviewinit",{"_index":2485,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngondestroy",{"_index":2497,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updateanimation",{"_index":2499,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updatetext",{"_index":2487,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":2555,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":2552,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.set",{"_index":2549,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1923,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":2603,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(event",{"_index":1956,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1309,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn('bloomservice.init",{"_index":747,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('dagrecompositioncomponent.constructor",{"_index":941,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.warn('dagrenodecomponent.constructor",{"_index":1084,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.warn('dagreyamlparsercomponent.parseandcreate",{"_index":1183,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":1249,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(raycasterservice",{"_index":2168,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":127,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(resolver",{"_index":172,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2287,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["container",{"_index":1067,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["content",{"_index":255,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":829,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":254,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continuously",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2986,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2917,"title":{},"body":{"index.html":{}}}],["control",{"_index":2244,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["control.module",{"_index":527,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":450,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":526,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":1800,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":300,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":451,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1802,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1798,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:101",{"_index":1836,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":2065,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":2064,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:17",{"_index":1831,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1833,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1818,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1819,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1821,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1820,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1832,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1827,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1823,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1824,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1830,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1828,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1826,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:31",{"_index":1817,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":2066,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":1834,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:56",{"_index":1837,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:96",{"_index":1835,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":1323,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":1568,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["copies",{"_index":2956,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2941,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2930,"title":{},"body":{"license.html":{}}}],["core",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2748,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":955,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":2070,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createcomposition",{"_index":1135,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createcomposition(composition",{"_index":1146,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge",{"_index":1136,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge(edge",{"_index":1148,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createlinemesh",{"_index":1695,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["createnode",{"_index":1137,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createnode(node",{"_index":1150,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["creates",{"_index":2857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":388,"title":{},"body":{"injectables/AnimationService.html":{}}}],["css",{"_index":2270,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3drenderer",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["currentdelay",{"_index":2466,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currentgeometry",{"_index":1519,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currentgeometry.attributes",{"_index":1522,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currently",{"_index":2236,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentpos",{"_index":2467,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttext",{"_index":2468,"title":{},"body":{"components/TextActorComponent.html":{}}}],["curvesegments",{"_index":2513,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cylinder",{"_index":258,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":257,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":1610,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["dagre",{"_index":260,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["dagre.graphlabel",{"_index":639,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":917,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1114,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":259,"title":{"components/DagreCompositionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":262,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayout",{"_index":881,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["dagrelayoutcomponent",{"_index":264,"title":{"components/DagreLayoutComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":266,"title":{"components/DagreNodeComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1034,"title":{"classes/DagreUtils.html":{}},"body":{"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreutils.modeltograph(this.graphmodel",{"_index":1052,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["dagreyamlparsercomponent",{"_index":268,"title":{"components/DagreYamlParserComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":2982,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1806,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":652,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":655,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":647,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1271,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1244,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":340,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":339,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1245,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashoffset",{"_index":1742,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["dashsize",{"_index":1698,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["data",{"_index":460,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"injectables/SvgLoaderService.html":{},"changelog.html":{}}}],["deal",{"_index":2944,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2991,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":416,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":836,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultcolor",{"_index":2852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultid",{"_index":168,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaults",{"_index":800,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["defines",{"_index":738,"title":{},"body":{"injectables/BloomService.html":{}}}],["deg2rad",{"_index":1319,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":581,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":577,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1328,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1324,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":760,"title":{},"body":{"injectables/BloomService.html":{}}}],["demo",{"_index":2689,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":415,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":2886,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":2010,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":788,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":789,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthwrite",{"_index":2355,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":356,"title":{},"body":{"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":893,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["destroy",{"_index":1225,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["destroyall",{"_index":1138,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["details",{"_index":2916,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1471,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":2882,"title":{},"body":{"index.html":{}}}],["development",{"_index":2699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["direct",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":272,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":271,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":242,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1269,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":338,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":121,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["disablefog",{"_index":1450,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1881,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1969,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["distribute",{"_index":2952,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1596,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["dl",{"_index":1008,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2448,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2457,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":2604,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":2601,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":2749,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":1360,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":274,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":273,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":205,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["done",{"_index":2470,"title":{},"body":{"components/TextActorComponent.html":{}}}],["dot",{"_index":276,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dots",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotscreencomponent",{"_index":275,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1394,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["draw",{"_index":1242,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":477,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1241,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:11",{"_index":1253,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1255,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1257,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1258,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:15",{"_index":1256,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1263,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1265,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1266,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:20",{"_index":1250,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:28",{"_index":1260,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:37",{"_index":1262,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:68",{"_index":1259,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:93",{"_index":1261,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":341,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1182,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["e.g",{"_index":2880,"title":{},"body":{"index.html":{}}}],["edge",{"_index":636,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":263,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["edge.color",{"_index":1219,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component",{"_index":1160,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component.ts",{"_index":2755,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.from",{"_index":1215,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.name",{"_index":1125,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1124,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["edge.type",{"_index":1217,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref",{"_index":1212,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.from",{"_index":1214,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.materialcolor",{"_index":1220,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.to",{"_index":1216,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.type",{"_index":1218,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edges",{"_index":643,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["edgesep",{"_index":1000,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["edgesgeom",{"_index":1288,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":2833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":146,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":539,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":476,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":114,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:17",{"_index":138,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:28",{"_index":137,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:36",{"_index":140,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:40",{"_index":143,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:44",{"_index":142,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:53",{"_index":139,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:55",{"_index":134,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:8",{"_index":131,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":538,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":666,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":727,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1424,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":130,"title":{"components/EffectComposerComponent.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":241,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":2229,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["embedded",{"_index":843,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":2137,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":359,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":408,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":411,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1979,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":1037,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":280,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":491,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":279,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":834,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["enable",{"_index":122,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":593,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":2167,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":2170,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":2169,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":346,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":375,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1807,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":1451,"title":{},"body":{"components/FogComponent.html":{}}}],["end",{"_index":1273,"title":{},"body":{"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["entire",{"_index":2893,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":687,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":463,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["enum",{"_index":1733,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["enumerations",{"_index":2832,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":541,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["etc",{"_index":391,"title":{},"body":{"injectables/AnimationService.html":{}}}],["event",{"_index":361,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":2449,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1566,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.face.a",{"_index":1586,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":1588,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":1590,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":2450,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1943,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1941,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1958,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":2838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":385,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["events",{"_index":966,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":2242,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":2879,"title":{},"body":{"index.html":{}}}],["execution",{"_index":393,"title":{},"body":{"injectables/AnimationService.html":{}}}],["exploration",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":2868,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":544,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":418,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["exposition",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":2969,"title":{},"body":{"license.html":{}}}],["extends",{"_index":209,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":1569,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":803,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["factory",{"_index":1210,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["failed",{"_index":1184,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["false",{"_index":396,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":1452,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1480,"title":{},"body":{"components/FogComponent.html":{}}}],["favor",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2921,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1982,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":2008,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":2032,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["finalcomposer",{"_index":648,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":733,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":739,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1308,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["findmesh",{"_index":1284,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1306,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1299,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["fit",{"_index":2892,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":2807,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":2974,"title":{},"body":{"license.html":{}}}],["fix",{"_index":545,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":2375,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2404,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":2565,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1882,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32array(4",{"_index":1577,"title":{},"body":{"components/GridActorComponent.html":{}}}],["focus",{"_index":1362,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1374,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1449,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":282,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":478,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":281,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":2667,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":2516,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":2506,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontservice",{"_index":553,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fonturl",{"_index":2514,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fork/svgloader",{"_index":2046,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["fov",{"_index":2100,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":700,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":284,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":283,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":2922,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":2089,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":1162,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2844,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2959,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":719,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":723,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":725,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":685,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":919,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["g.graph().height",{"_index":1058,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.graph().width",{"_index":1057,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.node(name",{"_index":977,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.nodes().foreach((name",{"_index":974,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1111,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1123,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph",{"_index":1109,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1116,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1120,"title":{},"body":{"classes/DagreUtils.html":{}}}],["gapsize",{"_index":1699,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["general",{"_index":1613,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["geo",{"_index":1570,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":1573,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry",{"_index":814,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute('position",{"_index":1575,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry.setpositions(positions",{"_index":1735,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getcamera",{"_index":2280,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":2250,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getcomponentfactory",{"_index":170,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":176,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1400,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":2183,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1964,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getgeometry",{"_index":1494,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["getgraph",{"_index":993,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getgraphmodel",{"_index":994,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getheight",{"_index":926,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["geticon",{"_index":2372,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["getisenabled",{"_index":2209,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1092,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1097,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlineposition",{"_index":1528,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":1546,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":1750,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":2539,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmodel",{"_index":1887,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["getnodecomponent",{"_index":1139,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodecomponent(id",{"_index":1153,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getpositions",{"_index":1696,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getrenderpane",{"_index":2232,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscene",{"_index":2281,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["gettext",{"_index":2541,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":2507,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":2533,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":2629,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2282,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":1681,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":2727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["gl_fragcolor",{"_index":705,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":695,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["goals",{"_index":2873,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2937,"title":{},"body":{"license.html":{}}}],["graph",{"_index":956,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["graphmodel",{"_index":638,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["graphupdated",{"_index":882,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["grid",{"_index":286,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":285,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":1534,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":1535,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":288,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":289,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1622,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1937,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.add(mesh",{"_index":2399,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["group.directive",{"_index":590,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":2135,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":2173,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":2174,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":2172,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":2175,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":2180,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":2181,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":2179,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":2178,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":2177,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":2176,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1936,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":348,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1910,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["halfx",{"_index":1502,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":1505,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":790,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["height(height",{"_index":933,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["heightsegments",{"_index":791,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["heightsegments'].some(propname",{"_index":2117,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":620,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":248,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":490,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":618,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":622,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1597,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":624,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":1598,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":563,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":489,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":562,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":839,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":2877,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":291,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":290,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":2936,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1270,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1246,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hierarchical",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["hightsegments",{"_index":2427,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":2979,"title":{},"body":{"license.html":{}}}],["horizontalblurshader",{"_index":777,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":2894,"title":{},"body":{"index.html":{}}}],["host",{"_index":1251,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2252,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":2263,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":2220,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":240,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2261,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":2009,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1091,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":2904,"title":{},"body":{"index.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":1901,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/angular",{"_index":2627,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1664,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1658,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1661,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1652,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["i.destroy",{"_index":1226,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["i.e",{"_index":2245,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1949,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.name",{"_index":972,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["i.object",{"_index":1945,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1952,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["icon(icon",{"_index":2380,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["iconprovider",{"_index":1890,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["iconprovider.allowcoloroverride",{"_index":2387,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.isccw",{"_index":2384,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.noholes",{"_index":2386,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.url",{"_index":1893,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["icons/?.svg",{"_index":1659,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1654,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1653,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":554,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1633,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":178,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["ideas",{"_index":2925,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["ignorepaused",{"_index":1960,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":782,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":2238,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":115,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":2970,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":437,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["included",{"_index":2020,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":2647,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":546,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1825,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":2914,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":766,"title":{},"body":{"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{},"components/TextActorComponent.html":{}}}],["init(renderer",{"_index":657,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1401,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initial",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":1036,"title":{},"body":{"components/DagreLayoutComponent.html":{},"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2294,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":649,"title":{},"body":{"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1247,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":123,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":896,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["input",{"_index":228,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":219,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["install",{"_index":2691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":1285,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["instances",{"_index":1134,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["instead",{"_index":2062,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":2878,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":221,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":628,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersection[0",{"_index":1975,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1974,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersections",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["isccw",{"_index":1649,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["isenabled",{"_index":1930,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isolated",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":2870,"title":{},"body":{"index.html":{}}}],["isready",{"_index":2184,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1959,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["issue",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":394,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":1531,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":1532,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["ivy",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["jetbrains",{"_index":2920,"title":{},"body":{"index.html":{}}}],["join",{"_index":2923,"title":{},"body":{"index.html":{}}}],["js",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(g.node(name",{"_index":976,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["k",{"_index":1972,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["keep",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["kind",{"_index":2968,"title":{},"body":{"license.html":{}}}],["label",{"_index":633,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":2060,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"changelog.html":{}}}],["later",{"_index":2107,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":293,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":469,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":464,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":292,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":470,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":265,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layout.component",{"_index":930,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["layout.component.ts",{"_index":990,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:100",{"_index":1028,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":1029,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:126",{"_index":1024,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:130",{"_index":1030,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:136",{"_index":1023,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":1009,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":1017,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":1015,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":1011,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":1021,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:35",{"_index":1012,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:36",{"_index":1013,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:37",{"_index":1020,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":1010,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":1022,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:43",{"_index":1033,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:44",{"_index":1007,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:60",{"_index":1027,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:65",{"_index":1026,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:70",{"_index":1025,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:90",{"_index":1032,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["lazy",{"_index":2545,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":239,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["length",{"_index":796,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":2864,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2983,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2980,"title":{},"body":{"license.html":{}}}],["library",{"_index":2632,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":2928,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":216,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":245,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":1345,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":499,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":208,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":225,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":223,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":1335,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1624,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":1336,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:19",{"_index":1334,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:24",{"_index":227,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.component.ts:26",{"_index":1626,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:28",{"_index":1337,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":237,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":565,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":498,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":1357,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":1349,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":1353,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":1350,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":1352,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":1351,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":1347,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":2124,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":1355,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":2123,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":2125,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":1342,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":564,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":2876,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":2947,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2971,"title":{},"body":{"license.html":{}}}],["line",{"_index":295,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["line.geometry.attributes.position",{"_index":1582,"title":{},"body":{"components/GridActorComponent.html":{}}}],["line2",{"_index":1718,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["lineconnectorcomponent",{"_index":294,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1297,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":2835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linegeometry",{"_index":1730,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linematerial",{"_index":1726,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["lineposition",{"_index":1581,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":1585,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":1587,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":1589,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":1591,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lines",{"_index":1272,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["linetype",{"_index":1700,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linetype.dashed",{"_index":1710,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linewidth",{"_index":1701,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["list",{"_index":169,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listened",{"_index":2247,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["loaded",{"_index":1997,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":298,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":303,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.call(this",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader.component",{"_index":506,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1978,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":2053,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":2367,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":2371,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":2000,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:27",{"_index":1991,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":2362,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:34",{"_index":1998,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":2373,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:42",{"_index":1990,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":2369,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:48",{"_index":2364,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:51",{"_index":2361,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:52",{"_index":1999,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:54",{"_index":2365,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:57",{"_index":2366,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:60",{"_index":2360,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":2363,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:66",{"_index":2359,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:77",{"_index":2368,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load(key",{"_index":1490,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":567,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":505,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service",{"_index":2006,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.service.ts",{"_index":2036,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":2461,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["loader.service.ts:13",{"_index":2042,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:15",{"_index":2038,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2041,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader/atft",{"_index":566,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader/services/font.service",{"_index":2546,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loaderactorcomponent",{"_index":297,"title":{"components/LoaderActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadlazyobject",{"_index":1986,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":2909,"title":{},"body":{"index.html":{}}}],["logic",{"_index":364,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":382,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["main",{"_index":409,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":2734,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manager",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":1838,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":299,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2898,"title":{},"body":{"index.html":{}}}],["marginx",{"_index":1001,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marginy",{"_index":1002,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marked",{"_index":2136,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":821,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":2796,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":1702,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":2547,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":2028,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["materialcreator.preload",{"_index":2029,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":2856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":650,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.pi",{"_index":863,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin(this.i",{"_index":1790,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["matline",{"_index":1692,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["max",{"_index":2480,"title":{},"body":{"components/TextActorComponent.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1363,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1381,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdelay",{"_index":2473,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxdistance",{"_index":1808,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpolarangle",{"_index":1809,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpos",{"_index":2469,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxx",{"_index":2356,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":2357,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxzoom",{"_index":1810,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1643,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["meant",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2973,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2950,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":787,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh'},{'name",{"_index":253,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":2562,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":513,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":784,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:102",{"_index":2536,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:103",{"_index":2600,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:110",{"_index":2535,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":2430,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":862,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":2429,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":861,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":809,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":856,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":2595,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":860,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":857,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":806,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":858,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":2572,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":865,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":855,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":795,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":2571,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":2538,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":1605,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":811,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":2593,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":866,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":2575,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":808,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":2542,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":2602,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":2114,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":2592,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":794,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":2531,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":2529,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:55",{"_index":1500,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":2524,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:57",{"_index":2598,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":812,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":2518,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":2521,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":1501,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:66",{"_index":2597,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":2519,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":2520,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":2527,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":2522,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":2530,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":2525,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:84",{"_index":2596,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":2523,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:87",{"_index":2599,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":2517,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:98",{"_index":2532,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.geometry",{"_index":1518,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.module",{"_index":569,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":512,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":2563,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":568,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["meshposition",{"_index":1572,"title":{},"body":{"components/GridActorComponent.html":{}}}],["message",{"_index":2841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":211,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["middle",{"_index":1615,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":2933,"title":{},"body":{"license.html":{}}}],["min",{"_index":2482,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindelay",{"_index":2474,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindistance",{"_index":1811,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["minzoom",{"_index":1812,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":2831,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2929,"title":{},"body":{"license.html":{}}}],["mm",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2915,"title":{},"body":{"index.html":{}}}],["model",{"_index":301,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["model(model",{"_index":1889,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["model.compositions",{"_index":1127,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.compositions?.foreach(i",{"_index":1174,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.edges",{"_index":1121,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1122,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges?.foreach(i",{"_index":1178,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.layout",{"_index":1130,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1128,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["model.nodes.length",{"_index":1173,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.nodes?.foreach(i",{"_index":1176,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.ts",{"_index":631,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":188,"title":{"components/ModelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelpath",{"_index":1886,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["models/?.obj",{"_index":1902,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":555,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1093,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1099,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":697,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":1061,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DofComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["modify",{"_index":2949,"title":{},"body":{"license.html":{}}}],["module",{"_index":412,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":414,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2913,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":2248,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mouseenter",{"_index":2143,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":2144,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1965,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1427,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":1985,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":2040,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1108,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiple",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["mustrerender",{"_index":2084,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":2590,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["near",{"_index":1453,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1968,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1971,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1903,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1973,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1976,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["network",{"_index":1018,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newgeometry",{"_index":1520,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newgeometry.attributes",{"_index":1523,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newobject3dinstance",{"_index":218,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["newtexturepath",{"_index":2002,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["ng",{"_index":845,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":995,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ngafterviewinit",{"_index":124,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":426,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":125,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngonchanges(changes",{"_index":141,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngondestroy",{"_index":126,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":885,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["node",{"_index":634,"title":{"interfaces/Node.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":267,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["node.component",{"_index":1161,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.component.ts",{"_index":1065,"title":{},"body":{"components/DagreNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:102",{"_index":1076,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:16",{"_index":1070,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:18",{"_index":1071,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:20",{"_index":1082,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:22",{"_index":1083,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:23",{"_index":1069,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:41",{"_index":1074,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:46",{"_index":1072,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:65",{"_index":1073,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:70",{"_index":1075,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:88",{"_index":1077,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.composition",{"_index":1119,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.height",{"_index":986,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.icon",{"_index":1205,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.label",{"_index":1117,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.model",{"_index":1207,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.name",{"_index":1194,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.type",{"_index":1199,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.width",{"_index":985,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.x",{"_index":980,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["node.y",{"_index":982,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["nodefactory",{"_index":1189,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef",{"_index":1191,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.composition",{"_index":1195,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.container.createcomponent(serverfactory",{"_index":1201,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.name",{"_index":1193,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["nodes",{"_index":642,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["nodesep",{"_index":1003,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["noholes",{"_index":1650,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["none",{"_index":2277,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":2977,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":365,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":2963,"title":{},"body":{"license.html":{}}}],["now",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":2022,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":736,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":637,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"pipes/Deg2RadPipe.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":305,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":2155,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":2153,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":2154,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.clone",{"_index":2034,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["obj.ismesh",{"_index":754,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":758,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":2159,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":2157,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":2158,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":233,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":525,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":559,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1283,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1267,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":524,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":1559,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["object/scene.component",{"_index":2313,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":2881,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":302,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":1989,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":304,"title":{"components/ObjLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["objloaderservice",{"_index":556,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":403,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":2940,"title":{},"body":{"license.html":{}}}],["official",{"_index":2912,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1533,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["once",{"_index":371,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":118,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["onclick",{"_index":886,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1950,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":887,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["ondestroy",{"_index":117,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["oninit",{"_index":878,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["onlyunique",{"_index":2764,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlyunique(value",{"_index":1163,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["onmouseclick",{"_index":1529,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":1551,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":1530,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1553,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":2160,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":2185,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1939,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onresize(event",{"_index":2264,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":888,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["ontouchstart",{"_index":2186,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1954,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1703,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["openended",{"_index":849,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["optimization",{"_index":367,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2890,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":307,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":1839,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":306,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["original",{"_index":1301,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":309,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":308,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["others",{"_index":1850,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":2988,"title":{},"body":{"license.html":{}}}],["out",{"_index":423,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":2276,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":929,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["outputs",{"_index":892,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["overridematerialcolor",{"_index":2358,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":2378,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":2993,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2023,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pane",{"_index":2234,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1813,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":797,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":1327,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":222,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["parent.ts",{"_index":2803,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentscene",{"_index":150,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":2862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseandcreate",{"_index":1140,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser",{"_index":1133,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser'},{'name",{"_index":270,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["parser.component.ts",{"_index":1131,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parser.component.ts:117",{"_index":1149,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:134",{"_index":1152,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:144",{"_index":1147,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:38",{"_index":1144,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:40",{"_index":1145,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:42",{"_index":1158,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:44",{"_index":1143,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:55",{"_index":1155,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:60",{"_index":1156,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:73",{"_index":1157,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:94",{"_index":1154,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:98",{"_index":1151,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["particular",{"_index":2975,"title":{},"body":{"license.html":{}}}],["pass",{"_index":119,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1438,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1440,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1442,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1441,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patch",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1992,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["path.color",{"_index":2394,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.toshapes(this.isccw",{"_index":2398,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["paths",{"_index":2390,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["pause",{"_index":1927,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1911,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":366,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":2935,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2957,"title":{},"body":{"license.html":{}}}],["person",{"_index":2939,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2958,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":312,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":311,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":1316,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":530,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":580,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":529,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1317,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1326,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":721,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2273,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":314,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":313,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["point",{"_index":316,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pointlightcomponent",{"_index":315,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":2966,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1561,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":390,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/GridActorComponent.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":1584,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["preloading",{"_index":2014,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":2016,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["preservedrawingbuffer",{"_index":2219,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["private",{"_index":374,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["project",{"_index":2634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":828,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":256,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":573,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":826,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:15",{"_index":831,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:24",{"_index":833,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":696,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":2845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":2846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":2834,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":2847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":2836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../provide",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":2837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":2850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../svgloader.ts",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":165,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":1745,"title":{},"body":{"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2464,"title":{},"body":{"components/TextActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":2585,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":355,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":386,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":379,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":381,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":383,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":380,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":424,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":521,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":432,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":2067,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":2098,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":449,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1797,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":2063,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":475,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":112,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":761,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":763,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:22",{"_index":765,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:29",{"_index":764,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1359,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1367,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1366,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1364,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:24",{"_index":1369,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:50",{"_index":1370,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1386,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1397,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1240,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1448,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1456,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1458,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:15",{"_index":1457,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:17",{"_index":1454,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:28",{"_index":1461,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:37",{"_index":1460,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:43",{"_index":1459,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:49",{"_index":1463,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:54",{"_index":1462,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":558,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":442,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":1686,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":825,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":488,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":617,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1444,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1446,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":1447,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1594,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":207,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":497,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":1330,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1620,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2119,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":504,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1977,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2051,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1481,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts:8",{"_index":1482,"title":{},"body":{"injectables/FontService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1631,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:14",{"_index":1644,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:16",{"_index":1635,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:49",{"_index":1632,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:58",{"_index":1634,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":1895,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:10",{"_index":1898,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:16",{"_index":1896,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:22",{"_index":1897,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:8",{"_index":1899,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":2035,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2460,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2352,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":511,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":783,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":847,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":1492,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":1602,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2112,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2425,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":2566,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":2587,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2405,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":2409,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:26",{"_index":2410,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:32",{"_index":2412,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:36",{"_index":2411,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":615,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2501,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":579,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1318,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1322,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":2126,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":2129,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":588,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":2130,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1904,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":2198,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":2193,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":2192,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":2207,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":2208,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":2205,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":2204,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":2206,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":2188,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":2195,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":2202,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":2203,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":2191,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":2190,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":2199,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":2200,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":2210,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":2201,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":2189,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":2197,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":2196,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":599,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":644,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:113",{"_index":656,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:122",{"_index":665,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":675,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":672,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":669,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":673,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":667,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":674,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:40",{"_index":654,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:45",{"_index":662,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:97",{"_index":663,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":2211,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2278,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:108",{"_index":2290,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:116",{"_index":2306,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:123",{"_index":2292,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:127",{"_index":2291,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2309,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:131",{"_index":2293,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:135",{"_index":2302,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2310,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2308,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2312,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:17",{"_index":2307,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:19",{"_index":2288,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:28",{"_index":2296,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:33",{"_index":2304,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:37",{"_index":2300,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:42",{"_index":2297,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:59",{"_index":2295,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:95",{"_index":2299,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2434,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":609,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2439,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2446,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2445,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2442,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2444,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":2443,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2441,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":2793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":2797,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":2800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":2802,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":2804,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":2806,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":2017,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1488,"title":{},"body":{"injectables/FontService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["property",{"_index":2239,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":1063,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["props",{"_index":1346,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["provided",{"_index":2869,"title":{},"body":{"index.html":{},"license.html":{}}}],["provideparent",{"_index":231,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":212,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":619,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":786,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":2861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":827,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":848,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(dagrecompositioncomponent",{"_index":879,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["provideparent(dagrelayoutcomponent",{"_index":992,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["provideparent(dagrenodecomponent",{"_index":1066,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["provideparent(dagreyamlparsercomponent",{"_index":1132,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":1331,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1445,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":1493,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":1526,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1595,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":1603,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1621,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":1670,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":1689,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(loaderactorcomponent",{"_index":1746,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["provideparent(modelactorcomponent",{"_index":1885,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":2052,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1984,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":2069,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":2099,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":2113,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":2120,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2406,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":2421,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":2422,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":2423,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":2424,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":2426,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":2353,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textactorcomponent",{"_index":2465,"title":{},"body":{"components/TextActorComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":2503,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":2567,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":2588,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":2626,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":1666,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1667,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1668,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["pt",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2951,"title":{},"body":{"license.html":{}}}],["published",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":2926,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2976,"title":{},"body":{"license.html":{}}}],["px",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2deg",{"_index":2127,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":582,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":578,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":850,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":1325,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":2428,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":851,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":852,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["randomint",{"_index":2471,"title":{},"body":{"components/TextActorComponent.html":{}}}],["randomint(min",{"_index":2479,"title":{},"body":{"components/TextActorComponent.html":{}}}],["rankdir",{"_index":1004,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker",{"_index":1005,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker'].some(propname",{"_index":1062,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranksep",{"_index":1006,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["raycaster",{"_index":343,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":536,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":589,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":591,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":535,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":1841,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":342,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1547,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":345,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1908,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1953,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1948,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1947,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":347,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":587,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1079,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["readonly",{"_index":372,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":2515,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rectangular",{"_index":802,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["refreshlayout",{"_index":996,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["register",{"_index":171,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["register(id",{"_index":180,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":2018,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["relative",{"_index":1993,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":968,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removefromarray",{"_index":2805,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":2863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removenode",{"_index":889,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["removepass",{"_index":1402,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1415,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":369,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"changelog.html":{}}}],["rendered",{"_index":2235,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":318,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":722,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":532,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":600,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":602,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":531,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":145,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":317,"title":{"components/RendererCanvasComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["rendererservice",{"_index":128,"title":{"injectables/RendererService.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2413,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":2249,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":2222,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":676,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":711,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1429,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":710,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1403,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":2874,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":167,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":183,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":174,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:28",{"_index":182,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:36",{"_index":177,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["request",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":368,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":406,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":2927,"title":{},"body":{"index.html":{}}}],["reset",{"_index":422,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":2218,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2272,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2283,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2298,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2268,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1491,"title":{},"body":{"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{}}}],["resolve(data.paths",{"_index":2463,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(model",{"_index":2049,"title":{},"body":{"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolver",{"_index":175,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["resourcepath",{"_index":1987,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":1994,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["restorematerial",{"_index":653,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":664,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":2243,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":2946,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1929,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2948,"title":{},"body":{"license.html":{}}}],["ring1",{"_index":1747,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring2",{"_index":1748,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring3",{"_index":1749,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["rotatespeed",{"_index":1814,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["run",{"_index":2906,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":931,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{}}}],["s",{"_index":2451,"title":{},"body":{"injectables/StatsService.html":{}}}],["same",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["sample",{"_index":2900,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":702,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":2888,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1389,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["scaletofit",{"_index":2376,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2402,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["scene",{"_index":651,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":321,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":2414,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":572,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1404,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":320,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1388,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":277,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":481,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1387,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1390,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:23",{"_index":1393,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:27",{"_index":1392,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1815,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["see",{"_index":2710,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":2059,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":801,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":894,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":213,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["self",{"_index":1164,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["self.indexof(value",{"_index":1165,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["sell",{"_index":2955,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["separate",{"_index":1428,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separating",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":2839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":190,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["server/server",{"_index":467,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":468,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":184,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":185,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverfactory",{"_index":1197,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["servericonactorcomponent",{"_index":186,"title":{"components/ServerIconActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverref",{"_index":1200,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.icon",{"_index":1204,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.label",{"_index":1203,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.model",{"_index":1206,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.name",{"_index":1202,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverstandactorcomponent",{"_index":187,"title":{"components/ServerStandActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":358,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{}}}],["services",{"_index":2007,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["services/obj",{"_index":2005,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["set",{"_index":932,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":2187,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1931,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2284,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2301,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setheight(height",{"_index":928,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["seticon(icon",{"_index":2374,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setmaterialcolor(materialcolor",{"_index":2540,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setmaterials",{"_index":2037,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":2039,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(model",{"_index":1888,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":2370,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":2285,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2303,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":2543,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":2001,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["settled",{"_index":748,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":1803,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":1682,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":681,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1396,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":720,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":781,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":780,"title":{},"body":{"components/BlurComponent.html":{}}}],["shadow",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":2964,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1508,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["shape.lineto",{"_index":1511,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":1512,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":1510,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shapepath",{"_index":2043,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["shapes",{"_index":2397,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["show",{"_index":352,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":611,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2435,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2437,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2436,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["sides",{"_index":805,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":2867,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":133,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["simplex",{"_index":1019,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["single",{"_index":2267,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":621,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":2798,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":1495,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":1496,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skip",{"_index":2416,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":144,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":1623,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["smaapass",{"_index":683,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":740,"title":{},"body":{"injectables/BloomService.html":{}}}],["snyk",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2942,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1704,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":2605,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":2607,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["sphere",{"_index":326,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":325,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.component.html",{"_index":2889,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":2899,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":2911,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":2896,"title":{},"body":{"index.html":{}}}],["stand",{"_index":324,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":377,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{}}}],["started",{"_index":2630,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1081,"title":{},"body":{"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["stats",{"_index":350,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":610,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":537,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2314,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":349,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":608,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":1141,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["step",{"_index":2015,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["stop",{"_index":378,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["stories",{"_index":2690,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":2651,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":2696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":2266,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":1796,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1801,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":2960,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2953,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2924,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":387,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":410,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["subscribeevents",{"_index":2152,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscription",{"_index":924,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["substantial",{"_index":2965,"title":{},"body":{"license.html":{}}}],["super(rendererservice",{"_index":235,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":1039,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":1059,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":962,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{}}}],["super.ngoninit",{"_index":948,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["super.updateparent",{"_index":2417,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":2656,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":2919,"title":{},"body":{"index.html":{}}}],["svg",{"_index":328,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":2044,"title":{},"body":{"injectables/ObjLoaderService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svgloadercomponent",{"_index":327,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":557,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["switch",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["syncgraph",{"_index":890,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphcontainer",{"_index":997,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphcontainer(g",{"_index":1031,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphnodes",{"_index":891,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphnodes(g",{"_index":916,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractComposeEffect.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["table",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":1333,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["targetopacity",{"_index":1248,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["template",{"_index":217,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":2215,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["test",{"_index":2883,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2907,"title":{},"body":{"index.html":{}}}],["text",{"_index":330,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":2550,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":571,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":616,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":570,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":2586,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":329,"title":{"components/TextActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":331,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":2061,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texture2d",{"_index":706,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["texturepath",{"_index":1988,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":2012,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1995,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":853,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":854,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":1497,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["thickness'].some(propname",{"_index":1516,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._height",{"_index":934,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this._materialcolor",{"_index":2548,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":2377,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":2551,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":1684,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.actorrepository.getcomponentfactory(id",{"_index":1187,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.addnode",{"_index":949,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.addpass(renderpass",{"_index":1430,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.align",{"_index":1043,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.animate",{"_index":1277,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":1278,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":407,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":405,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":404,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1279,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1315,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1878,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1280,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe(this.updateanimation",{"_index":1785,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.animationservice.start",{"_index":1281,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":397,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":398,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1379,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":163,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.applyshadowprops(mesh",{"_index":824,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.applytranslation",{"_index":983,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.aspect",{"_index":2350,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":2618,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":1857,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1859,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":2558,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":2561,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":2560,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":2559,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2344,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2343,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2319,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":726,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":731,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":732,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":730,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":751,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":737,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":728,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2317,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":709,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":755,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.calculateaspectratio(canvas",{"_index":2351,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1933,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":2111,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":2094,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1961,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.left",{"_index":2091,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":2096,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.right",{"_index":2092,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":2093,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2316,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":2095,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":2086,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2260,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2262,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":1344,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.cdref.detectchanges",{"_index":938,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.cdref['destroyed",{"_index":937,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.centered",{"_index":1056,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":1064,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextActorComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1851,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit",{"_index":2165,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":946,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":151,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":156,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":1439,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1437,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":159,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":2321,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1443,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1425,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1433,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composition",{"_index":959,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.container.createcomponent(factory",{"_index":1213,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.container.createcomponent(nodefactory",{"_index":1192,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.contentprojection",{"_index":840,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":841,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":1842,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1879,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":1856,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1858,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1862,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":1860,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1868,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1870,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1874,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1866,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1872,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1854,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1880,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1844,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1864,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1876,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1847,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2456,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcomposition(i",{"_index":1175,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createedge(i",{"_index":1179,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createnode(i",{"_index":1177,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.currentdelay",{"_index":2494,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currentpos",{"_index":2491,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currenttext",{"_index":2493,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.curvesegments",{"_index":2557,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dagrelayout",{"_index":939,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getchildren().push(this",{"_index":954,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel",{"_index":950,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes",{"_index":970,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.filter(i",{"_index":971,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.push",{"_index":957,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.refreshlayout",{"_index":961,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.removechildbyname(this.name",{"_index":969,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.updated.subscribe(this.syncgraph",{"_index":945,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dampingfactor",{"_index":1863,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":750,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":759,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashincrement",{"_index":1311,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashsize",{"_index":1741,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.defaultdpi",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.defaultid",{"_index":198,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.depth",{"_index":817,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":820,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthwrite",{"_index":2396,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.destroyall",{"_index":1171,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.disable",{"_index":161,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1479,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":2122,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":1601,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.done",{"_index":2498,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.edges",{"_index":1287,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1293,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1296,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1294,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1295,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1313,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edgesep",{"_index":1046,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.enable",{"_index":160,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":400,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1861,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1472,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1477,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":741,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":743,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":744,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":742,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":745,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":753,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1376,"title":{},"body":{"components/DofComponent.html":{}}}],["this.font.load(this.fonturl",{"_index":2553,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":2109,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.gapsize",{"_index":1743,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1942,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1957,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getgeometry",{"_index":1521,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.getlayout(model",{"_index":1110,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.getlineposition(event",{"_index":1562,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":822,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getnodecomponent((node.model",{"_index":1198,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.getobject",{"_index":1517,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.getobject().background",{"_index":2419,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getpositions",{"_index":1734,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.gettextmesh(font",{"_index":2554,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.graph",{"_index":1051,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel",{"_index":1038,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel.layout",{"_index":1042,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphupdated",{"_index":944,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.graphupdated?.unsubscribe",{"_index":967,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":1571,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":1565,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":1563,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groups",{"_index":1962,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1963,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1938,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":816,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":819,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hidedash",{"_index":1312,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.hightsegments",{"_index":2433,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":1275,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1282,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.i",{"_index":1789,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.iconservice.getsource(icon",{"_index":2382,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1420,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":746,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1302,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":154,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.injector.get(dagrelayoutcomponent",{"_index":940,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.instances",{"_index":1227,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.foreach(i",{"_index":1223,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(compositionref",{"_index":1239,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(edgeref",{"_index":1221,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(noderef",{"_index":1196,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(serverref",{"_index":1208,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.intensity",{"_index":238,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isccw",{"_index":2383,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.isready",{"_index":1940,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1951,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":1607,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":1617,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":1619,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.label",{"_index":958,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.layout",{"_index":1040,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.linewidth",{"_index":1738,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.list.get(id",{"_index":201,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":199,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":1852,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1853,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":2048,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.load(this.model",{"_index":2056,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":2050,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loop",{"_index":2614,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.marginx",{"_index":1048,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.marginy",{"_index":1049,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.material",{"_index":1298,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":1305,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1304,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materials[obj.uuid",{"_index":757,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.matline",{"_index":1736,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.maxblur",{"_index":1383,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdelay",{"_index":2496,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxdistance",{"_index":1869,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1871,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpos",{"_index":2492,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxx",{"_index":2400,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxy",{"_index":2401,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxzoom",{"_index":1875,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1867,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1873,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.model",{"_index":1894,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.modelpath",{"_index":1892,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.modelservice.getsource(model",{"_index":1891,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.mouseenter.emit",{"_index":2163,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":2161,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":2025,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":2027,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":2616,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.name",{"_index":952,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.near",{"_index":1476,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.nodesep",{"_index":1045,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.noholes",{"_index":2385,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.object",{"_index":988,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.object.add(this.ring1",{"_index":1773,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring2",{"_index":1777,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring3",{"_index":1780,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.objloader.load(this.model",{"_index":2033,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.objloader.setmaterials(materialcreator",{"_index":2030,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.offset",{"_index":1608,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1914,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1915,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":2146,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":2147,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":2148,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":2149,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1912,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1913,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2254,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2255,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1916,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1917,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1744,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.openended",{"_index":873,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.overridematerialcolor",{"_index":2388,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.panspeed",{"_index":1855,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":1467,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":1468,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1469,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parentscene",{"_index":1466,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parseandcreate",{"_index":1166,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.pass",{"_index":162,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":155,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":779,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1373,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1380,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1377,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1382,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1928,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.preservedrawingbuffer",{"_index":2258,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.radialsegments",{"_index":872,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":2576,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":871,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.randomint(this.mindelay",{"_index":2495,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.rankdir",{"_index":1044,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranker",{"_index":1050,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranksep",{"_index":1047,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1967,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":2150,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":2171,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":2134,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":2564,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.register('barrel",{"_index":193,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":192,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":194,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":196,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":191,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":195,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":1900,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":1655,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1663,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1657,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1660,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1651,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2455,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.removenode",{"_index":963,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.render",{"_index":2341,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":153,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1385,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2257,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":157,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2274,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":1422,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1434,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2332,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1426,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2259,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":202,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.resolver.resolvecomponentfactory(dagrecompositioncomponent",{"_index":1229,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagreedgecomponent",{"_index":1211,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrenodecomponent",{"_index":1190,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resourcepath",{"_index":2013,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.restorematerial(i",{"_index":752,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.ring1",{"_index":1770,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.rotatez(math.sin(this.i",{"_index":1792,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.scale.set(70",{"_index":1771,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2",{"_index":1774,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.rotatez(math.cos(this.i",{"_index":1793,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.scale.set(60",{"_index":1775,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3",{"_index":1778,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.rotatez(math.sin(this.i",{"_index":1794,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.scale.set(50",{"_index":1779,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.rotatespeed",{"_index":1845,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":708,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2331,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1474,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2318,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":749,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1431,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1432,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1865,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1944,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1946,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.size",{"_index":1611,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":1503,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":1506,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.solid",{"_index":1740,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.start",{"_index":1763,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.startloading",{"_index":2379,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":2453,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2459,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2458,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2454,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2438,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2323,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.status.emit(false",{"_index":1185,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.status.emit(true",{"_index":1180,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.stop",{"_index":1310,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["this.subscribe",{"_index":1918,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribed",{"_index":1786,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.subscribeevents",{"_index":2151,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.svgloader.load(this.model",{"_index":2391,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.syncgraph",{"_index":942,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraph.bind(this",{"_index":943,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraphcontainer(this.graph",{"_index":1053,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.syncgraphnodes(this.dagrelayout.getgraph",{"_index":989,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.target",{"_index":1343,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.targetopacity",{"_index":1314,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.text",{"_index":2488,"title":{},"body":{"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.text.length",{"_index":2489,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.thetalength",{"_index":875,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":874,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":1507,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":2452,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":1685,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.translatelabely",{"_index":935,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.translatex",{"_index":979,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatey",{"_index":981,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.trytofindgeometry",{"_index":1276,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":2577,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":2578,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":2608,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1919,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":2166,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateanimation",{"_index":1783,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updateanimation.bind(this",{"_index":1784,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updatebaseinfo(g",{"_index":1126,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2340,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updated.emit",{"_index":1054,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.updateedges(g",{"_index":1129,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1112,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatetext",{"_index":2486,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.updatezoom",{"_index":2083,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":2621,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":2620,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":2609,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":2612,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":2610,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":2619,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":2613,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":2615,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":2623,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play",{"_index":2622,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":2624,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":2606,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":2325,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2338,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2322,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2337,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2328,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2329,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2349,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2334,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2333,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2335,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.width",{"_index":984,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.widthsegments",{"_index":818,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.zoom",{"_index":2087,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1848,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":229,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(appliedcolor(this.color",{"_index":236,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":625,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":627,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":815,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":1549,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":1576,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":1574,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["three.camera",{"_index":661,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.clock",{"_index":1723,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":2415,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":870,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":1340,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1289,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face3",{"_index":1905,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(appliedcolor(this.color",{"_index":1475,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":2534,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1489,"title":{},"body":{"injectables/FontService.html":{}}}],["three.gridhelper(this.size",{"_index":1600,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":2392,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":1627,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1970,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":2021,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.layers",{"_index":668,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.line(geometry",{"_index":1578,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":1579,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":1291,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1290,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":1264,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":867,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":823,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.getgeometry",{"_index":1514,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":670,"title":{},"body":{"injectables/BloomService.html":{},"components/VideoMeshComponent.html":{}}}],["three.meshline",{"_index":2887,"title":{},"body":{"index.html":{}}}],["three.object3d",{"_index":835,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/TextActorComponent.html":{}}}],["three.objectloader",{"_index":2054,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1980,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":2081,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2336,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":2108,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry",{"_index":2118,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":2115,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":2121,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1909,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.ringgeometry(0.85",{"_index":1767,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["three.scene",{"_index":659,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":734,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.shape",{"_index":1509,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry",{"_index":1499,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":1513,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":2432,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":2556,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":2579,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector2(window.innerwidth",{"_index":714,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector3",{"_index":2860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":2097,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(this.maxx",{"_index":2403,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.vector3(x",{"_index":1966,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":2617,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":2311,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":1840,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2447,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/lines/line2",{"_index":1729,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linegeometry",{"_index":1731,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linematerial",{"_index":1732,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":2003,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":2004,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1372,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":680,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":148,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":677,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":682,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/smaapass",{"_index":684,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":679,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1395,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":686,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":778,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":776,"title":{},"body":{"components/BlurComponent.html":{}}}],["threejs",{"_index":2045,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":2905,"title":{},"body":{"index.html":{}}}],["threejs/videos/ui/retro_futuristic_ui_360p.mp4",{"_index":2628,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["throw",{"_index":1186,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["time",{"_index":1693,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["timescale",{"_index":1694,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["todo",{"_index":729,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2440,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":2987,"title":{},"body":{"license.html":{}}}],["torus",{"_index":333,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":332,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1955,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1320,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":1321,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":2128,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":1606,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":1527,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["translatelabely",{"_index":883,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["translatez",{"_index":1068,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["transparent",{"_index":1580,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["tree",{"_index":206,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["true",{"_index":401,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["try",{"_index":1170,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["trytofindgeometry",{"_index":1243,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tube",{"_index":2569,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":2570,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":2019,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["undefined",{"_index":543,"title":{},"body":{"modules/AtftModule.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":2241,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":542,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":701,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":735,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unrealbloompass",{"_index":678,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":713,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":965,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":2156,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":2885,"title":{},"body":{"index.html":{}}}],["update",{"_index":960,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["updateanimation",{"_index":360,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["updateaspectratio",{"_index":2071,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":2076,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatebaseinfo",{"_index":1094,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1101,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2286,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2305,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":395,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updateedges",{"_index":1095,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1103,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1096,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1105,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":1697,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["updateparent",{"_index":2407,"title":{},"body":{"components/SceneComponent.html":{}}}],["updatetext",{"_index":2472,"title":{},"body":{"components/TextActorComponent.html":{}}}],["updatezoom",{"_index":2072,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upgrade",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["usage",{"_index":2875,"title":{},"body":{"index.html":{}}}],["use",{"_index":2011,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":362,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{},"index.html":{}}}],["usefull",{"_index":2141,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":2866,"title":{},"body":{"index.html":{}}}],["util",{"_index":232,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/applied",{"_index":1338,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":2544,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["utils",{"_index":1035,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["utils.ts",{"_index":1089,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1100,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:32",{"_index":1102,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:43",{"_index":1104,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:51",{"_index":1106,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:57",{"_index":1098,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["uv",{"_index":694,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uxactormodule",{"_index":2580,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["v0.0.3",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":243,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["variable",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2996,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":691,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":692,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":698,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":2901,"title":{},"body":{"index.html":{}}}],["version",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["vertexcolors",{"_index":1739,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["vertexshader",{"_index":690,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":775,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":2895,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":1609,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["very",{"_index":2140,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":2884,"title":{},"body":{"index.html":{}}}],["video",{"_index":335,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":2594,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":334,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videosrc",{"_index":2591,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":838,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":2230,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('container",{"_index":1078,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["viewchild('contentprojection",{"_index":837,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":1556,"title":{},"body":{"components/GridActorComponent.html":{}}}],["viewcontainerref",{"_index":1080,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":693,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2891,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2972,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2967,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2908,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1981,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":2872,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":2237,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":658,"title":{},"body":{"injectables/BloomService.html":{},"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":2984,"title":{},"body":{"license.html":{}}}],["width",{"_index":792,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":1683,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":793,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["wiki",{"_index":1090,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window.addeventlistener('click",{"_index":1921,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1920,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1922,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":715,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":724,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1925,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1924,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1926,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":2221,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":2225,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["within",{"_index":1996,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":2945,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2271,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":336,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":189,"title":{"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":2858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":810,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":1616,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y",{"_index":807,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":1618,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["yaml",{"_index":269,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yaml'].some(propname",{"_index":1168,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yaml.parse(this.yaml",{"_index":1172,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yanked",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":2194,"title":{},"body":{"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":798,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["zone.js",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":421,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":2085,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1816,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      return cacheHit;\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const j: any = key;\n\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractComposeEffect.html":{"url":"classes/AbstractComposeEffect.html","title":"class - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses();\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComponentFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentFactory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(id: string, component: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            defaultId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId: string;\n\n  constructor(\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string): ComponentFactory {\n    const comp = this.list.get(id ?? this.defaultId);\n    const result = this.resolver.resolveComponentFactory(comp);\n    return result;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xFFFFFF;\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(appliedColor(this.color));\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  entryComponents: [\n    ServerStandActorComponent,\n    ServerBarrelActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    ModelActorComponent,\n    DagreNodeComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        composition\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:40\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            darkenNonBloomed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    darkenNonBloomed(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            WebGLRenderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scene\n                                    \n                                            THREE.Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            restoreMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreMaterial(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bloomComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bloomLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Layers()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            darkMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            finalComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            materials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {SMAAPass} from 'three/examples/jsm/postprocessing/SMAAPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer: EffectComposer;\n  private bloomComposer: EffectComposer;\n  public initialized = false;\n  protected scene: THREE.Scene;\n\n  constructor() {\n  }\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        border\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Directive, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreCompositionComponent.html":{"url":"components/DagreCompositionComponent.html","title":"component - DagreCompositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreCompositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreCompositionComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-composition\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                            \n                                    Public\n                                translateLabelY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                composition\n                            \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n                \n                    \n                        Default value : 'plane'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateLabelY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:48\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-composition',\n  providers: [provideParent(DagreCompositionComponent)],\n  template: `\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n  `\n})\nexport class DagreCompositionComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() label: string;\n\n  @Input() border = 'plane';\n\n  private _height: number;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this.translateLabelY = this._height / 2 - 3;\n    if (!this.cdRef['destroyed']) {\n      this.cdRef.detectChanges();\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  @Input() width: number;\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  @Input() composition: string;\n\n  public color = 0xA0A0A0;\n  public translateLabelY: number;\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreCompositionComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.label,\n        composition: this.composition\n      });\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreCompositionComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n\n        // console.log('DagreCompositionComponent.layout: Update position node', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n\n        this.width = node.width;\n        this.height = node.height;\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreCompositionComponent.update');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreCompositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreLayoutComponent.html":{"url":"components/DagreLayoutComponent.html","title":"component - DagreLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreLayoutComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                graph\n                            \n                            \n                                    Protected\n                                graphModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getGraphModel\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                refreshLayout\n                            \n                            \n                                    Protected\n                                syncGraphContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                centered\n                            \n                            \n                                edgesep\n                            \n                            \n                                marginx\n                            \n                            \n                                marginy\n                            \n                            \n                                nodesep\n                            \n                            \n                                rankdir\n                            \n                            \n                                ranker\n                            \n                            \n                                ranksep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edgesep\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginx\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginy\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodesep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rankdir\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranker\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranksep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraphModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraphModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLayout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphContainer(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     dagre.graphlib.Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreUtils} from './dagre-utils';\nimport {GraphModel} from './dagre-model';\n\n\n@Component({\n  selector: 'atft-dagre-layout',\n  providers: [provideParent(DagreLayoutComponent)],\n  template: `\n    `\n})\nexport class DagreLayoutComponent extends AbstractEmptyDirective implements AfterViewInit, OnChanges, OnDestroy, AfterContentInit {\n\n  @Input() align = 'DL';\n  @Input() rankdir = 'BT';\n  @Input() nodesep = 15;\n  @Input() edgesep = 1;\n  @Input() ranksep = 15;\n  @Input() marginx = 0;\n  @Input() marginy = 0;\n  @Input() ranker = 'network-simplex';\n\n  @Input() centered = true;\n\n  @Output() updated = new EventEmitter();\n\n  protected graphModel: GraphModel;\n  protected graph: dagre.graphlib.Graph;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n\n    // Initialize empty model:\n    this.graphModel = {\n      layout: {},\n      nodes: [],\n      edges: []\n    };\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n  }\n\n  ngAfterContentInit() {\n    this.layout();\n  }\n\n\n  public layout() {\n    // console.log('DagreLayoutComponent.layout');\n    this.graphModel.layout = {\n      align: this.align,\n      rankdir: this.rankdir,\n      nodesep: this.nodesep,\n      edgesep: this.edgesep,\n      ranksep: this.ranksep,\n      marginx: this.marginx,\n      marginy: this.marginy,\n      ranker: this.ranker\n    };\n    this.graph = DagreUtils.modelToGraph(this.graphModel);\n    // console.log('DagreLayoutComponent.layout: graph', this.graph);\n    this.syncGraphContainer(this.graph);\n    this.updated.emit();\n    this.rendererService.render();\n  }\n\n\n  protected syncGraphContainer(g: dagre.graphlib.Graph) {\n    // console.log('DagreLayoutComponent.syncGraphContainer');\n    if (this.object && this.centered) {\n      this.translateX = -(g.graph().width / 2);\n      this.translateY = -(g.graph().height / 2);\n      this.applyTranslation();\n    }\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreLayoutComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    let modified = false;\n\n    if (['align', 'rankdir', 'ranksep', 'nodesep', 'edgesep', 'marginx', 'marginy', 'ranker'].some(propName => propName in changes)) {\n      this.layout();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      // this.rendererService.render();\n    }\n\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.graph = undefined;\n    this.graphModel = undefined;\n  }\n\n  public getGraphModel() {\n    return this.graphModel;\n  }\n\n  public refreshLayout() {\n    if (this.graph) {\n      this.layout();\n    }\n  }\n\n  public getGraph() {\n    return this.graph;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreNodeComponent.html":{"url":"components/DagreNodeComponent.html","title":"component - DagreNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreNodeComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-node\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                composition\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, Input, OnDestroy, OnInit, Optional, SkipSelf, ViewChild, ViewContainerRef} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-node',\n  providers: [provideParent(DagreNodeComponent)],\n  template: ''\n})\nexport class DagreNodeComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() composition: string;\n\n  @Input() translateZ = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container;\n\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreNodeComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.name,\n        composition: this.composition\n      });\n\n       // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreNodeComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n        // console.log('DagreLayoutComponent.layout: Update position', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreNodeComponent.syncGraph');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLayout(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.GraphLabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            modelToGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.graphlib.Graph\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateBaseInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    baseInfo\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateEdges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(\n      this.getLayout(model)\n    );\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout', g);\n    dagre.layout(g);\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n    this.updateBaseInfo(g, model.compositions);\n    this.updateBaseInfo(g, model.nodes);\n    this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): dagre.GraphLabel {\n    const layout: dagre.GraphLabel = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreYamlParserComponent.html":{"url":"components/DagreYamlParserComponent.html","title":"component - DagreYamlParserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreYamlParserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreYamlParserComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-yaml-parser\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                instances\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createComposition\n                            \n                            \n                                    Protected\n                                createEdge\n                            \n                            \n                                    Protected\n                                createNode\n                            \n                            \n                                    Protected\n                                destroyAll\n                            \n                            \n                                    Protected\n                                getNodeComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                parseAndCreate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                yaml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, resolver: ComponentFactoryResolver, actorRepository: ActorRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorRepository\n                                                  \n                                                        \n                                                                        ActorRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        yaml\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createComposition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComposition(composition: Composition)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composition\n                                    \n                                                Composition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createEdge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEdge(edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            destroyAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseAndCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseAndCreate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport * as yaml from 'yaml';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreCompositionComponent} from './dagre-composition.component';\nimport {DagreEdgeComponent} from './dagre-edge.component';\nimport {Composition, Edge, GraphModel, Node} from './dagre-model';\nimport {DagreNodeComponent} from './dagre-node.component';\nimport {ActorRepositoryService} from '../service';\n\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\n@Component({\n  selector: 'atft-dagre-yaml-parser',\n  providers: [provideParent(DagreYamlParserComponent)],\n  template: `\n    `\n})\nexport class DagreYamlParserComponent extends AbstractEmptyDirective implements OnChanges, AfterViewInit {\n\n  @Input() yaml;\n\n  @Output() status = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef}) container;\n\n  private instances = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected resolver: ComponentFactoryResolver,\n    protected actorRepository: ActorRepositoryService\n  ) {\n    super(rendererService, parent);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.parseAndCreate();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreYamlParserComponent.ngOnChanges', this.name);\n\n    if (!this.object) {\n      return;\n    }\n\n    if (['yaml'].some(propName => propName in changes)) {\n      this.parseAndCreate();\n    }\n  }\n\n  public parseAndCreate() {\n    // console.log('DagreYamlParserComponent.parseAndCreate');\n    try {\n      this.destroyAll();\n      const model: GraphModel = yaml.parse(this.yaml);\n\n      // console.log('DagreYamlParserComponent.parseAndCreate yaml', model);\n      if (model && model.nodes && model.nodes.length > 0) {\n\n        model.compositions?.forEach(i => this.createComposition(i));\n        model.nodes?.forEach(i => this.createNode(i));\n        model.edges?.forEach(i => this.createEdge(i));\n      }\n      this.status.emit(true);\n    } catch (e) {\n      console.warn('DagreYamlParserComponent.parseAndCreate failed', e);\n      this.status.emit(false);\n      throw e;\n    }\n  }\n\n  protected getNodeComponent(id: string) {\n    return this.actorRepository.getComponentFactory(id);\n  }\n\n  protected createNode(node: Node) {\n    // console.log('DagreYamlParserComponent.createNode', node);\n    const nodeFactory = this.resolver.resolveComponentFactory(DagreNodeComponent);\n    const nodeRef = this.container.createComponent(nodeFactory);\n    nodeRef.instance.name = node.name;\n    nodeRef.instance.composition = node.composition;\n    this.instances.push(nodeRef);\n\n    const serverFactory = this.getNodeComponent((node.model ? 'model' : node.type));\n    const serverRef = nodeRef.instance.container.createComponent(serverFactory);\n    serverRef.instance.name = node.name;\n    serverRef.instance.label = (node.label ? node.label : node.name);\n    serverRef.instance.icon = node.icon;\n    serverRef.instance.model = node.model;\n\n    this.instances.push(serverRef);\n  }\n\n\n  protected createEdge(edge: Edge) {\n    // console.log('DagreYamlParserComponent.createEdge', edge);\n    const factory = this.resolver.resolveComponentFactory(DagreEdgeComponent);\n    const edgeRef = this.container.createComponent(factory);\n    edgeRef.instance.from = edge.from;\n    edgeRef.instance.to = edge.to;\n    if (edge.type) {\n      edgeRef.instance.type = edge.type;\n    }\n    if (edge.color) {\n      edgeRef.instance.materialColor = edge.color;\n    }\n\n    this.instances.push(edgeRef);\n  }\n\n\n  protected destroyAll() {\n    // console.log('DagreYamlParserComponent.destroyAll');\n    this.instances.forEach(i => {\n      // console.log('DagreYamlParserComponent destroy', i);\n      i.destroy();\n    });\n    this.instances = [];\n  }\n\n\n  private createComposition(composition: Composition) {\n    // console.log('DagreYamlParserComponent.createComposition', node);\n    const factory = this.resolver.resolveComponentFactory(DagreCompositionComponent);\n    const compositionRef = this.container.createComponent(factory);\n    compositionRef.instance.name = composition.name;\n    compositionRef.instance.label = (composition.label ? composition.label : composition.name);\n    compositionRef.instance.composition = composition.composition;\n    compositionRef.instance.border = composition.border;\n\n    this.instances.push(compositionRef);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreYamlParserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Default value : 0xFF0000\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            tryToFindGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Material\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {appliedColor} from '../util';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor = 0xFF0000;\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity;\n  @Input() targetOpacity;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material: THREE.Material;\n  private stop = false;\n  protected animation: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: appliedColor(this.dashColor)}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  public initComposer() {\n    if (!this.composer) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0x0000AA\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\nimport {appliedColor} from '../util';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color = 0x0000AA;\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(appliedColor(this.color), this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/font.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.ShapeBufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh implements OnChanges {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected getGeometry(): THREE.ShapeBufferGeometry {\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    return geometry;\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(this.getGeometry(), material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('FrameMeshComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['sizeX', 'sizeY', 'thickness'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.ShapeBufferGeometry) {\n          const currentGeometry: THREE.ShapeBufferGeometry = mesh.geometry;\n          const newGeometry = this.getGeometry();\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n        modified = true;\n      }\n\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        compositions\n                                \n                                \n                                            Optional\n                                        edges\n                                \n                                \n                                            Optional\n                                        layout\n                                \n                                \n                                            Optional\n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLinePosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridMeshComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('grid', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper';\nimport {provideParent} from '../../../util';\nimport { AbstractEmptyDirective, GridMeshComponent } from '../../../object';\nimport * as THREE from 'three';\nimport {RaycasterEmitEvent} from '../../../raycaster';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends AbstractEmptyDirective {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event: RaycasterEmitEvent) {\n    // console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      // console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event: RaycasterEmitEvent): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                IconSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'md'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowColorOverride\n                                \n                                \n                                        isCCW\n                                \n                                \n                                        noHoles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:28\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractEmptyDirective } from '../../../object';\nimport { EmptyComponent } from '../../../object/helper';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends AbstractEmptyDirective {\n  @Input() label: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                clock\n                            \n                            \n                                    Protected\n                                line\n                            \n                            \n                                    Private\n                                matLine\n                            \n                            \n                                    Protected\n                                time\n                            \n                            \n                                    Protected\n                                timeScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Public\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                getPositions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                dashSize\n                            \n                            \n                                gapSize\n                            \n                            \n                                lineType\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                solid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashSize\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gapSize\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineType\n                    \n                \n                \n                    \n                        Type :         LineType\n\n                    \n                \n                \n                    \n                        Default value : LineType.dashed\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solid\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createLineMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Line2\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositions()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Clock()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Line2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            matLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timeScale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport * as THREE from 'three';\nimport {AnimationService} from '../../animation';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedColor, provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {Line2} from 'three/examples/jsm/lines/Line2';\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\nimport {LineMaterial} from 'three/examples/jsm/lines/LineMaterial';\n\nexport enum LineType {\n  dashed = 'dash',\n  solid = 'solid'\n}\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector implements OnDestroy {\n\n  @Input() materialColor = 0xffffff;\n  @Input() solid = false;\n  @Input() lineWidth = 2;\n  @Input() dashSize = 3;\n  @Input() gapSize = 0.5;\n  @Input() opacity = 1;\n  @Input() lineType: LineType = LineType.dashed;\n\n  @Input() animated = true;\n  protected animation: Subscription;\n  protected time = 0;\n  protected timeScale = 5;\n  protected clock = new THREE.Clock();\n\n  protected line: Line2;\n  private matLine: LineMaterial;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService,\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createLineMesh(): Line2 {\n    const positions = this.getPositions();\n    const geometry = new LineGeometry();\n    geometry.setPositions(positions);\n\n    this.matLine = new LineMaterial({\n      color: appliedColor(this.materialColor),\n      linewidth: this.lineWidth,\n      vertexColors: false,\n      dashed: !this.solid,\n      dashSize: this.dashSize,\n      dashOffset: 0,\n      gapSize: this.gapSize,\n      opacity: this.opacity,\n      transparent: this.opacity \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderActorComponent.html":{"url":"components/LoaderActorComponent.html","title":"component - LoaderActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LoaderActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-loader-actor\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                ring1\n                            \n                            \n                                    Private\n                                ring2\n                            \n                            \n                                    Private\n                                ring3\n                            \n                            \n                                    Private\n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Protected\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {appliedMaterial, provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport * as THREE from 'three';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-loader-actor',\n  providers: [provideParent(LoaderActorComponent)],\n  template: ``\n})\nexport class LoaderActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  animate = true;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  private ring1: THREE.Mesh;\n  private ring2: THREE.Mesh;\n  private ring3: THREE.Mesh;\n\n  private subscribed = false;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('LoaderActorComponent.ngAfterViewInit');\n    this.init();\n    this.start();\n  }\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, 'basic');\n  }\n\n  protected init() {\n    // console.log('LoaderActorComponent.init');\n    const geometry = new THREE.RingGeometry(0.85, 1, 64, 1, 0, Math.PI * 1.8);\n    const material = this.getMaterial();\n\n    this.ring1 = new THREE.Mesh(geometry, material);\n    this.ring1.scale.set(70, 70, 1);\n    this.object.add(this.ring1);\n\n    this.ring2 = new THREE.Mesh(geometry, material);\n    this.ring2.scale.set(60, 60, 1);\n    this.object.add(this.ring2);\n\n    this.ring3 = new THREE.Mesh(geometry, material);\n    this.ring3.scale.set(50, 50, 1);\n    this.object.add(this.ring3);\n\n\n  }\n\n  protected start() {\n    // console.log('LoaderActorComponent.updateText');\n    if (this.animate) {\n      // console.log('LoaderActorComponent.animate init');\n      this.updateAnimation = this.updateAnimation.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n      this.subscribed = true;\n      this.animationService.start();\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('LoaderActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.stop();\n  }\n\n  protected updateAnimation() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.updateAnimation');\n      this.i++;\n      this.ring1.scale.set(70 + (Math.sin(this.i / 20) * 10) + 12, 70 + (Math.sin(this.i / 20) * 10) + 12, 1);\n\n      this.ring1.rotateZ(Math.sin(this.i / 100) / 5);\n      this.ring2.rotateZ(Math.cos(this.i / 70) / 10);\n      this.ring3.rotateZ(Math.sin(this.i / 50) / 20);\n    }\n  }\n\n  public stop() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.done');\n      this.subscribed = false;\n      this.i = 0;\n      this.animation?.unsubscribe();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelActorComponent.html":{"url":"components/ModelActorComponent.html","title":"component - ModelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ModelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-model-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelPath\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:36\n                                \n                            \n\n                \n                    \n                        setmodel(model: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            model\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\nimport {AbstractObject3D, IconService, ModelService} from '../../../object';\nimport {RendererService} from '../../../renderer';\n\n@Component({\n  selector: 'atft-model-actor',\n  providers: [provideParent(ModelActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ModelActorComponent extends AbstractServerActor {\n\n  @Input()\n  set model(model: string) {\n    const iconProvider = this.modelService.getSource(model);\n    this.modelPath = iconProvider.url;\n  }\n\n  get model(): string {\n    return this.model;\n  }\n\n  public modelPath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected modelService: ModelService\n  ) {\n    super(rendererService, parent);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                BaseAssetSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '3d'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        face\n                                \n                                \n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face3;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, objLoader: ObjLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objLoader\n                                                  \n                                                        \n                                                                        ObjLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:42\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:34\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:34\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {ObjLoaderService} from './services/obj-loader.service';\nimport {IconService} from './services';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected objLoader: ObjLoaderService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    if (this.material) {\n      const preloadingStep = new Promise((resolve, reject) => {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.objLoader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      });\n      // Await preloading and load final model\n      await preloadingStep;\n    }\n\n    const obj = await this.objLoader.load(this.model);\n    return obj.clone();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMaterials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    materialCreator\n                                    \n                                            MTLLoader.MaterialCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh implements OnChanges {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['width', 'height', 'widthSegments', 'heightSegments'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.PlaneBufferGeometry) {\n          const currentGeometry: THREE.PlaneBufferGeometry = mesh.geometry;\n          const newGeometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                            Optional\n                                        face\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face3\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face3;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face3;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face3;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:47\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            resetCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWebGlRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    preserveDrawingBuffer\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EffectComposerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\nimport {BloomService} from './bloom.service';\n\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                icon\n                            \n                            \n                                isCCW\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                noHoles\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, svgLoader: SvgLoaderService, iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgLoader\n                                                  \n                                                        \n                                                                        SvgLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCCW\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noHoles\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:41\n                                \n                            \n\n                \n                    \n                        seticon(icon: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            icon\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedColor, appliedMaterial, fixCenter, provideParent, scaleToFit} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {IconService, SvgLoaderService} from './services';\nimport * as THREE from 'three';\nimport {Shape} from 'three';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): number {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: number) {\n    this._overrideMaterialColor = value;\n    if (this.object) {\n      this.startLoading();\n    }\n  }\n\n  @Input()\n  set icon(icon: string) {\n    // console.log('SVGLoaderComponent.icon', icon);\n    const iconProvider = this.iconService.getSource(icon);\n    this.model = iconProvider.url;\n    this.isCCW = iconProvider.isCCW;\n    this.noHoles = iconProvider.noHoles;\n    if (!iconProvider.allowColorOverride) {\n      this.overrideMaterialColor = undefined;\n    }\n  }\n\n  get icon(): string {\n    return this.model;\n  }\n  private _overrideMaterialColor: number = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = false;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  @Input()\n  isCCW = false;\n\n  @Input()\n  noHoles = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected svgLoader: SvgLoaderService,\n    protected iconService: IconService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('SVGLoaderComponent.loadLazyObject', this.model);\n\n    const paths = await this.svgLoader.load(this.model);\n    const group = new THREE.Group();\n\n    for (const path of paths) {\n      const color = (this._overrideMaterialColor ? appliedColor(this._overrideMaterialColor) : path.color);\n      const material = appliedMaterial(color, this.material, this.depthWrite);\n      const shapes: Shape[] = path.toShapes(this.isCCW, this.noHoles);\n\n      for (const shape of shapes) {\n        const geometry = new THREE.ShapeBufferGeometry(shape);\n        const mesh = new THREE.Mesh(geometry, material);\n        group.add(mesh);\n      }\n    }\n\n\n    if (this.maxX || this.maxY) {\n      scaleToFit(group, new THREE.Vector3(this.maxX, this.maxY, 0));\n    }\n    if (this.centered) {\n      fixCenter(group);\n    }\n\n    return group;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {appliedColor} from '../util/applied-color';\nimport {AbstractObject3D} from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background = 0xffffff;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    return scene;\n  }\n\n  public updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(appliedColor(this.background));\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/svg-loader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextActorComponent.html":{"url":"components/TextActorComponent.html","title":"component - TextActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-actor\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                currentDelay\n                            \n                            \n                                    Private\n                                currentPos\n                            \n                            \n                                    Private\n                                currentText\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                maxPos\n                            \n                            \n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                done\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                randomInt\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                updateText\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                            \n                                maxDelay\n                            \n                            \n                                minDelay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDelay\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDelay\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            done\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    done()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            randomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomInt(min, max)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateText()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-text-actor',\n  providers: [provideParent(TextActorComponent)],\n  template: `\n    \n    \n  `\n})\nexport class TextActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  text: string;\n\n  @Input()\n  animate = false;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  @Input()\n  minDelay = 5;\n\n  @Input()\n  maxDelay = 10;\n\n  subscribed = false;\n\n  private currentDelay: number;\n  private currentText: string;\n  private currentPos = 0;\n  private maxPos = 0;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('TextActorComponent.ngAfterViewInit');\n    this.updateText();\n  }\n\n  protected updateText() {\n    // console.log('TextActorComponent.updateText');\n    if (this.text && this.text.length > 0) {\n      // console.log('TextActorComponent.updateText', this.text);\n      if (this.animate) {\n        // console.log('TextActorComponent.animate init');\n        if (!this.subscribed) {\n          this.updateAnimation = this.updateAnimation.bind(this);\n          this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n          this.subscribed = true;\n          this.animationService.start();\n        }\n\n        this.currentPos = 0;\n        this.maxPos = this.text.length;\n        this.currentText = '';\n        this.currentDelay = this.randomInt(this.minDelay, this.maxDelay);\n      } else {\n        this.currentText = this.text;\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('TextActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.done();\n  }\n\n  public updateAnimation() {\n    if (this.subscribed) {\n      // console.log('TextActorComponent.updateAnimation');\n      this.i++;\n      if (this.i % this.currentDelay === 0) {\n        // console.log('TextActorComponent.updateAnimation: step');\n        this.currentPos++;\n        if (this.currentPos  propName in changes)) {\n      this.updateText();\n      modified = true;\n    }\n\n    if (['animate'].some(propName => propName in changes)) {\n      if (this.animate) {\n        this.updateText();\n      } else {\n        this.done();\n        this.currentText = this.text;\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, font: FontService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        font\n                                                  \n                                                        \n                                                                        FontService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTextMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xDADADA\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fontCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Font\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:30\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {FontService} from '../loader/services/font.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor = 0xDADADA;\n  @Input()\n  set materialColor(materialColor: number) {\n    this._materialColor = materialColor;\n    if (this.object) {\n      // console.log('TextMeshComponent.set materialColor', materialColor + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    if (this.object) {\n      // console.log('TextMeshComponent.set text', text + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected font: FontService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject', this.name);\n\n    const font = await this.font.load(this.fontUrl);\n    // console.log('TextMeshComponent.loadLazyObject font', font);\n    return this.getTextMesh(font);\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh', this.text + ' / ' + this.name);\n    if (this.text) {\n      const geometry = new THREE.TextGeometry(this.text, {\n        font: font,\n        size: this.size,\n        height: this.height,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelOffset\n      });\n\n      const material = this.getMaterial();\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.castShadow = this.castShadow;\n      mesh.receiveShadow = this.receiveShadow;\n\n      if (this.centered) {\n        fixCenter(mesh);\n      }\n      return mesh;\n    } else {\n      return new THREE.Mesh();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:27\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:21\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            heightSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            widthSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  protected animate() {\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animation?.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n\n      \n      \n      \n      \n\n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n\n          \n          \n          \n          \n\n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc = 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            function\n            onlyUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            class\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            variable\n            SVGLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.7\n        \n            @angular/common : ^11.2.7\n        \n            @angular/compiler : ^11.2.7\n        \n            @angular/core : ^11.2.7\n        \n            @angular/forms : ^11.2.7\n        \n            @angular/platform-browser : ^11.2.7\n        \n            @angular/platform-browser-dynamic : ^11.2.7\n        \n            @angular/router : ^11.2.7\n        \n            core-js : ^3.10.1\n        \n            dagre : ^0.8.5\n        \n            rxjs : ^6.6.7\n        \n            snyk : ^1.518.0\n        \n            three : ^0.127.0\n        \n            uuid : ^8.3.2\n        \n            yaml : ^1.10.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            onlyUnique   (projects/.../dagre-yaml-parser.component.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            onlyUnique\n                        \n                        \n                    \n                \n            \n            \n                \nonlyUnique(value, index, self)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            removeFromArray\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array, element)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    47 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            SVGLoader   (projects/.../SVGLoader.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTIRE_SCENE_LAYER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fragmentShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertexShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REPLACE_SYMBOL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '?'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ':'\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/threejs-fork/SVGLoader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SVGLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (manager?) {\n\n  Loader.call(this, manager);\n\n  // Default dots per inch\n  this.defaultDPI = 90;\n\n  // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n  this.defaultUnit = 'px';\n\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
