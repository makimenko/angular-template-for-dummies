var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.34,1,2.693]],["body/injectables/AbstractAssetService.html",[0,1.909,1,3.835,2,2.222,3,0.111,4,0.188,5,0.089,6,5.961,7,3.401,8,0.36,9,1.234,10,1.741,11,4.837,12,1.263,13,0.876,14,0.753,15,2.18,16,4.934,17,4.934,18,4.934,19,4.934,20,4.22,21,4.934,22,4.934,23,1.041,24,0.947,25,6.157,26,4.282,27,2.146,28,4.58,29,0.948,30,0.01,31,0.678,32,0.642,33,0.781,34,1.156,35,0.939,36,6.074,37,4.282,38,5.772,39,4.58,40,4.282,41,4.572,42,4.58,43,4.572,44,4.58,45,4.572,46,4.58,47,4.572,48,4.58,49,4.128,50,1.172,51,4.572,52,4.58,53,1.082,54,0.764,55,0.724,56,0.947,57,4.58,58,0.111,59,0.192,60,1.722,61,3.401,62,3.401,63,0.149,64,1.627,65,2.853,66,4.041,67,0.122,68,3.401,69,4.032,70,4.032,71,4.032,72,1.582,73,4.032,74,4.032,75,1.26,76,4.032,77,4.032,78,4.032,79,5.42,80,5.42,81,4.032,82,4.032,83,3.186,84,4.032,85,3.401,86,4.032,87,0.005,88,0.007,89,0.005]],["title/classes/AbstractCacheService.html",[67,0.115,90,2.838]],["body/classes/AbstractCacheService.html",[3,0.143,4,0.143,5,0.115,6,5.697,8,0.466,9,1.456,10,1.641,12,1.352,14,0.888,15,1.931,24,0.876,27,2.049,29,0.862,30,0.01,31,0.616,32,0.571,33,0.71,35,0.836,49,4.989,53,1.057,54,0.989,55,0.937,56,1.118,60,1.744,63,0.143,67,0.158,75,1.18,87,0.007,88,0.008,89,0.007,90,4.769,91,4.4,92,5.216,93,5.835,94,5.395,95,4.459,96,4.769,97,5.926,98,5.395,99,5.926,100,5.377,101,5.395,102,5.926,103,7.858,104,5.926,105,5.926,106,5.926,107,5.216,108,7.858,109,5.926,110,5.926]],["title/injectables/ActorRepositoryService.html",[0,1.34,111,2.838]],["body/injectables/ActorRepositoryService.html",[0,2.133,2,2.634,3,0.131,4,0.131,5,0.105,8,0.427,9,1.379,12,1.344,14,0.841,15,2.057,23,1.03,24,0.913,27,2.061,29,0.896,30,0.01,31,0.641,32,0.677,33,0.738,35,0.791,50,1.309,53,1.001,54,0.906,55,0.859,56,1.058,58,0.167,59,0.227,60,1.527,63,0.131,67,0.145,75,0.882,87,0.008,88,0.008,89,0.006,111,4.517,112,2.974,113,7.369,114,4.781,115,7.553,116,7.553,117,6.881,118,5.515,119,5.431,120,6.991,121,6.881,122,6.057,123,6.881,124,5.431,125,6.365,126,7.553,127,6.881,128,0.117,129,5.431,130,5.431,131,1.148,132,1.148,133,1.148,134,1.148,135,1.148,136,1.148,137,0.981,138,5.431,139,5.431,140,5.431,141,5.431,142,5.431,143,5.431,144,5.431,145,7.553,146,5.431,147,5.431,148,5.431,149,5.431]],["title/components/AmbientLightComponent.html",[128,0.064,150,0.741]],["body/components/AmbientLightComponent.html",[3,0.097,4,0.097,5,0.078,8,0.315,10,0.803,12,1.17,13,0.708,14,0.687,23,0.84,24,0.783,27,1.345,29,0.475,30,0.01,31,0.596,32,0.442,33,0.634,34,0.551,35,0.461,53,0.583,54,0.937,55,0.888,56,0.616,58,0.179,59,0.168,60,0.889,63,0.097,67,0.107,75,0.651,87,0.004,88,0.006,89,0.004,128,0.095,131,0.668,132,0.668,133,0.668,134,0.668,135,0.668,136,0.668,137,1.27,150,1.204,151,0.912,152,0.762,153,0.762,154,6.514,155,2.787,156,0.84,157,1.983,158,0.633,159,4.501,160,1.529,161,1.41,162,1.202,163,4.888,164,1.041,165,2.804,166,1.279,167,2.841,168,4.815,169,0.889,170,1.46,171,1.962,172,4.17,173,1.452,174,3.686,175,2.975,176,5.616,177,4.006,178,1.403,179,1.452,180,1.247,181,1.09,182,0.889,183,0.936,184,0.864,185,1.178,186,0.984,187,4.006,188,4.006,189,2.975,190,0.447,191,1.041,192,1.041,193,0.535,194,1.337,195,0.762,196,1.337,197,0.687,198,0.743,199,1.069,200,0.687,201,0.762,202,0.687,203,0.705,204,1.555,205,0.687,206,0.743,207,0.762,208,0.687,209,0.743,210,0.687,211,1.138,212,0.762,213,0.705,214,0.762,215,0.687,216,0.762,217,0.687,218,0.762,219,0.687,220,0.705,221,0.762,222,0.687,223,0.743,224,0.687,225,0.762,226,0.687,227,0.743,228,0.762,229,0.668,230,0.743,231,0.762,232,0.687,233,0.762,234,0.687,235,0.762,236,0.687,237,0.705,238,0.687,239,1.171,240,1.555,241,0.687,242,0.687,243,0.687,244,0.743,245,0.687,246,0.762,247,0.687,248,0.705,249,0.762,250,0.687,251,0.651,252,0.687,253,1.069,254,0.633,255,0.687,256,1.337,257,0.687,258,0.687,259,0.687,260,0.743,261,0.687,262,0.743,263,1.069,264,0.687,265,0.743,266,0.687,267,0.705,268,0.687,269,0.724,270,0.687,271,0.687,272,0.762,273,0.651,274,0.762,275,0.724,276,0.724,277,0.724,278,0.687,279,0.743,280,0.687,281,0.743,282,0.687,283,0.705,284,0.687,285,1.015,286,0.687,287,0.687,288,0.743,289,0.687,290,0.743,291,0.762,292,0.743,293,0.633,294,0.668,295,0.705,296,0.762,297,0.668,298,0.998,299,0.762,300,0.668,301,0.762,302,0.651,303,0.762,304,0.668,305,0.705,306,0.705,307,0.743,308,0.762]],["title/injectables/AnimationService.html",[0,1.34,309,2.176]],["body/injectables/AnimationService.html",[0,1.988,2,2.362,3,0.118,4,0.118,5,0.094,8,0.383,9,1.285,14,0.784,15,2.091,23,0.96,24,0.906,29,0.577,30,0.01,31,0.413,32,0.383,33,0.476,35,0.825,50,1.364,54,1.07,55,1.014,56,0.986,58,0.155,59,0.204,63,0.118,67,0.13,72,1.682,87,0.005,88,0.007,89,0.005,151,1.286,169,1.081,170,1.547,181,1.325,237,1.341,271,0.834,309,4.356,310,4.286,311,3.196,312,3.806,313,6.107,314,6.412,315,5.139,316,4.145,317,4.761,318,5.645,319,6.412,320,4.761,321,5.645,322,6.412,323,6.412,324,4.308,325,6.708,326,7.62,327,7.17,328,4.706,329,2.492,330,6.107,331,7.62,332,6.516,333,6.516,334,6.412,335,4.869,336,4.869,337,4.761,338,4.869,339,6.412,340,4.069,341,4.869,342,5.139,343,6.412,344,6.412,345,3.994,346,6.412,347,6.412,348,6.412,349,6.412,350,5.324,351,2.283,352,6.412,353,4.869,354,4.869,355,6.516,356,1.47,357,4.869,358,4.869,359,6.412,360,4.869,361,4.869,362,4.869,363,4.869,364,3.902,365,3.902,366,4.869,367,2.545]],["title/modules/AtftAnimationModule.html",[368,1.01,369,3.007]],["body/modules/AtftAnimationModule.html",[3,0.16,4,0.16,5,0.128,13,1.037,30,0.01,58,0.188,59,0.276,63,0.16,67,0.176,87,0.007,88,0.009,89,0.007,190,0.736,309,4.414,368,1.542,369,6.101,370,2.484,371,2.484,372,2.635,373,2.635,374,2.635,375,5.814,376,5.814,377,2.916,378,2.484,379,2.557,380,6.604,381,6.604,382,3.189,383,6.604]],["title/modules/AtftCameraModule.html",[368,1.01,384,3.007]],["body/modules/AtftCameraModule.html",[3,0.15,4,0.15,5,0.12,13,0.78,30,0.01,58,0.201,59,0.259,63,0.15,67,0.165,87,0.007,88,0.008,89,0.007,190,0.69,261,1.542,262,1.149,264,1.542,265,1.149,368,1.447,370,2.33,371,2.33,372,3.196,373,2.471,374,3.196,377,2.807,378,2.33,379,2.399,382,3.07,384,6.21,385,5.453,386,5.453,387,5.453,388,6.195,389,6.195,390,3.27,391,2.628,392,7.464,393,2.548]],["title/modules/AtftConnectorModule.html",[368,1.01,394,3.007]],["body/modules/AtftConnectorModule.html",[3,0.155,4,0.155,5,0.124,13,0.805,30,0.01,58,0.196,59,0.267,63,0.155,67,0.17,87,0.007,88,0.008,89,0.007,190,0.712,247,1.548,248,1.124,368,1.492,370,2.402,371,2.402,372,3.238,373,2.548,374,3.238,377,2.859,378,2.402,379,2.474,382,3.127,390,3.331,391,2.71,393,2.627,394,6.119,395,5.623,396,5.623,397,5.623,398,6.388,399,6.388,400,6.388]],["title/modules/AtftControlModule.html",[368,1.01,401,3.007]],["body/modules/AtftControlModule.html",[3,0.15,4,0.15,5,0.12,13,0.78,30,0.01,53,0.902,58,0.201,59,0.259,63,0.15,67,0.165,87,0.007,88,0.008,89,0.007,190,0.69,252,1.542,259,1.542,260,1.149,368,1.447,370,2.33,371,2.33,372,3.196,373,2.471,374,3.196,377,2.807,378,2.33,379,2.399,382,3.07,390,3.27,391,2.628,393,2.548,401,6.21,402,5.453,403,5.453,404,5.453,405,6.195,406,6.195,407,7.464]],["title/modules/AtftDataCenterActorModule.html",[368,1.01,408,3.211]],["body/modules/AtftDataCenterActorModule.html",[3,0.107,4,0.107,5,0.086,13,0.861,30,0.01,34,0.609,58,0.209,59,0.185,63,0.107,67,0.118,87,0.005,88,0.007,89,0.005,111,5.192,112,1.572,131,1.45,132,1.45,133,1.45,134,1.45,135,1.45,136,1.45,137,0.8,190,0.493,210,1.489,213,1.529,215,1.471,217,1.489,219,1.471,238,1.471,245,1.471,275,0.8,276,0.8,277,0.8,313,3.548,368,1.034,370,1.665,371,1.665,372,2.727,373,1.766,374,2.727,377,2.263,378,1.665,379,1.714,382,2.474,390,2.636,391,1.878,393,2.474,408,6.809,409,3.897,410,3.897,411,3.897,412,3.897,413,3.897,414,4.927,415,4.427,416,3.287,417,3.079,418,3.897,419,6.016,420,4.427,421,7.124,422,3.897,423,7.333,424,4.427,425,4.427,426,2.408]],["title/modules/AtftEffectModule.html",[368,1.01,427,3.007]],["body/modules/AtftEffectModule.html",[3,0.134,4,0.134,5,0.108,13,0.699,30,0.01,58,0.209,59,0.232,63,0.134,67,0.148,87,0.006,88,0.008,89,0.006,190,0.618,200,1.521,224,1.521,226,1.521,229,1.481,234,1.521,294,1.481,295,0.976,368,1.296,370,2.086,371,2.086,372,3.043,373,2.213,374,3.043,377,2.623,378,2.086,379,2.148,382,2.869,390,3.056,391,2.354,393,2.282,427,6.331,428,4.884,429,4.884,430,4.884,431,5.548,432,5.548,433,5.548,434,5.548,435,5.548,436,5.548,437,5.548,438,5.548,439,4.12,440,5.548]],["title/modules/AtftHelperModule.html",[368,1.01,441,3.007]],["body/modules/AtftHelperModule.html",[3,0.146,4,0.146,5,0.117,13,0.759,30,0.01,58,0.204,59,0.252,63,0.146,67,0.16,87,0.007,88,0.008,89,0.007,190,0.671,197,1.537,198,1.117,232,1.537,239,1.088,241,1.537,368,1.406,370,2.264,371,2.264,372,3.157,373,2.402,374,3.157,377,2.759,378,2.264,379,2.332,382,3.018,390,3.214,391,2.555,393,2.477,441,6.261,442,5.301,443,5.301,444,5.301,445,6.022,446,6.022,447,7.337,448,6.022]],["title/modules/AtftLightModule.html",[368,1.01,449,3.007]],["body/modules/AtftLightModule.html",[3,0.14,4,0.14,5,0.112,13,0.729,30,0.01,58,0.206,59,0.242,63,0.14,67,0.154,87,0.006,88,0.008,89,0.006,150,1.54,159,6.23,162,1.072,190,0.645,222,1.529,223,1.072,243,1.529,244,1.072,268,1.529,269,1.045,368,1.351,370,2.175,371,2.175,372,3.101,373,2.307,374,3.101,377,2.692,378,2.175,379,2.239,382,2.944,390,3.136,391,2.454,393,2.379,449,6.285,450,5.091,451,5.091,452,5.091,453,5.091,454,5.783,455,5.783,456,8.123]],["title/modules/AtftLoaderModule.html",[368,1.01,457,3.007]],["body/modules/AtftLoaderModule.html",[3,0.141,4,0.141,5,0.113,13,0.736,30,0.01,58,0.206,59,0.244,63,0.141,67,0.156,87,0.006,88,0.008,89,0.006,184,0.899,190,0.651,255,1.531,257,1.531,258,1.001,280,1.531,281,1.083,282,1.531,283,1.028,368,1.364,370,2.197,371,2.197,372,3.115,373,2.33,374,3.115,377,2.708,378,2.197,379,2.262,382,2.962,390,3.155,391,2.478,393,2.402,457,6.291,458,5.142,459,5.142,460,5.142,461,5.841,462,5.841,463,8.151]],["title/modules/AtftMeshModule.html",[368,1.01,464,3.007]],["body/modules/AtftMeshModule.html",[3,0.127,4,0.127,5,0.102,13,0.661,30,0.01,58,0.211,59,0.219,63,0.127,67,0.14,87,0.006,88,0.007,89,0.006,190,0.584,202,1.509,203,0.922,208,1.509,209,0.972,236,1.509,237,0.922,239,0.947,242,1.509,266,1.509,267,0.922,278,1.509,279,0.972,287,1.509,288,0.972,289,1.509,290,0.972,368,1.224,370,1.972,371,1.972,372,2.964,373,2.092,374,2.964,377,2.53,378,1.972,379,2.03,382,2.767,390,2.948,391,2.225,393,2.156,464,6.35,465,4.615,466,4.615,467,4.615,468,5.243,469,5.243,470,7.521]],["title/modules/AtftModule.html",[368,1.01,414,2.693]],["body/modules/AtftModule.html",[3,0.125,4,0.125,5,0.1,13,0.651,30,0.01,55,0.817,58,0.212,59,0.216,63,0.125,67,0.138,87,0.006,88,0.007,89,0.006,190,0.576,320,3.839,368,1.557,369,6.114,370,1.944,371,1.944,372,2.063,373,2.063,374,2.945,377,2.508,378,1.944,379,2.002,382,2.742,384,6.114,393,3.036,401,6.114,414,5.687,427,6.114,471,4.551,472,4.551,473,4.551,474,6.114,475,6.114,476,6.114,477,6.114,478,5.17,479,5.17,480,5.17,481,5.17,482,5.17,483,5.17,484,5.17,485,5.134,486,5.17,487,5.17,488,5.17,489,5.17,490,5.17,491,5.17,492,5.17,493,5.17,494,5.17,495,5.17,496,5.17,497,4.551,498,4.551,499,4.551,500,2.601,501,5.17,502,5.17,503,5.17]],["title/modules/AtftObjectModule.html",[368,1.01,474,3.007]],["body/modules/AtftObjectModule.html",[3,0.12,4,0.12,5,0.096,13,0.911,30,0.01,58,0.21,59,0.207,63,0.12,67,0.132,87,0.005,88,0.007,89,0.005,190,0.553,205,1.4,206,0.919,251,0.805,273,1.419,368,1.158,370,1.864,371,1.864,372,2.886,373,1.978,374,2.886,377,2.44,378,1.864,379,1.92,382,2.668,390,2.842,391,2.103,393,2.668,394,6.077,441,6.077,449,6.077,457,6.077,464,6.077,474,6.376,504,4.364,505,4.364,506,4.364,507,4.364,508,4.364,509,6.077,510,5.363,511,4.637,512,5.363,513,5.363,514,5.363,515,4.957,516,4.957,517,4.957,518,4.957,519,4.957,520,4.957,521,4.957,522,4.957,523,4.957,524,4.957,525,4.957,526,4.957,527,4.957,528,4.957,529,4.957,530,4.957]],["title/modules/AtftPipeModule.html",[368,1.01,485,3.007]],["body/modules/AtftPipeModule.html",[3,0.15,4,0.15,5,0.121,13,0.783,30,0.01,58,0.201,59,0.26,63,0.15,67,0.166,87,0.007,88,0.008,89,0.007,190,0.693,368,1.451,370,2.337,371,2.337,372,3.2,373,2.479,374,3.2,377,2.812,378,2.337,379,2.406,382,3.075,390,3.276,391,2.636,393,2.555,485,6.212,531,5.47,532,5.47,533,5.47,534,6.263,535,6.263,536,6.213,537,6.213,538,6.213,539,6.213]],["title/modules/AtftRaycasterModule.html",[368,1.01,475,3.007]],["body/modules/AtftRaycasterModule.html",[3,0.142,4,0.142,5,0.114,13,0.986,30,0.01,58,0.207,59,0.246,63,0.142,67,0.157,87,0.006,88,0.008,89,0.006,190,0.655,297,1.492,298,1.204,300,1.492,302,1.453,368,1.372,370,2.209,371,2.209,372,3.123,373,2.344,374,3.123,377,2.718,378,2.209,379,2.275,382,2.972,390,3.166,391,2.493,393,2.416,475,6.279,540,5.171,541,5.171,542,5.171,543,5.171,544,4.141,545,5.875,546,5.875,547,5.875,548,4.086,549,5.875,550,5.875]],["title/modules/AtftRendererModule.html",[368,1.01,476,3.007]],["body/modules/AtftRendererModule.html",[3,0.148,4,0.148,5,0.119,13,1.005,30,0.01,58,0.205,59,0.257,63,0.148,67,0.163,87,0.007,88,0.008,89,0.007,170,1.641,190,0.683,270,1.541,271,1.05,368,1.431,370,2.305,371,2.305,372,3.182,373,2.445,374,3.182,377,2.789,378,2.305,379,2.374,382,3.05,390,3.249,391,2.601,393,2.521,476,6.229,551,5.396,552,5.396,553,5.396,554,5.396,555,5.661,556,6.13,557,6.13,558,6.13,559,5.396,560,5.396]],["title/modules/AtftStatsModule.html",[368,1.01,477,3.007]],["body/modules/AtftStatsModule.html",[3,0.151,4,0.151,5,0.121,13,1.012,30,0.01,58,0.202,59,0.261,63,0.151,67,0.166,87,0.007,88,0.008,89,0.007,190,0.695,304,1.503,305,1.097,306,1.097,368,1.455,370,2.344,371,2.344,372,3.204,373,2.486,374,3.204,377,2.817,378,2.344,379,2.413,382,3.081,390,3.282,391,2.644,393,2.563,477,6.182,561,5.486,562,5.486,563,5.486,564,5.486,565,5.392,566,6.232,567,5.486,568,6.232]],["title/modules/AtftTextModule.html",[368,1.01,509,3.007]],["body/modules/AtftTextModule.html",[3,0.155,4,0.155,5,0.124,13,0.805,30,0.01,58,0.196,59,0.267,63,0.155,67,0.17,87,0.007,88,0.008,89,0.007,190,0.712,285,1.154,286,1.548,368,1.492,370,2.402,371,2.402,372,3.238,373,2.548,374,3.238,377,2.859,378,2.402,379,2.474,382,3.127,390,3.331,391,2.71,393,2.627,470,5.623,509,6.119,569,5.623,570,5.623,571,5.623,572,6.388,573,6.388]],["title/components/AxesHelperComponent.html",[128,0.064,197,0.741]],["body/components/AxesHelperComponent.html",[3,0.099,4,0.099,5,0.08,8,0.323,10,0.822,12,1.18,13,0.719,14,0.698,23,0.854,24,0.732,29,0.487,30,0.01,31,0.602,32,0.323,33,0.642,34,0.564,35,0.472,53,0.597,54,0.685,55,0.649,56,0.631,58,0.181,59,0.172,63,0.099,67,0.109,75,0.666,87,0.005,88,0.006,89,0.005,128,0.096,131,0.685,132,0.685,133,0.685,134,0.685,135,0.685,136,0.685,137,1.283,150,0.703,151,0.928,152,0.781,153,0.781,156,0.854,157,1.998,158,0.649,160,1.531,161,1.411,162,0.761,164,1.059,165,2.833,166,1.3,169,0.911,170,1.471,171,1.983,178,1.236,179,1.476,180,1.267,181,1.117,182,0.911,183,0.958,184,0.878,185,1.207,186,1.008,190,0.457,191,1.059,192,1.059,193,0.548,194,1.351,195,0.781,196,1.351,197,1.217,198,1.218,199,1.087,200,0.703,201,0.781,202,0.703,203,0.722,204,1.563,205,0.703,206,0.761,207,0.781,208,0.703,209,0.761,210,0.703,211,1.148,212,0.781,213,0.722,214,0.781,215,0.703,216,0.781,217,0.703,218,0.781,219,0.703,220,0.722,221,0.781,222,0.703,223,0.761,224,0.703,225,0.781,226,0.703,227,0.761,228,0.781,229,0.685,230,0.761,231,0.781,232,0.703,233,0.781,234,0.703,235,0.781,236,0.703,237,0.722,238,0.703,239,1.186,240,1.563,241,0.703,242,0.703,243,0.703,244,0.761,245,0.703,246,0.781,247,0.703,248,0.722,249,0.781,250,0.703,251,0.666,252,0.703,253,1.087,254,0.649,255,0.703,256,1.351,257,0.703,258,0.703,259,0.703,260,0.761,261,0.703,262,0.761,263,1.087,264,0.703,265,0.761,266,0.703,267,0.722,268,0.703,269,0.741,270,0.703,271,0.703,272,0.781,273,0.666,274,0.781,275,0.741,276,0.741,277,0.741,278,0.703,279,0.761,280,0.703,281,0.761,282,0.703,283,0.722,284,0.703,285,1.031,286,0.703,287,0.703,288,0.761,289,0.703,290,0.761,291,0.781,292,0.761,293,0.649,294,0.685,295,0.722,296,0.781,297,0.685,298,1.01,299,0.781,300,0.685,301,0.781,302,0.666,303,0.781,304,0.685,305,0.722,306,0.722,307,0.761,308,0.781,574,6.251,575,3.288,576,5.71,577,5.027,578,4.311,579,5.027,580,4.576,581,4.103,582,5.027,583,4.103,584,4.103]],["title/interfaces/BaseAssetSource.html",[64,1.536,65,2.693]],["body/interfaces/BaseAssetSource.html",[0,2.177,1,3.494,3,0.136,4,0.186,5,0.109,6,3.901,7,4.165,8,0.441,9,1.407,10,1.658,11,3.901,12,1.11,13,0.707,15,2.074,20,3.183,23,0.839,26,3.901,27,2.107,30,0.01,32,0.441,34,1.138,36,5.871,37,3.901,38,5.871,40,3.901,41,4.165,43,4.165,45,4.165,47,4.165,49,3.329,51,4.165,53,1.022,56,0.863,58,0.136,59,0.235,60,1.836,61,4.165,62,4.165,63,0.17,64,1.992,65,4.374,66,5.431,67,0.149,68,4.165,69,4.938,70,4.938,71,4.938,72,1.938,73,4.938,74,4.938,75,1.344,76,4.938,77,4.938,78,4.938,79,6.182,80,6.182,81,4.938,82,4.938,83,3.901,84,4.938,85,4.165,86,4.938,87,0.006,88,0.008,89,0.006,585,3.051]],["title/interfaces/BaseInfo.html",[64,1.536,586,2.566]],["body/interfaces/BaseInfo.html",[3,0.147,4,0.147,5,0.118,8,0.479,9,1.481,27,2.175,30,0.01,31,0.702,32,0.666,33,0.809,34,0.838,58,0.147,63,0.205,64,3.009,87,0.007,88,0.008,89,0.007,112,2.164,156,1.19,167,2.669,173,1.575,211,1.137,254,0.963,426,3.315,585,3.315,586,5.028,587,2.956,588,4,589,4.609,590,4.499,591,3.066,592,4,593,3.458,594,3.315,595,4,596,4.238,597,4.158,598,3.795,599,3.185]],["title/injectables/BloomService.html",[0,1.34,555,2.838]],["body/injectables/BloomService.html",[0,1.713,2,1.899,3,0.095,4,0.095,5,0.076,8,0.308,9,1.107,12,1.377,14,0.676,15,1.996,20,3.135,23,0.958,24,0.937,29,0.825,30,0.01,31,0.543,32,0.577,33,0.626,35,0.8,50,1.521,54,1.161,55,1.204,56,1.293,58,0.197,59,0.164,60,1.803,63,0.134,67,0.104,72,1.352,87,0.004,88,0.006,89,0.004,180,1.421,258,0.947,271,0.947,324,3.784,329,2.49,345,2.438,351,2.336,356,1.933,364,4.428,555,3.627,597,2.888,600,3.137,601,6.404,602,6.404,603,6.404,604,6.404,605,6.404,606,6.404,607,4.977,608,5.525,609,5.525,610,5.525,611,5.525,612,3.915,613,5.525,614,5.575,615,5.88,616,4.163,617,6.404,618,3.915,619,3.915,620,5.525,621,3.915,622,6.458,623,3.915,624,5.525,625,3.915,626,4.864,627,4.864,628,3.915,629,3.915,630,3.915,631,3.915,632,3.446,633,3.446,634,3.915,635,3.915,636,3.446,637,4.428,638,3.137,639,5.525,640,3.915,641,3.915,642,3.915,643,3.137,644,3.915,645,2.34,646,5.132,647,4.864,648,4.864,649,6.458,650,3.137,651,3.446,652,3.446,653,3.446,654,4.864,655,3.135,656,5.132,657,4.864,658,4.864,659,6.124,660,5.637,661,3.446,662,4.864,663,3.915,664,3.137,665,3.915,666,3.915,667,3.915,668,3.915,669,3.915,670,3.915,671,4.454,672,1.661,673,3.843,674,3.915,675,3.915,676,3.915,677,6.404,678,3.915,679,3.915,680,2.723,681,3.915,682,3.915,683,5.525,684,3.915,685,2.046,686,3.915,687,3.915,688,3.915,689,3.915,690,3.915,691,3.915,692,2.438,693,3.915,694,3.915,695,3.915,696,3.915,697,3.915,698,3.915,699,3.915,700,3.915,701,3.915,702,6.956,703,3.915,704,3.915,705,5.525,706,3.915,707,3.915,708,3.915,709,3.915,710,5.525,711,3.915,712,3.915,713,6.956,714,6.404,715,3.915,716,3.915]],["title/components/BlurComponent.html",[128,0.064,200,0.741]],["body/components/BlurComponent.html",[3,0.1,4,0.1,5,0.08,8,0.323,10,0.824,12,0.904,14,0.699,23,0.856,24,0.733,29,0.678,30,0.01,31,0.634,32,0.45,33,0.695,34,0.565,35,0.658,50,0.782,53,0.598,58,0.192,59,0.172,63,0.1,67,0.11,75,0.668,87,0.005,88,0.006,89,0.005,128,0.097,131,0.686,132,0.686,133,0.686,134,0.686,135,0.686,136,0.686,137,1.284,150,0.704,151,0.929,152,0.782,153,0.782,156,0.856,158,0.65,160,1.531,161,1.411,162,0.762,164,0.762,169,0.912,170,1.472,179,1.478,181,1.119,184,0.632,186,1.01,190,0.458,191,1.06,192,1.06,193,0.549,194,1.353,195,0.782,196,1.353,197,0.704,198,0.762,199,1.088,200,1.218,201,0.782,202,0.704,203,0.723,204,1.564,205,0.704,206,0.762,207,0.782,208,0.704,209,0.762,210,0.704,211,1.149,212,0.782,213,0.723,214,0.782,215,0.704,216,0.782,217,0.704,218,0.782,219,0.704,220,0.723,221,0.782,222,0.704,223,0.762,224,0.704,225,0.782,226,0.704,227,0.762,228,0.782,229,1.246,230,1.219,231,0.782,232,0.704,233,0.782,234,0.704,235,0.782,236,0.704,237,0.723,238,0.704,239,1.188,240,1.564,241,0.704,242,0.704,243,0.704,244,0.762,245,0.704,246,0.782,247,0.704,248,0.723,249,0.782,250,0.704,251,0.668,252,0.704,253,1.088,254,0.65,255,0.704,256,1.353,257,0.704,258,0.704,259,0.704,260,0.762,261,0.704,262,0.762,263,1.088,264,0.704,265,0.762,266,0.704,267,0.723,268,0.704,269,0.743,270,0.704,271,0.704,272,0.782,273,0.668,274,0.782,275,0.743,276,0.743,277,0.743,278,0.704,279,0.762,280,0.704,281,0.762,282,0.704,283,0.723,284,0.704,285,1.033,286,0.704,287,0.704,288,0.762,289,0.704,290,0.762,291,0.782,292,0.762,293,0.65,294,0.686,295,0.723,296,0.782,297,0.686,298,1.011,299,0.782,300,0.686,301,0.782,302,0.668,303,0.782,304,0.686,305,0.723,306,0.723,307,0.762,308,0.782,351,1.309,439,3.053,637,3.295,638,3.295,685,2.149,717,3.619,718,5.269,719,5.718,720,4.583,721,5.696,722,4.943,723,4.111,724,4.583,725,3.218,726,4.111,727,2.505,728,2.44,729,4.111,730,4.111,731,4.111,732,4.111,733,4.111,734,3.295,735,5.696,736,5.718,737,5.718,738,3.295]],["title/components/BoxMeshComponent.html",[128,0.064,202,0.741]],["body/components/BoxMeshComponent.html",[3,0.081,4,0.081,5,0.065,8,0.264,10,0.991,12,1.092,13,0.623,14,0.605,23,0.74,24,0.854,29,0.398,30,0.01,31,0.55,32,0.264,33,0.82,34,0.462,35,0.386,53,0.488,54,1.205,55,1.142,56,0.761,58,0.175,59,0.14,60,1.303,63,0.081,67,0.089,75,0.545,87,0.004,88,0.005,89,0.004,128,0.086,131,0.56,132,0.56,133,0.56,134,0.56,135,0.56,136,0.56,137,1.17,150,0.575,151,0.803,152,0.639,153,0.639,156,0.74,157,1.675,158,0.531,160,1.517,161,1.398,162,0.622,164,0.917,165,2.584,166,1.126,169,0.745,170,1.375,171,1.809,173,1.868,178,1.616,179,1.278,180,1.097,181,0.913,182,0.745,183,0.784,184,0.761,185,1.454,186,0.825,190,0.374,191,0.917,192,0.917,193,0.448,194,1.233,195,0.639,196,1.233,197,0.575,198,0.622,199,0.941,200,0.575,201,0.639,202,1.11,203,1.033,204,1.489,205,0.575,206,0.622,207,0.639,208,0.575,209,0.622,210,0.575,211,1.062,212,0.639,213,0.591,214,0.639,215,0.575,216,0.639,217,0.575,218,0.639,219,0.575,220,0.591,221,0.639,222,0.575,223,0.622,224,0.575,225,0.639,226,0.575,227,0.622,228,0.639,229,0.56,230,0.622,231,0.639,232,0.575,233,0.639,234,0.575,235,0.639,236,0.575,237,0.591,238,0.575,239,1.061,240,1.489,241,0.575,242,0.575,243,0.575,244,0.622,245,0.575,246,0.639,247,0.575,248,0.591,249,0.639,250,0.575,251,0.545,252,0.575,253,0.941,254,0.531,255,0.575,256,1.233,257,0.575,258,0.575,259,0.575,260,0.622,261,0.575,262,0.622,263,0.941,264,0.575,265,0.622,266,0.575,267,0.591,268,0.575,269,0.606,270,0.575,271,0.575,272,0.639,273,0.545,274,0.639,275,0.606,276,0.606,277,0.606,278,0.575,279,0.622,280,0.575,281,0.622,282,0.575,283,0.591,284,0.575,285,0.893,286,0.575,287,0.575,288,0.622,289,0.575,290,0.622,291,0.639,292,0.622,293,0.531,294,0.56,295,0.591,296,0.639,297,0.56,298,0.903,299,0.639,300,0.56,301,0.639,302,0.545,303,0.639,304,0.56,305,0.591,306,0.591,307,0.622,308,0.639,599,3.776,645,3.119,655,4.099,739,6.889,740,1.826,741,3.485,742,4.945,743,3.61,744,6.576,745,5.871,746,3.499,747,4.36,748,4.239,749,4.36,750,4.945,751,2.69,752,5.364,753,5.364,754,4.353,755,5.79,756,6.544,757,6.359,758,6.359,759,6.359,760,5.79,761,6.359,762,2.69,763,3.08,764,3.356,765,2.492,766,3.08,767,2.954,768,3.356,769,3.356,770,1.47,771,3.356,772,2.203,773,3.356,774,2.492,775,2.492,776,3.356,777,2.316,778,1.905,779,1.826,780,2.09]],["title/interfaces/Composition.html",[64,1.536,589,2.352]],["body/interfaces/Composition.html",[3,0.151,4,0.151,5,0.121,8,0.489,9,1.5,27,2.157,30,0.01,31,0.528,32,0.631,33,0.732,34,0.856,58,0.151,63,0.206,64,3.027,87,0.007,88,0.008,89,0.007,112,2.21,156,1.246,167,2.726,173,1.609,211,1.151,254,0.984,426,3.385,585,3.385,586,5.058,587,3.019,588,4.085,589,4.367,590,3.385,591,3.131,592,5.467,593,3.531,594,3.385,595,4.085,596,4.328,597,4.196,598,3.876,599,3.253]],["title/components/ContentProjectionComponent.html",[128,0.064,205,0.741]],["body/components/ContentProjectionComponent.html",[3,0.097,4,0.097,5,0.077,8,0.314,9,1.122,10,0.8,12,1.109,13,0.706,14,0.685,23,0.838,24,0.782,29,0.664,30,0.01,31,0.65,32,0.509,33,0.686,34,0.549,35,0.644,50,0.759,53,0.581,58,0.185,59,0.167,63,0.097,67,0.106,83,2.776,87,0.004,88,0.006,89,0.004,128,0.095,131,0.666,132,0.666,133,0.666,134,0.666,135,0.666,136,0.666,137,1.267,150,0.684,151,0.91,152,0.759,153,0.759,156,0.838,157,2.11,158,0.631,160,1.529,161,1.41,162,0.74,164,1.039,165,2.582,169,0.886,170,1.458,171,1.959,179,1.448,180,1.243,181,1.086,182,0.886,183,0.932,184,1.137,185,1.174,186,0.981,190,0.445,191,1.039,192,1.039,193,0.748,194,1.335,195,0.759,196,1.335,197,0.684,198,0.74,199,1.066,200,0.684,201,0.759,202,0.684,203,0.702,204,1.553,205,1.202,206,1.301,207,0.759,208,0.684,209,0.74,210,0.684,211,1.137,212,0.759,213,0.702,214,0.759,215,0.684,216,0.759,217,0.684,218,0.759,219,0.684,220,0.702,221,0.759,222,0.684,223,0.74,224,0.684,225,0.759,226,0.684,227,0.74,228,0.759,229,0.666,230,0.74,231,0.759,232,1.266,233,0.759,234,0.684,235,0.759,236,0.684,237,0.702,238,0.684,239,1.169,240,1.553,241,0.684,242,0.684,243,0.684,244,0.74,245,0.684,246,0.759,247,0.684,248,0.702,249,0.759,250,0.684,251,0.648,252,0.684,253,1.066,254,0.631,255,0.684,256,1.335,257,0.684,258,0.684,259,0.684,260,0.74,261,0.684,262,0.74,263,1.066,264,0.684,265,0.74,266,0.684,267,0.702,268,0.684,269,0.721,270,0.684,271,0.684,272,0.759,273,0.648,274,0.759,275,0.721,276,0.721,277,0.721,278,0.684,279,0.74,280,0.684,281,0.74,282,0.684,283,0.702,284,0.684,285,1.012,286,0.684,287,0.684,288,0.74,289,0.684,290,0.74,291,0.759,292,0.74,293,0.631,294,0.666,295,0.702,296,0.759,297,0.666,298,0.995,299,0.759,300,0.666,301,0.759,302,0.648,303,0.759,304,0.666,305,0.702,306,0.702,307,0.74,308,0.759,498,3.513,781,6.176,782,3.513,783,5.601,784,5.601,785,7.016,786,5.601,787,5.601,788,5.601,789,3.991,790,2.369,791,3.198,792,2.369,793,2.776,794,5.601,795,2.776,796,3.991,797,3.991,798,3.991,799,3.991,800,3.991,801,3.513,802,3.513,803,3.991,804,2.963]],["title/components/CylinderMeshComponent.html",[128,0.064,208,0.741]],["body/components/CylinderMeshComponent.html",[3,0.089,4,0.089,5,0.071,8,0.289,10,1.058,12,1.132,13,0.665,14,0.646,23,0.79,24,0.905,29,0.436,30,0.01,31,0.573,32,0.289,33,0.604,34,0.505,35,0.422,53,0.534,54,1.311,55,1.242,56,0.812,58,0.18,59,0.154,60,1.372,63,0.089,67,0.098,75,0.596,87,0.004,88,0.006,89,0.004,128,0.091,131,0.613,132,0.613,133,0.613,134,0.613,135,0.613,136,0.613,137,1.221,150,0.629,151,0.858,152,0.699,153,0.699,156,0.79,157,1.747,158,0.581,160,1.523,161,1.404,162,0.681,164,0.979,165,2.696,166,1.202,169,0.815,170,1.419,171,1.887,178,1.732,179,1.365,180,1.172,181,0.999,182,0.815,183,0.858,184,0.812,185,1.553,186,0.902,190,0.409,191,0.979,192,0.979,193,0.491,194,1.286,195,0.699,196,1.286,197,0.629,198,0.681,199,1.005,200,0.629,201,0.699,202,0.629,203,0.646,204,1.523,205,0.629,206,0.681,207,0.699,208,1.158,209,1.146,210,0.629,211,1.101,212,0.699,213,0.646,214,0.699,215,0.629,216,0.699,217,0.629,218,0.699,219,0.629,220,0.646,221,0.699,222,0.629,223,0.681,224,0.629,225,0.699,226,0.629,227,0.681,228,0.699,229,0.613,230,0.681,231,0.699,232,0.629,233,0.699,234,0.629,235,0.699,236,0.629,237,0.646,238,0.629,239,1.117,240,1.523,241,0.629,242,0.629,243,0.629,244,0.681,245,0.629,246,0.699,247,0.629,248,0.646,249,0.699,250,0.629,251,0.596,252,0.629,253,1.005,254,0.581,255,0.629,256,1.286,257,0.629,258,0.629,259,0.629,260,0.681,261,0.629,262,0.681,263,1.005,264,0.629,265,0.681,266,0.629,267,0.646,268,0.629,269,0.663,270,0.629,271,0.629,272,0.699,273,0.596,274,0.699,275,0.663,276,0.663,277,0.663,278,0.629,279,0.681,280,0.629,281,0.681,282,0.629,283,0.646,284,0.629,285,0.954,286,0.629,287,0.629,288,0.681,289,0.629,290,0.681,291,0.699,292,0.681,293,0.581,294,0.613,295,0.646,296,0.699,297,0.613,298,0.951,299,0.699,300,0.613,301,0.699,302,0.596,303,0.699,304,0.613,305,0.646,306,0.646,307,0.681,308,0.699,351,1.681,645,1.929,655,4.23,672,2.24,740,1.998,741,3.669,743,3.742,746,2.895,747,4.59,770,1.609,772,2.41,775,2.727,777,2.473,778,2.084,779,1.998,780,2.287,804,2.727,805,7.24,806,5.279,807,6.181,808,5.441,809,6.181,810,6.181,811,6.181,812,6.181,813,3.92,814,3.233,815,3.233,816,3.233,817,3.92,818,2.727,819,2.943,820,2.727,821,3.288,822,4.647,823,3.672,824,3.672,825,2.872,826,3.672,827,3.672,828,3.672,829,3.672,830,3.233,831,3.672,832,3.672,833,3.672]],["title/components/DagreCompositionComponent.html",[128,0.064,210,0.741]],["body/components/DagreCompositionComponent.html",[3,0.065,4,0.065,5,0.052,8,0.212,9,0.839,12,1.327,13,0.527,14,0.512,15,2.027,23,0.626,24,0.952,27,1.59,29,0.609,30,0.01,31,0.624,32,0.633,33,0.613,34,0.37,35,0.865,50,1.431,53,0.392,54,0.699,55,0.662,56,0.79,58,0.168,59,0.113,60,0.598,63,0.065,67,0.072,75,0.438,83,1.874,87,0.003,88,0.005,89,0.003,112,3.044,118,2.159,128,0.075,131,0.449,132,0.449,133,0.449,134,0.449,135,0.449,136,0.449,137,1.046,150,0.462,151,0.68,152,0.513,153,0.513,156,0.626,157,1.497,158,0.426,160,1.499,161,1.383,162,0.499,164,0.776,166,0.953,167,2.249,169,0.598,170,1.263,171,1.617,173,2.038,178,1.436,179,1.082,182,0.598,183,0.629,184,0.644,186,0.662,190,0.3,191,0.776,192,0.776,193,0.36,194,1.102,195,0.513,196,1.102,197,0.462,198,0.499,199,0.797,200,0.462,201,0.513,202,0.462,203,0.474,204,1.4,205,0.462,206,0.499,207,0.513,208,0.462,209,0.499,210,0.992,211,1.178,212,0.513,213,0.474,214,0.513,215,0.992,216,0.513,217,0.462,218,0.513,219,0.462,220,0.474,221,0.513,222,0.462,223,0.499,224,0.462,225,0.513,226,0.462,227,0.499,228,0.513,229,0.449,230,0.499,231,0.513,232,0.462,233,0.513,234,0.462,235,0.513,236,0.462,237,0.474,238,0.462,239,0.928,240,1.4,241,0.462,242,0.462,243,0.462,244,0.499,245,0.462,246,0.513,247,0.462,248,0.474,249,0.513,250,0.462,251,0.438,252,0.462,253,0.797,254,0.662,255,0.462,256,1.102,257,0.462,258,0.462,259,0.462,260,0.499,261,0.462,262,0.499,263,0.797,264,0.462,265,0.499,266,0.462,267,0.903,268,0.462,269,0.487,270,0.462,271,0.717,272,0.513,273,0.438,274,0.513,275,0.487,276,0.487,277,0.487,278,0.462,279,0.499,280,0.462,281,0.499,282,0.462,283,0.474,284,0.462,285,0.756,286,0.462,287,0.462,288,0.499,289,0.462,290,0.499,291,0.513,292,0.499,293,0.426,294,0.449,295,0.474,296,0.513,297,0.449,298,0.79,299,0.513,300,0.449,301,0.513,302,0.438,303,0.513,304,0.449,305,0.474,306,0.474,307,0.499,308,0.513,324,2.793,329,1.894,340,3.932,345,1.678,426,3.412,587,4.157,589,3.611,590,3.15,591,2.914,592,3.37,672,1.143,746,3.245,748,2.914,772,1.768,834,2.371,835,3.37,836,1.231,837,4.115,838,2.179,839,4.186,840,5.135,841,4.52,842,4.52,843,5.135,844,5.097,845,2.457,846,4.641,847,4.3,848,4.641,849,5.097,850,5.097,851,5.097,852,3.685,853,2.748,854,4.115,855,3.813,856,2.485,857,6.099,858,5.135,859,5.791,860,4.186,861,2.694,862,2.694,863,4.186,864,2.694,865,2.694,866,2.694,867,2.694,868,2.694,869,2.694,870,2.694,871,2.694,872,2.694,873,2.694,874,2.694,875,2.694,876,2.694,877,3.685,878,3.813,879,2.694,880,1.874,881,2.694,882,4.641,883,2.694,884,2.694,885,3.048,886,2.694,887,2.694,888,2.694,889,2.694,890,3.437,891,2.371,892,1.529,893,1.678,894,2.694,895,5.135,896,2.694,897,1.874,898,2.694,899,2.694,900,5.097,901,2.371,902,2.694,903,2.371,904,2.371,905,2.371,906,2.371,907,4.115,908,2.371,909,2.371,910,2.371,911,3.685,912,2.694,913,3.906,914,2.371,915,2.371,916,2.159,917,4.641,918,2.371,919,2.694,920,2.371,921,4.3,922,3.685,923,1.768,924,2.371,925,2.694,926,2,927,1.874,928,2.371,929,3.109,930,2.371,931,2.371,932,2.371,933,2.371,934,2.694,935,2.371,936,2.371,937,2.371,938,2.371,939,2.694,940,2.159,941,2.371,942,2.159,943,2.371,944,2.159,945,2.694,946,2.694,947,2.694,948,2.694,949,1.529,950,2.371]],["title/components/DagreLayoutComponent.html",[128,0.064,215,0.741]],["body/components/DagreLayoutComponent.html",[3,0.07,4,0.07,5,0.056,8,0.226,9,0.882,12,1.231,13,0.554,14,0.538,15,2.004,23,0.658,24,0.949,29,0.634,30,0.01,31,0.578,32,0.536,33,0.632,34,0.395,35,0.862,50,1.35,53,0.418,54,1.251,55,1.186,56,0.442,58,0.172,59,0.12,63,0.07,67,0.077,72,2.07,75,0.869,87,0.003,88,0.005,89,0.003,112,3.036,128,0.079,131,0.479,132,0.479,133,0.479,134,0.479,135,0.479,136,0.479,137,1.082,150,0.492,151,0.715,152,0.547,153,0.547,156,0.658,157,1.549,158,0.454,160,1.504,161,1.387,162,0.533,164,0.816,166,1.002,169,0.638,170,1.297,171,1.673,178,1.656,179,1.138,182,0.638,183,0.671,184,0.677,186,0.706,190,0.32,191,0.816,192,0.816,193,0.384,194,1.14,195,0.547,196,1.14,197,0.492,198,0.533,199,0.837,200,0.492,201,0.547,202,0.492,203,0.506,204,1.427,205,0.492,206,0.533,207,0.547,208,0.492,209,0.533,210,0.492,211,1.197,212,0.547,213,0.506,214,0.547,215,1.027,216,0.547,217,0.492,218,0.547,219,0.492,220,0.506,221,0.547,222,0.492,223,0.533,224,0.492,225,0.547,226,0.492,227,0.533,228,0.547,229,0.479,230,0.533,231,0.547,232,0.492,233,0.547,234,0.492,235,0.547,236,0.492,237,0.506,238,0.492,239,0.966,240,1.427,241,0.492,242,0.492,243,0.492,244,0.533,245,0.492,246,0.547,247,0.492,248,0.506,249,0.547,250,0.492,251,0.467,252,0.492,253,0.837,254,0.845,255,0.492,256,1.14,257,0.492,258,0.492,259,0.492,260,0.533,261,0.492,262,0.533,263,0.837,264,0.492,265,0.533,266,0.492,267,0.506,268,0.492,269,0.519,270,0.492,271,0.754,272,0.547,273,0.467,274,0.547,275,0.519,276,0.519,277,0.519,278,0.492,279,0.533,280,0.492,281,0.533,282,0.492,283,0.506,284,0.492,285,0.795,286,0.492,287,0.492,288,0.533,289,0.492,290,0.533,291,0.547,292,0.533,293,0.454,294,0.479,295,0.506,296,0.547,297,0.479,298,0.823,299,0.547,300,0.479,301,0.547,302,0.467,303,0.547,304,0.479,305,0.506,306,0.506,307,0.533,308,0.547,340,3.034,350,3.97,351,0.915,356,1.614,367,2.3,426,3.858,500,2.214,587,4.146,594,3.707,598,1.79,599,1.502,645,1.608,672,1.867,725,2.713,727,1.928,835,3.51,836,1.294,838,2.269,845,2.542,853,2.888,878,4.796,880,1.999,890,2.612,913,1.79,917,4.802,923,1.886,940,2.303,942,2.303,944,2.303,949,2.497,951,2.529,952,2.504,953,2.594,954,5.347,955,4.4,956,5.992,957,5.992,958,5.992,959,2.907,960,2.214,961,5.992,962,4.4,963,6.459,964,4.285,965,6.459,966,6.459,967,6.459,968,6.459,969,6.459,970,5.992,971,6.459,972,4.4,973,4.4,974,2.873,975,2.873,976,2.873,977,2.873,978,2.873,979,5.992,980,2.873,981,4.4,982,2.873,983,4.4,984,4.4,985,2.873,986,2.873,987,2.873,988,2.873,989,2.873,990,2.873,991,2.873,992,2.873,993,2.214,994,2.873,995,2.873,996,2.873,997,4.4,998,2.873,999,2.873,1000,2.134,1001,2.873,1002,2.529,1003,2.529,1004,5.347,1005,1.999,1006,5.347,1007,3.873,1008,2.873,1009,2.873,1010,2.873,1011,2.873,1012,2.873,1013,2.873,1014,2.873,1015,2.873,1016,2.873,1017,6.459,1018,2.873,1019,2.873,1020,2.873,1021,2.873,1022,2.303,1023,2.873,1024,2.873,1025,1.79,1026,2.873,1027,3.33,1028,2.873,1029,1.563,1030,1.999]],["title/components/DagreNodeComponent.html",[128,0.064,217,0.741]],["body/components/DagreNodeComponent.html",[3,0.077,4,0.077,5,0.062,8,0.251,9,0.955,12,1.359,13,0.6,14,0.582,23,0.713,24,0.901,27,1.141,29,0.565,30,0.01,31,0.641,32,0.532,33,0.618,34,0.439,35,0.816,50,1.35,53,0.464,54,0.532,55,0.505,58,0.178,59,0.134,60,0.708,63,0.077,67,0.085,72,1.646,83,2.22,87,0.004,88,0.005,89,0.004,112,2.901,118,2.558,128,0.084,131,0.532,132,0.532,133,0.532,134,0.532,135,0.532,136,0.532,137,1.142,150,0.547,151,0.774,152,0.607,153,0.607,156,0.713,157,1.634,158,0.505,160,1.513,161,1.396,162,0.592,164,0.883,166,1.084,169,0.708,170,1.35,171,1.765,178,1.233,179,1.232,182,0.708,183,0.745,184,0.733,186,0.784,190,0.356,191,0.883,192,0.883,193,0.426,194,1.203,195,0.607,196,1.203,197,0.547,198,0.592,199,0.907,200,0.547,201,0.607,202,0.547,203,0.562,204,1.47,205,0.547,206,0.592,207,0.607,208,0.547,209,0.592,210,0.547,211,1.228,212,0.607,213,0.562,214,0.607,215,1.083,216,0.607,217,1.083,218,0.607,219,0.547,220,0.562,221,0.607,222,0.547,223,0.592,224,0.547,225,0.607,226,0.547,227,0.592,228,0.607,229,0.532,230,0.592,231,0.607,232,0.547,233,0.607,234,0.547,235,0.607,236,0.547,237,0.562,238,0.547,239,1.03,240,1.47,241,0.547,242,0.547,243,0.547,244,0.592,245,0.547,246,0.607,247,0.547,248,0.562,249,0.607,250,0.547,251,0.518,252,0.547,253,0.907,254,0.753,255,0.547,256,1.203,257,0.547,258,0.547,259,0.547,260,0.592,261,0.547,262,0.592,263,0.907,264,0.547,265,0.592,266,0.547,267,0.562,268,0.547,269,0.576,270,0.547,271,0.816,272,0.607,273,0.518,274,0.607,275,0.576,276,0.576,277,0.576,278,0.547,279,0.592,280,0.547,281,0.592,282,0.547,283,0.562,284,0.547,285,0.86,286,0.547,287,0.547,288,0.592,289,0.547,290,0.592,291,0.607,292,0.592,293,0.505,294,0.532,295,0.562,296,0.607,297,0.532,298,0.877,299,0.607,300,0.532,301,0.607,302,0.518,303,0.607,304,0.532,305,0.562,306,0.562,307,0.592,308,0.607,345,1.988,356,1.438,426,3.679,587,3.962,589,3.438,590,1.736,591,3.402,793,2.22,795,2.22,835,3.741,836,1.401,837,4.568,838,2.418,841,5.017,842,5.017,844,5.564,845,2.682,846,5.065,850,5.564,851,5.564,852,4.193,857,6.47,877,4.193,878,4.232,880,2.22,885,3.383,891,2.809,892,1.811,900,5.564,901,2.809,903,2.809,904,2.809,905,2.809,906,2.809,909,2.809,910,2.809,911,4.193,913,4.418,914,2.809,915,2.809,916,2.558,917,5.065,918,2.809,920,2.809,921,4.693,922,4.193,923,2.095,924,2.809,926,2.37,927,2.22,928,2.809,929,3.537,930,2.809,931,2.809,932,2.809,933,2.809,935,2.809,936,2.809,937,2.809,938,2.809,940,2.558,941,2.809,942,2.558,943,2.809,944,2.558,949,1.811,950,2.809,1007,2.809,1031,2.809,1032,4.764,1033,5.017,1034,5.699,1035,4.764,1036,3.191,1037,3.191,1038,3.191,1039,3.191,1040,3.191,1041,3.191,1042,3.191,1043,3.191,1044,4.193,1045,4.193,1046,5.017,1047,3.313,1048,3.191,1049,3.191,1050,3.191,1051,3.191,1052,3.191,1053,3.191,1054,3.191]],["title/classes/DagreUtils.html",[67,0.115,1000,3.211]],["body/classes/DagreUtils.html",[3,0.119,4,0.119,5,0.095,8,0.386,14,0.788,15,1.951,24,0.885,29,0.942,30,0.01,31,0.691,32,0.624,33,0.776,35,0.913,50,1.37,56,0.755,58,0.156,60,1.431,63,0.119,67,0.131,75,1.169,87,0.005,88,0.007,89,0.005,91,3.646,112,2.895,211,1.107,254,1.387,311,3.223,356,1.947,426,3.507,586,4.712,587,3.953,590,2.671,591,3.244,593,3.659,594,4.772,595,4.725,597,3.763,746,2.299,748,2.786,878,6.479,880,5.668,1000,4.788,1047,6.155,1055,4.322,1056,6.447,1057,6.447,1058,6.447,1059,6.447,1060,6.447,1061,6.447,1062,6.447,1063,6.447,1064,4.91,1065,6.447,1066,4.91,1067,6.447,1068,4.91,1069,6.447,1070,4.91,1071,6.447,1072,4.91,1073,4.91,1074,4.91,1075,4.91,1076,4.91,1077,4.91,1078,4.91,1079,6.447,1080,4.91,1081,4.91,1082,4.91,1083,4.322,1084,5.167,1085,5.676,1086,4.91,1087,4.91,1088,4.91,1089,4.91,1090,4.322,1091,4.91,1092,6.447,1093,4.91,1094,4.322,1095,4.91,1096,4.91]],["title/components/DagreYamlParserComponent.html",[128,0.064,219,0.741]],["body/components/DagreYamlParserComponent.html",[3,0.069,4,0.069,5,0.055,8,0.417,9,0.872,12,1.297,13,0.548,14,0.532,15,1.664,23,0.651,24,0.888,27,1.269,29,0.803,30,0.01,31,0.633,32,0.572,33,0.712,34,0.389,35,0.837,50,1.343,53,0.412,54,0.472,55,0.448,56,0.436,58,0.185,59,0.119,60,1.657,63,0.069,67,0.075,72,0.978,75,0.861,87,0.003,88,0.005,89,0.003,111,3.903,112,2.862,120,5.234,122,4.664,125,2.269,128,0.078,131,0.472,132,0.472,133,0.472,134,0.472,135,0.472,136,0.472,137,1.074,150,0.485,151,0.707,152,0.539,153,0.539,156,0.651,157,1.537,158,0.448,160,1.503,161,1.386,162,0.525,164,0.807,166,0.991,169,0.628,170,1.289,171,1.66,178,0.941,179,1.125,182,0.628,183,0.661,184,0.669,186,0.696,190,0.316,191,0.807,192,0.807,193,0.378,194,1.132,195,0.539,196,1.132,197,0.485,198,0.525,199,0.828,200,0.485,201,0.539,202,0.485,203,0.498,204,1.421,205,0.485,206,0.525,207,0.539,208,0.485,209,0.525,210,0.746,211,1.193,212,0.539,213,0.766,214,0.539,215,0.485,216,0.539,217,0.746,218,0.539,219,1.019,220,1.501,221,0.539,222,0.485,223,0.525,224,0.485,225,0.539,226,0.485,227,0.525,228,0.539,229,0.472,230,0.525,231,0.539,232,0.485,233,0.539,234,0.485,235,0.539,236,0.485,237,0.498,238,0.485,239,0.957,240,1.421,241,0.485,242,0.485,243,0.485,244,0.525,245,0.485,246,0.539,247,0.485,248,0.498,249,0.539,250,0.485,251,0.46,252,0.485,253,0.828,254,1.071,255,0.485,256,1.132,257,0.485,258,0.485,259,0.485,260,0.525,261,0.485,262,0.525,263,0.828,264,0.485,265,0.525,266,0.485,267,0.498,268,0.485,269,0.512,270,0.485,271,0.746,272,0.539,273,0.46,274,0.539,275,0.512,276,0.512,277,0.512,278,0.485,279,0.525,280,0.485,281,0.525,282,0.485,283,0.498,284,0.485,285,0.786,286,0.485,287,0.485,288,0.525,289,0.485,290,0.525,291,0.539,292,0.525,293,0.448,294,0.472,295,0.498,296,0.539,297,0.472,298,0.815,299,0.539,300,0.472,301,0.539,302,0.46,303,0.539,304,0.472,305,0.498,306,0.498,307,0.525,308,0.539,313,2.269,329,2.216,340,3.007,587,3.908,589,3.491,591,3.55,593,3.844,594,2.367,725,2.692,727,1.906,793,1.97,795,1.97,835,3.478,836,1.28,853,2.856,890,2.582,913,1.764,949,1.607,952,2.482,953,2.57,959,2.885,960,2.189,993,2.189,1005,1.97,1025,1.764,1029,1.54,1033,4.664,1044,3.83,1045,3.83,1046,4.664,1083,3.83,1085,2.493,1090,2.493,1094,2.493,1097,2.269,1098,4.351,1099,4.351,1100,5.299,1101,4.351,1102,4.351,1103,4.351,1104,5.946,1105,4.351,1106,5.946,1107,5.299,1108,5.299,1109,4.351,1110,2.832,1111,2.832,1112,4.351,1113,2.832,1114,4.351,1115,2.832,1116,4.351,1117,2.832,1118,2.832,1119,4.351,1120,2.832,1121,2.832,1122,2.832,1123,2.832,1124,2.832,1125,2.832,1126,2.832,1127,2.832,1128,2.269,1129,2.493,1130,2.493,1131,2.832,1132,4.351,1133,2.832,1134,2.832,1135,4.351,1136,2.103,1137,2.832,1138,2.832,1139,2.832,1140,2.832,1141,2.832,1142,2.832,1143,2.832,1144,2.832,1145,2.832,1146,2.832,1147,2.493,1148,4.664,1149,2.832,1150,2.832,1151,2.832,1152,2.832,1153,2.832,1154,2.832,1155,2.832,1156,2.832,1157,2.832,1158,2.832,1159,2.832,1160,5.299,1161,2.832,1162,2.832,1163,2.832,1164,2.832,1165,2.832,1166,2.832,1167,2.832,1168,2.832,1169,2.832,1170,2.832,1171,2.832,1172,2.832,1173,2.832,1174,2.832,1175,2.832,1176,4.351,1177,2.832,1178,2.832,1179,4.351,1180,2.832,1181,2.832,1182,2.832,1183,4.351,1184,2.832,1185,4.351,1186,2.832,1187,2.832,1188,2.832,1189,2.832,1190,2.832,1191,2.832,1192,2.832,1193,2.832,1194,2.832,1195,2.832,1196,2.832,1197,2.832,1198,4.351,1199,2.832,1200,4.351,1201,2.832,1202,2.832,1203,2.832,1204,2.832,1205,2.832]],["title/directives/DashedDrawDirective.html",[193,0.578,294,0.721]],["body/directives/DashedDrawDirective.html",[3,0.102,4,0.102,5,0.081,8,0.33,9,1.163,12,1.051,14,0.71,23,0.868,24,0.962,27,1.39,29,0.498,30,0.01,31,0.356,32,0.592,33,0.411,35,0.825,50,1.433,54,1.197,55,1.134,56,1.023,58,0.182,59,0.176,60,1.476,63,0.102,67,0.112,72,1.451,87,0.005,88,0.006,89,0.005,157,1.854,158,0.664,160,0.701,161,0.893,166,1.321,173,1.5,178,1.684,180,1.288,184,0.893,185,1.235,193,0.561,293,0.664,294,0.968,295,1.17,309,4.015,312,4.257,328,4.708,329,2.862,333,5.329,351,2.397,356,1.752,599,3.476,645,2.121,770,1.84,777,3.359,792,2.493,801,5.854,817,3.118,822,5.109,825,3.157,836,1.707,838,2.821,845,3.043,885,3.947,892,2.383,952,3.114,959,3.48,1206,7.635,1207,3.697,1208,6.65,1209,7.173,1210,6.65,1211,6.65,1212,6.65,1213,6.65,1214,6.65,1215,3.366,1216,5.803,1217,3.444,1218,5.803,1219,4.2,1220,3.444,1221,4.2,1222,4.2,1223,4.2,1224,4.2,1225,4.2,1226,4.2,1227,4.2,1228,4.2,1229,4.2,1230,4.938,1231,4.2,1232,4.2,1233,2.921,1234,3.697,1235,2.757,1236,4.2,1237,3.366,1238,3.697,1239,3.697,1240,6.65,1241,3.366,1242,5.803,1243,3.118,1244,3.697,1245,2.921,1246,3.697,1247,2.921,1248,3.366,1249,4.2,1250,7.173,1251,4.651,1252,4.2,1253,6.65,1254,4.2,1255,4.2,1256,4.2,1257,4.2,1258,4.2,1259,4.2,1260,6.65,1261,5.803,1262,4.2,1263,4.2,1264,4.036,1265,4.2,1266,4.2,1267,4.2,1268,6.65,1269,4.2,1270,6.65,1271,5.803,1272,4.2,1273,4.2,1274,3.118,1275,4.2,1276,5.109,1277,4.2,1278,4.2,1279,4.2,1280,6.65,1281,3.118]],["title/pipes/Deg2RadPipe.html",[534,3.007,1282,3.007]],["body/pipes/Deg2RadPipe.html",[3,0.156,4,0.156,5,0.125,14,0.786,24,0.716,29,0.762,30,0.01,31,0.69,32,0.505,33,0.628,35,0.739,58,0.156,59,0.269,63,0.156,67,0.171,75,1.044,87,0.007,88,0.008,89,0.007,158,1.016,173,2.223,534,5.308,821,4.004,836,1.891,1282,5.308,1283,5.152,1284,5.659,1285,7.631,1286,5.152,1287,7.631,1288,6.428,1289,6.718,1290,7.567,1291,6.718,1292,6.718,1293,5.152,1294,6.428,1295,5.152]],["title/components/DirectionalLightComponent.html",[128,0.064,222,0.741]],["body/components/DirectionalLightComponent.html",[3,0.091,4,0.091,5,0.073,8,0.295,10,0.752,12,1.141,13,0.676,14,0.656,23,0.802,24,0.837,27,1.284,29,0.445,30,0.01,31,0.579,32,0.422,33,0.612,34,0.516,35,0.432,53,0.546,54,1.205,55,1.079,56,0.962,58,0.175,59,0.157,60,0.833,63,0.091,67,0.1,75,0.61,87,0.004,88,0.006,89,0.004,128,0.092,131,0.626,132,0.626,133,0.626,134,0.626,135,0.626,136,0.626,137,1.233,150,0.643,151,0.871,152,0.714,153,0.714,155,2.61,156,0.802,157,1.941,158,0.593,160,1.525,161,1.406,162,0.696,163,4.748,164,0.994,165,2.723,166,1.221,167,2.741,168,4.646,169,0.833,170,1.429,171,1.906,172,2.787,173,1.386,174,3.52,175,2.787,178,1.562,179,1.386,180,1.19,181,1.021,182,0.833,183,0.876,184,0.825,185,1.104,186,0.922,189,2.787,190,0.418,191,0.994,192,0.994,193,0.501,194,1.299,195,0.714,196,1.299,197,0.643,198,0.696,199,1.02,200,0.643,201,0.714,202,0.643,203,0.66,204,1.531,205,0.643,206,0.696,207,0.714,208,0.643,209,0.696,210,0.643,211,1.111,212,0.714,213,0.66,214,0.714,215,0.643,216,0.714,217,0.643,218,0.714,219,0.643,220,0.66,221,0.714,222,1.17,223,1.16,224,0.643,225,0.714,226,0.643,227,0.696,228,0.714,229,0.626,230,0.696,231,0.714,232,0.643,233,0.714,234,0.643,235,0.714,236,0.643,237,0.66,238,0.643,239,1.13,240,1.531,241,0.643,242,0.643,243,0.643,244,0.696,245,0.643,246,0.714,247,0.643,248,0.66,249,0.714,250,0.643,251,0.61,252,0.643,253,1.02,254,0.593,255,0.643,256,1.299,257,0.643,258,0.643,259,0.643,260,0.696,261,0.643,262,0.696,263,1.02,264,0.643,265,0.696,266,0.643,267,0.66,268,0.643,269,0.678,270,0.643,271,0.643,272,0.714,273,0.61,274,0.714,275,0.678,276,0.678,277,0.678,278,0.643,279,0.696,280,0.643,281,0.696,282,0.643,283,0.66,284,0.643,285,0.969,286,0.643,287,0.643,288,0.696,289,0.643,290,0.696,291,0.714,292,0.696,293,0.593,294,0.626,295,0.66,296,0.714,297,0.626,298,0.962,299,0.714,300,0.626,301,0.714,302,0.61,303,0.714,304,0.626,305,0.66,306,0.66,307,0.696,308,0.714,356,1.889,645,1.959,673,2.61,685,1.962,792,3.183,907,3.008,1296,6.805,1297,5.362,1298,5.014,1299,6.826,1300,5.362,1301,3.304,1302,3.753,1303,3.753,1304,3.753,1305,3.753,1306,3.753,1307,4.298,1308,3.304,1309,3.008,1310,3.753,1311,4.051,1312,3.753,1313,3.753,1314,3.753,1315,3.304,1316,3.304,1317,3.304,1318,3.753,1319,3.304,1320,3.304,1321,3.008]],["title/components/DofComponent.html",[128,0.064,224,0.741]],["body/components/DofComponent.html",[3,0.091,4,0.091,5,0.073,8,0.296,10,0.756,12,0.851,14,0.658,23,0.805,24,0.838,29,0.638,30,0.01,31,0.614,32,0.423,33,0.669,34,0.519,35,0.619,50,0.718,53,0.549,54,1.047,55,0.992,58,0.175,59,0.158,63,0.091,67,0.1,75,0.612,87,0.004,88,0.006,89,0.004,128,0.092,131,0.629,132,0.629,133,0.629,134,0.629,135,0.629,136,0.629,137,1.236,150,0.646,151,0.874,152,0.718,153,0.718,156,0.805,158,0.596,160,1.525,161,1.406,162,0.699,164,0.699,166,1.225,169,0.837,170,1.431,178,1.48,179,1.391,181,1.026,184,0.58,186,0.926,190,0.42,191,0.998,192,0.998,193,0.504,194,1.302,195,0.718,196,1.302,197,0.646,198,0.699,199,1.024,200,0.646,201,0.718,202,0.646,203,0.663,204,1.533,205,0.646,206,0.699,207,0.718,208,0.646,209,0.699,210,0.646,211,1.113,212,0.718,213,0.663,214,0.718,215,0.646,216,0.718,217,0.646,218,0.718,219,0.646,220,0.663,221,0.718,222,0.646,223,0.699,224,1.172,225,0.718,226,0.646,227,0.699,228,0.718,229,1.207,230,1.163,231,0.718,232,0.646,233,0.718,234,0.646,235,0.718,236,0.646,237,0.663,238,0.646,239,1.133,240,1.533,241,0.646,242,0.646,243,0.646,244,0.699,245,0.646,246,0.718,247,0.646,248,0.663,249,0.718,250,0.646,251,0.612,252,0.646,253,1.024,254,0.596,255,0.646,256,1.302,257,0.646,258,0.646,259,0.646,260,0.699,261,0.646,262,0.699,263,1.024,264,0.646,265,0.699,266,0.646,267,0.663,268,0.646,269,0.681,270,0.646,271,0.646,272,0.718,273,0.612,274,0.718,275,0.681,276,0.681,277,0.681,278,0.646,279,0.699,280,0.646,281,0.699,282,0.646,283,0.663,284,0.646,285,0.972,286,0.646,287,0.646,288,0.699,289,0.646,290,0.699,291,0.718,292,0.699,293,0.596,294,0.629,295,0.663,296,0.718,297,0.629,298,0.965,299,0.718,300,0.629,301,0.718,302,0.612,303,0.718,304,0.629,305,0.663,306,0.663,307,0.699,308,0.718,351,1.2,356,1.894,439,2.8,655,3.053,671,2.622,680,2.622,718,5.027,720,4.312,721,5.482,722,4.758,724,4.312,725,3.097,727,2.997,728,2.238,734,3.022,735,3.022,746,1.766,748,2.14,1027,4.505,1029,3.412,1322,3.319,1323,5.38,1324,7.233,1325,7.233,1326,7.233,1327,5.38,1328,5.38,1329,3.77,1330,3.77,1331,5.38,1332,3.77,1333,3.77,1334,3.77,1335,3.77,1336,3.77,1337,3.77,1338,6.273,1339,6.273,1340,3.77,1341,3.77,1342,6.273,1343,3.77,1344,3.77,1345,3.77,1346,5.38,1347,3.77,1348,3.319]],["title/components/DotScreenComponent.html",[128,0.064,226,0.741]],["body/components/DotScreenComponent.html",[3,0.098,4,0.098,5,0.079,8,0.319,10,0.813,12,0.896,14,0.693,23,0.848,24,0.788,29,0.672,30,0.01,31,0.631,32,0.446,33,0.691,34,0.558,35,0.652,50,0.772,53,0.591,54,0.677,55,0.642,58,0.186,59,0.17,63,0.098,67,0.108,75,0.659,87,0.004,88,0.006,89,0.004,128,0.096,131,0.677,132,0.677,133,0.677,134,0.677,135,0.677,136,0.677,137,1.277,150,0.695,151,0.92,152,0.772,153,0.772,156,0.848,158,0.642,160,1.53,161,1.41,162,0.752,164,0.752,166,1.29,169,0.901,170,1.466,178,1.226,179,1.465,181,1.104,184,0.624,186,0.997,190,0.452,191,1.051,192,1.051,193,0.542,194,1.345,195,0.772,196,1.345,197,0.695,198,0.752,199,1.078,200,0.695,201,0.772,202,0.695,203,0.714,204,1.559,205,0.695,206,0.752,207,0.772,208,0.695,209,0.752,210,0.695,211,1.144,212,0.772,213,0.714,214,0.772,215,0.695,216,0.772,217,0.695,218,0.772,219,0.695,220,0.714,221,0.772,222,0.695,223,0.752,224,0.695,225,0.772,226,1.211,227,1.211,228,0.772,229,1.241,230,1.211,231,0.772,232,0.695,233,0.772,234,0.695,235,0.772,236,0.695,237,0.714,238,0.695,239,1.179,240,1.559,241,0.695,242,0.695,243,0.695,244,0.752,245,0.695,246,0.772,247,0.695,248,0.714,249,0.772,250,0.695,251,0.659,252,0.695,253,1.078,254,0.642,255,0.695,256,1.345,257,0.695,258,0.695,259,0.695,260,0.752,261,0.695,262,0.752,263,1.078,264,0.695,265,0.752,266,0.695,267,0.714,268,0.695,269,0.733,270,0.695,271,0.695,272,0.772,273,0.659,274,0.772,275,0.733,276,0.733,277,0.733,278,0.695,279,0.752,280,0.695,281,0.752,282,0.695,283,0.714,284,0.695,285,1.024,286,0.695,287,0.695,288,0.752,289,0.695,290,0.752,291,0.772,292,0.752,293,0.642,294,0.677,295,0.714,296,0.772,297,0.677,298,1.004,299,0.772,300,0.677,301,0.772,302,0.659,303,0.772,304,0.677,305,0.714,306,0.714,307,0.752,308,0.772,351,1.292,439,3.013,637,3.252,638,3.252,685,2.121,718,5.233,720,4.542,721,5.664,722,4.916,724,4.542,725,3.2,727,1.778,728,3.363,734,3.252,735,3.252,738,3.252,1349,6.545,1350,3.572,1351,4.988,1352,5.748,1353,5.667,1354,4.542,1355,4.058,1356,4.058,1357,4.058,1358,4.058,1359,4.058]],["title/interfaces/Edge.html",[64,1.536,593,2.454]],["body/interfaces/Edge.html",[3,0.147,4,0.147,5,0.118,8,0.477,9,1.477,27,2.174,30,0.01,31,0.515,32,0.696,33,0.807,34,0.834,58,0.147,63,0.205,64,3.006,87,0.007,88,0.008,89,0.007,112,2.155,156,1.236,167,3.618,173,2.053,211,1.134,254,0.959,426,3.3,585,3.3,586,5.022,587,2.943,588,3.982,589,4.009,590,3.3,591,3.052,592,3.982,593,4.182,594,3.3,595,3.982,596,4.219,597,4.15,598,3.778,599,3.171]],["title/components/EffectComposerComponent.html",[128,0.064,229,0.721]],["body/components/EffectComposerComponent.html",[3,0.081,4,0.081,5,0.065,8,0.459,9,0.985,12,1.088,14,0.601,15,2.123,23,0.736,24,0.909,29,0.765,30,0.01,31,0.632,32,0.566,33,0.704,34,0.458,35,0.88,50,1.455,53,0.484,54,0.555,55,0.526,56,0.756,58,0.174,59,0.139,60,1.297,63,0.081,67,0.089,72,1.15,75,0.541,87,0.004,88,0.005,89,0.004,128,0.095,131,0.555,132,0.555,133,0.555,134,0.555,135,0.555,136,0.555,137,1.166,150,0.57,151,0.798,152,0.634,153,0.634,158,0.526,160,1.516,161,1.398,162,0.617,164,0.617,166,1.119,169,0.739,170,1.371,178,1.264,179,1.271,181,0.906,184,0.756,190,0.371,191,0.911,192,0.911,193,0.445,194,1.228,195,0.634,196,1.228,197,0.57,198,0.617,199,0.935,200,0.57,201,0.634,202,0.57,203,0.586,204,1.486,205,0.57,206,0.617,207,0.634,208,0.57,209,0.617,210,0.57,211,1.059,212,0.634,213,0.586,214,0.634,215,0.57,216,0.634,217,0.57,218,0.634,219,0.57,220,0.586,221,0.634,222,0.57,223,0.617,224,0.57,225,0.634,226,0.57,227,0.617,228,0.634,229,1.077,230,1.083,231,0.634,232,0.57,233,0.634,234,0.57,235,0.634,236,0.57,237,0.586,238,0.57,239,1.055,240,1.486,241,0.57,242,0.57,243,0.57,244,0.617,245,0.57,246,0.634,247,0.57,248,0.586,249,0.634,250,0.57,251,0.541,252,0.57,253,0.935,254,0.526,255,0.57,256,1.228,257,0.57,258,0.57,259,0.57,260,0.617,261,0.57,262,0.617,263,0.935,264,0.57,265,0.617,266,0.57,267,0.586,268,0.57,269,0.601,270,0.57,271,0.57,272,0.634,273,1.21,274,0.634,275,0.601,276,0.601,277,0.601,278,0.57,279,0.617,280,0.57,281,0.617,282,0.57,283,0.586,284,0.57,285,0.888,286,0.57,287,0.57,288,0.617,289,0.57,290,0.617,291,0.634,292,0.617,293,0.526,294,0.555,295,0.586,296,0.634,297,0.555,298,0.899,299,0.634,300,0.555,301,0.634,302,0.541,303,0.634,304,0.555,305,0.586,306,0.586,307,0.617,308,0.634,324,3.51,356,1.484,367,1.74,500,1.675,622,5.144,632,5.144,633,2.93,636,2.93,645,2.358,685,1.74,692,2.073,722,4.787,725,2.921,727,1.458,804,4.791,836,1.446,838,2.479,845,2.738,952,2.737,953,2.835,959,3.13,960,2.473,993,2.473,1348,2.93,1360,7.249,1361,2.93,1362,4.915,1363,6.452,1364,6.452,1365,4.915,1366,5.843,1367,5.843,1368,4.915,1369,3.329,1370,3.329,1371,4.915,1372,8.055,1373,3.329,1374,3.329,1375,3.329,1376,3.329,1377,3.329,1378,3.329,1379,4.915,1380,3.329,1381,3.329,1382,3.329,1383,3.329,1384,3.329,1385,4.915,1386,3.329,1387,3.329,1388,6.559,1389,3.329,1390,3.329,1391,2.93,1392,3.329,1393,2.93,1394,2.93,1395,3.329,1396,3.329,1397,3.329,1398,3.329,1399,3.329,1400,3.329,1401,3.329,1402,3.329,1403,3.329,1404,3.329,1405,3.329,1406,3.329,1407,3.329,1408,3.329,1409,3.329,1410,3.329]],["title/components/EmptyComponent.html",[128,0.064,232,0.741]],["body/components/EmptyComponent.html",[3,0.101,4,0.101,5,0.081,8,0.329,10,0.837,12,1.188,13,0.729,14,0.707,23,0.865,24,0.645,29,0.496,30,0.01,31,0.607,32,0.329,33,0.648,34,0.575,35,0.481,53,0.608,56,0.643,58,0.182,59,0.175,63,0.101,67,0.111,75,0.679,87,0.005,88,0.006,89,0.005,128,0.097,131,0.697,132,0.697,133,0.697,134,0.697,135,0.697,136,0.697,137,1.293,150,0.716,151,0.939,152,0.795,153,0.795,156,0.865,157,2.01,158,0.661,160,1.532,161,1.412,162,0.775,164,1.072,165,2.855,169,0.927,170,1.479,171,1.998,179,1.495,180,1.283,181,1.137,182,0.927,183,0.976,184,0.89,185,1.229,186,1.027,190,0.466,191,1.072,192,1.072,193,0.558,194,1.362,195,0.795,196,1.362,197,0.716,198,0.775,199,1.1,200,0.716,201,0.795,202,0.716,203,0.735,204,1.569,205,0.716,206,0.775,207,0.795,208,0.716,209,0.775,210,0.716,211,1.156,212,0.795,213,0.735,214,0.795,215,0.716,216,0.795,217,0.716,218,0.795,219,0.716,220,0.735,221,0.795,222,0.716,223,0.775,224,0.716,225,0.795,226,0.716,227,0.775,228,0.795,229,0.697,230,0.775,231,0.795,232,1.226,233,0.795,234,0.716,235,0.795,236,0.716,237,0.735,238,0.716,239,1.198,240,1.569,241,0.716,242,0.716,243,0.716,244,0.775,245,0.716,246,0.795,247,0.716,248,0.735,249,0.795,250,0.716,251,0.679,252,0.716,253,1.1,254,0.661,255,0.716,256,1.362,257,0.716,258,0.716,259,0.716,260,0.775,261,0.716,262,0.775,263,1.1,264,0.716,265,0.775,266,0.716,267,0.735,268,0.716,269,0.755,270,0.716,271,0.716,272,0.795,273,0.679,274,0.795,275,0.755,276,0.755,277,0.755,278,0.716,279,0.775,280,0.716,281,0.775,282,0.716,283,0.735,284,0.716,285,1.045,286,0.716,287,0.716,288,0.775,289,0.716,290,0.775,291,0.795,292,0.775,293,0.661,294,0.697,295,0.735,296,0.795,297,0.697,298,1.02,299,0.795,300,0.697,301,0.795,302,0.679,303,0.795,304,0.697,305,0.735,306,0.735,307,0.775,308,0.795,792,3.936,836,1.701,952,3.106,1003,5.091,1411,3.678,1412,5.783,1413,4.178,1414,4.178]],["title/components/FogComponent.html",[128,0.064,234,0.741]],["body/components/FogComponent.html",[3,0.087,4,0.087,5,0.07,8,0.284,9,1.044,12,1.295,14,0.637,15,1.82,23,0.78,24,0.902,27,1.249,29,0.618,30,0.01,31,0.603,32,0.527,33,0.655,34,0.496,35,0.818,50,1.41,53,0.525,54,1.021,55,0.967,56,0.555,58,0.162,59,0.151,63,0.087,67,0.096,75,0.586,87,0.004,88,0.006,89,0.004,128,0.09,131,0.602,132,0.602,133,0.602,134,0.602,135,0.602,136,0.602,137,1.211,150,0.618,151,0.847,152,0.687,153,0.687,158,0.57,160,1.522,161,1.403,162,0.669,164,0.669,166,1.187,167,2.936,169,0.801,170,1.41,171,1.709,173,1.348,178,1.45,179,1.348,180,1.157,181,0.982,184,0.802,190,0.402,191,0.966,192,0.966,193,0.482,194,1.276,195,0.687,196,1.276,197,0.618,198,0.669,199,0.992,200,0.618,201,0.687,202,0.618,203,0.635,204,1.517,205,0.618,206,0.669,207,0.687,208,0.618,209,0.669,210,0.618,211,1.094,212,0.687,213,0.635,214,0.687,215,0.618,216,0.687,217,0.618,218,0.687,219,0.618,220,0.635,221,0.687,222,0.618,223,0.669,224,0.618,225,0.687,226,0.618,227,0.669,228,0.687,229,0.602,230,0.669,231,0.687,232,0.618,233,0.687,234,1.149,235,0.687,236,0.618,237,0.635,238,0.618,239,1.105,240,1.517,241,0.618,242,0.618,243,0.618,244,0.669,245,0.618,246,0.687,247,0.618,248,0.635,249,0.687,250,0.618,251,0.586,252,0.618,253,0.992,254,0.57,255,0.618,256,1.276,257,0.618,258,0.618,259,0.618,260,0.669,261,0.618,262,0.669,263,0.992,264,0.618,265,0.669,266,0.618,267,0.635,268,0.618,269,0.652,270,0.618,271,0.618,272,0.687,273,1.155,274,0.687,275,0.652,276,0.652,277,0.652,278,0.618,279,0.669,280,0.618,281,0.669,282,0.618,283,0.635,284,0.618,285,0.942,286,0.618,287,0.618,288,0.669,289,0.618,290,0.669,291,0.687,292,0.669,293,0.57,294,0.602,295,0.635,296,0.687,297,0.602,298,0.941,299,0.687,300,0.602,301,0.687,302,0.586,303,0.687,304,0.602,305,0.635,306,0.635,307,0.669,308,0.687,367,2.724,500,1.815,607,4.175,615,4.177,664,4.177,725,3.035,727,2.283,804,3.87,836,1.533,838,2.597,845,2.844,952,2.866,953,2.969,959,3.252,960,2.623,993,2.623,1029,1.963,1220,3.094,1311,3.094,1415,3.176,1416,5.212,1417,6.703,1418,6.703,1419,5.387,1420,5.901,1421,5.212,1422,5.212,1423,3.608,1424,3.608,1425,3.608,1426,3.608,1427,3.608,1428,3.608,1429,3.608,1430,3.608,1431,3.608,1432,3.608,1433,5.212,1434,3.608,1435,5.212,1436,3.608,1437,3.608,1438,3.608,1439,5.212,1440,3.608,1441,5.212,1442,3.608,1443,3.176,1444,3.176,1445,3.608,1446,3.608,1447,3.608]],["title/injectables/FontService.html",[0,1.34,510,2.838]],["body/injectables/FontService.html",[0,2.233,2,2.834,3,0.141,4,0.141,5,0.113,8,0.459,9,1.443,10,1.565,12,1.366,14,0.881,15,1.769,24,0.908,27,2.069,29,0.926,30,0.01,31,0.662,32,0.614,33,0.763,35,0.898,49,4.634,53,0.85,54,0.975,55,0.923,56,1.201,58,0.189,59,0.244,60,1.296,63,0.141,67,0.156,75,0.949,87,0.006,88,0.008,89,0.006,90,5.596,93,5.348,94,6.052,95,4.087,96,4.727,98,5.798,100,5.35,101,4.337,156,1.078,180,1.598,251,0.949,510,4.727,790,4.634,1448,5.142,1449,5.841,1450,4.681,1451,4.681,1452,4.681,1453,4.681,1454,5.841,1455,5.841,1456,5.841,1457,5.142,1458,5.142]],["title/components/FrameMeshComponent.html",[128,0.064,236,0.741]],["body/components/FrameMeshComponent.html",[3,0.083,4,0.083,5,0.066,8,0.268,10,1.002,12,1.217,13,0.63,14,0.612,15,1.456,23,0.749,24,0.837,29,0.593,30,0.01,31,0.59,32,0.393,33,0.638,34,0.469,35,0.681,36,5.632,50,0.649,53,0.496,54,0.989,55,0.937,56,0.911,58,0.176,59,0.143,60,1.773,63,0.083,67,0.091,75,0.962,87,0.004,88,0.005,89,0.004,128,0.087,131,0.569,132,0.569,133,0.569,134,0.569,135,0.569,136,0.569,137,1.179,150,0.584,151,0.812,152,0.649,153,0.649,156,0.749,157,1.687,158,0.539,160,1.518,161,1.4,162,0.632,164,0.928,165,2.604,166,1.139,169,0.757,170,1.383,171,1.822,178,1.412,179,1.293,180,1.11,181,0.928,182,0.757,183,0.796,184,0.769,185,1.471,186,0.838,190,0.38,191,0.928,192,0.928,193,0.456,194,1.242,195,0.649,196,1.242,197,0.584,198,0.632,199,0.952,200,0.584,201,0.649,202,0.584,203,0.6,204,1.495,205,0.584,206,0.632,207,0.649,208,0.584,209,0.632,210,0.584,211,1.069,212,0.649,213,0.6,214,0.649,215,0.584,216,0.649,217,0.584,218,0.649,219,0.584,220,0.6,221,0.649,222,0.584,223,0.632,224,0.584,225,0.649,226,0.584,227,0.632,228,0.649,229,0.569,230,0.632,231,0.649,232,0.584,233,0.649,234,0.584,235,0.649,236,1.118,237,1.042,238,0.584,239,1.07,240,1.495,241,0.584,242,0.584,243,0.584,244,0.632,245,0.584,246,0.649,247,0.584,248,0.6,249,0.649,250,0.584,251,0.554,252,0.584,253,0.952,254,0.539,255,0.584,256,1.242,257,0.584,258,0.584,259,0.584,260,0.632,261,0.584,262,0.632,263,0.952,264,0.584,265,0.632,266,0.584,267,0.6,268,0.584,269,0.616,270,0.584,271,0.584,272,0.649,273,0.554,274,0.649,275,0.616,276,0.616,277,0.616,278,0.584,279,0.632,280,0.584,281,0.632,282,0.584,283,0.6,284,0.584,285,0.904,286,0.584,287,0.584,288,0.632,289,0.584,290,0.632,291,0.649,292,0.632,293,0.539,294,0.569,295,0.6,296,0.649,297,0.569,298,0.911,299,0.649,300,0.569,301,0.649,302,0.554,303,0.649,304,0.569,305,0.6,306,0.6,307,0.632,308,0.649,351,1.085,356,1.029,367,1.782,672,2.122,725,2.955,727,2.191,740,1.855,741,3.516,743,3.797,751,2.732,765,2.532,770,2.191,777,2.343,778,1.935,780,2.123,818,3.714,820,2.532,825,3.551,836,1.471,913,2.123,949,1.935,953,2.874,960,2.517,993,2.517,1025,2.123,1027,3.69,1029,1.855,1030,2.371,1251,4.009,1459,6.778,1460,5.002,1461,6.527,1462,6.527,1463,6.527,1464,5.925,1465,4.846,1466,6.527,1467,3.001,1468,3.001,1469,7.7,1470,3.409,1471,5.002,1472,8.191,1473,3.409,1474,3.409,1475,2.732,1476,3.001,1477,3.409,1478,7.265,1479,6.527,1480,3.001,1481,3.409,1482,3.409,1483,3.409,1484,4.403,1485,4.403,1486,3.001,1487,3.001,1488,3.409,1489,3.001,1490,3.001]],["title/interfaces/GraphModel.html",[64,1.536,594,2.352]],["body/interfaces/GraphModel.html",[3,0.145,4,0.145,5,0.116,8,0.471,9,1.466,27,2.128,30,0.01,31,0.509,32,0.675,33,0.857,34,0.824,58,0.145,63,0.204,64,2.996,87,0.007,88,0.008,89,0.007,112,2.13,156,1.182,167,2.626,173,1.55,211,1.126,254,0.948,426,4.474,585,3.261,586,4.881,587,2.908,588,3.935,589,3.981,590,3.261,591,3.016,592,3.935,593,3.402,594,3.981,595,5.184,596,5.72,597,4.617,598,5.123,599,4.299]],["title/components/GridActorComponent.html",[128,0.064,238,0.741]],["body/components/GridActorComponent.html",[3,0.077,4,0.077,5,0.062,8,0.25,9,0.952,12,0.899,13,0.599,14,0.581,15,1.896,24,0.926,27,1.138,29,0.675,30,0.01,31,0.601,32,0.618,33,0.556,34,0.438,35,0.726,50,1.083,53,0.463,54,1.127,55,1.068,56,1.161,58,0.171,59,0.133,60,1.63,63,0.077,67,0.085,75,0.772,87,0.003,88,0.005,89,0.003,112,2.972,128,0.084,131,0.531,132,0.531,133,0.531,134,0.531,135,0.531,136,0.531,137,1.14,150,0.545,151,0.772,152,0.605,153,0.605,156,0.711,158,0.503,160,1.513,161,1.395,162,0.59,164,0.881,166,1.082,167,2.492,173,1.632,178,1.461,180,1.055,182,0.706,183,0.743,184,0.731,190,0.355,191,0.881,192,0.881,193,0.425,194,1.201,195,0.605,196,1.201,197,0.545,198,0.59,199,0.904,200,0.545,201,0.605,202,0.545,203,0.56,204,1.468,205,0.545,206,0.59,207,0.605,208,0.545,209,0.59,210,0.545,211,1.039,212,0.605,213,0.56,214,0.605,215,0.545,216,0.605,217,0.545,218,0.605,219,0.545,220,0.56,221,0.605,222,0.545,223,0.59,224,0.545,225,0.605,226,0.545,227,0.59,228,0.605,229,0.531,230,0.59,231,0.605,232,0.814,233,0.605,234,0.545,235,0.605,236,0.545,237,0.56,238,1.081,239,1.363,240,1.468,241,0.545,242,1.081,243,0.545,244,0.59,245,0.545,246,0.605,247,0.545,248,0.836,249,0.605,250,0.545,251,0.517,252,0.545,253,0.904,254,0.503,255,0.545,256,1.201,257,0.545,258,0.545,259,0.545,260,0.59,261,0.545,262,0.59,263,0.904,264,0.545,265,0.59,266,0.545,267,0.56,268,0.545,269,0.575,270,0.545,271,0.545,272,0.605,273,0.517,274,0.605,275,0.575,276,0.575,277,0.575,278,0.545,279,0.59,280,0.545,281,0.59,282,0.545,283,0.56,284,0.545,285,0.858,286,0.545,287,0.545,288,0.59,289,0.545,290,0.59,291,0.605,292,1.055,293,0.503,294,0.531,295,0.56,296,0.605,297,0.531,298,0.971,299,0.605,300,0.531,301,0.605,302,0.517,303,0.605,304,0.531,305,0.56,306,0.56,307,0.59,308,0.605,316,3.433,324,3.095,340,4.378,345,1.982,356,1.718,578,3.734,692,1.982,770,2.082,793,2.213,795,2.213,835,3.734,848,5.058,853,3.119,854,4.559,882,3.809,890,4.008,897,3.305,1047,3.305,1465,4.686,1491,7.366,1492,1.663,1493,4.752,1494,5.008,1495,4.752,1496,4.752,1497,4.184,1498,5.008,1499,5.008,1500,4.559,1501,5.689,1502,5.689,1503,2.801,1504,2.55,1505,4.184,1506,2.55,1507,2.96,1508,2.801,1509,3.181,1510,2.55,1511,2.55,1512,2.801,1513,4.752,1514,5.464,1515,3.181,1516,5.689,1517,3.181,1518,4.752,1519,3.181,1520,3.809,1521,2.801,1522,2.55,1523,4.752,1524,2.801,1525,2.362,1526,2.362,1527,3.181,1528,6.753,1529,4.752,1530,3.181,1531,4.752,1532,3.181,1533,3.809,1534,3.181,1535,2.55,1536,2.213,1537,3.181,1538,3.181,1539,7.085,1540,3.181,1541,2.801,1542,3.181,1543,3.181,1544,3.181,1545,3.181,1546,3.181,1547,2.55,1548,2.801,1549,5.689,1550,3.181,1551,3.181,1552,2.801,1553,3.181,1554,4.752,1555,3.181,1556,3.181,1557,3.181,1558,3.181,1559,3.181,1560,3.181,1561,3.181]],["title/components/GridHelperComponent.html",[128,0.064,241,0.741]],["body/components/GridHelperComponent.html",[3,0.098,4,0.098,5,0.079,8,0.319,10,0.814,12,1.176,13,0.714,14,0.693,23,0.849,24,0.788,29,0.482,30,0.01,31,0.6,32,0.514,33,0.639,34,0.559,35,0.467,53,0.591,56,0.625,58,0.18,59,0.17,63,0.098,67,0.108,75,0.66,87,0.004,88,0.006,89,0.004,128,0.096,131,0.678,132,0.678,133,0.678,134,0.678,135,0.678,136,0.678,137,1.277,150,0.696,151,0.921,152,0.773,153,0.773,156,0.849,157,1.992,158,0.642,160,1.53,161,1.411,162,0.753,164,1.051,165,2.821,166,1.291,169,0.902,170,1.466,171,1.974,173,1.828,178,1.414,179,1.466,180,1.259,181,1.105,182,0.902,183,0.949,184,0.872,185,1.195,186,0.998,190,0.453,191,1.051,192,1.051,193,0.543,194,1.346,195,0.773,196,1.346,197,0.696,198,0.753,199,1.079,200,0.696,201,0.773,202,0.696,203,0.715,204,1.559,205,0.696,206,0.753,207,0.773,208,0.696,209,0.753,210,0.696,211,1.144,212,0.773,213,0.715,214,0.773,215,0.696,216,0.773,217,0.696,218,0.773,219,0.696,220,0.715,221,0.773,222,0.696,223,0.753,224,0.696,225,0.773,226,0.696,227,0.753,228,0.773,229,0.678,230,0.753,231,0.773,232,0.696,233,0.773,234,0.696,235,0.773,236,0.696,237,0.715,238,0.696,239,1.344,240,1.559,241,1.212,242,0.696,243,0.696,244,0.753,245,0.696,246,0.773,247,0.696,248,0.715,249,0.773,250,0.696,251,0.66,252,0.696,253,1.079,254,0.642,255,0.696,256,1.346,257,0.696,258,0.696,259,0.696,260,0.753,261,0.696,262,0.753,263,1.079,264,0.696,265,0.753,266,0.696,267,0.715,268,0.696,269,0.734,270,0.696,271,0.696,272,0.773,273,0.66,274,0.773,275,0.734,276,0.734,277,0.734,278,0.696,279,0.753,280,0.696,281,0.753,282,0.696,283,0.715,284,0.696,285,1.024,286,0.696,287,0.696,288,0.753,289,0.696,290,0.753,291,0.773,292,0.753,293,0.642,294,0.678,295,0.715,296,0.773,297,0.678,298,1.005,299,0.773,300,0.678,301,0.773,302,0.66,303,0.773,304,0.678,305,0.715,306,0.715,307,0.753,308,0.773,575,3.256,577,4.992,578,4.288,579,3.576,582,4.992,1562,6.547,1563,5.671,1564,5.751,1565,5.671,1566,4.062,1567,4.062,1568,4.062,1569,4.062]],["title/components/GridMeshComponent.html",[128,0.064,242,0.741]],["body/components/GridMeshComponent.html",[3,0.091,4,0.091,5,0.073,8,0.294,10,1.072,12,1.14,13,0.674,14,0.654,23,0.8,24,0.836,29,0.444,30,0.01,31,0.578,32,0.294,33,0.61,34,0.514,35,0.43,53,0.544,54,1.137,55,1.077,56,0.575,58,0.182,59,0.156,60,1.6,63,0.091,67,0.1,72,1.292,87,0.004,88,0.006,89,0.004,128,0.092,131,0.624,132,0.624,133,0.624,134,0.624,135,0.624,136,0.624,137,1.231,150,0.641,151,0.869,152,0.712,153,0.712,156,0.8,157,1.762,158,0.591,160,1.525,161,1.406,162,0.693,164,0.992,165,2.719,166,1.218,169,0.83,170,1.427,171,1.903,178,1.56,179,1.383,180,1.187,181,1.018,182,0.83,183,0.873,184,0.823,185,1.573,186,0.919,190,0.417,191,0.992,192,0.992,193,0.5,194,1.297,195,0.712,196,1.297,197,0.641,198,0.693,199,1.018,200,0.641,201,0.712,202,0.641,203,0.658,204,1.53,205,0.641,206,0.693,207,0.712,208,0.641,209,0.693,210,0.641,211,1.109,212,0.712,213,0.658,214,0.712,215,0.641,216,0.712,217,0.641,218,0.712,219,0.641,220,0.658,221,0.712,222,0.641,223,0.693,224,0.641,225,0.712,226,0.641,227,0.693,228,0.712,229,0.624,230,0.693,231,0.712,232,0.641,233,0.712,234,0.641,235,0.712,236,0.641,237,0.658,238,0.641,239,1.355,240,1.53,241,0.641,242,1.168,243,0.641,244,0.693,245,0.641,246,0.712,247,0.641,248,0.658,249,0.712,250,0.641,251,0.607,252,0.641,253,1.018,254,0.591,255,0.641,256,1.297,257,0.641,258,0.641,259,0.641,260,0.693,261,0.641,262,0.693,263,1.018,264,0.641,265,0.693,266,0.641,267,0.658,268,0.641,269,0.675,270,0.641,271,0.641,272,0.712,273,0.607,274,0.712,275,0.675,276,0.675,277,0.675,278,0.641,279,0.693,280,0.641,281,0.693,282,0.641,283,0.658,284,0.641,285,0.966,286,0.641,287,0.641,288,0.693,289,0.641,290,0.693,291,0.712,292,0.693,293,0.591,294,0.624,295,0.658,296,0.712,297,0.624,298,0.961,299,0.712,300,0.624,301,0.712,302,0.607,303,0.712,304,0.624,305,0.658,306,0.658,307,0.693,308,0.712,329,1.223,578,4.098,672,2.649,740,2.034,741,3.706,743,3.264,762,4.286,763,2.329,765,2.777,766,2.329,770,1.638,818,2.777,820,2.777,825,2.91,1498,5.497,1499,5.497,1500,5.462,1505,4.708,1507,3.331,1535,2.997,1541,3.292,1570,6.797,1571,5.348,1572,6.815,1573,2.997,1574,3.739,1575,3.739,1576,6.244,1577,3.292,1578,5.497,1579,3.292,1580,3.739,1581,3.739,1582,3.739,1583,3.739,1584,5.348,1585,3.739,1586,5.348,1587,3.739]],["title/components/HemisphereLightComponent.html",[128,0.064,243,0.741]],["body/components/HemisphereLightComponent.html",[3,0.095,4,0.095,5,0.076,8,0.308,10,0.786,12,1.161,13,0.697,14,0.677,23,0.828,24,0.818,27,1.668,29,0.465,30,0.01,31,0.591,32,0.504,33,0.627,34,0.539,35,0.451,53,0.571,54,1.07,55,1.013,56,0.603,58,0.178,59,0.164,60,0.87,63,0.095,67,0.105,75,0.637,87,0.004,88,0.006,89,0.004,128,0.094,131,0.654,132,0.654,133,0.654,134,0.654,135,0.654,136,0.654,137,1.258,150,0.672,151,0.899,152,0.746,153,0.746,155,2.728,156,0.828,157,1.97,158,0.62,160,1.528,161,1.408,162,0.727,163,4.843,164,1.026,165,2.778,166,1.26,168,4.76,169,0.87,170,1.45,171,1.944,172,2.912,173,1.8,174,3.632,175,2.912,178,1.506,179,1.43,180,1.228,181,1.067,182,0.87,183,0.916,184,0.851,185,1.154,186,0.964,189,2.912,190,0.437,191,1.026,192,1.026,193,0.524,194,1.325,195,0.746,196,1.325,197,0.672,198,0.727,199,1.053,200,0.672,201,0.746,202,0.672,203,0.69,204,1.547,205,0.672,206,0.727,207,0.746,208,0.672,209,0.727,210,0.672,211,1.129,212,0.746,213,0.69,214,0.746,215,0.672,216,0.746,217,0.672,218,0.746,219,0.672,220,0.69,221,0.746,222,0.672,223,0.727,224,0.672,225,0.746,226,0.672,227,0.727,228,0.746,229,0.654,230,0.727,231,0.746,232,0.672,233,0.746,234,0.672,235,0.746,236,0.672,237,0.69,238,0.672,239,1.158,240,1.547,241,0.672,242,0.672,243,1.193,244,1.189,245,0.672,246,0.746,247,0.672,248,0.69,249,0.746,250,0.672,251,0.637,252,0.672,253,1.053,254,0.62,255,0.672,256,1.325,257,0.672,258,0.672,259,0.672,260,0.727,261,0.672,262,0.727,263,1.053,264,0.672,265,0.727,266,0.672,267,0.69,268,0.672,269,0.708,270,0.672,271,0.672,272,0.746,273,0.637,274,0.746,275,0.708,276,0.708,277,0.708,278,0.672,279,0.727,280,0.672,281,0.727,282,0.672,283,0.69,284,0.672,285,0.999,286,0.672,287,0.672,288,0.727,289,0.672,290,0.727,291,0.746,292,0.727,293,0.62,294,0.654,295,0.69,296,0.746,297,0.654,298,0.986,299,0.746,300,0.654,301,0.746,302,0.637,303,0.746,304,0.654,305,0.69,306,0.69,307,0.727,308,0.746,645,2.022,1588,6.707,1589,5.533,1590,6.41,1591,6.41,1592,4.87,1593,5.533,1594,3.922,1595,3.922,1596,3.922,1597,3.922]],["title/injectables/IconService.html",[0,1.34,511,2.454]],["body/injectables/IconService.html",[0,1.83,1,5.324,2,2.089,3,0.104,4,0.163,5,0.084,8,0.339,9,1.183,10,1.663,11,5.283,12,1.27,13,0.744,14,0.722,15,2.1,16,5.81,17,5.81,18,4.731,19,4.731,20,4.559,21,4.731,22,4.731,24,0.959,26,4.686,27,2.129,29,0.97,30,0.01,31,0.694,32,0.66,33,0.8,34,1.079,35,0.966,36,5.69,37,4.686,38,5.283,40,4.686,41,3.197,43,3.197,45,3.197,47,3.197,49,3.504,50,1.282,51,3.197,53,0.859,54,0.985,55,0.933,56,0.662,58,0.143,59,0.18,63,0.143,64,1.529,65,3.677,66,5.37,67,0.115,75,0.959,85,3.197,87,0.005,88,0.006,89,0.005,156,1.008,351,2.74,356,2.293,511,3.35,728,3.999,790,4.926,1598,3.451,1599,4.306,1600,6.075,1601,4.306,1602,4.306,1603,3.79,1604,3.79,1605,3.79,1606,3.79,1607,3.79,1608,3.79,1609,3.79,1610,5.197,1611,4.306,1612,3.79,1613,3.79,1614,3.451,1615,7.202,1616,6.557,1617,6.557,1618,3.79,1619,3.79,1620,3.79,1621,3.79,1622,3.79,1623,3.79,1624,3.79,1625,3.79,1626,5.931,1627,3.79,1628,3.79,1629,3.79,1630,3.79,1631,3.79,1632,3.79,1633,3.79,1634,3.79,1635,3.79]],["title/interfaces/IconSource.html",[64,1.536,1600,3.211]],["body/interfaces/IconSource.html",[0,2.159,1,4.337,3,0.134,4,0.134,5,0.107,8,0.435,9,1.395,10,1.109,11,3.849,12,0.875,20,3.14,26,3.849,27,1.668,30,0.01,32,0.599,34,0.761,37,3.849,38,3.849,40,3.849,58,0.169,59,0.232,63,0.169,64,1.966,65,4.745,66,5.669,67,0.147,75,1.131,85,4.109,87,0.006,88,0.008,89,0.006,156,1.14,351,2.837,356,2.488,511,3.14,585,3.01,728,5.172,1598,4.435,1600,6.119,1610,4.871,1614,4.435,1615,7.772,1616,7.076,1617,7.076,1618,4.871,1619,4.871,1620,4.871,1621,4.871,1622,4.871,1623,4.871,1624,4.871,1625,4.871,1626,6.707,1627,4.871,1628,4.871,1629,4.871,1630,4.871,1631,4.871,1632,4.871,1633,4.871,1634,4.871,1635,4.871]],["title/components/LayerActorComponent.html",[128,0.064,245,0.741]],["body/components/LayerActorComponent.html",[3,0.086,4,0.086,5,0.069,8,0.278,9,1.029,13,0.647,14,0.628,15,1.948,24,0.936,27,1.591,29,0.419,30,0.01,31,0.563,32,0.633,33,0.346,34,0.486,35,0.764,50,1.264,53,0.515,54,0.59,55,0.559,56,0.931,58,0.161,59,0.148,63,0.086,67,0.094,75,0.574,87,0.004,88,0.006,89,0.004,112,3.003,128,0.089,131,0.59,132,0.59,133,0.59,134,0.59,135,0.59,136,0.59,137,1.2,150,0.606,151,0.834,152,0.673,153,0.673,156,0.769,158,0.559,160,1.521,161,1.402,162,0.656,164,0.953,166,1.17,167,2.651,173,2.153,178,1.437,182,0.785,183,0.826,184,0.79,190,0.394,191,0.953,192,0.953,193,0.472,194,1.264,195,0.673,196,1.264,197,0.606,198,0.656,199,0.978,200,0.606,201,0.673,202,0.606,203,0.622,204,1.509,205,0.606,206,0.656,207,0.673,208,0.606,209,0.656,210,0.606,211,1.085,212,0.673,213,0.622,214,0.673,215,0.606,216,0.673,217,0.606,218,0.673,219,0.606,220,0.622,221,0.673,222,0.606,223,0.656,224,0.606,225,0.673,226,0.606,227,0.656,228,0.673,229,0.59,230,0.656,231,0.673,232,0.88,233,0.673,234,0.606,235,0.673,236,0.606,237,0.622,238,0.606,239,1.093,240,1.509,241,0.606,242,0.606,243,0.606,244,0.656,245,1.138,246,1.151,247,0.606,248,0.622,249,0.673,250,0.606,251,0.574,252,0.606,253,0.978,254,0.559,255,0.606,256,1.264,257,0.606,258,0.606,259,0.606,260,0.656,261,0.606,262,0.656,263,0.978,264,0.606,265,0.656,266,0.606,267,0.622,268,0.606,269,0.639,270,0.606,271,0.606,272,0.673,273,0.574,274,0.673,275,0.639,276,0.639,277,0.639,278,0.606,279,0.656,280,0.606,281,0.656,282,0.606,283,0.622,284,0.606,285,0.928,286,0.606,287,0.606,288,0.656,289,0.606,290,0.656,291,0.673,292,1.122,293,0.559,294,0.59,295,0.622,296,0.673,297,0.59,298,0.931,299,0.673,300,0.59,301,0.673,302,0.574,303,0.673,304,0.59,305,0.622,306,0.622,307,0.656,308,0.673,324,3.291,329,1.979,340,4.309,590,3.291,672,1.5,746,2.834,748,4.309,835,3.971,847,4.931,848,5.322,849,5.846,853,3.372,854,4.849,855,4.493,856,3.049,882,5.322,890,3.941,893,2.202,907,4.849,908,3.113,1220,2.099,1492,1.848,1494,5.326,1504,2.834,1510,2.834,1511,2.834,1522,2.834,1526,2.626,1636,7.443,1637,5.137,1638,6.05,1639,3.113,1640,4.117,1641,3.113,1642,2.834,1643,3.536,1644,3.536,1645,3.536,1646,2.834,1647,3.536,1648,3.536,1649,3.536,1650,3.536,1651,6.05,1652,3.536]],["title/components/LineConnectorComponent.html",[128,0.064,247,0.741]],["body/components/LineConnectorComponent.html",[3,0.074,4,0.074,5,0.059,8,0.24,9,0.922,10,0.922,12,1.344,13,0.58,14,0.562,15,1.629,23,0.688,24,0.952,29,0.546,30,0.01,31,0.562,32,0.6,33,0.604,34,0.419,35,0.802,50,1.175,53,0.443,54,1.317,55,1.248,56,1.02,58,0.191,59,0.127,60,1.021,63,0.111,67,0.081,72,1.915,87,0.003,88,0.005,89,0.003,128,0.081,131,0.508,132,0.508,133,0.508,134,0.508,135,0.508,136,0.508,137,1.115,150,0.522,151,0.747,152,0.58,153,0.58,156,0.688,157,1.596,158,0.482,160,1.509,161,1.392,162,0.565,164,0.853,166,1.047,167,2.705,169,0.676,170,1.326,171,1.724,173,1.596,178,1.65,179,1.189,180,1.021,181,0.829,182,0.676,183,0.711,184,0.708,185,0.896,186,0.749,190,0.34,191,0.853,192,0.853,193,0.407,194,1.175,195,0.58,196,1.175,197,0.522,198,0.565,199,0.875,200,0.522,201,0.58,202,0.522,203,0.536,204,1.451,205,0.522,206,0.565,207,0.58,208,0.522,209,0.565,210,0.522,211,1.02,212,0.58,213,0.536,214,0.58,215,0.522,216,0.58,217,0.522,218,0.58,219,0.522,220,0.536,221,0.58,222,0.522,223,0.565,224,0.522,225,0.58,226,0.522,227,0.565,228,0.58,229,0.508,230,0.565,231,0.58,232,0.522,233,0.58,234,0.522,235,0.58,236,0.522,237,0.536,238,0.522,239,1.001,240,1.451,241,0.522,242,0.522,243,0.522,244,0.565,245,0.522,246,0.58,247,1.058,248,1.226,249,0.58,250,0.522,251,0.495,252,0.522,253,0.875,254,0.482,255,0.522,256,1.175,257,0.522,258,0.522,259,0.522,260,0.565,261,0.522,262,0.565,263,0.875,264,0.522,265,0.565,266,0.522,267,0.536,268,0.522,269,0.55,270,0.522,271,0.522,272,0.58,273,0.495,274,0.58,275,0.55,276,0.55,277,0.55,278,0.522,279,0.565,280,0.522,281,0.565,282,0.522,283,0.536,284,0.522,285,0.831,286,0.522,287,0.522,288,0.565,289,0.522,290,0.565,291,0.58,292,0.565,293,0.482,294,0.508,295,0.975,296,0.58,297,0.508,298,0.853,299,0.58,300,0.508,301,0.58,302,0.495,303,0.58,304,0.508,305,0.536,306,0.536,307,0.565,308,0.58,309,3.641,312,3.665,318,4.879,328,3.638,329,2.168,351,1.765,356,1.864,367,1.592,645,1.681,672,1.952,725,2.509,727,2.015,770,1.335,836,1.353,838,2.352,845,2.352,885,3.29,892,1.729,897,3.2,953,2.689,960,2.315,993,1.533,1027,2.865,1029,1.657,1030,2.119,1220,1.808,1237,2.442,1507,2.865,1547,3.687,1548,2.682,1552,2.682,1653,6.874,1654,2.442,1655,5.542,1656,4.6,1657,4.879,1658,5.542,1659,5.542,1660,5.542,1661,5.542,1662,6.175,1663,5.542,1664,5.542,1665,6.175,1666,6.175,1667,6.136,1668,6.175,1669,3.638,1670,6.175,1671,5.312,1672,4.6,1673,3.047,1674,3.047,1675,3.2,1676,3.047,1677,4.6,1678,3.047,1679,3.047,1680,3.047,1681,3.047,1682,3.047,1683,3.047,1684,3.047,1685,6.629,1686,3.047,1687,3.047,1688,3.047,1689,3.047,1690,3.047,1691,4.6,1692,3.047,1693,3.047,1694,6.175,1695,3.047,1696,3.047,1697,3.047,1698,4.6,1699,3.047,1700,3.047,1701,3.047,1702,3.047,1703,3.047,1704,3.047,1705,3.047,1706,3.047,1707,3.047,1708,3.047,1709,4.6,1710,3.047,1711,3.047,1712,3.047,1713,3.047,1714,3.047,1715,3.047,1716,4.6,1717,3.047,1718,3.047,1719,3.047,1720,3.047]],["title/components/LoaderActorComponent.html",[128,0.064,250,0.741]],["body/components/LoaderActorComponent.html",[3,0.073,4,0.073,5,0.058,8,0.237,9,0.915,12,1.342,13,0.575,14,0.558,15,1.868,20,3.744,23,0.683,24,0.931,27,1.093,29,0.358,30,0.01,31,0.521,32,0.567,33,0.538,34,0.415,35,0.854,50,1.321,53,0.439,54,1.025,55,0.971,56,0.945,58,0.18,59,0.126,60,1.013,63,0.073,67,0.08,68,2.239,72,2.122,75,0.49,87,0.003,88,0.005,89,0.003,128,0.081,131,0.503,132,0.503,133,0.503,134,0.503,135,0.503,136,0.503,137,1.11,150,0.517,151,0.741,152,0.574,153,0.574,156,0.683,157,1.588,158,0.477,160,1.508,161,1.391,162,0.559,164,0.559,165,2.197,166,1.039,169,0.669,170,1.321,171,1.715,173,1.424,178,1.192,179,1.18,180,1.013,182,0.669,183,0.704,184,0.702,186,0.741,190,0.336,191,0.846,192,0.846,193,0.403,194,1.169,195,0.574,196,1.169,197,0.517,198,0.559,199,0.869,200,0.517,201,0.574,202,0.517,203,0.531,204,1.447,205,0.517,206,0.559,207,0.574,208,0.517,209,0.559,210,0.517,211,1.015,212,0.574,213,0.531,214,0.574,215,0.517,216,0.574,217,0.517,218,0.574,219,0.517,220,0.531,221,0.574,222,0.517,223,0.559,224,0.517,225,0.574,226,0.517,227,0.559,228,0.574,229,0.503,230,0.559,231,0.574,232,1.131,233,0.574,234,0.517,235,0.574,236,0.517,237,0.531,238,0.517,239,0.995,240,1.447,241,0.517,242,0.517,243,0.517,244,0.559,245,0.517,246,0.574,247,0.517,248,0.531,249,0.574,250,1.053,251,0.895,252,0.517,253,0.869,254,0.477,255,0.517,256,1.169,257,0.517,258,0.517,259,0.517,260,0.559,261,0.517,262,0.559,263,0.869,264,0.517,265,0.559,266,0.517,267,0.531,268,0.517,269,0.545,270,0.517,271,0.782,272,0.574,273,0.49,274,0.574,275,0.545,276,0.545,277,0.545,278,0.517,279,0.559,280,0.517,281,0.559,282,0.517,283,0.531,284,0.517,285,0.825,286,0.517,287,0.517,288,0.559,289,0.517,290,0.559,291,0.574,292,1.021,293,0.477,294,0.503,295,0.531,296,0.574,297,0.503,298,0.847,299,0.574,300,0.503,301,0.574,302,0.49,303,0.574,304,0.503,305,0.531,306,0.531,307,0.559,308,0.574,309,3.628,312,3.646,315,4.923,328,3.615,329,2.691,332,4.923,333,4.923,351,1.754,356,1.663,365,4.414,580,3.658,645,2.537,770,1.321,777,2.877,778,1.711,779,2.996,790,1.79,791,2.416,792,1.79,821,1.878,825,3.777,836,1.342,838,2.337,845,2.606,885,3.269,892,1.711,923,1.979,952,2.58,953,2.672,959,2.98,1005,2.097,1220,3.269,1230,3.389,1243,2.239,1245,2.097,1247,2.097,1276,2.654,1281,2.239,1311,1.79,1465,4.09,1492,1.576,1503,2.654,1504,2.416,1506,3.658,1507,1.878,1524,2.654,1525,2.239,1526,2.239,1640,2.416,1669,3.615,1721,7.35,1722,4.564,1723,5.508,1724,5.508,1725,5.508,1726,4.923,1727,3.015,1728,4.018,1729,3.015,1730,3.015,1731,3.015,1732,3.015,1733,3.015,1734,3.015,1735,3.015,1736,3.015,1737,1.979,1738,3.015,1739,3.015,1740,2.416,1741,2.239,1742,3.015,1743,3.015,1744,3.015,1745,3.015,1746,3.015,1747,4.564,1748,5.508,1749,3.015,1750,3.015,1751,3.015,1752,3.015,1753,3.015,1754,3.015,1755,3.015,1756,3.015,1757,3.015,1758,3.015,1759,2.654,1760,2.654,1761,2.654,1762,5.407,1763,3.015,1764,3.015,1765,4.018,1766,4.564,1767,3.658,1768,3.015,1769,3.015,1770,3.015,1771,3.015]],["title/components/MapControlsComponent.html",[128,0.064,252,0.741]],["body/components/MapControlsComponent.html",[3,0.074,4,0.074,5,0.059,8,0.24,9,0.924,10,0.612,12,1.206,14,0.564,15,1.364,23,0.69,24,0.943,29,0.547,30,0.01,31,0.563,32,0.486,33,0.451,34,0.42,35,0.711,50,1.263,53,0.808,54,1.351,55,1.28,56,0.47,58,0.175,59,0.128,63,0.074,67,0.081,72,1.593,75,0.496,87,0.003,88,0.005,89,0.003,128,0.082,131,0.51,132,0.51,133,0.51,134,0.51,135,0.51,136,0.51,137,1.117,150,0.524,151,0.749,152,0.582,153,0.582,156,0.69,158,0.483,160,1.51,161,1.392,162,0.567,164,0.855,166,1.05,169,0.678,170,1.328,173,1.192,178,1.769,181,0.832,184,0.47,186,0.751,190,0.341,191,0.855,192,0.855,193,0.408,194,1.177,195,0.582,196,1.177,197,0.524,198,0.567,199,0.877,200,0.524,201,0.582,202,0.524,203,0.538,204,1.452,205,0.524,206,0.567,207,0.582,208,0.524,209,0.567,210,0.524,211,1.021,212,0.582,213,0.538,214,0.582,215,0.524,216,0.582,217,0.524,218,0.582,219,0.524,220,0.538,221,0.582,222,0.524,223,0.567,224,0.524,225,0.582,226,0.524,227,0.567,228,0.582,229,0.51,230,0.567,231,0.582,232,0.524,233,0.582,234,0.524,235,0.582,236,0.524,237,0.538,238,0.524,239,1.003,240,1.452,241,0.524,242,0.524,243,0.524,244,0.567,245,0.524,246,0.582,247,0.524,248,0.538,249,0.582,250,0.524,251,0.496,252,1.06,253,0.877,254,0.483,255,0.524,256,1.177,257,0.524,258,0.524,259,0.524,260,0.855,261,0.524,262,0.567,263,0.877,264,0.524,265,0.567,266,0.524,267,0.538,268,0.524,269,0.552,270,0.524,271,0.524,272,0.582,273,0.496,274,0.582,275,0.552,276,0.552,277,0.552,278,0.524,279,0.567,280,0.524,281,0.567,282,0.524,283,0.538,284,0.524,285,0.833,286,0.524,287,0.524,288,0.567,289,0.524,290,0.567,291,0.582,292,0.567,293,0.483,294,0.51,295,0.538,296,0.582,297,0.51,298,0.854,299,0.582,300,0.51,301,0.582,302,0.496,303,0.582,304,0.51,305,0.538,306,0.538,307,0.567,308,0.582,309,3.752,312,3.296,351,2.222,367,2.41,378,2.326,544,3.617,645,1.117,655,2.616,672,1.956,673,4.301,685,1.597,725,2.8,727,1.339,746,1.431,821,2.872,836,1.356,838,2.356,845,2.624,885,3.296,892,1.734,923,2.006,953,2.694,960,2.32,993,2.32,1025,1.903,1217,1.814,1234,2.69,1245,2.125,1247,2.125,1281,2.269,1311,1.814,1465,3.424,1675,3.207,1772,2.449,1773,7.488,1774,2.449,1775,4.888,1776,4.888,1777,3.695,1778,4.888,1779,5.444,1780,5.553,1781,5.553,1782,5.553,1783,5.553,1784,5.553,1785,5.553,1786,5.553,1787,4.888,1788,5.553,1789,5.553,1790,4.888,1791,5.553,1792,4.888,1793,4.611,1794,3.056,1795,3.056,1796,3.056,1797,3.056,1798,4.611,1799,2.69,1800,3.056,1801,4.611,1802,3.056,1803,3.056,1804,3.056,1805,5.444,1806,3.056,1807,3.056,1808,3.056,1809,3.056,1810,3.056,1811,3.056,1812,3.056,1813,3.056,1814,4.611,1815,2.449,1816,2.69,1817,2.69,1818,4.059,1819,2.69,1820,4.059,1821,4.059,1822,2.69,1823,4.059,1824,4.059,1825,3.056,1826,3.056,1827,2.69,1828,2.69,1829,2.69,1830,3.056,1831,3.056,1832,3.056,1833,4.611,1834,3.056,1835,3.056,1836,3.056,1837,4.611,1838,3.056,1839,3.056,1840,3.056,1841,3.056,1842,3.056,1843,3.056,1844,3.056,1845,3.056,1846,3.056,1847,3.056,1848,3.056,1849,3.056,1850,3.056,1851,3.056,1852,4.611,1853,3.056,1854,3.056,1855,3.056,1856,3.056,1857,2.269,1858,3.424]],["title/components/ModelActorComponent.html",[128,0.064,135,0.721]],["body/components/ModelActorComponent.html",[3,0.096,4,0.096,5,0.077,8,0.311,9,1.115,10,0.793,12,1.018,13,0.701,15,1.582,23,0.833,24,0.821,27,1.88,29,0.66,30,0.01,31,0.625,32,0.55,33,0.683,34,0.544,35,0.455,50,0.753,53,0.576,58,0.178,59,0.166,60,0.878,63,0.096,67,0.105,75,0.643,87,0.004,88,0.006,89,0.004,112,2.714,128,0.095,131,0.66,132,0.66,133,0.66,134,0.66,135,1.166,136,0.66,137,1.331,150,0.678,151,0.904,152,0.753,153,0.753,156,0.833,157,1.807,158,0.625,160,1.528,161,1.409,162,0.734,164,1.032,166,1.267,169,0.878,170,1.454,171,1.952,178,1.204,179,1.439,182,0.878,183,0.924,184,0.856,186,0.972,190,0.441,191,1.032,192,1.032,193,0.529,194,1.33,195,0.753,196,1.33,197,0.678,198,0.734,199,1.059,200,0.678,201,0.753,202,0.678,203,0.696,204,1.55,205,0.678,206,0.734,207,0.753,208,0.678,209,0.734,210,0.678,211,1.133,212,0.753,213,0.696,214,0.753,215,0.678,216,0.753,217,0.678,218,0.753,219,0.678,220,0.696,221,0.753,222,0.678,223,0.734,224,0.678,225,0.753,226,0.678,227,0.734,228,0.753,229,0.66,230,0.734,231,0.753,232,0.678,233,0.753,234,0.678,235,0.753,236,0.678,237,0.696,238,0.678,239,1.163,240,1.55,241,0.678,242,0.678,243,0.678,244,0.734,245,0.678,246,0.753,247,0.678,248,0.696,249,0.753,250,0.678,251,0.643,252,0.678,253,1.059,254,1.288,255,0.678,256,1.33,257,0.678,258,0.678,259,0.678,260,0.734,261,0.678,262,0.734,263,1.059,264,0.678,265,0.734,266,0.678,267,0.696,268,0.678,269,0.715,270,0.678,271,0.954,272,0.753,273,0.643,274,0.753,275,0.715,276,0.715,277,0.715,278,0.678,279,0.734,280,0.678,281,0.734,282,0.678,283,0.696,284,0.678,285,1.006,286,0.678,287,0.678,288,0.734,289,0.678,290,0.734,291,0.753,292,1.296,293,0.625,294,0.66,295,0.696,296,0.753,297,0.66,298,0.991,299,0.753,300,0.66,301,0.753,302,0.643,303,0.753,304,0.66,305,0.696,306,0.696,307,0.734,308,0.753,511,2.245,512,5.152,856,3.304,893,2.464,1492,2.068,1512,4.9,1642,3.171,1646,4.461,1859,6.725,1860,4.227,1861,5.567,1862,6.44,1863,3.956,1864,3.956,1865,3.956,1866,3.483,1867,3.956,1868,3.956,1869,3.483,1870,3.483]],["title/injectables/ModelService.html",[0,1.34,512,2.838]],["body/injectables/ModelService.html",[0,1.948,1,5.403,2,2.291,3,0.114,4,0.171,5,0.092,8,0.371,9,1.259,10,1.695,11,5.453,12,1.301,13,0.792,14,0.768,15,2.131,16,6.034,17,6.034,18,5.036,19,5.036,20,4.669,21,5.036,22,5.036,24,0.972,26,4.912,27,2.148,29,0.991,30,0.01,31,0.709,32,0.672,33,0.817,34,1.109,35,0.983,36,5.812,37,4.912,38,5.453,40,4.912,41,3.507,43,3.507,45,3.507,47,3.507,49,3.73,50,1.344,51,3.507,53,0.915,54,1.049,55,0.993,56,0.726,58,0.152,59,0.198,63,0.114,65,5.205,66,4.636,67,0.126,75,1.021,87,0.005,88,0.007,89,0.005,156,0.94,185,1.848,512,4.125,790,5.021,1603,4.157,1604,4.157,1605,4.157,1606,4.157,1607,4.157,1608,4.157,1609,4.157,1612,4.157,1613,4.157,1614,3.785,1871,4.157,1872,4.723,1873,4.723,1874,4.723,1875,4.723,1876,4.723,1877,4.723,1878,4.723]],["title/interfaces/NearestIntersection.html",[64,1.536,1879,3.211]],["body/interfaces/NearestIntersection.html",[0,1.82,3,0.103,4,0.103,5,0.083,8,0.336,9,1.176,15,1.923,23,0.639,30,0.01,32,0.462,56,0.903,58,0.183,59,0.179,60,1.603,63,0.103,64,1.517,67,0.114,72,2.317,75,1.326,87,0.005,88,0.006,89,0.005,157,1.518,180,1.303,184,1.233,185,1.256,298,1.111,316,2.323,329,2.811,330,3.422,337,3.17,342,3.422,351,2.3,355,5.789,356,1.772,544,2.071,585,2.323,597,2.232,616,4.297,645,2.145,671,2.97,672,2.491,680,2.97,692,4.178,728,2.534,763,4.499,766,3.656,792,4.494,836,1.256,838,2.491,845,1.812,855,3.17,926,3.17,1136,3.17,1233,2.97,1274,3.17,1536,5.937,1675,2.97,1879,5.81,1880,3.422,1881,4.981,1882,4.403,1883,3.17,1884,2.97,1885,3.759,1886,5.167,1887,3.759,1888,5.905,1889,3.759,1890,4.981,1891,3.17,1892,5.905,1893,3.759,1894,3.759,1895,3.759,1896,3.759,1897,3.759,1898,3.759,1899,3.759,1900,3.759,1901,3.759,1902,3.759,1903,3.759,1904,2.97,1905,3.422,1906,3.759,1907,5.905,1908,3.759,1909,3.759,1910,3.422,1911,3.759,1912,4.083,1913,3.759,1914,3.759,1915,3.759,1916,4.178,1917,3.759,1918,3.759,1919,5.167,1920,5.905,1921,5.905,1922,5.905,1923,5.167,1924,5.167,1925,6.666,1926,6.666,1927,5.167,1928,3.759,1929,3.759,1930,5.905,1931,3.17,1932,3.759,1933,5.167,1934,5.167,1935,3.759,1936,3.759,1937,3.759,1938,3.759,1939,3.759,1940,3.759,1941,3.759,1942,4.704,1943,3.759,1944,3.759,1945,3.759,1946,3.759,1947,3.759,1948,3.759,1949,5.167,1950,4.359,1951,3.759,1952,6.359,1953,5.167,1954,3.759,1955,3.759,1956,3.759,1957,3.759]],["title/interfaces/Node.html",[64,1.536,591,2.176]],["body/interfaces/Node.html",[3,0.147,4,0.147,5,0.117,8,0.476,9,1.476,27,2.174,30,0.01,31,0.514,32,0.691,33,0.841,34,1.135,58,0.147,63,0.205,64,3.004,87,0.007,88,0.008,89,0.007,112,2.152,156,1.235,167,2.654,173,1.566,211,1.133,254,1.305,426,3.295,585,3.295,586,5.02,587,2.938,588,3.976,589,4.006,590,3.295,591,3.705,592,3.976,593,3.437,594,3.295,595,3.976,596,4.213,597,4.147,598,3.773,599,3.166]],["title/components/ObjLoaderComponent.html",[128,0.064,257,0.741]],["body/components/ObjLoaderComponent.html",[3,0.082,4,0.082,5,0.141,8,0.267,9,0.998,10,0.998,12,1.146,13,0.628,14,0.609,15,0.833,23,0.745,24,0.835,27,1.841,29,0.591,30,0.01,31,0.588,32,0.545,33,0.636,34,0.466,35,0.573,50,0.645,53,0.493,54,0.566,55,0.536,56,0.908,58,0.193,59,0.142,60,1.105,63,0.082,67,0.09,75,0.551,87,0.004,88,0.005,89,0.004,95,3.351,96,3.876,128,0.102,131,0.566,132,0.566,133,0.566,134,0.566,135,0.566,136,0.566,137,1.176,150,0.581,151,0.809,152,0.645,153,0.645,156,0.745,157,1.683,158,0.536,160,1.518,161,1.399,162,0.629,164,0.924,166,1.134,169,0.752,170,1.38,171,1.817,178,1.408,179,1.288,180,1.105,181,0.922,182,0.752,183,0.792,184,0.766,185,0.997,186,0.833,190,0.378,191,0.924,192,0.924,193,0.453,194,1.239,195,0.645,196,1.239,197,0.581,198,0.629,199,0.948,200,0.581,201,0.645,202,0.581,203,0.596,204,1.493,205,0.581,206,0.629,207,0.645,208,0.581,209,0.629,210,0.581,211,1.067,212,0.645,213,0.596,214,0.645,215,0.581,216,0.645,217,0.581,218,0.645,219,0.581,220,0.596,221,0.645,222,0.581,223,0.629,224,0.581,225,0.645,226,0.581,227,0.629,228,0.645,229,0.566,230,0.629,231,0.645,232,0.581,233,0.645,234,0.581,235,0.645,236,0.581,237,0.596,238,0.581,239,1.067,240,1.493,241,0.581,242,0.581,243,0.581,244,0.629,245,0.581,246,0.645,247,0.581,248,0.596,249,0.645,250,0.581,251,1.057,252,0.581,253,0.948,254,0.933,255,0.581,256,1.239,257,1.115,258,1.386,259,0.581,260,0.629,261,0.581,262,0.629,263,0.948,264,0.581,265,0.629,266,0.581,267,0.596,268,0.581,269,0.612,270,0.581,271,0.581,272,0.645,273,0.551,274,0.645,275,0.612,276,0.612,277,0.612,278,0.581,279,0.629,280,0.581,281,0.629,282,0.581,283,0.596,284,0.581,285,0.9,286,0.581,287,0.581,288,0.629,289,0.581,290,0.629,291,0.645,292,0.629,293,0.536,294,0.566,295,0.596,296,0.645,297,0.566,298,0.908,299,0.645,300,0.566,301,0.645,302,0.551,303,0.645,304,0.566,305,0.596,306,0.596,307,0.629,308,0.645,311,2.225,329,1.931,500,1.705,511,1.923,513,4.272,645,1.239,685,1.772,777,3.048,856,2.956,893,2.111,929,2.517,1264,2.358,1458,2.984,1958,6.767,1959,2.358,1960,4.981,1961,4.981,1962,4.981,1963,2.984,1964,4.385,1965,4.981,1966,6.597,1967,4.527,1968,5.729,1969,5.729,1970,5.216,1971,4.981,1972,3.39,1973,5.557,1974,6.934,1975,6.934,1976,6.104,1977,6.934,1978,7.022,1979,4.385,1980,3.39,1981,2.984,1982,3.39,1983,4.981,1984,2.984,1985,2.984,1986,3.39,1987,3.39,1988,2.984,1989,3.39,1990,3.39,1991,3.39,1992,2.358,1993,3.39,1994,3.39,1995,4.981,1996,2.517,1997,4.981,1998,2.358,1999,3.464,2000,3.39,2001,2.984,2002,2.717,2003,2.717,2004,2.984,2005,3.39,2006,3.39,2007,3.39,2008,3.39,2009,2.984,2010,3.39,2011,3.39,2012,4.732,2013,3.39,2014,3.39,2015,3.39]],["title/injectables/ObjLoaderService.html",[0,1.34,513,2.838]],["body/injectables/ObjLoaderService.html",[0,2.121,2,2.61,3,0.13,4,0.13,5,0.104,8,0.423,9,1.371,10,1.507,12,1.341,14,0.836,15,2.008,24,0.931,27,2.033,29,0.939,30,0.01,31,0.671,32,0.622,33,0.774,35,0.91,49,4.464,50,1.302,53,0.783,54,1.141,55,1.081,56,1.217,58,0.205,59,0.225,63,0.13,67,0.143,75,0.874,87,0.006,88,0.008,89,0.006,90,5.482,93,5.08,94,5.877,95,3.882,96,4.49,98,5.585,100,5.195,101,3.995,156,1.024,180,1.669,251,1.222,254,0.851,329,2.46,500,2.707,513,4.49,790,4.464,1450,4.312,1451,4.312,1452,4.312,1453,4.312,1966,4.737,1970,6.028,1984,4.737,1985,4.737,1998,3.742,1999,4.758,2009,4.737,2016,6.967,2017,4.312,2018,6.841,2019,5.381,2020,6.841,2021,7.521,2022,5.381,2023,5.381,2024,4.312,2025,3.532,2026,4.737,2027,4.737,2028,5.381,2029,5.381,2030,4.737,2031,5.381]],["title/components/ObjectLoaderComponent.html",[128,0.064,255,0.741]],["body/components/ObjectLoaderComponent.html",[3,0.096,4,0.096,5,0.077,8,0.311,9,1.115,10,1.115,12,1.164,13,0.701,14,0.681,23,0.833,24,0.718,29,0.469,30,0.01,31,0.593,32,0.311,33,0.63,34,0.544,35,0.455,53,0.576,54,0.66,55,0.625,56,0.991,58,0.185,59,0.166,63,0.096,67,0.105,75,0.643,87,0.004,88,0.006,89,0.004,95,3.655,128,0.095,131,0.66,132,0.66,133,0.66,134,0.66,135,0.66,136,0.66,137,1.263,150,0.678,151,0.904,152,0.753,153,0.753,156,0.833,157,1.807,158,0.625,160,1.528,161,1.409,162,0.734,164,1.032,169,0.878,170,1.454,171,1.952,179,1.439,180,1.235,181,1.077,182,0.878,183,0.924,184,1.075,185,1.164,186,0.972,190,0.441,191,1.032,192,1.032,193,0.529,194,1.33,195,0.753,196,1.33,197,0.678,198,0.734,199,1.059,200,0.678,201,0.753,202,0.678,203,0.696,204,1.55,205,0.678,206,0.734,207,0.753,208,0.678,209,0.734,210,0.678,211,1.133,212,0.753,213,0.696,214,0.753,215,0.678,216,0.753,217,0.678,218,0.753,219,0.678,220,0.696,221,0.753,222,0.678,223,0.734,224,0.678,225,0.753,226,0.678,227,0.734,228,0.753,229,0.66,230,0.734,231,0.753,232,0.678,233,0.753,234,0.678,235,0.753,236,0.678,237,0.696,238,0.678,239,1.163,240,1.55,241,0.678,242,0.678,243,0.678,244,0.734,245,0.678,246,0.753,247,0.678,248,0.696,249,0.753,250,0.678,251,1.275,252,0.678,253,1.059,254,1.105,255,1.198,256,1.33,257,0.678,258,0.678,259,0.678,260,0.734,261,0.678,262,0.734,263,1.059,264,0.678,265,0.734,266,0.678,267,0.696,268,0.678,269,0.715,270,0.678,271,0.678,272,0.753,273,0.643,274,0.753,275,0.715,276,0.715,277,0.715,278,0.678,279,0.734,280,0.678,281,0.734,282,0.678,283,0.696,284,0.678,285,1.006,286,0.678,287,0.678,288,0.734,289,0.678,290,0.734,291,0.753,292,0.734,293,0.625,294,0.66,295,0.696,296,0.753,297,0.66,298,0.991,299,0.753,300,0.66,301,0.753,302,0.643,303,0.753,304,0.66,305,0.696,306,0.696,307,0.734,308,0.753,324,2.152,329,2.106,500,1.991,627,3.483,1959,2.752,1964,4.782,1967,4.861,1976,3.483,1978,3.483,1981,3.483,1998,2.752,1999,3.872,2030,3.483,2032,6.152,2033,5.567,2034,5.567,2035,5.567,2036,3.956,2037,3.483,2038,3.956,2039,3.956,2040,3.956,2041,3.171,2042,3.483,2043,3.956]],["title/components/OrbitControlsComponent.html",[128,0.064,259,0.741]],["body/components/OrbitControlsComponent.html",[3,0.093,4,0.093,5,0.075,8,0.303,10,0.772,12,1.153,14,0.668,23,0.817,24,0.813,29,0.648,30,0.01,31,0.619,32,0.43,33,0.534,34,0.53,35,0.628,50,1.04,53,0.561,54,0.911,55,0.864,56,0.593,58,0.176,59,0.161,63,0.093,67,0.103,75,0.626,87,0.004,88,0.006,89,0.004,128,0.093,131,0.643,132,0.643,133,0.643,134,0.643,135,0.643,136,0.643,137,1.248,150,0.66,151,0.887,152,0.733,153,0.733,156,0.817,158,0.609,160,1.527,161,1.407,162,0.714,164,1.013,166,1.244,169,0.855,170,1.441,178,1.373,181,1.048,184,0.593,186,0.946,190,0.429,191,1.013,192,1.013,193,0.515,194,1.314,195,0.733,196,1.314,197,0.66,198,0.714,199,1.04,200,0.66,201,0.733,202,0.66,203,0.678,204,1.541,205,0.66,206,0.714,207,0.733,208,0.66,209,0.714,210,0.66,211,1.122,212,0.733,213,0.678,214,0.733,215,0.66,216,0.733,217,0.66,218,0.733,219,0.66,220,0.678,221,0.733,222,0.66,223,0.714,224,0.66,225,0.733,226,0.66,227,0.714,228,0.733,229,0.643,230,0.714,231,0.733,232,0.66,233,0.733,234,0.66,235,0.733,236,0.66,237,0.678,238,0.66,239,1.147,240,1.541,241,0.66,242,0.66,243,0.66,244,0.714,245,0.66,246,0.733,247,0.66,248,0.678,249,0.733,250,0.66,251,0.626,252,0.66,253,1.04,254,0.609,255,0.66,256,1.314,257,0.66,258,0.66,259,1.183,260,1.281,261,0.66,262,0.714,263,1.04,264,0.66,265,0.714,266,0.66,267,0.678,268,0.66,269,0.696,270,0.66,271,0.66,272,0.733,273,0.626,274,0.733,275,0.696,276,0.696,277,0.696,278,0.66,279,0.714,280,0.66,281,0.714,282,0.66,283,0.678,284,0.66,285,0.987,286,0.66,287,0.66,288,0.714,289,0.66,290,0.714,291,0.733,292,0.714,293,0.609,294,0.643,295,0.678,296,0.733,297,0.643,298,0.976,299,0.733,300,0.643,301,0.733,302,0.626,303,0.733,304,0.643,305,0.678,306,0.678,307,0.714,308,0.733,544,3.861,645,1.408,655,3.1,725,3.127,727,1.687,746,1.804,836,1.607,953,3.079,960,2.748,993,2.748,1025,2.399,1217,2.286,1311,2.286,1772,3.087,1774,3.087,1775,5.587,1776,5.587,1777,4.378,1778,5.587,1779,6.08,1790,5.587,1792,5.587,1799,3.391,1805,4.809,1815,4.378,1816,3.391,1817,3.391,1818,4.809,1819,3.391,1820,4.809,1821,4.809,1822,3.391,1823,4.809,1824,4.809,1827,3.391,1828,3.391,1829,3.391,1857,2.86,1858,4.056,2044,6.667,2045,5.463,2046,3.852,2047,3.852]],["title/components/OrthographicCameraComponent.html",[128,0.064,261,0.741]],["body/components/OrthographicCameraComponent.html",[3,0.088,4,0.088,5,0.07,8,0.285,10,0.727,12,1.21,13,0.659,14,0.64,15,1.508,23,0.783,24,0.827,29,0.728,30,0.01,31,0.63,32,0.483,33,0.6,34,0.499,35,0.773,50,1.413,53,0.528,54,0.605,55,0.573,56,0.558,58,0.172,59,0.152,60,0.805,63,0.088,67,0.097,72,1.807,75,0.589,87,0.004,88,0.006,89,0.004,128,0.099,131,0.605,132,0.605,133,0.605,134,0.605,135,0.605,136,0.605,137,1.214,150,0.621,151,0.85,152,0.69,153,0.69,156,0.783,158,0.573,160,1.522,161,1.404,162,0.672,164,0.97,166,1.191,169,0.805,170,1.413,173,1.587,178,1.132,180,1.161,181,0.987,182,0.805,183,0.847,184,0.558,186,0.891,190,0.404,191,0.97,192,0.97,193,0.485,194,1.279,195,0.69,196,1.279,197,0.621,198,0.672,199,0.996,200,0.621,201,0.69,202,0.621,203,0.638,204,1.519,205,0.621,206,0.672,207,0.69,208,0.621,209,0.672,210,0.621,211,1.096,212,0.69,213,0.638,214,0.69,215,0.621,216,0.69,217,0.621,218,0.69,219,0.621,220,0.638,221,0.69,222,0.621,223,0.672,224,0.621,225,0.69,226,0.621,227,0.672,228,0.69,229,0.605,230,0.672,231,0.69,232,0.621,233,0.69,234,0.621,235,0.69,236,0.621,237,0.638,238,0.621,239,1.109,240,1.519,241,0.621,242,0.621,243,0.621,244,0.672,245,0.621,246,0.69,247,0.621,248,0.638,249,0.69,250,0.621,251,0.589,252,0.621,253,0.996,254,0.573,255,0.621,256,1.279,257,0.621,258,0.621,259,0.621,260,0.672,261,1.151,262,1.138,263,0.996,264,0.621,265,0.672,266,0.621,267,0.638,268,0.621,269,0.655,270,0.621,271,0.621,272,0.69,273,0.589,274,0.69,275,0.655,276,0.655,277,0.655,278,0.621,279,0.672,280,0.621,281,0.672,282,0.621,283,0.638,284,0.621,285,0.945,286,0.621,287,0.621,288,0.672,289,0.621,290,0.672,291,0.69,292,0.672,293,0.573,294,0.605,295,0.638,296,0.69,297,0.605,298,0.944,299,0.69,300,0.605,301,0.69,302,0.589,303,0.69,304,0.605,305,0.638,306,0.638,307,0.672,308,0.69,351,1.155,356,1.095,367,1.896,377,2.308,616,3.483,671,3.639,672,3.323,673,2.523,680,3.639,685,1.896,725,3.042,727,2.292,836,1.539,953,2.978,960,2.633,993,2.633,1029,1.973,1354,4.193,1394,3.193,1882,4.676,1912,3.639,2048,6.736,2049,2.907,2050,5.232,2051,5.915,2052,4.606,2053,6.72,2054,4.606,2055,3.627,2056,3.627,2057,4.606,2058,3.627,2059,5.385,2060,3.627,2061,3.627,2062,3.627,2063,3.627,2064,5.232,2065,6.138,2066,3.627,2067,3.627,2068,3.627,2069,3.627,2070,7.125,2071,3.627,2072,3.627,2073,3.627,2074,3.627,2075,3.627,2076,3.193,2077,3.627,2078,3.627]],["title/components/PerspectiveCameraComponent.html",[128,0.064,264,0.741]],["body/components/PerspectiveCameraComponent.html",[3,0.094,4,0.094,5,0.075,8,0.306,10,0.779,12,1.096,13,0.693,14,0.672,15,1.568,23,0.823,24,0.847,29,0.652,30,0.01,31,0.621,32,0.575,33,0.538,34,0.535,35,0.632,50,1.214,53,0.566,56,0.598,58,0.177,59,0.163,63,0.094,67,0.104,87,0.004,88,0.006,89,0.004,128,0.094,131,0.649,132,0.649,133,0.649,134,0.649,135,0.649,136,0.649,137,1.253,150,0.666,151,0.893,152,0.74,153,0.74,156,0.823,158,0.615,160,1.527,161,1.408,162,0.721,164,1.02,166,1.252,169,0.863,170,1.446,173,2.098,178,1.501,180,1.221,181,1.058,182,0.863,183,0.908,184,0.598,186,0.955,190,0.433,191,1.02,192,1.02,193,0.52,194,1.32,195,0.74,196,1.32,197,0.666,198,0.721,199,1.047,200,0.666,201,0.74,202,0.666,203,0.684,204,1.544,205,0.666,206,0.721,207,0.74,208,0.666,209,0.721,210,0.666,211,1.126,212,0.74,213,0.684,214,0.74,215,0.666,216,0.74,217,0.666,218,0.74,219,0.666,220,0.684,221,0.74,222,0.666,223,0.721,224,0.666,225,0.74,226,0.666,227,0.721,228,0.74,229,0.649,230,0.721,231,0.74,232,0.666,233,0.74,234,0.666,235,0.74,236,0.666,237,0.684,238,0.666,239,1.153,240,1.544,241,0.666,242,0.666,243,0.666,244,0.721,245,0.666,246,0.74,247,0.666,248,0.684,249,0.74,250,0.666,251,0.632,252,0.666,253,1.047,254,0.615,255,0.666,256,1.32,257,0.666,258,0.666,259,0.666,260,0.721,261,0.666,262,0.721,263,1.047,264,1.189,265,1.183,266,0.666,267,0.684,268,0.666,269,0.702,270,0.666,271,0.666,272,0.74,273,0.632,274,0.74,275,0.702,276,0.702,277,0.702,278,0.666,279,0.721,280,0.666,281,0.721,282,0.666,283,0.684,284,0.666,285,0.993,286,0.666,287,0.666,288,0.721,289,0.666,290,0.721,291,0.74,292,0.721,293,0.615,294,0.649,295,0.684,296,0.74,297,0.649,298,0.981,299,0.74,300,0.649,301,0.74,302,0.632,303,0.74,304,0.649,305,0.684,306,0.684,307,0.721,308,0.74,350,2.887,500,2.767,616,3.621,1419,5.617,1420,5.617,1443,3.423,1444,3.423,1882,4.804,1912,2.705,2049,3.116,2051,6.106,2052,4.841,2054,3.423,2057,4.841,2059,5.113,2076,3.423,2079,6.875,2080,5.499,2081,6.38,2082,5.499,2083,3.889,2084,3.889,2085,3.889,2086,3.889,2087,3.889,2088,3.889,2089,3.889,2090,3.889,2091,3.889,2092,3.889]],["title/components/PlaneMeshComponent.html",[128,0.064,266,0.741]],["body/components/PlaneMeshComponent.html",[3,0.081,4,0.081,5,0.065,8,0.262,10,0.987,12,1.089,13,0.62,14,0.602,15,1.438,23,0.737,24,0.831,29,0.584,30,0.01,31,0.584,32,0.387,33,0.797,34,0.459,35,0.566,50,0.635,53,0.486,54,1.078,55,1.021,56,0.9,58,0.174,59,0.14,60,1.6,63,0.081,67,0.089,75,0.8,87,0.004,88,0.005,89,0.004,128,0.086,131,0.557,132,0.557,133,0.557,134,0.557,135,0.557,136,0.557,137,1.167,150,0.572,151,0.8,152,0.635,153,0.635,156,0.737,157,1.67,158,0.528,160,1.516,161,1.398,162,0.619,164,0.913,165,2.577,166,1.121,169,0.741,170,1.372,171,1.804,173,1.67,178,1.491,179,1.273,180,1.093,181,0.908,182,0.741,183,0.779,184,0.757,185,1.448,186,0.82,190,0.372,191,0.913,192,0.913,193,0.446,194,1.229,195,0.635,196,1.229,197,0.572,198,0.619,199,0.937,200,0.572,201,0.635,202,0.572,203,0.587,204,1.487,205,0.572,206,0.619,207,0.635,208,0.572,209,0.619,210,0.572,211,1.06,212,0.635,213,0.587,214,0.635,215,0.572,216,0.635,217,0.572,218,0.635,219,0.572,220,0.587,221,0.635,222,0.572,223,0.619,224,0.572,225,0.635,226,0.572,227,0.619,228,0.635,229,0.557,230,0.619,231,0.635,232,0.572,233,0.635,234,0.572,235,0.635,236,0.572,237,0.587,238,0.572,239,1.057,240,1.487,241,0.572,242,0.572,243,0.572,244,0.619,245,0.572,246,0.635,247,0.572,248,0.587,249,0.635,250,0.572,251,0.542,252,0.572,253,0.937,254,0.528,255,0.572,256,1.229,257,0.572,258,0.572,259,0.572,260,0.619,261,0.572,262,0.619,263,0.937,264,0.572,265,0.619,266,1.107,267,1.03,268,0.572,269,0.603,270,0.572,271,0.572,272,0.635,273,0.542,274,0.635,275,0.603,276,0.603,277,0.603,278,0.572,279,0.619,280,0.572,281,0.619,282,0.572,283,0.587,284,0.572,285,0.889,286,0.572,287,0.572,288,0.619,289,0.572,290,0.619,291,0.635,292,0.619,293,0.528,294,0.557,295,0.587,296,0.635,297,0.557,298,0.9,299,0.635,300,0.557,301,0.635,302,0.542,303,0.635,304,0.557,305,0.587,306,0.587,307,0.619,308,0.635,351,1.062,356,1.008,367,1.744,599,3.376,645,2.98,655,3.666,725,2.925,727,2.157,740,1.815,741,3.473,743,3.768,746,3.585,747,4.345,748,4.343,749,4.797,751,2.674,752,4.797,753,4.797,755,5.177,756,6.134,757,5.687,758,5.687,759,5.687,760,5.177,761,5.687,762,2.674,763,3.067,765,2.478,766,3.067,767,4.335,770,1.462,772,3.232,774,3.656,775,3.656,777,2.306,778,1.894,779,1.815,780,2.078,825,3.514,836,1.448,913,2.078,949,1.894,953,2.839,960,2.477,993,2.477,1025,2.078,1027,3.645,1029,1.815,1030,2.321,1251,3.946,1467,2.938,1484,4.335,1485,4.335,1486,2.938,1487,2.938,1489,2.938,1490,2.938,2093,6.737,2094,4.924,2095,2.938,2096,4.335,2097,3.337,2098,3.337,2099,4.924]],["title/components/PointLightComponent.html",[128,0.064,268,0.741]],["body/components/PointLightComponent.html",[3,0.092,4,0.092,5,0.074,8,0.299,10,0.763,12,1.147,13,0.682,14,0.662,23,0.81,24,0.841,27,1.297,29,0.451,30,0.01,31,0.583,32,0.426,33,0.616,34,0.523,35,0.438,53,0.554,54,1.146,55,1.086,56,0.585,58,0.176,59,0.159,60,0.845,63,0.092,67,0.101,75,0.618,87,0.004,88,0.006,89,0.004,128,0.093,131,0.635,132,0.635,133,0.635,134,0.635,135,0.635,136,0.635,137,1.241,150,0.652,151,0.88,152,0.724,153,0.724,155,2.647,156,0.81,157,1.95,158,0.602,160,1.526,161,1.407,162,0.706,163,4.778,164,1.004,165,2.74,166,1.233,167,2.762,168,4.682,169,0.845,170,1.436,171,1.918,172,2.826,173,1.4,174,3.555,175,2.826,178,1.571,179,1.4,180,1.202,181,1.036,182,0.845,183,0.889,184,0.833,185,1.119,186,0.935,189,2.826,190,0.424,191,1.004,192,1.004,193,0.508,194,1.307,195,0.724,196,1.307,197,0.652,198,0.706,199,1.031,200,0.652,201,0.724,202,0.652,203,0.67,204,1.536,205,0.652,206,0.706,207,0.724,208,0.652,209,0.706,210,0.652,211,1.117,212,0.724,213,0.67,214,0.724,215,0.652,216,0.724,217,0.652,218,0.724,219,0.652,220,0.67,221,0.724,222,0.652,223,0.706,224,0.652,225,0.724,226,0.652,227,0.706,228,0.724,229,0.635,230,0.706,231,0.724,232,0.652,233,0.724,234,0.652,235,0.724,236,0.652,237,0.67,238,0.652,239,1.139,240,1.536,241,0.652,242,0.652,243,0.652,244,0.706,245,0.652,246,0.724,247,0.652,248,0.67,249,0.724,250,0.652,251,0.618,252,0.652,253,1.031,254,0.602,255,0.652,256,1.307,257,0.652,258,0.652,259,0.652,260,0.706,261,0.652,262,0.706,263,1.031,264,0.652,265,0.706,266,0.652,267,0.67,268,1.177,269,1.139,270,0.652,271,0.652,272,0.724,273,0.618,274,0.724,275,0.687,276,0.687,277,0.687,278,0.652,279,0.706,280,0.652,281,0.706,282,0.652,283,0.67,284,0.652,285,0.978,286,0.652,287,0.652,288,0.706,289,0.652,290,0.706,291,0.724,292,0.706,293,0.602,294,0.635,295,0.67,296,0.724,297,0.635,298,0.97,299,0.724,300,0.635,301,0.724,302,0.618,303,0.724,304,0.635,305,0.67,306,0.67,307,0.706,308,0.724,351,1.724,356,1.149,645,2.304,685,1.989,1298,5.053,1301,4.767,1307,4.34,1308,3.35,1309,3.05,1315,3.35,1316,3.35,1317,5.55,1319,4.767,1320,3.35,1321,3.05,1592,3.35,1675,2.647,1950,4.682,2100,6.832,2101,5.416,2102,3.805,2103,3.805,2104,3.805,2105,3.805,2106,3.805,2107,3.805]],["title/pipes/Rad2DegPipe.html",[535,3.007,1282,3.007]],["body/pipes/Rad2DegPipe.html",[3,0.155,4,0.155,5,0.124,14,0.784,24,0.714,29,0.76,30,0.01,31,0.69,32,0.504,33,0.626,35,0.737,58,0.155,59,0.268,63,0.155,67,0.171,75,1.041,87,0.007,88,0.008,89,0.007,158,1.013,173,2.221,311,4.206,535,5.298,821,3.991,836,1.885,1282,5.298,1283,5.136,1286,5.136,1289,6.705,1290,6.705,1291,7.749,1292,6.705,1293,5.136,1295,5.136,2108,5.641,2109,7.617,2110,7.617,2111,6.408]],["title/directives/RaycasterCameraDirective.html",[193,0.578,297,0.721]],["body/directives/RaycasterCameraDirective.html",[3,0.152,4,0.152,5,0.122,8,0.493,14,0.919,23,1.125,24,0.838,29,0.744,30,0.01,31,0.532,32,0.493,33,0.613,35,0.721,50,1.431,58,0.195,59,0.262,63,0.152,67,0.167,87,0.007,88,0.008,89,0.007,158,0.991,160,1.046,161,1.157,193,0.838,293,0.991,297,1.255,298,1.157,329,2.459,544,4.252,548,4.361,616,4.57,836,2.211,952,3.772,959,4.051,1215,5.026,1217,4.463,1235,4.116,1882,5.481,1883,4.656,2112,5.286,2113,5.52,2114,6.271,2115,6.271,2116,6.271]],["title/interfaces/RaycasterEmitEvent.html",[64,1.536,1514,3.007]],["body/interfaces/RaycasterEmitEvent.html",[3,0.128,4,0.128,5,0.103,8,0.417,9,1.357,23,0.793,30,0.01,32,0.533,33,0.662,50,1.289,56,1.149,58,0.197,59,0.222,60,1.503,63,0.164,64,1.882,67,0.141,87,0.006,88,0.007,89,0.006,128,0.124,151,1.1,157,2.102,161,1.042,180,1.503,184,0.815,185,1.558,193,0.708,258,1.279,298,1.251,302,0.86,316,4.062,320,3.933,329,2.765,340,4.465,544,3.622,548,3.684,585,2.882,836,1.558,838,2.874,845,2.248,890,4.67,927,3.684,952,3.172,959,2.57,1217,3.144,1233,3.684,1235,3.477,1241,5.984,1248,5.428,1514,4.711,1520,4.245,1533,5.428,1536,5.785,1881,5.544,1884,3.684,1890,5.544,1891,3.933,1916,4.218,1931,3.933,2112,3.477,2117,4.245,2118,4.663,2119,4.245,2120,4.663,2121,4.663,2122,4.663,2123,4.663,2124,4.663,2125,4.245,2126,4.245,2127,3.933,2128,6.572,2129,4.663,2130,6.572,2131,4.663,2132,4.663,2133,4.663,2134,4.663,2135,4.663,2136,4.663,2137,4.663,2138,4.663,2139,4.663,2140,4.663,2141,4.663,2142,4.663,2143,4.663,2144,4.663,2145,4.663,2146,4.663,2147,4.663,2148,4.663]],["title/directives/RaycasterEnableDirective.html",[193,0.578,300,0.721]],["body/directives/RaycasterEnableDirective.html",[3,0.154,4,0.154,5,0.124,8,0.501,14,0.929,23,1.137,24,0.847,29,0.757,30,0.01,31,0.541,32,0.501,33,0.624,35,0.734,50,1.446,58,0.184,59,0.267,63,0.154,67,0.17,87,0.007,88,0.008,89,0.007,158,1.008,160,1.064,161,1.168,193,0.852,293,1.008,298,1.168,300,1.267,329,2.086,544,4.222,548,4.436,836,2.234,952,3.799,959,4.074,1235,4.186,1904,5.283,2112,5.325,2149,5.615,2150,6.378,2151,6.378,2152,6.378,2153,6.378]],["title/directives/RaycasterGroupDirective.html",[193,0.578,302,0.702]],["body/directives/RaycasterGroupDirective.html",[3,0.109,4,0.109,5,0.087,8,0.355,14,0.745,23,0.912,24,0.953,29,0.818,30,0.01,31,0.585,32,0.581,33,0.675,35,0.935,50,1.595,56,1.061,58,0.187,59,0.189,60,1.352,63,0.147,64,1.602,67,0.12,87,0.005,88,0.007,89,0.005,128,0.109,151,1.2,157,1.995,158,0.713,160,0.752,161,1.137,180,1.352,184,0.694,185,1.326,193,0.603,258,1.182,293,0.713,298,1.289,302,0.99,311,2.96,316,4.199,320,4.524,329,2.887,340,4.614,544,3.945,548,3.136,836,1.792,838,2.928,845,3.135,847,4.524,853,3.999,890,4.386,927,4.238,952,3.232,959,3.585,1215,3.614,1217,3.616,1233,3.136,1235,2.96,1241,5.53,1248,4.883,1497,5.363,1514,3.136,1520,4.883,1533,4.883,1536,4.799,1881,3.349,1884,3.136,1890,5.124,1891,3.349,1916,4.603,1931,4.524,2112,5.653,2117,3.614,2118,5.363,2119,4.883,2120,5.363,2121,5.363,2122,5.363,2123,5.363,2124,5.363,2125,5.53,2126,5.53,2127,5.124,2128,6.074,2129,3.97,2130,6.074,2131,3.97,2132,3.97,2133,3.97,2134,6.505,2135,3.97,2136,3.97,2137,3.97,2138,6.505,2139,3.97,2140,3.97,2141,3.97,2142,6.505,2143,3.97,2144,3.97,2145,3.97,2146,3.97,2147,3.97,2148,3.97,2154,6.093,2155,4.509,2156,4.509,2157,4.509,2158,4.509,2159,4.509,2160,4.509,2161,4.509,2162,4.509,2163,4.509]],["title/injectables/RaycasterService.html",[0,1.34,544,2.098]],["body/injectables/RaycasterService.html",[0,1.544,2,1.644,3,0.082,4,0.082,5,0.066,8,0.267,9,0.998,14,0.609,15,2.1,23,0.884,24,0.968,29,0.889,30,0.01,31,0.636,32,0.589,33,0.733,35,0.959,50,1.557,54,1.086,55,1.029,56,0.908,58,0.168,59,0.142,60,1.445,63,0.082,64,1.204,67,0.09,72,2.04,75,1.249,87,0.004,88,0.005,89,0.004,157,1.683,180,1.105,184,1.001,185,0.997,298,1.115,316,3.541,329,2.937,330,4.732,337,2.517,342,5.216,351,2.308,355,5.216,356,1.504,544,2.416,597,2.603,616,4.362,645,1.82,671,2.358,672,2.113,680,2.358,692,3.678,728,3.863,763,4.516,766,3.678,792,3.863,836,0.997,838,2.113,845,2.762,847,3.699,855,4.385,856,2.956,926,4.833,1136,2.517,1233,2.358,1274,2.517,1536,5.457,1675,2.358,1879,5.383,1880,2.717,1881,2.517,1882,4.759,1883,2.517,1884,2.358,1885,4.385,1886,5.729,1887,5.198,1888,5.198,1889,2.984,1890,4.385,1891,2.517,1892,5.198,1893,2.984,1894,2.984,1895,2.984,1896,2.984,1897,2.984,1898,2.984,1899,2.984,1900,2.984,1901,2.984,1902,2.984,1903,2.984,1904,4.527,1905,5.216,1906,5.729,1907,5.198,1908,5.729,1909,5.198,1910,3.992,1911,2.984,1912,3.464,1913,4.385,1914,2.984,1915,2.984,1916,4.054,1917,2.984,1918,4.385,1919,4.385,1920,5.198,1921,5.198,1922,5.198,1923,4.385,1924,4.385,1925,6.104,1926,6.104,1927,4.385,1928,2.984,1929,2.984,1930,5.198,1931,3.699,1932,2.984,1933,4.385,1934,4.385,1935,4.385,1936,5.198,1937,2.984,1938,2.984,1939,2.984,1940,4.385,1941,4.385,1942,3.992,1943,2.984,1944,2.984,1945,4.385,1946,2.984,1947,2.984,1948,2.984,1949,4.385,1950,3.699,1951,2.984,1952,5.729,1953,4.385,1954,2.984,1955,2.984,1956,2.984,1957,2.984,2164,4.981,2165,4.981,2166,4.981,2167,4.981,2168,4.981,2169,4.385,2170,4.981,2171,3.39,2172,3.39,2173,3.39,2174,3.39,2175,3.39,2176,2.717,2177,3.39,2178,3.39,2179,3.39,2180,3.39,2181,3.39,2182,3.39,2183,3.39,2184,3.39,2185,3.39,2186,3.39,2187,3.39,2188,3.39,2189,3.39,2190,3.39,2191,3.39,2192,3.39]],["title/components/RendererCanvasComponent.html",[128,0.064,270,0.741]],["body/components/RendererCanvasComponent.html",[3,0.084,4,0.084,5,0.068,8,0.274,9,1.018,12,0.948,14,0.621,15,1.248,23,0.76,24,0.863,29,0.413,30,0.01,31,0.559,32,0.399,33,0.34,34,0.479,35,0.69,50,0.967,53,0.507,54,0.581,55,0.55,58,0.123,59,0.146,63,0.084,67,0.093,75,0.825,87,0.004,88,0.006,89,0.004,128,0.088,131,0.581,132,0.581,133,0.581,134,0.581,135,0.581,136,0.581,137,1.191,150,0.597,151,0.825,152,0.663,153,0.663,158,0.55,160,1.52,161,1.401,162,0.646,164,0.646,166,1.156,169,0.773,170,1.393,178,1.099,184,0.536,190,0.388,191,0.942,192,1.222,193,0.465,194,1.255,195,0.663,196,1.255,197,0.597,198,0.646,199,0.967,200,0.597,201,0.663,202,0.597,203,0.613,204,1.503,205,0.597,206,0.646,207,0.663,208,0.597,209,0.646,210,0.597,211,1.078,212,0.663,213,0.613,214,0.663,215,0.597,216,0.663,217,0.597,218,0.663,219,0.597,220,0.613,221,0.663,222,0.597,223,0.646,224,0.597,225,0.663,226,0.597,227,0.646,228,0.663,229,0.581,230,0.646,231,0.663,232,0.597,233,0.663,234,0.597,235,0.663,236,0.597,237,0.613,238,0.597,239,1.083,240,1.503,241,0.597,242,0.597,243,0.597,244,0.646,245,0.597,246,0.663,247,0.597,248,0.613,249,0.663,250,0.597,251,0.566,252,0.597,253,0.967,254,0.55,255,0.597,256,1.255,257,0.597,258,0.597,259,0.597,260,1.112,261,0.597,262,0.646,263,0.967,264,0.597,265,0.646,266,0.597,267,0.613,268,0.597,269,0.629,270,1.13,271,1.375,272,0.663,273,0.566,274,0.663,275,0.629,276,0.629,277,0.629,278,0.597,279,0.646,280,0.597,281,0.646,282,0.597,283,0.613,284,0.597,285,0.918,286,0.597,287,0.597,288,0.646,289,0.597,290,0.646,291,0.663,292,0.646,293,0.55,294,0.581,295,0.613,296,0.663,297,0.581,298,0.923,299,0.663,300,0.581,301,0.663,302,0.566,303,0.663,304,0.581,305,0.613,306,0.613,307,0.646,308,0.663,316,3.586,317,4.895,324,2.763,329,2.293,351,1.617,356,1.534,377,1.91,499,3.065,559,3.065,607,3.164,645,1.856,746,1.631,793,2.422,795,2.422,836,1.494,837,4.806,846,5.283,856,3.015,927,3.533,1047,3.533,1217,2.067,1311,4.161,1393,4.472,1772,2.79,1777,4.071,1857,2.585,1858,4.895,2193,6.954,2194,3.065,2195,6.208,2196,5.997,2197,5.08,2198,5.08,2199,5.997,2200,6.592,2201,5.279,2202,5.08,2203,5.08,2204,5.997,2205,5.08,2206,3.482,2207,3.482,2208,3.482,2209,3.482,2210,3.482,2211,7.557,2212,5.08,2213,3.482,2214,3.482,2215,3.482,2216,6.592,2217,5.08,2218,5.08,2219,5.08,2220,5.08,2221,6.592,2222,4.472,2223,5.08,2224,4.472,2225,5.08,2226,4.472,2227,5.08,2228,5.08,2229,5.08,2230,4.472,2231,4.472,2232,3.482,2233,3.482,2234,3.482,2235,3.482,2236,3.482,2237,3.482,2238,3.482,2239,3.482,2240,3.482,2241,5.08,2242,3.482,2243,3.065,2244,3.482,2245,3.482,2246,3.482,2247,3.482,2248,3.482,2249,3.482,2250,3.482,2251,3.482,2252,3.482,2253,3.482,2254,3.482,2255,3.482,2256,5.08,2257,3.482,2258,3.482,2259,2.585]],["title/injectables/RendererService.html",[0,1.34,170,0.823]],["body/injectables/RendererService.html",[0,1.642,2,1.789,3,0.089,4,0.089,5,0.072,8,0.29,9,1.061,12,0.583,14,0.648,15,2.182,20,3.516,23,0.793,24,0.968,27,1.484,29,0.933,30,0.01,31,0.668,32,0.66,33,0.769,35,0.957,50,1.497,54,0.615,55,0.583,56,0.567,58,0.186,59,0.154,60,1.375,63,0.089,67,0.098,68,3.933,72,2.141,75,1.1,87,0.004,88,0.006,89,0.004,170,1.008,173,1.602,180,1.176,229,1.246,230,0.684,273,1.213,324,3.684,329,2.898,351,2.156,356,2.254,555,3.477,560,3.247,565,4.65,578,4.708,607,4.467,614,4.966,616,4.236,664,5.428,672,1.565,685,3.54,722,4.988,746,3.172,748,2.093,836,1.085,838,2.247,845,2.873,1002,4.663,1239,3.247,1309,2.956,1388,4.663,1391,3.247,1882,4.9,1883,2.739,1910,4.245,1912,4.988,1942,5.748,2059,4.966,2169,4.663,2195,5.983,2201,6.313,2243,7.322,2259,2.739,2260,3.247,2261,5.297,2262,6.772,2263,6.772,2264,6.772,2265,5.297,2266,5.297,2267,5.297,2268,5.297,2269,3.247,2270,5.297,2271,5.297,2272,3.689,2273,3.689,2274,3.689,2275,3.689,2276,5.297,2277,3.689,2278,3.689,2279,3.689,2280,5.297,2281,3.689,2282,3.689,2283,5.297,2284,3.689,2285,5.297,2286,3.689,2287,5.297,2288,3.689,2289,3.689,2290,3.689,2291,3.689,2292,3.689,2293,6.197,2294,3.689,2295,3.689,2296,3.689,2297,3.689,2298,5.297,2299,3.689,2300,6.197,2301,3.689,2302,3.689,2303,3.689,2304,5.297,2305,3.689,2306,3.689,2307,5.297,2308,3.689,2309,3.689,2310,3.689,2311,3.689,2312,6.772,2313,3.689,2314,3.689,2315,3.689,2316,3.689,2317,3.689,2318,3.689,2319,3.689,2320,3.689,2321,3.689,2322,5.297,2323,5.297,2324,3.689,2325,3.689,2326,3.689,2327,3.689,2328,3.689,2329,3.689,2330,5.297,2331,3.689,2332,3.689,2333,3.689]],["title/classes/SVGLoader.html",[67,0.115,2025,2.838]],["body/classes/SVGLoader.html",[3,0.033,4,0.033,5,0.026,8,0.106,9,0.629,14,0.288,23,0.352,24,0.655,27,0.322,29,0.637,30,0.01,31,0.43,32,0.296,33,0.595,35,0.649,50,0.256,54,0.785,55,0.496,56,1.243,58,0.033,60,1.934,63,0.033,66,2.47,67,0.036,72,2.884,75,1.145,87,0.001,88,0.003,89,0.001,91,0.999,96,2.059,107,2.071,125,1.078,156,0.352,167,2.354,173,0.811,180,0.299,184,0.482,203,0.552,227,0.436,248,0.237,251,0.611,267,0.237,269,0.915,283,0.414,285,0.68,325,1.184,332,1.078,345,0.838,351,1.198,356,1.291,378,0.506,416,1.747,417,3.522,497,6.114,500,3.153,591,3.867,597,3.572,598,0.838,599,0.703,645,2.942,650,1.886,672,2.728,692,2.929,748,3.201,752,1.747,753,0.999,754,1.184,760,1.078,763,1.954,766,1.954,770,1.031,821,2.344,880,0.936,897,3.27,921,0.999,1047,4.23,1128,4.874,1136,0.999,1147,1.184,1148,2.761,1238,2.071,1286,4.306,1293,4.521,1295,2.514,1321,1.078,1352,2.071,1354,2.514,1475,3.016,1500,1.886,1507,0.838,1535,1.078,1564,1.184,1577,5.354,1578,3.313,1671,1.078,1767,1.078,1787,5.516,1950,1.747,1973,6.34,1992,2.182,1996,1.747,2024,2.514,2025,2.47,2041,1.078,2176,1.886,2226,1.184,2259,0.999,2334,5.354,2335,1.184,2336,3.137,2337,3.137,2338,3.763,2339,2.353,2340,3.137,2341,3.137,2342,3.763,2343,3.137,2344,1.345,2345,2.353,2346,3.137,2347,3.137,2348,1.345,2349,3.763,2350,1.345,2351,1.345,2352,1.345,2353,1.345,2354,5.373,2355,5.373,2356,5.373,2357,1.345,2358,2.353,2359,2.353,2360,2.353,2361,2.353,2362,2.353,2363,1.345,2364,3.763,2365,3.763,2366,4.702,2367,1.345,2368,1.345,2369,1.345,2370,3.764,2371,1.345,2372,1.345,2373,7.91,2374,6.082,2375,1.345,2376,6.945,2377,1.345,2378,5.641,2379,5.641,2380,5.063,2381,1.345,2382,2.353,2383,3.137,2384,2.353,2385,3.763,2386,2.353,2387,1.345,2388,7.736,2389,1.345,2390,1.345,2391,3.137,2392,1.345,2393,1.345,2394,1.345,2395,1.345,2396,1.345,2397,1.345,2398,1.345,2399,1.345,2400,1.345,2401,1.345,2402,1.345,2403,1.345,2404,2.353,2405,1.345,2406,1.345,2407,1.345,2408,1.345,2409,1.345,2410,1.345,2411,1.345,2412,1.345,2413,1.345,2414,1.345,2415,1.345,2416,2.353,2417,1.345,2418,1.345,2419,3.137,2420,1.184,2421,2.353,2422,7.141,2423,2.353,2424,5.641,2425,3.763,2426,2.353,2427,1.345,2428,1.345,2429,1.345,2430,1.345,2431,1.345,2432,1.345,2433,1.184,2434,1.345,2435,1.345,2436,1.345,2437,1.345,2438,1.345,2439,3.137,2440,1.345,2441,3.137,2442,1.345,2443,2.353,2444,1.345,2445,1.345,2446,1.345,2447,3.137,2448,3.137,2449,1.345,2450,2.353,2451,3.137,2452,1.345,2453,1.345,2454,1.345,2455,2.353,2456,2.353,2457,2.353,2458,1.345,2459,2.353,2460,2.353,2461,2.353,2462,3.763,2463,1.345,2464,1.345,2465,2.353,2466,1.345,2467,1.345,2468,1.345,2469,1.345,2470,1.345,2471,1.345,2472,1.345,2473,1.345,2474,2.353,2475,1.345,2476,1.345,2477,1.345,2478,2.353,2479,2.071,2480,1.345,2481,1.345,2482,2.353,2483,2.761,2484,3.763,2485,5.875,2486,5.875,2487,3.137,2488,3.137,2489,3.137,2490,1.345,2491,1.345,2492,2.353,2493,4.275,2494,2.353,2495,1.345,2496,2.353,2497,4.702,2498,3.763,2499,4.702,2500,3.763,2501,2.353,2502,5.641,2503,5.641,2504,2.353,2505,4.275,2506,2.353,2507,1.345,2508,1.345,2509,1.345,2510,1.345,2511,3.137,2512,3.137,2513,2.353,2514,1.345,2515,4.275,2516,4.275,2517,4.275,2518,4.275,2519,2.353,2520,1.345,2521,1.345,2522,1.345,2523,1.345,2524,1.345,2525,1.345,2526,1.345,2527,1.345,2528,1.345,2529,2.353,2530,1.345,2531,1.345,2532,1.345,2533,4.275,2534,2.353,2535,4.275,2536,1.345,2537,2.353,2538,1.345,2539,3.763,2540,1.345,2541,2.353,2542,1.345,2543,1.345,2544,3.137,2545,1.345,2546,1.345,2547,1.345,2548,5.373,2549,1.345,2550,2.353,2551,3.763,2552,2.353,2553,2.353,2554,1.345,2555,1.345,2556,1.345,2557,2.353,2558,1.345,2559,1.345,2560,3.137,2561,3.137,2562,1.345,2563,1.345,2564,3.137,2565,2.353,2566,1.345,2567,1.345,2568,1.184,2569,3.137,2570,1.345,2571,1.345,2572,1.345,2573,1.345,2574,1.345,2575,1.345,2576,1.345,2577,1.345,2578,1.345,2579,1.345,2580,1.345,2581,1.345,2582,1.345,2583,1.345,2584,1.345,2585,1.345,2586,1.345,2587,1.345,2588,1.345,2589,1.345,2590,1.345,2591,3.763,2592,1.345,2593,1.345,2594,1.345,2595,1.345,2596,1.345,2597,1.345,2598,1.345,2599,1.345,2600,2.353,2601,1.345,2602,1.345,2603,1.345,2604,1.345,2605,1.345,2606,1.345,2607,1.345,2608,1.345,2609,1.345,2610,1.345,2611,1.345,2612,2.761,2613,2.353,2614,3.763,2615,2.353,2616,1.345,2617,2.353,2618,1.345,2619,3.137,2620,1.345,2621,1.345,2622,2.353,2623,1.345,2624,1.345,2625,1.345,2626,1.345,2627,1.345,2628,1.345,2629,1.345,2630,1.345,2631,1.345,2632,1.345,2633,1.345,2634,2.353,2635,1.345,2636,4.275,2637,1.345,2638,4.139,2639,1.345,2640,2.353,2641,1.345,2642,1.345,2643,2.353,2644,2.353,2645,2.353,2646,2.353,2647,2.353,2648,1.345,2649,2.353,2650,3.763,2651,3.137,2652,5.063,2653,2.353,2654,2.353,2655,1.345,2656,2.353,2657,1.345,2658,1.345,2659,1.345,2660,2.353,2661,3.137,2662,1.345,2663,1.345,2664,3.137,2665,1.345,2666,1.345,2667,1.345,2668,1.345,2669,1.184,2670,1.345,2671,3.137,2672,3.137,2673,1.345,2674,2.353,2675,1.345,2676,3.763,2677,3.137,2678,2.353,2679,1.345,2680,1.345,2681,1.345,2682,1.345,2683,1.345,2684,1.345,2685,1.345,2686,3.313,2687,3.763,2688,2.353,2689,3.313,2690,3.763,2691,1.345,2692,3.137,2693,2.353,2694,1.345,2695,3.137,2696,1.345,2697,1.345,2698,1.345,2699,2.353,2700,1.345,2701,1.345,2702,2.353,2703,1.345,2704,1.345,2705,2.353,2706,1.345,2707,1.345,2708,1.345,2709,1.345,2710,2.353,2711,1.345,2712,1.345,2713,1.345,2714,1.345,2715,1.345,2716,1.345,2717,3.137,2718,3.137,2719,1.345,2720,2.353,2721,3.137,2722,1.345,2723,3.137,2724,1.345,2725,2.353,2726,1.345,2727,2.071,2728,1.345,2729,2.353,2730,1.345,2731,1.345,2732,1.345,2733,1.345,2734,1.345,2735,1.345,2736,1.345,2737,1.345,2738,1.345,2739,2.353,2740,1.345,2741,1.345,2742,1.345,2743,1.345,2744,1.345,2745,1.345,2746,1.184,2747,1.345,2748,1.345,2749,1.345,2750,1.345,2751,2.353,2752,2.353,2753,1.345,2754,1.345,2755,1.345,2756,1.345,2757,1.345,2758,3.137,2759,1.345,2760,1.345,2761,1.345,2762,4.275,2763,1.345,2764,1.184,2765,1.345,2766,1.345,2767,2.353,2768,1.345,2769,1.345,2770,1.345,2771,1.345,2772,1.345,2773,1.345,2774,1.345,2775,1.345,2776,1.345,2777,1.345,2778,1.345,2779,1.345,2780,1.345,2781,1.345,2782,1.345,2783,1.345,2784,1.345,2785,1.345,2786,1.345,2787,1.345,2788,1.345,2789,1.345,2790,1.345,2791,1.345,2792,1.345,2793,1.345,2794,1.345,2795,2.353,2796,2.353,2797,2.353,2798,1.345]],["title/components/SVGLoaderComponent.html",[128,0.064,282,0.741]],["body/components/SVGLoaderComponent.html",[3,0.077,4,0.077,5,0.062,8,0.25,9,0.951,10,0.951,12,1.16,13,0.598,14,0.58,23,0.71,24,0.926,27,1.934,29,0.674,30,0.01,31,0.601,32,0.593,33,0.66,34,1.037,35,0.654,50,0.903,53,0.462,54,1.181,55,1.193,56,0.97,58,0.178,59,0.133,60,1.743,63,0.077,67,0.085,72,1.097,75,0.923,87,0.003,88,0.005,89,0.003,95,3.225,100,3.116,128,0.083,131,0.53,132,0.53,133,0.53,134,0.53,135,0.53,136,0.53,137,1.139,150,0.544,151,0.771,152,0.605,153,0.605,156,0.71,157,1.63,158,0.502,160,1.513,161,1.395,162,0.589,164,0.88,166,1.081,167,1.392,169,0.705,170,1.347,171,1.761,173,1.63,178,1.699,179,1.227,180,1.054,181,0.864,182,0.705,183,0.742,184,0.73,185,0.934,186,0.78,190,0.354,191,0.88,192,0.88,193,0.424,194,1.2,195,0.605,196,1.2,197,0.544,198,0.589,199,0.903,200,0.544,201,0.605,202,0.544,203,0.559,204,1.468,205,0.544,206,0.589,207,0.605,208,0.544,209,0.589,210,0.544,211,1.038,212,0.605,213,0.559,214,0.605,215,0.544,216,0.605,217,0.544,218,0.605,219,0.544,220,0.559,221,0.605,222,0.544,223,0.589,224,0.544,225,0.605,226,0.544,227,0.589,228,0.605,229,0.53,230,0.589,231,0.605,232,0.544,233,0.605,234,0.544,235,0.605,236,0.544,237,0.559,238,0.544,239,1.027,240,1.468,241,0.544,242,0.544,243,0.544,244,0.589,245,0.544,246,0.605,247,0.544,248,0.559,249,0.605,250,0.544,251,1.024,252,0.544,253,0.903,254,0.75,255,0.544,256,1.2,257,0.544,258,0.544,259,0.544,260,0.589,261,0.544,262,0.589,263,0.903,264,0.544,265,0.589,266,0.544,267,0.559,268,0.544,269,0.574,270,0.544,271,0.544,272,0.605,273,0.516,274,0.605,275,0.574,276,0.574,277,0.574,278,0.544,279,0.589,280,0.544,281,0.589,282,1.081,283,1,284,0.544,285,0.857,286,0.544,287,0.544,288,0.589,289,0.544,290,0.589,291,0.605,292,0.589,293,0.502,294,0.53,295,0.559,296,0.605,297,0.53,298,0.874,299,0.605,300,0.53,301,0.605,302,0.516,303,0.605,304,0.53,305,0.559,306,0.559,307,0.589,308,0.605,329,1.859,351,2.008,356,1.904,500,2.86,511,4.164,514,4.139,743,1.66,770,1.392,777,3.161,779,1.728,856,2.817,893,2.957,949,1.803,964,4.555,1022,2.546,1264,2.209,1475,2.546,1476,2.796,1480,2.796,1616,4.555,1617,4.555,1737,2.085,1741,3.525,1866,2.796,1869,2.796,1870,5.003,1916,2.957,1959,2.209,1964,4.22,1967,4.386,1973,2.546,1988,2.796,2012,2.546,2025,3.731,2370,4.179,2686,5.003,2689,5.003,2799,7.364,2800,4.747,2801,5.684,2802,4.22,2803,6.749,2804,4.747,2805,3.177,2806,3.177,2807,4.747,2808,3.177,2809,3.177,2810,3.177,2811,3.177,2812,3.177,2813,3.177,2814,3.177,2815,3.177,2816,2.796,2817,3.177,2818,3.177,2819,3.177,2820,2.359,2821,2.546,2822,6.306,2823,3.177,2824,2.796,2825,3.177,2826,3.177,2827,3.177,2828,3.177,2829,3.177,2830,4.747,2831,3.177,2832,3.177,2833,3.177,2834,3.177,2835,3.177,2836,3.177,2837,3.177,2838,3.177,2839,2.546,2840,4.747,2841,3.177,2842,3.177,2843,3.177,2844,4.747,2845,2.796,2846,3.177,2847,2.796]],["title/components/SceneComponent.html",[128,0.064,273,0.702]],["body/components/SceneComponent.html",[3,0.092,4,0.092,5,0.073,8,0.297,10,0.758,12,1.145,13,0.679,14,0.659,15,1.849,23,0.807,24,0.807,27,1.291,29,0.639,30,0.01,31,0.614,32,0.494,33,0.67,34,0.52,35,0.723,50,1.026,53,0.55,54,0.631,55,0.598,56,0.966,58,0.175,59,0.158,60,0.839,63,0.092,67,0.101,75,0.876,87,0.004,88,0.006,89,0.004,128,0.092,131,0.631,132,0.631,133,0.631,134,0.631,135,0.631,136,0.631,137,1.237,150,0.648,151,0.876,152,0.72,153,0.72,156,0.807,157,1.946,158,0.598,160,1.525,161,1.406,162,0.701,164,1,165,2.732,166,1.227,169,0.839,170,1.433,171,2.022,173,1.394,174,3.538,178,1.166,179,1.394,180,1.196,181,1.029,182,0.839,183,0.883,184,0.829,185,1.112,186,0.929,190,0.421,191,1,192,1,193,0.72,194,1.303,195,0.72,196,1.303,197,0.648,198,0.701,199,1.026,200,0.648,201,0.72,202,0.648,203,0.665,204,1.534,205,0.648,206,0.701,207,0.72,208,0.648,209,0.701,210,0.648,211,1.114,212,0.72,213,0.665,214,0.72,215,0.648,216,0.72,217,0.648,218,0.72,219,0.648,220,0.665,221,0.72,222,0.648,223,0.701,224,0.648,225,0.72,226,0.648,227,0.701,228,0.72,229,0.631,230,0.701,231,0.72,232,0.648,233,0.72,234,0.648,235,0.72,236,0.648,237,0.665,238,0.648,239,1.135,240,1.534,241,0.648,242,0.648,243,0.648,244,0.701,245,0.648,246,0.72,247,0.648,248,0.665,249,0.72,250,0.648,251,0.614,252,0.648,253,1.026,254,0.598,255,0.648,256,1.303,257,0.648,258,0.648,259,0.648,260,0.701,261,0.648,262,0.701,263,1.026,264,0.648,265,0.701,266,0.648,267,0.665,268,0.648,269,0.683,270,0.648,271,0.648,272,0.72,273,1.112,274,0.72,275,0.683,276,0.683,277,0.683,278,0.648,279,0.701,280,0.648,281,0.701,282,0.648,283,0.665,284,0.648,285,0.974,286,0.648,287,0.648,288,0.701,289,0.648,290,0.701,291,0.72,292,0.701,293,0.598,294,0.631,295,0.665,296,0.72,297,0.631,298,0.966,299,0.72,300,0.631,301,0.72,302,0.614,303,0.72,304,0.631,305,0.665,306,0.665,307,0.701,308,0.72,351,1.204,356,1.142,367,1.976,607,4.51,615,5.035,685,1.976,725,3.101,727,2.362,836,1.585,949,2.145,953,3.048,960,2.712,993,2.712,1025,2.355,1027,3.913,1029,2.057,2848,3.328,2849,5.391,2850,6.849,2851,6.282,2852,5.391,2853,3.781,2854,3.781,2855,3.781,2856,3.781,2857,3.781,2858,5.391,2859,3.781,2860,3.781,2861,3.781,2862,3.781]],["title/components/ServerBarrelActorComponent.html",[128,0.064,131,0.721]],["body/components/ServerBarrelActorComponent.html",[3,0.107,4,0.107,5,0.086,10,0.89,13,0.76,30,0.01,31,0.581,34,0.611,53,0.646,58,0.166,59,0.186,63,0.107,67,0.118,87,0.005,88,0.007,89,0.005,112,1.578,128,0.101,131,1.225,132,0.741,133,0.741,134,0.741,135,0.741,136,0.741,137,1.463,150,0.761,151,0.979,152,0.845,153,0.845,156,0.902,158,0.702,160,1.535,161,1.416,162,0.823,164,1.118,182,0.986,183,1.037,184,0.683,190,0.495,191,1.118,192,1.118,193,0.593,194,1.397,195,0.845,196,1.397,197,0.761,198,0.823,199,1.147,200,0.761,201,0.845,202,0.761,203,0.781,204,1.59,205,0.761,206,0.823,207,0.845,208,0.761,209,0.823,210,0.761,211,1.181,212,0.845,213,0.781,214,0.845,215,0.761,216,0.845,217,0.761,218,0.845,219,0.761,220,0.781,221,0.845,222,0.761,223,0.823,224,0.761,225,0.845,226,0.761,227,0.823,228,0.845,229,0.741,230,0.823,231,0.845,232,0.761,233,0.845,234,0.761,235,0.845,236,0.761,237,0.781,238,0.761,239,1.237,240,1.59,241,0.761,242,0.761,243,0.761,244,0.823,245,0.761,246,0.845,247,0.761,248,0.781,249,0.845,250,0.761,251,0.721,252,0.761,253,1.147,254,0.702,255,0.761,256,1.397,257,0.761,258,0.761,259,0.761,260,0.823,261,0.761,262,0.823,263,1.147,264,0.761,265,0.823,266,0.761,267,0.781,268,0.761,269,0.802,270,0.761,271,0.761,272,0.845,273,0.721,274,0.845,275,1.326,276,0.802,277,0.802,278,0.761,279,0.823,280,0.761,281,0.823,282,0.761,283,0.781,284,0.761,285,1.089,286,0.761,287,0.761,288,0.823,289,0.761,290,0.823,291,0.845,292,1.362,293,0.702,294,0.741,295,0.781,296,0.845,297,0.741,298,1.053,299,0.845,300,0.741,301,0.845,302,0.721,303,0.845,304,0.741,305,0.781,306,0.781,307,0.823,308,0.845,1492,2.321,1860,4.494,2863,3.089,2864,6.03]],["title/components/ServerCompactActorComponent.html",[128,0.064,132,0.721]],["body/components/ServerCompactActorComponent.html",[3,0.107,4,0.107,5,0.086,10,0.889,13,0.759,30,0.01,31,0.58,34,0.61,53,0.646,58,0.166,59,0.186,63,0.107,67,0.118,87,0.005,88,0.007,89,0.005,112,1.576,128,0.1,131,0.74,132,1.225,133,0.74,134,0.74,135,0.74,136,0.74,137,1.463,150,0.76,151,0.979,152,0.844,153,0.844,156,0.902,158,0.701,160,1.535,161,1.415,162,0.823,164,1.117,178,0.96,182,0.985,183,1.036,184,0.682,190,0.494,191,1.117,192,1.117,193,0.593,194,1.397,195,0.844,196,1.397,197,0.76,198,0.823,199,1.147,200,0.76,201,0.844,202,0.76,203,0.781,204,1.589,205,0.76,206,0.823,207,0.844,208,0.76,209,0.823,210,0.76,211,1.181,212,0.844,213,0.781,214,0.844,215,0.76,216,0.844,217,0.76,218,0.844,219,0.76,220,0.781,221,0.844,222,0.76,223,0.823,224,0.76,225,0.844,226,0.76,227,0.823,228,0.844,229,0.74,230,0.823,231,0.844,232,0.76,233,0.844,234,0.76,235,0.844,236,0.76,237,0.781,238,0.76,239,1.236,240,1.589,241,0.76,242,0.76,243,0.76,244,0.823,245,0.76,246,0.844,247,0.76,248,0.781,249,0.844,250,0.76,251,0.721,252,0.76,253,1.147,254,0.701,255,0.76,256,1.397,257,0.76,258,0.76,259,0.76,260,0.823,261,0.76,262,0.823,263,1.147,264,0.76,265,0.823,266,0.76,267,0.781,268,0.76,269,0.801,270,0.76,271,0.76,272,0.844,273,0.721,274,0.844,275,0.801,276,1.326,277,0.801,278,0.76,279,0.823,280,0.76,281,0.823,282,0.76,283,0.781,284,0.76,285,1.088,286,0.76,287,0.76,288,0.823,289,0.76,290,0.823,291,0.844,292,1.361,293,0.701,294,0.74,295,0.781,296,0.844,297,0.74,298,1.053,299,0.844,300,0.74,301,0.844,302,0.721,303,0.844,304,0.74,305,0.781,306,0.781,307,0.823,308,0.844,1492,2.319,1860,4.491,2863,3.086,2865,6.025]],["title/components/ServerIconActorComponent.html",[128,0.064,133,0.721]],["body/components/ServerIconActorComponent.html",[3,0.108,4,0.108,5,0.087,10,0.896,13,0.763,30,0.01,31,0.583,34,1.013,53,0.651,58,0.166,59,0.187,63,0.108,67,0.119,87,0.005,88,0.007,89,0.005,112,1.588,128,0.101,131,0.746,132,0.746,133,1.229,134,0.746,135,0.746,136,0.746,137,1.466,150,0.766,151,0.984,152,0.851,153,0.851,156,0.906,158,0.707,160,1.536,161,1.416,162,0.829,164,1.123,182,0.992,183,1.044,184,0.688,190,0.498,191,1.123,192,1.123,193,0.597,194,1.401,195,0.851,196,1.401,197,0.766,198,0.829,199,1.153,200,0.766,201,0.851,202,0.766,203,0.787,204,1.592,205,0.766,206,0.829,207,0.851,208,0.766,209,0.829,210,0.766,211,1.184,212,0.851,213,0.787,214,0.851,215,0.766,216,0.851,217,0.766,218,0.851,219,0.766,220,0.787,221,0.851,222,0.766,223,0.829,224,0.766,225,0.851,226,0.766,227,0.829,228,0.851,229,0.746,230,0.829,231,0.851,232,0.766,233,0.851,234,0.766,235,0.851,236,0.766,237,0.787,238,0.766,239,1.241,240,1.592,241,0.766,242,0.766,243,0.766,244,0.829,245,0.766,246,0.851,247,0.766,248,0.787,249,0.851,250,0.766,251,0.726,252,0.766,253,1.153,254,0.707,255,0.766,256,1.401,257,0.766,258,0.766,259,0.766,260,0.829,261,0.766,262,0.829,263,1.153,264,0.766,265,0.829,266,0.766,267,0.787,268,0.766,269,0.807,270,0.766,271,0.766,272,0.851,273,0.726,274,0.851,275,0.807,276,0.807,277,0.807,278,0.766,279,0.829,280,0.766,281,0.829,282,0.766,283,0.787,284,0.766,285,1.094,286,0.766,287,0.766,288,0.829,289,0.766,290,0.829,291,0.851,292,1.365,293,0.707,294,0.746,295,0.787,296,0.851,297,0.746,298,1.057,299,0.851,300,0.746,301,0.851,302,0.726,303,0.851,304,0.746,305,0.787,306,0.787,307,0.829,308,0.851,1492,2.336,1860,4.509,2863,3.109,2866,6.056]],["title/components/ServerStandActorComponent.html",[128,0.064,134,0.721]],["body/components/ServerStandActorComponent.html",[3,0.107,4,0.107,5,0.086,10,0.89,13,0.76,30,0.01,31,0.581,34,0.611,53,0.646,58,0.166,59,0.186,63,0.107,67,0.118,87,0.005,88,0.007,89,0.005,112,1.578,128,0.101,131,0.741,132,0.741,133,0.741,134,1.225,135,0.741,136,0.741,137,1.463,150,0.761,151,0.979,152,0.845,153,0.845,156,0.902,158,0.702,160,1.535,161,1.416,162,0.823,164,1.118,182,0.986,183,1.037,184,0.683,190,0.495,191,1.118,192,1.118,193,0.593,194,1.397,195,0.845,196,1.397,197,0.761,198,0.823,199,1.147,200,0.761,201,0.845,202,0.761,203,0.781,204,1.59,205,0.761,206,0.823,207,0.845,208,0.761,209,0.823,210,0.761,211,1.181,212,0.845,213,0.781,214,0.845,215,0.761,216,0.845,217,0.761,218,0.845,219,0.761,220,0.781,221,0.845,222,0.761,223,0.823,224,0.761,225,0.845,226,0.761,227,0.823,228,0.845,229,0.741,230,0.823,231,0.845,232,0.761,233,0.845,234,0.761,235,0.845,236,0.761,237,0.781,238,0.761,239,1.237,240,1.59,241,0.761,242,0.761,243,0.761,244,0.823,245,0.761,246,0.845,247,0.761,248,0.781,249,0.845,250,0.761,251,0.721,252,0.761,253,1.147,254,0.702,255,0.761,256,1.397,257,0.761,258,0.761,259,0.761,260,0.823,261,0.761,262,0.823,263,1.147,264,0.761,265,0.823,266,0.761,267,0.781,268,0.761,269,0.802,270,0.761,271,0.761,272,0.845,273,0.721,274,0.845,275,0.802,276,0.802,277,1.326,278,0.761,279,0.823,280,0.761,281,0.823,282,0.761,283,0.781,284,0.761,285,1.089,286,0.761,287,0.761,288,0.823,289,0.761,290,0.823,291,0.845,292,1.362,293,0.702,294,0.741,295,0.781,296,0.845,297,0.741,298,1.053,299,0.845,300,0.741,301,0.845,302,0.721,303,0.845,304,0.741,305,0.781,306,0.781,307,0.823,308,0.845,340,2.52,890,2.636,1492,2.321,1860,4.494,2863,3.089,2867,6.03]],["title/components/SphereMeshComponent.html",[128,0.064,278,0.741]],["body/components/SphereMeshComponent.html",[3,0.095,4,0.095,5,0.076,8,0.309,10,1.11,12,1.161,13,0.698,14,0.677,23,0.829,24,0.819,29,0.466,30,0.01,31,0.591,32,0.548,33,0.627,34,0.54,35,0.452,53,0.572,56,0.852,58,0.185,59,0.164,60,1.424,63,0.095,67,0.105,75,0.638,87,0.004,88,0.006,89,0.004,128,0.094,131,0.656,132,0.656,133,0.656,134,0.656,135,0.656,136,0.656,137,1.259,150,0.673,151,0.9,152,0.748,153,0.748,156,0.829,157,1.802,158,0.621,160,1.528,161,1.409,162,0.729,164,1.027,165,2.78,166,1.261,169,0.872,170,1.451,171,1.946,173,1.971,178,1.508,179,1.432,180,1.23,181,1.069,182,0.872,183,0.918,184,0.852,185,1.629,186,0.965,190,0.438,191,1.027,192,1.027,193,0.525,194,1.326,195,0.748,196,1.326,197,0.673,198,0.729,199,1.054,200,0.673,201,0.748,202,0.673,203,0.691,204,1.548,205,0.673,206,0.729,207,0.748,208,0.673,209,0.729,210,0.673,211,1.13,212,0.748,213,0.691,214,0.748,215,0.673,216,0.748,217,0.673,218,0.748,219,0.673,220,0.691,221,0.748,222,0.673,223,0.729,224,0.673,225,0.748,226,0.673,227,0.729,228,0.748,229,0.656,230,0.729,231,0.748,232,0.673,233,0.748,234,0.673,235,0.748,236,0.673,237,0.691,238,0.673,239,1.159,240,1.548,241,0.673,242,0.673,243,0.673,244,0.729,245,0.673,246,0.748,247,0.673,248,0.691,249,0.748,250,0.673,251,0.638,252,0.673,253,1.054,254,0.621,255,0.673,256,1.326,257,0.673,258,0.673,259,0.673,260,0.729,261,0.673,262,0.729,263,1.054,264,0.673,265,0.729,266,0.673,267,0.691,268,0.673,269,0.71,270,0.673,271,0.673,272,0.748,273,0.638,274,0.748,275,0.71,276,0.71,277,0.71,278,1.194,279,1.19,280,0.673,281,0.729,282,0.673,283,0.691,284,0.673,285,1.001,286,0.673,287,0.673,288,0.729,289,0.673,290,0.729,291,0.748,292,0.729,293,0.621,294,0.656,295,0.691,296,0.748,297,0.656,298,0.987,299,0.748,300,0.656,301,0.748,302,0.638,303,0.748,304,0.656,305,0.691,306,0.691,307,0.729,308,0.748,740,2.138,741,3.809,743,3.84,749,4.765,770,1.721,774,2.918,777,2.595,778,2.23,779,2.138,780,2.448,816,3.459,820,2.918,825,3.014,2868,6.711,2869,5.54,2870,6.417,2871,5.649,2872,5.54,2873,3.93,2874,3.93,2875,3.93,2876,3.93]],["title/directives/StatsAutoShowDirective.html",[193,0.578,304,0.721]],["body/directives/StatsAutoShowDirective.html",[3,0.153,4,0.153,5,0.123,8,0.498,14,0.924,23,1.131,24,0.843,29,0.751,30,0.01,31,0.537,32,0.498,33,0.619,35,0.728,50,1.439,58,0.183,59,0.265,63,0.153,67,0.169,87,0.007,88,0.008,89,0.007,158,1.001,160,1.056,161,1.163,193,0.846,293,1.001,304,1.262,305,1.33,306,1.506,307,1.402,329,2.07,565,5.411,567,5.571,836,2.224,952,3.787,959,4.063,1235,4.154,2269,5.571,2877,7.117,2878,5.571,2879,6.329,2880,6.329,2881,6.329]],["title/injectables/StatsService.html",[0,1.34,565,2.693]],["body/injectables/StatsService.html",[0,2.185,2,2.736,3,0.137,4,0.137,5,0.109,8,0.443,9,1.412,14,0.862,15,2.186,23,1.15,24,0.956,30,0.01,32,0.443,35,0.953,50,1.608,58,0.171,59,0.236,63,0.137,67,0.15,87,0.006,88,0.008,89,0.006,305,1.509,316,3.068,329,2.514,565,4.389,692,4.389,836,1.659,838,2.99,845,3.416,916,6.452,921,5.978,929,5.978,2483,4.965,2882,4.965,2883,8.051,2884,7.047,2885,5.64,2886,5.64,2887,5.64,2888,5.64,2889,5.64,2890,5.64,2891,5.64,2892,5.64,2893,5.64,2894,5.64,2895,8.452,2896,5.64,2897,7.047,2898,5.64,2899,5.64,2900,5.64,2901,5.64]],["title/components/StlLoaderComponent.html",[128,0.064,280,0.741]],["body/components/StlLoaderComponent.html",[3,0.092,4,0.092,5,0.074,8,0.299,9,1.084,10,1.084,12,1.147,13,0.682,14,0.662,23,0.81,24,0.841,27,1.645,29,0.451,30,0.01,31,0.582,32,0.495,33,0.616,34,0.523,35,0.437,53,0.553,54,1.051,55,0.996,56,1.056,58,0.188,59,0.159,60,1.201,63,0.092,67,0.101,75,0.618,87,0.004,88,0.006,89,0.004,95,3.576,128,0.093,131,0.634,132,0.634,133,0.634,134,0.634,135,0.634,136,0.634,137,1.24,150,0.651,151,0.879,152,0.724,153,0.724,156,0.81,157,1.775,158,0.601,160,1.526,161,1.407,162,0.705,164,1.004,166,1.232,169,0.844,170,1.435,171,1.917,173,1.399,174,3.552,178,1.486,179,1.399,180,1.201,181,1.035,182,0.844,183,0.888,184,0.833,185,1.118,186,0.934,190,0.424,191,1.004,192,1.004,193,0.508,194,1.307,195,0.724,196,1.307,197,0.651,198,0.705,199,1.03,200,0.651,201,0.724,202,0.651,203,0.669,204,1.536,205,0.651,206,0.705,207,0.724,208,0.651,209,0.705,210,0.651,211,1.116,212,0.724,213,0.669,214,0.724,215,0.651,216,0.724,217,0.651,218,0.724,219,0.651,220,0.669,221,0.724,222,0.651,223,0.705,224,0.651,225,0.724,226,0.651,227,0.705,228,0.724,229,0.634,230,0.705,231,0.724,232,0.651,233,0.724,234,0.651,235,0.724,236,0.651,237,0.669,238,0.651,239,1.138,240,1.536,241,0.651,242,0.651,243,0.651,244,0.705,245,0.651,246,0.724,247,0.651,248,0.669,249,0.724,250,0.651,251,1.26,252,0.651,253,1.03,254,0.856,255,0.651,256,1.307,257,0.651,258,0.651,259,0.651,260,0.705,261,0.651,262,0.705,263,1.03,264,0.651,265,0.705,266,0.651,267,0.669,268,0.651,269,0.687,270,0.651,271,0.651,272,0.724,273,0.618,274,0.724,275,0.687,276,0.687,277,0.687,278,0.651,279,0.705,280,1.177,281,1.168,282,0.651,283,0.669,284,0.651,285,0.978,286,0.651,287,0.651,288,0.705,289,0.651,290,0.705,291,0.724,292,0.705,293,0.601,294,0.634,295,0.669,296,0.724,297,0.634,298,0.969,299,0.724,300,0.634,301,0.724,302,0.618,303,0.724,304,0.634,305,0.669,306,0.669,307,0.705,308,0.724,329,2.061,356,1.634,500,1.913,743,1.987,770,1.666,777,3.398,779,2.068,1264,2.644,1669,4.136,1737,2.495,1740,3.047,1959,2.644,1964,4.679,1967,4.776,1979,3.347,1998,2.644,1999,3.764,2037,3.347,2802,4.679,2816,3.347,2839,3.047,2902,6.831,2903,5.412,2904,5.412,2905,3.802,2906,6.302,2907,3.802,2908,3.802,2909,3.802,2910,3.802]],["title/injectables/SvgLoaderService.html",[0,1.34,514,2.838]],["body/injectables/SvgLoaderService.html",[0,2.207,2,2.782,3,0.139,4,0.139,5,0.111,8,0.451,9,1.427,10,1.552,12,1.36,14,0.871,15,1.749,24,0.903,27,2.061,29,0.919,30,0.01,31,0.657,32,0.609,33,0.757,35,0.891,49,4.596,53,0.835,54,0.957,55,0.907,56,1.191,58,0.196,59,0.24,60,1.273,63,0.139,67,0.153,75,0.932,87,0.006,88,0.008,89,0.006,90,5.571,93,5.287,94,6.014,95,4.04,96,4.674,98,5.75,100,5.316,101,4.258,156,1.066,180,1.273,251,0.932,416,4.258,500,2.885,514,4.674,790,4.596,1450,4.596,1451,4.596,1452,4.596,1453,4.596,1457,5.048,1998,3.989,1999,4.952,2017,4.596,2024,4.596,2025,4.674,2026,5.048,2027,5.048,2911,6.268,2912,5.735,2913,5.735,2914,5.735]],["title/components/TextActorComponent.html",[128,0.064,284,0.741]],["body/components/TextActorComponent.html",[3,0.072,4,0.072,5,0.058,8,0.233,9,0.904,12,1.24,13,0.568,14,0.552,15,2.032,20,1.685,23,0.675,24,0.949,27,1.653,29,0.647,30,0.01,31,0.586,32,0.607,33,0.641,34,0.408,35,0.85,50,1.313,53,0.432,54,1.233,55,1.168,58,0.174,59,0.124,63,0.072,67,0.079,72,2.615,87,0.003,88,0.005,89,0.003,128,0.08,131,0.495,132,0.495,133,0.495,134,0.495,135,0.495,136,0.495,137,1.101,150,0.509,151,0.733,152,0.565,153,0.565,156,0.675,157,1.576,158,0.469,160,1.507,161,1.39,162,0.551,164,0.837,165,2.177,166,1.027,169,0.659,170,1.313,171,1.702,173,1.911,178,1.493,179,1.166,182,0.659,183,0.693,184,0.694,186,0.73,190,0.331,191,0.837,192,0.837,193,0.397,194,1.16,195,0.565,196,1.16,197,0.509,198,0.551,199,0.859,200,0.509,201,0.565,202,0.509,203,0.522,204,1.441,205,0.509,206,0.551,207,0.565,208,0.509,209,0.551,210,0.509,211,1.008,212,0.565,213,0.522,214,0.565,215,0.509,216,0.565,217,0.509,218,0.565,219,0.509,220,0.522,221,0.565,222,0.509,223,0.551,224,0.509,225,0.565,226,0.509,227,0.551,228,0.565,229,0.495,230,0.551,231,0.565,232,1.123,233,0.565,234,0.509,235,0.565,236,0.509,237,0.522,238,0.509,239,0.986,240,1.441,241,0.509,242,0.509,243,0.509,244,0.551,245,0.509,246,0.565,247,0.509,248,0.522,249,0.565,250,0.509,251,0.482,252,0.509,253,0.859,254,0.469,255,0.509,256,1.16,257,0.509,258,0.509,259,0.509,260,0.551,261,0.509,262,0.551,263,0.859,264,0.509,265,0.551,266,0.509,267,0.522,268,0.509,269,0.536,270,0.509,271,0.773,272,0.565,273,0.482,274,0.565,275,0.536,276,0.536,277,0.536,278,0.509,279,0.551,280,0.509,281,0.551,282,0.509,283,0.522,284,1.044,285,1.296,286,0.509,287,0.509,288,0.551,289,0.509,290,0.551,291,0.565,292,1.012,293,0.469,294,0.495,295,0.522,296,0.565,297,0.495,298,0.839,299,0.565,300,0.495,301,0.565,302,0.482,303,0.565,304,0.495,305,0.522,306,0.522,307,0.551,308,0.565,309,3.609,312,3.617,315,4.884,328,3.581,329,2.66,351,1.94,356,1.647,365,4.373,367,1.552,725,2.47,727,2.39,790,1.762,791,2.38,792,1.762,836,1.327,838,2.315,845,2.586,885,3.238,892,1.685,923,1.949,952,2.556,953,2.647,959,2.956,960,2.27,993,1.494,1005,2.065,1027,3.398,1029,2.454,1030,2.065,1220,2.678,1243,3.35,1245,2.065,1247,2.065,1492,1.552,1506,2.38,1507,2.81,1508,2.614,1510,2.38,1511,2.38,1521,3.972,1522,2.38,1525,2.205,1526,2.205,1639,2.614,1640,2.38,1641,2.614,1642,2.38,1646,2.38,1669,3.581,1728,3.972,1759,2.614,1760,2.614,1761,2.614,1762,4.803,1765,3.972,1996,2.205,2915,7.493,2916,4.512,2917,5.456,2918,5.456,2919,5.456,2920,5.456,2921,5.456,2922,4.512,2923,6.094,2924,5.456,2925,5.456,2926,2.969,2927,2.969,2928,2.969,2929,2.969,2930,2.969,2931,3.972,2932,2.969,2933,2.969,2934,2.969,2935,2.969,2936,2.969,2937,5.456,2938,4.512,2939,5.365,2940,4.512,2941,2.969,2942,5.456,2943,2.969,2944,5.456,2945,4.512,2946,2.969,2947,2.969,2948,2.969,2949,4.512,2950,4.512,2951,2.969]],["title/components/TextMeshComponent.html",[128,0.064,286,0.741]],["body/components/TextMeshComponent.html",[3,0.067,4,0.067,5,0.054,8,0.219,9,0.861,10,0.861,12,1.24,13,0.542,14,0.526,15,1.289,23,0.643,24,0.962,27,1.735,29,0.699,30,0.01,31,0.595,32,0.552,33,0.658,34,0.383,35,0.733,50,0.818,53,0.406,54,1.364,55,1.293,56,0.807,58,0.175,59,0.117,60,1.309,63,0.067,67,0.074,72,1.485,75,1.093,87,0.003,88,0.005,89,0.003,95,2.977,100,2.821,128,0.077,131,0.465,132,0.465,133,0.465,134,0.465,135,0.465,136,0.465,137,1.065,150,0.478,151,0.698,152,0.53,153,0.53,156,0.643,157,1.525,158,0.441,160,1.502,161,1.385,162,0.517,164,0.797,166,0.979,169,0.619,170,1.281,171,1.647,173,1.356,178,1.783,179,1.111,180,0.954,181,0.759,182,0.619,183,0.651,184,0.807,185,1.264,186,0.685,190,0.311,191,0.797,192,0.797,193,0.372,194,1.122,195,0.53,196,1.122,197,0.478,198,0.517,199,0.818,200,0.478,201,0.53,202,0.478,203,0.49,204,1.414,205,0.478,206,0.517,207,0.53,208,0.478,209,0.517,210,0.478,211,0.98,212,0.53,213,0.49,214,0.53,215,0.478,216,0.53,217,0.478,218,0.53,219,0.478,220,0.49,221,0.53,222,0.478,223,0.517,224,0.478,225,0.53,226,0.478,227,0.517,228,0.53,229,0.465,230,0.517,231,0.53,232,0.478,233,0.53,234,0.478,235,0.53,236,0.478,237,0.49,238,0.478,239,0.948,240,1.414,241,0.478,242,0.478,243,0.478,244,0.517,245,0.478,246,0.53,247,0.478,248,0.49,249,0.53,250,0.478,251,0.453,252,0.478,253,0.818,254,0.441,255,0.478,256,1.122,257,0.478,258,0.478,259,0.478,260,0.517,261,0.478,262,0.517,263,0.818,264,0.478,265,0.517,266,0.478,267,0.49,268,0.478,269,0.504,270,0.478,271,0.478,272,0.53,273,0.453,274,0.53,275,0.504,276,0.504,277,0.504,278,0.478,279,0.517,280,0.478,281,0.517,282,0.478,283,0.49,284,0.478,285,1.465,286,1.01,287,0.478,288,0.517,289,0.478,290,0.517,291,0.53,292,0.517,293,0.441,294,0.465,295,0.49,296,0.53,297,0.465,298,0.807,299,0.53,300,0.465,301,0.53,302,0.453,303,0.53,304,0.465,305,0.49,306,0.49,307,0.517,308,0.53,329,2.202,351,1.369,356,2.187,417,1.939,510,3.871,578,3.871,645,1.571,672,1.824,673,4.102,740,1.516,743,3.082,746,2.762,770,1.221,772,1.83,777,2.984,778,1.582,779,1.516,813,2.07,814,2.454,818,3.192,819,2.234,825,2.854,856,2.551,893,2.677,913,3.673,949,2.439,964,4.205,1022,2.234,1220,2.551,1230,3.192,1264,1.939,1298,4.205,1307,2.234,1468,2.454,1573,3.445,1579,2.454,1669,4.879,1726,4.726,1737,1.83,1740,2.234,1741,3.192,1967,4.102,2012,2.234,2802,3.896,2820,2.07,2824,3.784,2839,2.234,2939,3.784,2952,7.62,2953,5.247,2954,4.298,2955,5.247,2956,5.247,2957,5.247,2958,4.298,2959,5.897,2960,5.897,2961,5.897,2962,5.897,2963,5.897,2964,5.897,2965,5.247,2966,5.247,2967,7.432,2968,4.298,2969,2.787,2970,2.787,2971,2.787,2972,2.787,2973,2.787,2974,2.787,2975,2.787,2976,2.787,2977,4.298,2978,2.787,2979,4.298,2980,2.787,2981,2.787,2982,2.787,2983,2.787,2984,4.298,2985,6.371,2986,2.787,2987,2.787,2988,4.298,2989,2.787,2990,2.787,2991,2.787,2992,2.787,2993,2.454,2994,2.787,2995,2.787,2996,2.787,2997,2.787,2998,2.787,2999,4.298,3000,4.298,3001,2.787,3002,4.298,3003,4.298,3004,2.787,3005,2.787,3006,2.787,3007,2.787,3008,2.787,3009,2.787,3010,2.787,3011,2.787,3012,4.298,3013,2.787,3014,2.787,3015,2.787,3016,2.787]],["title/components/TorusMeshComponent.html",[128,0.064,287,0.741]],["body/components/TorusMeshComponent.html",[3,0.089,4,0.089,5,0.071,8,0.289,10,1.059,12,1.133,13,0.666,14,0.646,23,0.791,24,0.856,29,0.436,30,0.01,31,0.574,32,0.487,33,0.605,34,0.506,35,0.423,53,0.535,54,1.129,55,1.069,56,0.813,58,0.181,59,0.154,60,1.373,63,0.089,67,0.098,75,0.598,87,0.004,88,0.006,89,0.004,128,0.091,131,0.614,132,0.614,133,0.614,134,0.614,135,0.614,136,0.614,137,1.222,150,0.63,151,0.859,152,0.7,153,0.7,156,0.791,157,1.749,158,0.582,160,1.523,161,1.405,162,0.682,164,0.98,165,2.698,166,1.203,169,0.817,170,1.419,171,1.889,173,1.749,178,1.614,179,1.367,180,1.173,181,1.001,182,0.817,183,0.859,184,0.813,185,1.555,186,0.904,190,0.41,191,0.98,192,0.98,193,0.492,194,1.287,195,0.7,196,1.287,197,0.63,198,0.682,199,1.006,200,0.63,201,0.7,202,0.63,203,0.647,204,1.524,205,0.63,206,0.682,207,0.7,208,0.63,209,0.682,210,0.63,211,1.102,212,0.7,213,0.647,214,0.7,215,0.63,216,0.7,217,0.63,218,0.7,219,0.63,220,0.647,221,0.7,222,0.63,223,0.682,224,0.63,225,0.7,226,0.63,227,0.682,228,0.7,229,0.614,230,0.682,231,0.7,232,0.63,233,0.7,234,0.63,235,0.7,236,0.63,237,0.647,238,0.63,239,1.118,240,1.524,241,0.63,242,0.63,243,0.63,244,0.682,245,0.63,246,0.7,247,0.63,248,0.647,249,0.7,250,0.63,251,0.598,252,0.63,253,1.006,254,0.582,255,0.63,256,1.287,257,0.63,258,0.63,259,0.63,260,0.682,261,0.63,262,0.682,263,1.006,264,0.63,265,0.682,266,0.63,267,0.647,268,0.63,269,0.665,270,0.63,271,0.63,272,0.7,273,0.598,274,0.7,275,0.665,276,0.665,277,0.665,278,0.63,279,0.682,280,0.63,281,0.682,282,0.63,283,0.647,284,0.63,285,0.955,286,0.63,287,1.159,288,1.425,289,0.63,290,0.682,291,0.7,292,0.682,293,0.582,294,0.614,295,0.647,296,0.7,297,0.614,298,0.952,299,0.7,300,0.614,301,0.7,302,0.598,303,0.7,304,0.614,305,0.647,306,0.647,307,0.682,308,0.7,417,4.705,645,2.472,672,2.243,740,2.001,741,3.672,743,3.745,770,1.612,777,2.476,778,2.088,779,2.001,780,2.291,808,5.447,813,2.732,815,3.239,817,3.925,819,2.948,821,3.293,825,2.876,830,4.653,2568,4.653,2746,5.447,2871,6.765,3017,6.922,3018,5.286,3019,7.685,3020,6.187,3021,4.653,3022,3.239,3023,5.286,3024,3.239,3025,3.679,3026,5.286,3027,5.286,3028,3.679]],["title/modules/UxActorModule.html",[368,1.01,3029,3.211]],["body/modules/UxActorModule.html",[3,0.147,4,0.147,5,0.118,13,0.767,30,0.01,58,0.205,59,0.255,63,0.147,67,0.162,87,0.007,88,0.008,89,0.007,190,0.678,250,1.539,251,0.988,284,1.539,368,1.421,370,2.288,371,2.288,372,3.171,373,2.427,374,3.171,377,2.777,378,2.288,379,2.356,382,3.037,390,3.235,391,2.582,393,3.037,414,5.362,418,5.356,421,5.356,422,5.356,3029,6.669,3030,5.356,3031,5.356,3032,6.084,3033,5.356,3034,6.084,3035,6.084]],["title/components/VideoMeshComponent.html",[128,0.064,289,0.741]],["body/components/VideoMeshComponent.html",[3,0.074,4,0.112,5,0.06,8,0.242,9,0.928,10,0.928,12,1.367,13,0.583,14,0.566,23,0.693,24,0.933,29,0.364,30,0.01,31,0.526,32,0.571,33,0.709,34,0.422,35,0.765,50,1.18,53,0.674,54,1.275,55,1.208,56,0.954,58,0.181,59,0.129,60,1.552,63,0.074,67,0.082,75,0.752,87,0.003,88,0.005,89,0.003,128,0.082,131,0.513,132,0.513,133,0.513,134,0.513,135,0.513,136,0.513,137,1.12,150,0.526,151,0.752,152,0.585,153,0.585,156,0.693,157,1.603,158,0.486,160,1.51,161,1.392,162,0.57,164,0.858,165,2.474,166,1.054,169,0.682,170,1.331,171,1.731,173,1.197,178,1.616,179,1.197,180,1.027,181,0.836,182,0.682,183,0.717,184,0.712,185,1.361,186,0.755,190,0.342,191,0.858,192,0.858,193,0.41,194,1.18,195,0.585,196,1.18,197,0.526,198,0.57,199,0.881,200,0.526,201,0.585,202,0.526,203,0.54,204,1.454,205,0.526,206,0.57,207,0.585,208,0.526,209,0.57,210,0.526,211,1.023,212,0.585,213,0.54,214,0.585,215,0.526,216,0.585,217,0.526,218,0.585,219,0.526,220,0.54,221,0.585,222,0.526,223,0.57,224,0.526,225,0.585,226,0.526,227,0.57,228,0.585,229,0.513,230,0.57,231,0.585,232,0.526,233,0.585,234,0.526,235,0.585,236,0.526,237,0.54,238,0.526,239,1.006,240,1.454,241,0.526,242,0.526,243,0.526,244,0.57,245,0.526,246,0.585,247,0.526,248,0.54,249,0.585,250,0.526,251,0.499,252,0.526,253,0.881,254,0.486,255,0.526,256,1.18,257,0.526,258,0.526,259,0.526,260,0.57,261,0.526,262,0.57,263,0.881,264,0.526,265,0.57,266,0.526,267,0.54,268,0.526,269,0.555,270,0.526,271,0.526,272,0.585,273,0.499,274,0.585,275,0.555,276,0.555,277,0.555,278,0.526,279,0.57,280,0.526,281,0.57,282,0.526,283,0.54,284,0.526,285,0.836,286,0.526,287,0.526,288,0.57,289,1.063,290,1.296,291,0.585,292,0.57,293,0.486,294,0.513,295,0.54,296,0.585,297,0.513,298,0.857,299,0.585,300,0.513,301,0.585,302,0.499,303,0.585,304,0.513,305,0.54,306,0.54,307,0.57,308,0.585,309,3.651,312,3.68,328,4.07,337,4.136,351,0.978,356,2.111,599,3.241,626,2.704,645,2.729,655,3.519,740,1.671,741,3.306,743,3.477,746,3.116,747,4.136,748,3.775,749,4.136,752,4.604,753,4.604,755,4.969,756,4.969,763,2.883,766,2.883,770,1.346,772,2.016,774,2.281,775,2.281,777,2.904,778,1.743,779,1.671,780,1.913,813,2.281,825,2.518,836,1.361,838,2.363,845,2.631,885,3.306,892,1.743,952,2.609,959,3.008,1005,2.136,1243,2.281,1244,2.704,1245,2.136,1246,2.704,1247,2.136,1281,2.281,1547,2.462,1573,2.462,1726,4.969,2042,4.075,2095,2.704,2096,2.704,2993,2.704,3021,2.704,3022,2.704,3024,2.704,3036,7.417,3037,4.629,3038,5.57,3039,5.57,3040,4.903,3041,4.629,3042,3.072,3043,4.629,3044,3.072,3045,3.072,3046,3.072,3047,3.072,3048,3.072,3049,3.072,3050,4.629,3051,3.072,3052,3.072,3053,3.072,3054,3.072,3055,3.072,3056,3.072,3057,3.072,3058,3.072,3059,3.072,3060,3.072,3061,3.072,3062,3.072,3063,3.072,3064,3.072,3065,3.072,3066,3.072,3067,3.072,3068,3.072,3069,3.072,3070,4.629,3071,3.072,3072,3.072,3073,3.072]],["title/components/WorkstationActorComponent.html",[128,0.064,136,0.721]],["body/components/WorkstationActorComponent.html",[3,0.106,4,0.106,5,0.085,8,0.344,10,0.878,13,0.753,24,0.488,30,0.01,31,0.577,34,0.602,53,0.637,54,0.731,55,0.692,58,0.165,59,0.183,63,0.106,67,0.117,87,0.005,88,0.007,89,0.005,112,2.122,128,0.1,131,0.731,132,0.731,133,0.731,134,0.731,135,0.731,136,1.218,137,1.38,150,0.75,151,0.97,152,0.833,153,0.833,156,0.894,158,0.692,160,1.535,161,1.415,162,0.812,164,1.354,166,1.36,178,1.292,182,0.972,183,1.023,184,0.674,190,0.488,191,1.107,192,1.107,193,0.585,194,1.389,195,0.833,196,1.389,197,0.75,198,0.812,199,1.137,200,0.75,201,0.833,202,0.75,203,0.771,204,1.585,205,0.75,206,0.812,207,0.833,208,0.75,209,0.812,210,0.75,211,1.175,212,0.833,213,0.771,214,0.833,215,0.75,216,0.833,217,0.75,218,0.833,219,0.75,220,0.771,221,0.833,222,0.75,223,0.812,224,0.75,225,0.833,226,0.75,227,0.812,228,0.833,229,0.731,230,0.812,231,0.833,232,0.75,233,0.833,234,0.75,235,0.833,236,0.75,237,0.771,238,0.75,239,1.228,240,1.585,241,0.75,242,0.75,243,0.75,244,0.812,245,0.75,246,0.833,247,0.75,248,0.771,249,0.833,250,0.75,251,0.711,252,0.75,253,1.137,254,0.692,255,0.75,256,1.389,257,0.75,258,0.75,259,0.75,260,0.812,261,0.75,262,0.812,263,1.137,264,0.75,265,0.812,266,0.75,267,0.771,268,0.75,269,0.791,270,0.75,271,0.75,272,0.833,273,0.711,274,0.833,275,0.791,276,0.791,277,0.791,278,0.75,279,0.812,280,0.75,281,0.812,282,0.75,283,0.771,284,0.75,285,1.079,286,0.75,287,0.75,288,0.812,289,0.75,290,0.812,291,1.293,292,1.354,293,0.692,294,0.731,295,0.771,296,0.833,297,0.731,298,1.046,299,0.833,300,0.731,301,0.833,302,0.711,303,0.833,304,0.731,305,0.771,306,0.771,307,0.812,308,0.833,1492,2.289,1525,3.252,1860,4.461,3040,5.983,3074,5.258,3075,5.973,3076,5.973,3077,5.973]],["title/changelog.html",[3078,2.886,3079,2.886,3080,3.17]],["body/changelog.html",[5,0.096,15,1.218,24,0.553,30,0.008,54,0.827,56,1.225,87,0.005,88,0.007,89,0.005,128,0.073,151,1.175,161,1.299,163,3.448,170,1.235,171,1.384,178,1.073,184,0.998,193,0.662,203,0.872,237,0.872,267,0.872,292,0.919,293,1.026,298,1.18,309,2.494,312,4.293,316,4.174,317,4.818,321,4.364,324,2.697,350,3.681,368,1.158,416,3.681,417,3.448,544,2.405,607,3.088,614,3.973,616,2.813,727,2.172,1084,5.2,1220,2.942,1274,3.681,1657,4.364,1904,3.448,1905,3.973,1916,4.505,1968,4.364,1969,4.364,1992,3.448,1996,3.681,2002,5.2,2003,5.2,2041,3.973,2119,6.15,2222,4.364,2224,6.367,2230,4.364,2231,5.712,2420,4.364,2612,4.364,2764,4.364,3080,6.367,3081,6.755,3082,4.957,3083,6.755,3084,4.957,3085,4.957,3086,4.364,3087,4.957,3088,4.957,3089,4.957,3090,4.957,3091,4.957,3092,4.957,3093,4.957,3094,6.488,3095,4.957,3096,4.364,3097,4.957,3098,6.488,3099,5.712,3100,6.367,3101,4.957,3102,4.957,3103,4.957,3104,7.964,3105,4.364,3106,7.233,3107,4.957,3108,4.957,3109,4.957,3110,4.957,3111,4.957,3112,4.957,3113,4.957,3114,4.957,3115,4.957,3116,4.364,3117,4.957,3118,4.957,3119,6.488,3120,4.957,3121,4.957,3122,4.957,3123,7.964,3124,6.488,3125,4.957,3126,4.957,3127,6.488,3128,6.488,3129,7.673,3130,4.957,3131,4.957,3132,6.488,3133,4.957,3134,4.957,3135,4.957,3136,4.957,3137,5.712,3138,4.364,3139,4.364,3140,6.488,3141,4.957,3142,4.957,3143,4.957,3144,4.364,3145,4.957,3146,4.957,3147,4.364,3148,4.957,3149,4.957,3150,4.957,3151,4.957,3152,4.957,3153,4.957,3154,7.233,3155,7.233,3156,4.364,3157,4.957,3158,7.233,3159,6.488,3160,4.957,3161,7.233,3162,4.957,3163,4.957,3164,4.957,3165,4.957,3166,4.957,3167,4.957,3168,4.957,3169,6.488,3170,4.957,3171,4.957,3172,4.957,3173,4.364,3174,4.957,3175,4.957,3176,4.957,3177,4.957,3178,4.957,3179,4.364,3180,5.712,3181,4.957,3182,4.957,3183,4.957,3184,4.957,3185,4.364,3186,4.957,3187,4.957,3188,4.957,3189,4.957,3190,4.957,3191,6.488,3192,4.957,3193,4.957]],["title/coverage.html",[3194,5.212]],["body/coverage.html",[0,2.529,1,2.08,5,0.065,6,4.794,7,4.799,30,0.01,32,0.263,34,0.459,56,0.514,61,2.48,62,2.48,64,2.776,65,2.08,67,0.156,72,3.173,87,0.004,88,0.005,89,0.004,90,2.192,92,2.94,111,2.192,112,3.07,113,2.94,114,2.94,128,0.133,131,0.557,132,0.557,133,0.557,134,0.557,135,0.557,136,0.557,150,0.572,154,2.94,155,4.495,170,0.636,182,0.741,193,0.921,197,0.572,200,0.572,202,0.572,205,0.572,208,0.572,210,0.572,213,0.588,215,0.572,217,0.572,219,0.572,220,0.867,222,0.572,224,0.572,226,0.572,229,0.557,232,0.572,234,0.572,236,0.572,238,0.572,241,0.572,242,0.572,243,0.572,245,0.572,247,0.572,250,0.572,252,0.572,255,0.572,257,0.572,259,0.572,261,0.572,264,0.572,266,0.572,268,0.572,270,0.572,273,0.542,275,0.603,276,0.603,277,0.603,278,0.572,280,0.572,282,0.572,284,0.572,286,0.572,287,0.572,289,0.572,294,0.557,297,0.557,300,0.557,302,0.542,304,0.557,306,0.588,309,1.68,310,2.94,510,2.192,511,1.895,512,2.192,513,2.192,514,2.192,534,2.323,535,2.323,544,1.62,555,2.192,565,2.08,574,2.94,575,3.949,580,2.677,586,1.982,587,3.957,588,4.524,589,1.817,591,1.68,593,1.895,594,1.817,600,5.179,643,2.677,646,2.677,656,2.677,717,2.94,739,2.94,740,4.252,781,2.94,782,2.94,805,2.94,817,2.48,834,2.94,951,2.94,1000,2.48,1031,2.94,1055,2.94,1097,3.949,1128,5.978,1206,2.94,1207,2.94,1282,3.427,1284,2.94,1296,2.94,1311,1.982,1322,2.94,1349,2.94,1350,2.94,1360,2.94,1361,2.94,1411,2.94,1415,2.94,1448,2.94,1459,2.94,1491,2.94,1492,4.155,1514,2.323,1562,2.94,1570,2.94,1588,2.94,1598,3.949,1600,2.48,1636,2.94,1653,2.677,1654,2.677,1721,2.94,1737,2.192,1773,2.94,1774,3.949,1859,2.94,1871,2.94,1879,2.48,1880,3.949,1958,2.94,1959,4.495,2016,2.94,2017,3.949,2025,2.192,2032,2.94,2044,2.94,2048,2.94,2049,3.949,2079,2.94,2093,2.94,2100,2.94,2108,2.94,2112,4.242,2113,2.94,2117,3.949,2149,2.94,2193,2.94,2194,2.94,2260,2.94,2334,2.94,2335,2.94,2638,2.94,2799,2.94,2820,2.48,2821,2.677,2848,2.94,2863,4.495,2868,2.94,2877,2.94,2878,2.94,2882,2.94,2902,2.94,2911,2.94,2915,2.94,2952,2.94,3017,2.94,3036,2.94,3074,2.94,3194,2.94,3195,2.677,3196,3.34,3197,3.34,3198,6.892,3199,4.927,3200,2.94,3201,3.34,3202,3.34,3203,7.655,3204,5.854,3205,7.655,3206,3.34,3207,3.34,3208,5.854,3209,2.94,3210,8.484,3211,6.892,3212,3.34,3213,5.854,3214,3.34,3215,3.34,3216,7.816,3217,4.927,3218,3.34,3219,6.462,3220,7.212,3221,3.34,3222,3.34,3223,6.892,3224,3.34,3225,3.34,3226,4.927,3227,3.34,3228,3.34,3229,3.34,3230,3.34,3231,3.34,3232,3.34,3233,2.94,3234,2.94,3235,3.34,3236,2.94,3237,2.94,3238,2.94,3239,2.94,3240,2.94,3241,2.94,3242,2.94,3243,2.94,3244,2.94,3245,2.94,3246,2.94,3247,3.34,3248,3.34]],["title/dependencies.html",[371,1.958,2004,3.17]],["body/dependencies.html",[30,0.01,59,0.274,87,0.007,88,0.008,89,0.007,180,1.452,211,1.006,220,1.151,371,2.46,391,2.775,892,3.712,3249,6.541,3250,8.904,3251,6.541,3252,6.541,3253,7.71,3254,6.179,3255,6.541,3256,6.541,3257,6.541,3258,6.541,3259,6.541,3260,6.541,3261,6.541,3262,6.541,3263,6.541,3264,6.541,3265,6.541,3266,6.541,3267,6.541,3268,6.541,3269,6.541]],["title/miscellaneous/enumerations.html",[3270,2.364,3271,4.583]],["body/miscellaneous/enumerations.html",[8,0.498,30,0.01,55,1.427,87,0.007,88,0.008,89,0.007,112,2.248,248,1.33,295,1.114,587,3.07,1237,5.072,1653,5.072,1654,6.059,1667,6.656,1671,6.059,1884,5.259,2112,4.154,2125,6.059,2126,6.059,2127,5.614,2259,5.614,2433,6.656,3200,7.117,3270,4.154,3271,5.571,3272,7.561,3273,6.656,3274,7.561,3275,6.329,3276,6.329,3277,7.561,3278,7.561,3279,7.561,3280,7.561,3281,7.561]],["title/miscellaneous/functions.html",[3270,2.364,3282,4.583]],["body/miscellaneous/functions.html",[8,0.615,27,1.405,29,1.026,30,0.01,31,0.734,32,0.568,33,0.845,35,0.83,55,0.927,87,0.006,88,0.008,89,0.006,112,2.084,128,0.086,167,2.57,182,1.603,192,1.339,220,1.27,311,3.851,587,2.846,590,3.191,597,3.066,728,4.286,744,5.164,777,3.382,1097,5.787,1129,5.164,1130,6.356,1230,4.356,1669,3.851,1737,4.74,1904,4.08,1916,4.872,2176,6.269,2802,5.362,2820,5.362,2821,5.787,2845,5.164,2847,5.164,2931,6.356,3209,6.356,3233,5.164,3234,6.356,3236,5.164,3237,6.356,3238,6.356,3239,5.164,3240,6.356,3241,5.164,3242,6.356,3243,5.164,3244,6.356,3245,5.164,3246,6.356,3270,3.851,3273,5.164,3282,5.164,3283,5.866,3284,5.866,3285,5.866,3286,5.866,3287,5.866,3288,5.866,3289,5.866,3290,7.221,3291,5.866,3292,5.866,3293,5.866,3294,5.866,3295,5.866,3296,7.221,3297,5.866]],["title/index.html",[8,0.283,3078,2.886,3079,2.886]],["body/index.html",[30,0.01,58,0.167,72,1.883,87,0.006,88,0.008,89,0.006,151,1.333,161,1.309,164,1.279,180,1.21,185,1.604,191,1.011,211,0.839,271,0.934,273,0.886,317,4.049,368,1.273,393,2.242,414,4.297,607,4.297,616,3.094,738,4.37,746,3.231,802,4.8,893,3.396,1217,3.236,1311,4.094,1351,4.8,1741,4.049,1815,4.37,1857,4.049,1858,4.049,1970,4.37,1992,3.792,2002,6.374,2003,6.374,2127,4.049,2195,4.37,2479,4.8,2669,6.073,2727,4.8,3081,7.377,3083,6.661,3086,4.8,3099,7.222,3100,7.377,3137,4.8,3138,4.8,3139,6.073,3144,4.8,3147,4.8,3156,6.661,3173,4.8,3179,6.073,3180,4.8,3185,4.8,3195,6.065,3254,4.37,3298,5.452,3299,5.452,3300,5.452,3301,5.452,3302,5.452,3303,4.8,3304,6.898,3305,5.452,3306,5.452,3307,5.452,3308,5.452,3309,6.898,3310,5.452,3311,5.452,3312,5.452,3313,5.452,3314,5.452,3315,5.452,3316,5.452,3317,6.898,3318,6.898,3319,5.452,3320,5.452,3321,5.452,3322,5.452,3323,5.452,3324,5.452,3325,5.452,3326,5.452,3327,5.452,3328,5.452,3329,5.452,3330,5.452,3331,5.452,3332,5.452,3333,5.452,3334,5.452,3335,5.452,3336,5.452,3337,7.953,3338,5.452,3339,5.452,3340,5.452,3341,5.452,3342,5.452,3343,5.452,3344,5.452,3345,5.452,3346,5.452,3347,5.452,3348,5.452,3349,5.452,3350,5.452,3351,5.452,3352,5.452,3353,4.8,3354,5.452,3355,5.452,3356,5.452,3357,5.452]],["title/license.html",[3078,2.886,3079,2.886,3358,3.17]],["body/license.html",[30,0.008,87,0.007,88,0.008,89,0.007,316,3.345,379,2.381,1963,5.412,1992,5.168,2001,5.412,3096,6.541,3116,5.412,3195,4.927,3303,5.412,3353,5.412,3358,5.412,3359,6.148,3360,7.985,3361,6.148,3362,6.148,3363,6.148,3364,6.148,3365,7.43,3366,6.148,3367,6.148,3368,6.148,3369,6.148,3370,6.148,3371,7.43,3372,8.869,3373,6.148,3374,6.148,3375,7.985,3376,6.148,3377,6.148,3378,6.148,3379,6.148,3380,6.148,3381,6.148,3382,6.148,3383,6.148,3384,6.148,3385,6.148,3386,7.43,3387,6.148,3388,6.148,3389,6.148,3390,6.148,3391,6.148,3392,6.148,3393,7.43,3394,7.43,3395,6.148,3396,6.148,3397,6.148,3398,6.148,3399,6.148,3400,6.148,3401,6.148,3402,6.148,3403,6.148,3404,6.148,3405,6.148,3406,6.148,3407,6.148,3408,6.148,3409,6.148,3410,6.148,3411,6.148,3412,6.148,3413,6.148,3414,6.148,3415,6.148,3416,6.148,3417,6.148,3418,6.148,3419,6.148,3420,6.148,3421,6.148]],["title/modules.html",[370,2.227]],["body/modules.html",[30,0.008,87,0.007,88,0.008,89,0.007,283,1.605,369,4.289,370,2.319,384,4.289,394,4.289,401,4.289,408,4.579,414,3.841,427,4.289,441,4.289,449,4.289,457,4.289,464,4.289,474,4.289,475,4.289,476,4.289,477,4.289,485,4.289,509,4.289,3029,4.579,3105,8.031,3254,7.312,3422,9.123]],["title/overview.html",[3423,5.212]],["body/overview.html",[2,1.265,13,0.329,30,0.01,87,0.003,88,0.004,89,0.003,91,1.937,111,3.301,131,1.142,132,1.142,133,1.142,134,1.142,135,1.142,136,1.142,150,1.248,151,0.424,159,4.031,170,0.957,190,0.291,197,1.173,200,1.173,202,1.173,205,0.862,208,1.173,210,1.173,213,1.205,215,1.173,217,1.173,219,1.173,222,1.173,224,1.173,226,1.173,229,1.142,232,1.173,234,1.173,236,1.173,238,1.173,241,1.173,242,1.173,243,1.173,245,1.173,247,1.173,250,1.173,252,1.173,255,1.173,257,1.173,259,1.173,261,1.173,264,1.173,266,1.173,268,1.173,270,1.173,273,1.112,278,1.173,280,1.173,282,1.173,284,1.173,286,1.173,287,1.173,289,1.173,293,0.412,294,1.142,297,1.142,300,1.142,302,1.112,304,1.142,309,2.531,368,0.609,369,5.066,370,0.981,371,0.981,372,1.04,373,1.04,374,1.04,375,2.296,376,2.296,377,1.535,378,0.981,379,1.01,384,5.442,385,2.296,386,2.296,387,2.296,394,5.182,395,2.296,396,2.296,397,2.296,401,5.442,402,2.296,403,2.296,404,2.296,408,6.591,409,2.296,410,2.296,411,2.296,412,2.296,413,2.296,414,5.351,427,5.915,428,2.296,429,2.296,430,2.296,441,5.617,442,2.296,443,2.296,444,2.296,449,5.744,450,2.296,451,2.296,452,2.296,453,2.296,457,5.744,458,2.296,459,2.296,460,2.296,464,6.025,465,2.296,466,2.296,467,2.296,471,2.296,472,2.296,473,2.296,474,6.131,475,5.706,476,5.507,477,5.367,485,4.928,504,2.296,505,2.296,506,2.296,507,2.296,508,2.296,509,5.182,510,3.301,511,2.854,512,3.301,513,3.301,514,3.301,531,2.296,532,2.296,533,2.296,534,4.761,535,4.761,540,2.296,541,2.296,542,2.296,543,2.296,544,2.44,551,2.296,552,2.296,553,2.296,554,2.296,555,3.301,561,2.296,562,2.296,563,2.296,564,2.296,565,3.133,569,2.296,570,2.296,571,2.296,585,1.419,672,1.107,897,1.814,1084,2.09,1283,2.09,1507,1.624,1767,2.09,3029,5.533,3030,2.296,3031,2.296,3033,2.296,3423,2.296,3424,2.608,3425,2.608]],["title/miscellaneous/variables.html",[3270,2.364,3426,4.583]],["body/miscellaneous/variables.html",[6,4.219,7,5.895,8,0.477,27,1.765,30,0.01,32,0.624,50,1.403,54,1.412,55,1.338,61,5.473,62,5.473,72,2.096,87,0.007,88,0.008,89,0.007,173,1.568,345,3.778,364,5.907,600,4.862,643,5.907,646,5.907,647,6.488,648,6.488,649,7.449,650,4.862,651,5.34,652,5.34,653,5.34,654,6.488,655,4.182,656,5.907,657,6.488,658,6.488,659,6.488,660,6.488,661,5.34,662,6.488,3270,3.982,3426,5.34,3427,7.939,3428,7.37]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0,0",{"_index":1582,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":1303,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":822,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["0.0.0",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":1321,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{}}}],["0.01",{"_index":1331,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1328,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":673,"title":{},"body":{"injectables/BloomService.html":{},"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":3269,"title":{},"body":{"dependencies.html":{}}}],["0.128.0",{"_index":3264,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2979,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":3023,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":1675,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":176,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3210,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3219,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3198,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3208,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3218,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3197,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3212,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3204,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3217,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3213,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":3202,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":3199,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3220,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3203,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":3201,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3205,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3211,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3216,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3226,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2732,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0000aa",{"_index":1422,"title":{},"body":{"components/FogComponent.html":{}}}],["04",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["0xffffff",{"_index":1547,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1",{"_index":645,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1.0",{"_index":655,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["1.05",{"_index":1505,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["1.10.2",{"_index":3267,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1805,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["1.3.4",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["1.573.0",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1745,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["1/1",{"_index":3235,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3232,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3207,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1220,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["100",{"_index":1311,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":2071,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":2063,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2257,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":1319,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":3230,"title":{},"body":{"coverage.html":{}}}],["11.2.12",{"_index":3250,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1767,"title":{},"body":{"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["15",{"_index":979,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["16",{"_index":3206,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1084,"title":{},"body":{"classes/DagreUtils.html":{},"changelog.html":{},"overview.html":{}}}],["180",{"_index":1295,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["2",{"_index":672,"title":{},"body":{"injectables/BloomService.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1471,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/18",{"_index":3231,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":3229,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1465,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":1798,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":3362,"title":{},"body":{"license.html":{}}}],["2019",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3228,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":897,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["3.11.1",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":3222,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1572,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["373",{"_index":1920,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["39",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":185,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["4",{"_index":1354,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"classes/SVGLoader.html":{}}}],["4/7",{"_index":3215,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3227,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":3221,"title":{},"body":{"coverage.html":{}}}],["444444",{"_index":1593,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["48",{"_index":3424,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1507,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{},"components/TextActorComponent.html":{},"overview.html":{}}}],["50",{"_index":580,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["500",{"_index":1317,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":3214,"title":{},"body":{"coverage.html":{}}}],["5dade2",{"_index":1728,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["6",{"_index":2568,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["6.6.7",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":3225,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1752,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["64",{"_index":1744,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["66",{"_index":3224,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1748,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["8",{"_index":817,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["8.3.2",{"_index":3266,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3425,"title":{},"body":{"overview.html":{}}}],["90",{"_index":2347,"title":{},"body":{"classes/SVGLoader.html":{}}}],["95",{"_index":2039,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_fillrule",{"_index":2652,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_height",{"_index":840,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["_materialcolor",{"_index":2955,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":2801,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":2956,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":1638,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["a0",{"_index":2598,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a0a0a0",{"_index":882,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["a1",{"_index":2599,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a4a4a4",{"_index":908,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["above",{"_index":3392,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:13",{"_index":1613,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":1612,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:20",{"_index":1607,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":1608,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":1609,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":1605,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":1606,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:55",{"_index":1604,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:57",{"_index":1603,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":90,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:20",{"_index":1450,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1452,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1451,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcamera",{"_index":1882,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractcomposeeffect",{"_index":718,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":1655,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["abstractemptydirective",{"_index":835,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["abstractions",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":2953,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":741,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1964,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["abstractobject3d",{"_index":157,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":1775,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":1860,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accepted",{"_index":2397,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accepts",{"_index":2763,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accessors",{"_index":856,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":3415,"title":{},"body":{"license.html":{}}}],["actor",{"_index":292,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":240,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":421,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":1492,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:105",{"_index":2926,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:114",{"_index":2932,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:119",{"_index":2928,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:18",{"_index":1727,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:20",{"_index":1639,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:21",{"_index":1729,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:23",{"_index":1640,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:24",{"_index":1524,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:25",{"_index":1736,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:26",{"_index":1508,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:27",{"_index":1503,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:28",{"_index":1504,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:29",{"_index":1506,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:31",{"_index":1512,"title":{},"body":{"components/GridActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:32",{"_index":1511,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:33",{"_index":1509,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1510,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:36",{"_index":1642,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:37",{"_index":1522,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:38",{"_index":1641,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:39",{"_index":1525,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:40",{"_index":1646,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:41",{"_index":1521,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:42",{"_index":1647,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:44",{"_index":1645,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:46",{"_index":1730,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:48",{"_index":1644,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:49",{"_index":1519,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:50",{"_index":1731,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:51",{"_index":2927,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:52",{"_index":1643,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:57",{"_index":2935,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:58",{"_index":1515,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:70",{"_index":1733,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:80",{"_index":2929,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:81",{"_index":1732,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:85",{"_index":1517,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:86",{"_index":2934,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:87",{"_index":1735,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:99",{"_index":1734,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.module.ts",{"_index":418,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actorrepository",{"_index":1108,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["actorrepositoryservice",{"_index":111,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actors",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":308,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":1825,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":786,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":788,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["added",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["addgroup",{"_index":2164,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1913,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addnode",{"_index":844,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["addpass",{"_index":1362,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1371,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["adheres",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":1853,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["aftercontentinit",{"_index":954,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["afterviewinit",{"_index":952,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":3364,"title":{},"body":{"license.html":{}}}],["align",{"_index":963,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["allintersections",{"_index":2617,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.push",{"_index":2637,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.sort",{"_index":2642,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allowcoloroverride",{"_index":1615,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allows",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["allpaths",{"_index":2649,"title":{},"body":{"classes/SVGLoader.html":{}}}],["along",{"_index":760,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["alpha",{"_index":2309,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["alternating",{"_index":2681,"title":{},"body":{"classes/SVGLoader.html":{}}}],["always",{"_index":2222,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["ambient",{"_index":162,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":150,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amiahole",{"_index":2704,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amiahole.ishole",{"_index":2706,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amount",{"_index":2680,"title":{},"body":{"classes/SVGLoader.html":{}}}],["and/or",{"_index":3384,"title":{},"body":{"license.html":{}}}],["ang",{"_index":2520,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angle",{"_index":2551,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angular",{"_index":3099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":391,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":3253,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":328,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animate'].some(propname",{"_index":2951,"title":{},"body":{"components/TextActorComponent.html":{}}}],["animated",{"_index":318,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{}}}],["animation",{"_index":312,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":491,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":381,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":383,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1234,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":490,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":339,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":309,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":331,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":3060,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["another",{"_index":2628,"title":{},"body":{"classes/SVGLoader.html":{}}}],["antialias",{"_index":2308,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":2007,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":1324,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1341,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":3179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":3299,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["appear",{"_index":2528,"title":{},"body":{"classes/SVGLoader.html":{}}}],["appliedmaterial",{"_index":1737,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(color",{"_index":2838,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedmaterial(materialcolor",{"_index":3289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1740,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":720,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":724,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applymatrix3",{"_index":2575,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arc",{"_index":2746,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["arcdivisions",{"_index":2374,"title":{},"body":{"classes/SVGLoader.html":{}}}],["area",{"_index":2228,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":2206,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":3419,"title":{},"body":{"license.html":{}}}],["around",{"_index":2552,"title":{},"body":{"classes/SVGLoader.html":{}}}],["array",{"_index":597,"title":{},"body":{"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["array.length",{"_index":2548,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrays",{"_index":2761,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrow",{"_index":3281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":2059,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":2087,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":1614,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":2977,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["assets/svg/?.svg",{"_index":1623,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":3373,"title":{},"body":{"license.html":{}}}],["association",{"_index":3279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":161,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":422,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":369,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":384,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":394,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":401,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":408,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":427,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":441,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":449,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":457,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":464,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":414,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":474,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":485,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":475,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":476,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":477,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":509,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":803,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["attribute",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":3408,"title":{},"body":{"license.html":{}}}],["auto",{"_index":306,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autoplay",{"_index":3038,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":1780,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1781,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":347,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":2012,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["ax",{"_index":2603,"title":{},"body":{"classes/SVGLoader.html":{}}}],["axes",{"_index":198,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":197,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":755,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["b0",{"_index":2594,"title":{},"body":{"classes/SVGLoader.html":{}}}],["b1",{"_index":2595,"title":{},"body":{"classes/SVGLoader.html":{}}}],["background",{"_index":2851,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2861,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":275,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":3086,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["baseinfo",{"_index":586,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1081,"title":{},"body":{"classes/DagreUtils.html":{}}}],["baseintersections",{"_index":2660,"title":{},"body":{"classes/SVGLoader.html":{}}}],["baseintersections.push",{"_index":2665,"title":{},"body":{"classes/SVGLoader.html":{}}}],["basetexture",{"_index":659,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":1741,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["beginning",{"_index":2470,"title":{},"body":{"classes/SVGLoader.html":{}}}],["behaviour",{"_index":2251,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":3305,"title":{},"body":{"index.html":{}}}],["bevel",{"_index":2722,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bevelenabled",{"_index":2959,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":2960,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":2961,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":2962,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":2963,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bignumber",{"_index":2687,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bindings",{"_index":3185,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":627,"title":{},"body":{"injectables/BloomService.html":{},"components/ObjectLoaderComponent.html":{}}}],["bloom",{"_index":2297,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":560,"title":{},"body":{"modules/AtftRendererModule.html":{},"injectables/RendererService.html":{}}}],["bloom_scene_layer",{"_index":644,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":601,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2324,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":602,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":668,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":674,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":555,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":660,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":719,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":201,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":200,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":3329,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1334,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1347,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":728,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":592,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["bounding",{"_index":2619,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox",{"_index":2615,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox.getcenter",{"_index":2616,"title":{},"body":{"classes/SVGLoader.html":{}}}],["box",{"_index":203,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["box2",{"_index":2382,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boxmeshcomponent",{"_index":202,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":2422,"title":{},"body":{"classes/SVGLoader.html":{}}}],["browse",{"_index":3422,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3254,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":981,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["buffergeometry",{"_index":2383,"title":{},"body":{"classes/SVGLoader.html":{}}}],["buffers",{"_index":2762,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bug",{"_index":2038,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":2669,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["butt",{"_index":2725,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bx",{"_index":2604,"title":{},"body":{"classes/SVGLoader.html":{}}}],["c",{"_index":3361,"title":{},"body":{"license.html":{}}}],["cache",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1453,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:20",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":1580,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":2261,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":2271,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":3238,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":3293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":325,"title":{},"body":{"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["camera",{"_index":616,"title":{},"body":{"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":263,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":392,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":2049,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":2054,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":2083,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":2082,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:22",{"_index":2055,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":2084,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":2085,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:36",{"_index":2056,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":2060,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:56",{"_index":2058,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":549,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":2113,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":2115,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":2114,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":480,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":389,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1883,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":479,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":299,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["can't",{"_index":2624,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cant",{"_index":1273,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":2195,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":272,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":2312,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2330,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":558,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":2198,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":2196,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":2194,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":2213,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":2205,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":2209,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":2215,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":2233,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:47",{"_index":2208,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:51",{"_index":2210,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2329,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2328,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2327,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2321,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":2199,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":497,"title":{},"body":{"modules/AtftModule.html":{},"classes/SVGLoader.html":{}}}],["cast",{"_index":2005,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":1298,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["catch",{"_index":1147,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["cdref",{"_index":858,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["center",{"_index":417,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":3240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":415,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":1491,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":1636,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/layout/dagre",{"_index":587,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["center/server/model",{"_index":1859,"title":{},"body":{"components/ModelActorComponent.html":{},"coverage.html":{}}}],["center/server/server",{"_index":2863,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":3074,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["center/service/actor",{"_index":113,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centerboundingbox",{"_index":2654,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centerboundingbox.y",{"_index":2656,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centered",{"_index":964,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":344,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["changedetectorref",{"_index":859,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["changelog",{"_index":3080,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":727,"title":{},"body":{"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":1819,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1822,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":3368,"title":{},"body":{"license.html":{}}}],["check",{"_index":2591,"title":{},"body":{"classes/SVGLoader.html":{}}}],["child",{"_index":801,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1252,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["children",{"_index":914,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["childs",{"_index":2120,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2433,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["claim",{"_index":3411,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["classifyresult.loc",{"_index":2601,"title":{},"body":{"classes/SVGLoader.html":{}}}],["click",{"_index":2127,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clock",{"_index":1658,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["clone",{"_index":3334,"title":{},"body":{"index.html":{}}}],["closed",{"_index":2737,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closeparpos",{"_index":2546,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closer",{"_index":2749,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cloud",{"_index":1629,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":375,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":376,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":385,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":386,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":387,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":395,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":396,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":397,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":402,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":403,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":404,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":409,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":410,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":412,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":411,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":413,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":428,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":429,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":430,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":442,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":443,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":444,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":450,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":452,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":451,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":453,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":458,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":459,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":460,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":465,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":466,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":467,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":471,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":473,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":472,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":504,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":505,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":507,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":506,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":508,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":531,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":532,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":533,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":540,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":541,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":542,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":543,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":551,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":552,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":553,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":554,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":561,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":562,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":563,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":564,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":569,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":570,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":571,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":3030,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":3031,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":3033,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":3032,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2400,"title":{},"body":{"classes/SVGLoader.html":{}}}],["code",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["colinear",{"_index":2590,"title":{},"body":{"classes/SVGLoader.html":{}}}],["color",{"_index":167,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":3349,"title":{},"body":{"index.html":{}}}],["command",{"_index":2473,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands",{"_index":2463,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands.length",{"_index":2469,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commit",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":390,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":147,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":276,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":128,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["componentfactory",{"_index":126,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":120,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":734,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["compose/blur.component",{"_index":440,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":435,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":436,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":438,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":722,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":231,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":439,"title":{},"body":{"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1361,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1369,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1370,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1368,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1376,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1378,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1377,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:42",{"_index":1375,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:59",{"_index":1373,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:65",{"_index":1380,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:79",{"_index":1381,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:85",{"_index":1374,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":2124,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":589,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":212,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composition.border",{"_index":1204,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component",{"_index":1125,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component.ts",{"_index":834,"title":{},"body":{"components/DagreCompositionComponent.html":{},"coverage.html":{}}}],["composition.component.ts:119",{"_index":870,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:125",{"_index":875,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:143",{"_index":879,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:161",{"_index":876,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:34",{"_index":864,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:36",{"_index":861,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:38",{"_index":881,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:40",{"_index":863,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:48",{"_index":888,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:52",{"_index":865,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:53",{"_index":867,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:54",{"_index":868,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:55",{"_index":866,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:57",{"_index":862,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:59",{"_index":883,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:60",{"_index":886,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:61",{"_index":884,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:62",{"_index":860,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:81",{"_index":874,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:85",{"_index":873,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:89",{"_index":872,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:93",{"_index":871,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:99",{"_index":869,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.composition",{"_index":1202,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.label",{"_index":1200,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.name",{"_index":1198,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref",{"_index":1196,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.border",{"_index":1203,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.composition",{"_index":1201,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.label",{"_index":1199,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.name",{"_index":1197,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositions",{"_index":596,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1073,"title":{},"body":{"classes/DagreUtils.html":{}}}],["compute",{"_index":2501,"title":{},"body":{"classes/SVGLoader.html":{}}}],["conditions",{"_index":3391,"title":{},"body":{"license.html":{}}}],["config",{"_index":3341,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":3420,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1657,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":249,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":400,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":1654,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.component.ts:107",{"_index":1688,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:114",{"_index":1683,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:127",{"_index":1687,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":1680,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:26",{"_index":1682,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:27",{"_index":1679,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":1674,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:29",{"_index":1676,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:30",{"_index":1681,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1678,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:33",{"_index":1673,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":1690,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:35",{"_index":1695,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":1696,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":1692,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":1693,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":1672,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:50",{"_index":1684,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:85",{"_index":1689,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:92",{"_index":1686,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.module",{"_index":518,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":399,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":517,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":2121,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.error",{"_index":2414,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.error('contentprojectioncomponent",{"_index":799,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log",{"_index":2447,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":2097,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":144,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":1911,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":357,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":354,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":583,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":663,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":769,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1338,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('changed",{"_index":1717,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":826,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":827,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dagrecompositioncomponent.addnode",{"_index":912,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.layout",{"_index":939,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.removenode",{"_index":925,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.syncgraphnodes",{"_index":934,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.update",{"_index":948,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrelayoutcomponent.layout",{"_index":1007,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('dagrelayoutcomponent.ngonchanges",{"_index":1026,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrelayoutcomponent.syncgraphcontainer",{"_index":1021,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrenodecomponent.addnode",{"_index":1051,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.removenode",{"_index":1052,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraph",{"_index":1054,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraphnodes",{"_index":1053,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1079,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('dagreyamlparsercomponent",{"_index":1190,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createcomposition",{"_index":1194,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createedge",{"_index":1175,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createnode",{"_index":1154,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.destroyall",{"_index":1188,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.ngonchanges",{"_index":1133,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.parseandcreate",{"_index":1135,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('darkennonbloomed",{"_index":712,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1240,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1266,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":1561,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":1445,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1383,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1401,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1389,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1384,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1386,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1403,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1440,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":1534,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":1437,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1431,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1454,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('framemeshcomponent.ngonchanges",{"_index":1482,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":1531,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1567,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1632,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1269,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('lineposition",{"_index":1560,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('loaderactorcomponent.animate",{"_index":1758,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.done",{"_index":1771,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.init",{"_index":1742,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngafterviewinit",{"_index":1738,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngondestroy",{"_index":1763,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updateanimation",{"_index":1764,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updatetext",{"_index":1757,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('looking",{"_index":1551,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":1432,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('node",{"_index":936,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":2036,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":2028,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":2146,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":2061,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":2069,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":2086,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":2091,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":2144,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1914,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2302,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2247,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2235,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2306,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2238,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":1527,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":2874,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('stlloadercomponent.loadlazyobject",{"_index":2909,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["console.log('svgloadercomponent.icon",{"_index":2826,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloadercomponent.loadlazyobject",{"_index":2834,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2913,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('textactorcomponent.animate",{"_index":2941,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngafterviewinit",{"_index":2936,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngondestroy",{"_index":2948,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updateanimation",{"_index":2950,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updatetext",{"_index":2938,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":3006,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":3003,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.set",{"_index":3000,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1900,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":3052,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(event",{"_index":1937,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1275,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn",{"_index":2443,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.warn('bloomservice.init",{"_index":703,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('dagrecompositioncomponent.constructor",{"_index":902,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.warn('dagrenodecomponent.constructor",{"_index":1050,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.warn('dagreyamlparsercomponent.parseandcreate",{"_index":1149,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":1215,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(manager",{"_index":2344,"title":{},"body":{"classes/SVGLoader.html":{}}}],["constructor(raycasterservice",{"_index":2150,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":169,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(resolver",{"_index":119,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2269,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["container",{"_index":1033,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["content",{"_index":206,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":785,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":205,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continue",{"_index":2543,"title":{},"body":{"classes/SVGLoader.html":{}}}],["continuously",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":3416,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":3348,"title":{},"body":{"index.html":{}}}],["control",{"_index":2226,"title":{},"body":{"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["control.module",{"_index":484,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":406,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":483,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":1776,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":253,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":407,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1778,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1774,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:101",{"_index":1812,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":2046,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":2045,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:17",{"_index":1807,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1809,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1794,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1795,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1797,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1796,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1808,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1803,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1799,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1800,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1806,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1804,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1802,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:31",{"_index":1793,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":2047,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":1810,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:56",{"_index":1813,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:96",{"_index":1811,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":1289,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":1535,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["copies",{"_index":3386,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3371,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3360,"title":{},"body":{"license.html":{}}}],["core",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":2770,"title":{},"body":{"classes/SVGLoader.html":{}}}],["counting",{"_index":2679,"title":{},"body":{"classes/SVGLoader.html":{}}}],["coverage",{"_index":3194,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":2482,"title":{},"body":{"classes/SVGLoader.html":{}}}],["create",{"_index":916,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":2051,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createcomposition",{"_index":1101,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createcomposition(composition",{"_index":1112,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge",{"_index":1102,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge(edge",{"_index":1114,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createlinemesh",{"_index":1662,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["createnode",{"_index":1103,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createnode(node",{"_index":1116,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["creates",{"_index":3291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createshapes",{"_index":2339,"title":{},"body":{"classes/SVGLoader.html":{}}}],["createshapes(shapepath",{"_index":2351,"title":{},"body":{"classes/SVGLoader.html":{}}}],["creation",{"_index":343,"title":{},"body":{"injectables/AnimationService.html":{}}}],["cross",{"_index":2683,"title":{},"body":{"classes/SVGLoader.html":{}}}],["css",{"_index":2252,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3drenderer",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":2626,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentdelay",{"_index":2917,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currentgeometry",{"_index":1486,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currentgeometry.attributes",{"_index":1489,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currently",{"_index":2218,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentpointl",{"_index":2786,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpointr",{"_index":2787,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpos",{"_index":2918,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttext",{"_index":2919,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttransform",{"_index":2451,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.copy",{"_index":2455,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.identity",{"_index":2458,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.multiplymatrices",{"_index":2558,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.scale",{"_index":2562,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.set",{"_index":2564,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.translate",{"_index":2549,"title":{},"body":{"classes/SVGLoader.html":{}}}],["curvesegments",{"_index":2964,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cx",{"_index":2502,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cxp",{"_index":2497,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cy",{"_index":2503,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cylinder",{"_index":209,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":208,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cyp",{"_index":2499,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d",{"_index":1578,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["d.match",{"_index":2464,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dadada",{"_index":2988,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["dagre",{"_index":211,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dagre.graphlabel",{"_index":595,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":878,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1080,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":210,"title":{"components/DagreCompositionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":213,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayout",{"_index":841,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["dagrelayoutcomponent",{"_index":215,"title":{"components/DagreLayoutComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":217,"title":{"components/DagreNodeComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1000,"title":{"classes/DagreUtils.html":{}},"body":{"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreutils.modeltograph(this.graphmodel",{"_index":1018,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["dagreyamlparsercomponent",{"_index":219,"title":{"components/DagreYamlParserComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":3412,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1782,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":608,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":611,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":603,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1237,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1210,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":295,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":294,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1211,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashoffset",{"_index":1714,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["dashsize",{"_index":1665,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["data",{"_index":416,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{},"changelog.html":{}}}],["deal",{"_index":3374,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3421,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":793,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["def",{"_index":1707,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defaultdpi",{"_index":2336,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defaultid",{"_index":115,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaults",{"_index":756,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defaultunit",{"_index":2337,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["defines",{"_index":694,"title":{},"body":{"injectables/BloomService.html":{}}}],["defs",{"_index":2338,"title":{},"body":{"classes/SVGLoader.html":{}}}],["deg2rad",{"_index":1285,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":538,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":534,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1294,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1290,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":716,"title":{},"body":{"injectables/BloomService.html":{}}}],["delta",{"_index":2513,"title":{},"body":{"classes/SVGLoader.html":{}}}],["demo",{"_index":3137,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["denom",{"_index":2589,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":3319,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1991,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":744,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":745,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthwrite",{"_index":2802,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":311,"title":{},"body":{"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":854,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["destroy",{"_index":1191,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["destroyall",{"_index":1104,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["details",{"_index":3347,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1438,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":3316,"title":{},"body":{"index.html":{}}}],["development",{"_index":3147,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["df",{"_index":2465,"title":{},"body":{"classes/SVGLoader.html":{}}}],["direct",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":223,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":222,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":193,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1235,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":293,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":1905,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["disablefog",{"_index":1417,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1857,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1950,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["distribute",{"_index":3382,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1564,"title":{},"body":{"components/GridHelperComponent.html":{},"classes/SVGLoader.html":{}}}],["dl",{"_index":973,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2891,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2899,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":3053,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":3050,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":3195,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":1323,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":225,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":224,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":152,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["don't",{"_index":2586,"title":{},"body":{"classes/SVGLoader.html":{}}}],["done",{"_index":2921,"title":{},"body":{"components/TextActorComponent.html":{}}}],["dosetfirstpoint",{"_index":2461,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dot",{"_index":227,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dots",{"_index":2393,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dotscreencomponent",{"_index":226,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1357,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["dq",{"_index":2489,"title":{},"body":{"classes/SVGLoader.html":{}}}],["draw",{"_index":1208,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":433,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1207,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":1219,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":1221,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1223,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1224,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1222,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:16",{"_index":1229,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1231,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1232,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1216,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:27",{"_index":1226,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:36",{"_index":1228,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:67",{"_index":1225,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:92",{"_index":1227,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":296,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":2793,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dynamic",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1148,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["e.g",{"_index":3314,"title":{},"body":{"index.html":{}}}],["edge",{"_index":593,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":214,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["edge.color",{"_index":1185,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component",{"_index":1126,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component.ts",{"_index":3200,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.from",{"_index":1181,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.name",{"_index":1091,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1090,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["edge.type",{"_index":1183,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge1",{"_index":2597,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edge2",{"_index":2593,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edgeref",{"_index":1178,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.from",{"_index":1180,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.materialcolor",{"_index":1186,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.to",{"_index":1182,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.type",{"_index":1184,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edges",{"_index":599,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["edgesep",{"_index":965,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["edgesgeom",{"_index":1254,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":3272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":230,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":496,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":432,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect/atft",{"_index":495,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":622,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":683,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1390,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":229,"title":{"components/EffectComposerComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":2211,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["elements/vertex",{"_index":2767,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ellipse",{"_index":2435,"title":{},"body":{"classes/SVGLoader.html":{}}}],["embedded",{"_index":800,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":2119,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":314,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":363,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":366,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1960,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":1003,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":233,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":448,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":232,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":791,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["enable",{"_index":1904,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":550,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":2149,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":2152,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":2151,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":301,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":330,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1783,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":1418,"title":{},"body":{"components/FogComponent.html":{}}}],["end",{"_index":1239,"title":{},"body":{"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["end.x",{"_index":2508,"title":{},"body":{"classes/SVGLoader.html":{}}}],["end.y",{"_index":2510,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endcaps",{"_index":2748,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endpoints",{"_index":2592,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ensure",{"_index":2792,"title":{},"body":{"classes/SVGLoader.html":{}}}],["entire",{"_index":3325,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":643,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":419,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["enum",{"_index":1701,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["enumerations",{"_index":3271,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop",{"_index":2625,"title":{},"body":{"classes/SVGLoader.html":{}}}],["enveloping",{"_index":2631,"title":{},"body":{"classes/SVGLoader.html":{}}}],["envelops",{"_index":2627,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equally",{"_index":2481,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equals",{"_index":2738,"title":{},"body":{"classes/SVGLoader.html":{}}}],["error",{"_index":498,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["etc",{"_index":346,"title":{},"body":{"injectables/AnimationService.html":{}}}],["evenodd",{"_index":2675,"title":{},"body":{"classes/SVGLoader.html":{}}}],["event",{"_index":316,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":2892,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1533,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.face.a",{"_index":1554,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":1556,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":1558,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":2893,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1924,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1922,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1939,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":3277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":340,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["events",{"_index":927,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":2224,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":3313,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":2731,"title":{},"body":{"classes/SVGLoader.html":{}}}],["execution",{"_index":348,"title":{},"body":{"injectables/AnimationService.html":{}}}],["existent",{"_index":2446,"title":{},"body":{"classes/SVGLoader.html":{}}}],["existing",{"_index":2760,"title":{},"body":{"classes/SVGLoader.html":{}}}],["exploration",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":3302,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":501,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":374,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["exposition",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":3399,"title":{},"body":{"license.html":{}}}],["extends",{"_index":156,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":1536,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":759,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["factory",{"_index":1176,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["failed",{"_index":1150,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["false",{"_index":351,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":1419,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1447,"title":{},"body":{"components/FogComponent.html":{}}}],["favor",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3352,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":1218,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ffffff",{"_index":174,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fileloader",{"_index":2384,"title":{},"body":{"classes/SVGLoader.html":{}}}],["files",{"_index":1963,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":1989,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":2013,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["finalcomposer",{"_index":604,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":689,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":695,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1274,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["findmesh",{"_index":1250,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1272,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1265,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["first",{"_index":2739,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstpoint",{"_index":2459,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstxofpath",{"_index":2667,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fit",{"_index":3324,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":3246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":3404,"title":{},"body":{"license.html":{}}}],["fix",{"_index":502,"title":{},"body":{"modules/AtftModule.html":{}}}],["fixcenter",{"_index":2820,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2847,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":3016,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1858,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32array(4",{"_index":1544,"title":{},"body":{"components/GridActorComponent.html":{}}}],["float32bufferattribute",{"_index":2385,"title":{},"body":{"classes/SVGLoader.html":{}}}],["floating",{"_index":2523,"title":{},"body":{"classes/SVGLoader.html":{}}}],["focus",{"_index":1325,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1337,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1416,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":235,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":434,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":234,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":3116,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":2967,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":2957,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontservice",{"_index":510,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fonturl",{"_index":2965,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fork/svgloader",{"_index":2027,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2335,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["fork/svgloader.ts:1676",{"_index":2352,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2113",{"_index":2357,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2138",{"_index":2375,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2167",{"_index":2381,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:24",{"_index":2348,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:25",{"_index":2350,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:26",{"_index":2345,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:40",{"_index":2367,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:74",{"_index":2369,"title":{},"body":{"classes/SVGLoader.html":{}}}],["format",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["fov",{"_index":2081,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":656,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":237,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":236,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":3353,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":2070,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":1128,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["functions",{"_index":3282,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":3389,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":675,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":679,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":681,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":641,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":880,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}}}],["g.graph().height",{"_index":1024,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.graph().width",{"_index":1023,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.node(name",{"_index":938,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.nodes().foreach((name",{"_index":935,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1077,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1089,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph",{"_index":1075,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1082,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1086,"title":{},"body":{"classes/DagreUtils.html":{}}}],["gapsize",{"_index":1666,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["general",{"_index":1581,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["generated",{"_index":2752,"title":{},"body":{"classes/SVGLoader.html":{}}}],["generates",{"_index":2733,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geo",{"_index":1537,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":1540,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry",{"_index":770,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute",{"_index":2758,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geometry.setattribute('position",{"_index":1542,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry.setpositions(positions",{"_index":1703,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getcamera",{"_index":2262,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":2232,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getcomponentfactory",{"_index":117,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":123,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1363,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":2165,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1945,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getgeometry",{"_index":1461,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["getgraph",{"_index":956,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getgraphmodel",{"_index":957,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getheight",{"_index":887,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["geticon",{"_index":2817,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["getintersections",{"_index":2633,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getisenabled",{"_index":2191,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1058,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1063,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlineposition",{"_index":1495,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":1513,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":1726,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":2990,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmodel",{"_index":1863,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["getnodecomponent",{"_index":1105,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodecomponent(id",{"_index":1119,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodetransform",{"_index":2418,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getpositions",{"_index":1663,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getrenderpane",{"_index":2214,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscanlineintersections",{"_index":2613,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getscene",{"_index":2263,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getstrokestyle",{"_index":2340,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getstrokestyle(width",{"_index":2353,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gettext",{"_index":2992,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":2958,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":2984,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":3078,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2264,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":1648,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":3173,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":2735,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gl_fragcolor",{"_index":661,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":651,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["goals",{"_index":3307,"title":{},"body":{"index.html":{}}}],["granted",{"_index":3367,"title":{},"body":{"license.html":{}}}],["graph",{"_index":917,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["graphmodel",{"_index":594,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["graphupdated",{"_index":842,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["grid",{"_index":239,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":238,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":1501,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":1502,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":241,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":242,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1590,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1916,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.add(mesh",{"_index":2842,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["group.directive",{"_index":547,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":2117,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":2155,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":2156,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":2154,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":2157,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":2162,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":2163,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":2161,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":2160,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":2159,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":2158,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1915,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":303,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1886,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["h",{"_index":2710,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.for",{"_index":2712,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.identifier",{"_index":2714,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.ishole",{"_index":2711,"title":{},"body":{"classes/SVGLoader.html":{}}}],["halfx",{"_index":1469,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":1472,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":746,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["height(height",{"_index":894,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["heightsegments",{"_index":747,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["heightsegments'].some(propname",{"_index":2098,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":577,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":199,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":447,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":575,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":579,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1565,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":581,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":1566,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":520,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":446,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":519,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":796,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":3311,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":244,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":243,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":3366,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1236,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1212,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hierarchical",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["hierarchy",{"_index":2670,"title":{},"body":{"classes/SVGLoader.html":{}}}],["hightsegments",{"_index":2870,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":3409,"title":{},"body":{"license.html":{}}}],["hole",{"_index":2678,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes",{"_index":2708,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes.foreach",{"_index":2713,"title":{},"body":{"classes/SVGLoader.html":{}}}],["horizontalblurshader",{"_index":732,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":3326,"title":{},"body":{"index.html":{}}}],["host",{"_index":1217,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2234,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":2245,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":2202,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2243,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":1990,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1057,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":3335,"title":{},"body":{"index.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":1877,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/angular",{"_index":3076,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1631,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1625,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1628,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1619,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["i.destroy",{"_index":1192,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["i.e",{"_index":2227,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1930,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.identifier",{"_index":2663,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.name",{"_index":933,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["i.object",{"_index":1926,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1933,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.t",{"_index":2605,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.trim",{"_index":2478,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1",{"_index":2643,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1.point.x",{"_index":2645,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2",{"_index":2644,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2.point.x",{"_index":2646,"title":{},"body":{"classes/SVGLoader.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["icon(icon",{"_index":2825,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["iconprovider",{"_index":1866,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["iconprovider.allowcoloroverride",{"_index":2832,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.isccw",{"_index":2829,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.noholes",{"_index":2831,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.url",{"_index":1869,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["icons/?.svg",{"_index":1626,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1621,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1620,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":511,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1600,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":125,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["ideas",{"_index":3355,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2638,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["ignorepaused",{"_index":1941,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":738,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":2220,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":836,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":3400,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":393,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2395,"title":{},"body":{"classes/SVGLoader.html":{}}}],["included",{"_index":2001,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":3096,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":503,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1801,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":3345,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":790,"title":{},"body":{"components/ContentProjectionComponent.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{},"components/TextActorComponent.html":{}}}],["init(renderer",{"_index":613,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1364,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initial",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":1002,"title":{},"body":{"components/DagreLayoutComponent.html":{},"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2276,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":605,"title":{},"body":{"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1213,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":721,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":857,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["innerpoint",{"_index":2790,"title":{},"body":{"classes/SVGLoader.html":{}}}],["input",{"_index":178,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["inputs",{"_index":166,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["inside",{"_index":2630,"title":{},"body":{"classes/SVGLoader.html":{}}}],["install",{"_index":3139,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":1251,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["instances",{"_index":1100,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["instead",{"_index":2043,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3312,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":168,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":585,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersect",{"_index":2587,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection",{"_index":2608,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.t",{"_index":2606,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.x",{"_index":2610,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.y",{"_index":2611,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection[0",{"_index":1956,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1955,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersectionlocationtype.right",{"_index":2602,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections",{"_index":2612,"title":{},"body":{"classes/SVGLoader.html":{},"changelog.html":{}}}],["intersections.foreach",{"_index":2635,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.push",{"_index":2609,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersectionsraw.push",{"_index":2607,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole",{"_index":2699,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole.filter",{"_index":2709,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isccw",{"_index":1616,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["iscw",{"_index":2640,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isenabled",{"_index":1909,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isfirstpoint",{"_index":2460,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ishole",{"_index":2676,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholefor",{"_index":2677,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholeto",{"_index":2647,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isolated",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":3304,"title":{},"body":{"index.html":{}}}],["isready",{"_index":2166,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1940,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isrotated",{"_index":2579,"title":{},"body":{"classes/SVGLoader.html":{}}}],["issue",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["istransformrotated",{"_index":2580,"title":{},"body":{"classes/SVGLoader.html":{}}}],["it's",{"_index":349,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":1498,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":1499,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["ivy",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/SVGLoader.html":{}}}],["jetbrains",{"_index":3351,"title":{},"body":{"index.html":{}}}],["join",{"_index":2727,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["joins",{"_index":2747,"title":{},"body":{"classes/SVGLoader.html":{}}}],["js",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(g.node(name",{"_index":937,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["k",{"_index":1953,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["keep",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["kind",{"_index":3398,"title":{},"body":{"license.html":{}}}],["l",{"_index":2468,"title":{},"body":{"classes/SVGLoader.html":{}}}],["label",{"_index":590,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["large_arc_flag",{"_index":2495,"title":{},"body":{"classes/SVGLoader.html":{}}}],["last",{"_index":2041,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"classes/SVGLoader.html":{},"changelog.html":{}}}],["lastcwvalue",{"_index":2684,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointl",{"_index":2782,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointr",{"_index":2783,"title":{},"body":{"classes/SVGLoader.html":{}}}],["later",{"_index":2088,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":246,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":425,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":420,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":245,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":426,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":216,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layout.component",{"_index":891,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["layout.component.ts",{"_index":951,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:100",{"_index":994,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":995,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:126",{"_index":989,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:130",{"_index":996,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:136",{"_index":988,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":974,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":982,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":980,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":976,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":986,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:35",{"_index":977,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:36",{"_index":978,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:37",{"_index":985,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":975,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":987,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:43",{"_index":999,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:44",{"_index":972,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:60",{"_index":992,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:65",{"_index":991,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:70",{"_index":990,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:90",{"_index":998,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["lazy",{"_index":2996,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":2755,"title":{},"body":{"classes/SVGLoader.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["len",{"_index":2519,"title":{},"body":{"classes/SVGLoader.html":{}}}],["length",{"_index":752,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":3298,"title":{},"body":{"index.html":{}}}],["liability",{"_index":3413,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3410,"title":{},"body":{"license.html":{}}}],["library",{"_index":3081,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":3358,"title":{"license.html":{}},"body":{"license.html":{}}}],["lies",{"_index":2596,"title":{},"body":{"classes/SVGLoader.html":{}}}],["light",{"_index":163,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":196,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":1308,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":456,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":155,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":175,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":172,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":1592,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1301,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":1300,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:24",{"_index":177,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.component.ts:25",{"_index":1594,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["light.component.ts:26",{"_index":2102,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.component.ts:27",{"_index":1302,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":188,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":522,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":455,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":1320,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":1312,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":1316,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":1313,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":1315,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":1314,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":1310,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":2106,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":1318,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":2105,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":2107,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":1305,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":521,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":3310,"title":{},"body":{"index.html":{}}}],["limit",{"_index":2622,"title":{},"body":{"classes/SVGLoader.html":{}}}],["limitation",{"_index":3377,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3401,"title":{},"body":{"license.html":{}}}],["line",{"_index":248,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["line.geometry.attributes.position",{"_index":1550,"title":{},"body":{"components/GridActorComponent.html":{}}}],["line2",{"_index":1685,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linecap",{"_index":2355,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lineconnectorcomponent",{"_index":247,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1263,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":3274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linegeometry",{"_index":1698,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linejoin",{"_index":2354,"title":{},"body":{"classes/SVGLoader.html":{}}}],["linematerial",{"_index":1694,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["lineposition",{"_index":1549,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":1553,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":1555,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":1557,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":1559,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lines",{"_index":1238,"title":{},"body":{"directives/DashedDrawDirective.html":{},"classes/SVGLoader.html":{}}}],["linetype",{"_index":1667,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linetype.dashed",{"_index":1677,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linewidth",{"_index":1668,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["list",{"_index":116,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listened",{"_index":2229,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(url",{"_index":2363,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loaded",{"_index":1978,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":251,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":256,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":463,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1959,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":2034,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:16",{"_index":2907,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":2812,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":2905,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":2816,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1981,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:25",{"_index":2904,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:27",{"_index":1972,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":2807,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:34",{"_index":1979,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":2818,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:42",{"_index":1971,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":2814,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:48",{"_index":2809,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:51",{"_index":2806,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:52",{"_index":1980,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:54",{"_index":2810,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:57",{"_index":2811,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:60",{"_index":2805,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":2808,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:66",{"_index":2804,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:77",{"_index":2813,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load",{"_index":2412,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.load(key",{"_index":1457,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":524,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":462,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service",{"_index":1987,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.service.ts",{"_index":2017,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":2912,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["loader.service.ts:13",{"_index":2023,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:15",{"_index":2019,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:24",{"_index":2022,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.setpath",{"_index":2406,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setrequestheader",{"_index":2408,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setwithcredentials",{"_index":2410,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader/atft",{"_index":523,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader/services/font.service",{"_index":2997,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loaderactorcomponent",{"_index":250,"title":{"components/LoaderActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadlazyobject",{"_index":1967,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":3340,"title":{},"body":{"index.html":{}}}],["logic",{"_index":319,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":337,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["m",{"_index":2569,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ma",{"_index":2391,"title":{},"body":{"classes/SVGLoader.html":{}}}],["main",{"_index":364,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":3180,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manager",{"_index":2346,"title":{},"body":{"classes/SVGLoader.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":1814,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":252,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":3330,"title":{},"body":{"index.html":{}}}],["marginx",{"_index":966,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marginy",{"_index":967,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marked",{"_index":2118,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":777,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":3234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":1669,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":2998,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":2009,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["materialcreator.preload",{"_index":2010,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":3290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":606,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.acos",{"_index":2521,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.cos",{"_index":2504,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.max",{"_index":2494,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.min",{"_index":2522,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.pi",{"_index":821,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin",{"_index":2506,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.sin(this.i",{"_index":1766,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["math.sqrt",{"_index":2484,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.tan",{"_index":2565,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matline",{"_index":1659,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["matrix",{"_index":2567,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix3",{"_index":2386,"title":{},"body":{"classes/SVGLoader.html":{}}}],["max",{"_index":2931,"title":{},"body":{"components/TextActorComponent.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1326,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1344,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdelay",{"_index":2924,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxdistance",{"_index":1784,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maximum",{"_index":2726,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxpolarangle",{"_index":1785,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpos",{"_index":2920,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxx",{"_index":2689,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":2686,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxzoom",{"_index":1786,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1610,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["meant",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":3403,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3380,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2750,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mesh",{"_index":743,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh'},{'name",{"_index":204,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":3013,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":470,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":740,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:102",{"_index":2987,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:103",{"_index":3049,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:110",{"_index":2986,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":2873,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":820,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":2872,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":819,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":765,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":814,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":3044,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":818,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":815,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":762,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":816,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":3022,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":823,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":813,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":751,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":3021,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":2989,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":1573,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":767,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":3042,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":824,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":3024,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":764,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":2993,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":3051,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":2095,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":3041,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":750,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":2982,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":2980,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:55",{"_index":1467,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":2975,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:57",{"_index":3047,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":768,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":2969,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":2972,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":1468,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:66",{"_index":3046,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":2970,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":2971,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":2978,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":2973,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":2981,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":2976,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:84",{"_index":3045,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":2974,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:87",{"_index":3048,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":2968,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:98",{"_index":2983,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.geometry",{"_index":1485,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.module",{"_index":526,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":469,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":3014,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":525,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["meshposition",{"_index":1539,"title":{},"body":{"components/GridActorComponent.html":{}}}],["message",{"_index":3280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":158,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["method",{"_index":2621,"title":{},"body":{"classes/SVGLoader.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["middle",{"_index":1583,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":3363,"title":{},"body":{"license.html":{}}}],["min",{"_index":2933,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindelay",{"_index":2925,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindistance",{"_index":1787,"title":{},"body":{"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["minimum",{"_index":2741,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minx",{"_index":2690,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miny",{"_index":2688,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minzoom",{"_index":1788,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":3270,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3359,"title":{},"body":{"license.html":{}}}],["miter",{"_index":2723,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miterlimit",{"_index":2356,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mm",{"_index":2399,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mode",{"_index":3346,"title":{},"body":{"index.html":{}}}],["model",{"_index":254,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["model(model",{"_index":1865,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["model.compositions",{"_index":1093,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.compositions?.foreach(i",{"_index":1140,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.edges",{"_index":1087,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1088,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges?.foreach(i",{"_index":1144,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.layout",{"_index":1096,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1094,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["model.nodes.length",{"_index":1139,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.nodes?.foreach(i",{"_index":1142,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.ts",{"_index":588,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":135,"title":{"components/ModelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelpath",{"_index":1862,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["models/?.obj",{"_index":1878,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":512,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1059,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1065,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":653,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":1027,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DofComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["modify",{"_index":3379,"title":{},"body":{"license.html":{}}}],["module",{"_index":368,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":3344,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":2230,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mouseenter",{"_index":2125,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":2126,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1946,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1393,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":1966,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":2021,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1074,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiple",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["multiples",{"_index":2728,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mustrerender",{"_index":2065,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":3039,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["n",{"_index":2583,"title":{},"body":{"classes/SVGLoader.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["near",{"_index":1420,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1949,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1952,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1879,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1954,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1957,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["network",{"_index":983,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newgeometry",{"_index":1487,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newgeometry.attributes",{"_index":1490,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newobject3dinstance",{"_index":165,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["newpoints",{"_index":2798,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newpoints.push",{"_index":2797,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newtexturepath",{"_index":1983,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["nextpointl",{"_index":2788,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nextpointr",{"_index":2789,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ng",{"_index":802,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":958,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ngafterviewinit",{"_index":959,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":382,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":960,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngonchanges(changes",{"_index":993,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngondestroy",{"_index":845,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":846,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["node",{"_index":591,"title":{"interfaces/Node.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":218,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["node.childnodes",{"_index":2454,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.component",{"_index":1127,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.component.ts",{"_index":1031,"title":{},"body":{"components/DagreNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:102",{"_index":1042,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:16",{"_index":1036,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:18",{"_index":1037,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:20",{"_index":1048,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:22",{"_index":1049,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:23",{"_index":1035,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:41",{"_index":1040,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:46",{"_index":1038,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:65",{"_index":1039,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:70",{"_index":1041,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:88",{"_index":1043,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.composition",{"_index":1085,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.getattribute",{"_index":2462,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.hasattribute",{"_index":2425,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.height",{"_index":947,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.href.baseval.substring",{"_index":2440,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.icon",{"_index":1171,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.label",{"_index":1083,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.model",{"_index":1173,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.name",{"_index":1160,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.nodename",{"_index":2421,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.nodetype",{"_index":2417,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet",{"_index":2475,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules",{"_index":2476,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules.length",{"_index":2477,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.type",{"_index":1165,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.viewportelement.getelementbyid",{"_index":2442,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.width",{"_index":946,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.x",{"_index":941,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["node.y",{"_index":943,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["nodefactory",{"_index":1155,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef",{"_index":1157,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.composition",{"_index":1161,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.container.createcomponent(serverfactory",{"_index":1167,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.name",{"_index":1159,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["nodes",{"_index":598,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["nodesep",{"_index":968,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["noholes",{"_index":1617,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["nom1",{"_index":2588,"title":{},"body":{"classes/SVGLoader.html":{}}}],["non",{"_index":2445,"title":{},"body":{"classes/SVGLoader.html":{}}}],["none",{"_index":2259,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":3407,"title":{},"body":{"license.html":{}}}],["nonzero",{"_index":2653,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normal",{"_index":2759,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normals",{"_index":2378,"title":{},"body":{"classes/SVGLoader.html":{}}}],["notable",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":320,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":3393,"title":{},"body":{"license.html":{}}}],["now",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":2003,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":692,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":173,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["number.epsilon",{"_index":2600,"title":{},"body":{"classes/SVGLoader.html":{}}}],["numpoints",{"_index":2795,"title":{},"body":{"classes/SVGLoader.html":{}}}],["obj",{"_index":258,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":2137,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":2135,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":2136,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.clone",{"_index":2015,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["obj.ismesh",{"_index":710,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":714,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":2141,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":2139,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":2140,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":184,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":482,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":516,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1249,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1233,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":481,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":1526,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["object/scene.component",{"_index":2295,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":3315,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":255,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":1970,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":257,"title":{"components/ObjLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["objloaderservice",{"_index":513,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":358,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":3370,"title":{},"body":{"license.html":{}}}],["official",{"_index":3343,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1500,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["once",{"_index":326,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":953,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["onclick",{"_index":847,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1931,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":848,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["ondestroy",{"_index":838,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["one",{"_index":2720,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onerror",{"_index":2366,"title":{},"body":{"classes/SVGLoader.html":{}}}],["oninit",{"_index":837,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["onload",{"_index":2364,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onlyunique",{"_index":3209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlyunique(value",{"_index":1129,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["onmouseclick",{"_index":1496,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":1518,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":1497,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1520,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":2142,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":2167,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1918,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onprogress",{"_index":2365,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onresize(event",{"_index":2246,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":849,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["ontouchstart",{"_index":2168,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1935,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1670,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["open",{"_index":2736,"title":{},"body":{"classes/SVGLoader.html":{}}}],["openended",{"_index":807,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["openparpos",{"_index":2544,"title":{},"body":{"classes/SVGLoader.html":{}}}],["optimization",{"_index":322,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":3322,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":260,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":1815,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":259,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["original",{"_index":1267,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":262,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":261,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oter",{"_index":2629,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections",{"_index":2661,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections.push",{"_index":2666,"title":{},"body":{"classes/SVGLoader.html":{}}}],["others",{"_index":1826,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":3418,"title":{},"body":{"license.html":{}}}],["out",{"_index":379,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outerpoint",{"_index":2791,"title":{},"body":{"classes/SVGLoader.html":{}}}],["outline",{"_index":2258,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":890,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["outputs",{"_index":853,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["over",{"_index":2526,"title":{},"body":{"classes/SVGLoader.html":{}}}],["overridematerialcolor",{"_index":2803,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":2823,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":3423,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":2636,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.getpoints",{"_index":2685,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.identifier",{"_index":2705,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.points",{"_index":2707,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.x",{"_index":2693,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.y",{"_index":2692,"title":{},"body":{"classes/SVGLoader.html":{}}}],["package",{"_index":2004,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pairs",{"_index":2769,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pane",{"_index":2216,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1789,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":753,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":1293,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["parameter",{"_index":2729,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2745,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parent",{"_index":171,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["parent.ts",{"_index":3242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentscene",{"_index":804,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":3296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":2341,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parse(text",{"_index":2368,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseandcreate",{"_index":1106,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parsecirclenode",{"_index":2434,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecssstylesheet",{"_index":2423,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsedefs(node",{"_index":2438,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseellipsenode",{"_index":2436,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloats",{"_index":2474,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloatwithunits",{"_index":2534,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseint(number(this.materialcolor).tostring",{"_index":1708,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["parselinenode",{"_index":2437,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenode",{"_index":2416,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenodetransform",{"_index":2531,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepathnode",{"_index":2426,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolygonnode",{"_index":2430,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolylinenode",{"_index":2432,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parser",{"_index":1099,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser'},{'name",{"_index":221,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["parser.component.ts",{"_index":1097,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parser.component.ts:117",{"_index":1115,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:134",{"_index":1118,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:144",{"_index":1113,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:38",{"_index":1110,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:40",{"_index":1111,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:42",{"_index":1124,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:44",{"_index":1109,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:55",{"_index":1121,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:60",{"_index":1122,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:73",{"_index":1123,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:94",{"_index":1120,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:98",{"_index":1117,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parserectnode",{"_index":2428,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsestyle",{"_index":2424,"title":{},"body":{"classes/SVGLoader.html":{}}}],["particular",{"_index":3405,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1372,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1405,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1407,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1409,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1408,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patch",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1973,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["path.boundingbox.containspoint",{"_index":2632,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.color",{"_index":2837,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.color.setstyle",{"_index":2449,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.absellipse",{"_index":2514,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.currentpoint.copy",{"_index":2472,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.identifier",{"_index":2639,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.iscw",{"_index":2641,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.points",{"_index":2634,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.subpaths",{"_index":2582,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.toshapes(this.isccw",{"_index":2841,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.userdata",{"_index":2453,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata.style",{"_index":2744,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths",{"_index":2370,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["paths.foreach",{"_index":2618,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.push",{"_index":2452,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pause",{"_index":1906,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1887,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2402,"title":{},"body":{"classes/SVGLoader.html":{}}}],["per",{"_index":2394,"title":{},"body":{"classes/SVGLoader.html":{}}}],["performance",{"_index":321,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":3365,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3387,"title":{},"body":{"license.html":{}}}],["person",{"_index":3369,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3388,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":265,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":264,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":1282,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":487,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":537,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":486,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1283,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1292,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":677,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2255,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":267,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":266,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plus",{"_index":2765,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point",{"_index":269,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["point.copy",{"_index":2471,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point.x",{"_index":2668,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0l",{"_index":2784,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0r",{"_index":2785,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointlightcomponent",{"_index":268,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["points",{"_index":2376,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.foreach(p",{"_index":2691,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.length",{"_index":2796,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke",{"_index":2342,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke(points",{"_index":2372,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers",{"_index":2343,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers(points",{"_index":2377,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polygon",{"_index":2429,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polyline",{"_index":2431,"title":{},"body":{"classes/SVGLoader.html":{}}}],["portions",{"_index":3396,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1528,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":345,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/GridActorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":1552,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["pq",{"_index":2492,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preallocate",{"_index":2774,"title":{},"body":{"classes/SVGLoader.html":{}}}],["precision",{"_index":2524,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preloading",{"_index":1995,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":1997,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["preservedrawingbuffer",{"_index":2201,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["private",{"_index":329,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["project",{"_index":3083,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":784,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":207,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":530,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":782,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:15",{"_index":787,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:24",{"_index":789,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":652,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":3283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":3284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":3273,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":3285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":3275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../provide",{"_index":3286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":3276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":3287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":3288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":112,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":1721,"title":{},"body":{"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2915,"title":{},"body":{"components/TextActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":3034,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":310,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":341,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":334,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":336,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":338,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":335,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":380,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":478,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":388,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":2048,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":2079,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":405,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1773,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":2044,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":431,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":717,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":723,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:22",{"_index":729,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:29",{"_index":726,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1322,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1330,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1329,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1327,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:24",{"_index":1332,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:50",{"_index":1333,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1349,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1360,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1206,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1415,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:12",{"_index":1423,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1425,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1424,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:16",{"_index":1421,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:27",{"_index":1428,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:36",{"_index":1427,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:42",{"_index":1426,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:48",{"_index":1430,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:53",{"_index":1429,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":515,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":398,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":1653,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":781,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":445,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":574,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1411,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1413,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":1414,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1562,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":154,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":454,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":1296,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1588,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2100,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":461,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1958,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2032,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1448,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts:8",{"_index":1449,"title":{},"body":{"injectables/FontService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1598,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:14",{"_index":1611,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:16",{"_index":1602,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:49",{"_index":1599,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:58",{"_index":1601,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":1871,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:10",{"_index":1874,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:16",{"_index":1872,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:22",{"_index":1873,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:8",{"_index":1875,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":2016,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2911,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/stl",{"_index":2902,"title":{},"body":{"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2799,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":468,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":739,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":805,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":1459,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":1570,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2093,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2868,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":3017,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":3036,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2848,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":2852,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:25",{"_index":2853,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:31",{"_index":2855,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:35",{"_index":2854,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":572,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2952,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":536,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1284,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1288,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":2108,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":2111,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":545,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":2112,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1880,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":2180,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":2175,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":2174,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":2189,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":2190,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":2187,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":2186,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":2188,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":2170,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":2177,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":2184,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":2185,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":2173,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":2172,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":2181,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":2182,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":2192,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":2183,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":2171,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":2179,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":2178,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":556,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":600,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:113",{"_index":612,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:122",{"_index":621,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":631,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":628,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":625,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":629,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":623,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":630,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:40",{"_index":610,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:45",{"_index":618,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:97",{"_index":619,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":2193,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2260,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:108",{"_index":2272,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:116",{"_index":2288,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:123",{"_index":2274,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:127",{"_index":2273,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2291,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:131",{"_index":2275,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:135",{"_index":2284,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2292,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2290,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2294,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:17",{"_index":2289,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:19",{"_index":2270,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:28",{"_index":2278,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:33",{"_index":2286,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:37",{"_index":2282,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:42",{"_index":2279,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:59",{"_index":2277,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:95",{"_index":2281,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2877,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":566,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2882,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2889,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2888,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2885,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2887,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":2886,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2884,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2334,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":3233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":3236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":3239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":3241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":3243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":3245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":1998,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1455,"title":{},"body":{"injectables/FontService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["property",{"_index":2221,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":1029,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["props",{"_index":1309,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["provided",{"_index":3303,"title":{},"body":{"index.html":{},"license.html":{}}}],["provideparent",{"_index":182,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":159,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":576,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":742,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":3295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":783,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":806,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(dagrecompositioncomponent",{"_index":839,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["provideparent(dagrelayoutcomponent",{"_index":955,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["provideparent(dagrenodecomponent",{"_index":1032,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["provideparent(dagreyamlparsercomponent",{"_index":1098,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":1297,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1412,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":1460,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":1493,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1563,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":1571,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1589,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":1637,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":1656,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(loaderactorcomponent",{"_index":1722,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["provideparent(modelactorcomponent",{"_index":1861,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":2033,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1965,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":2050,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":2080,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":2094,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":2101,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2849,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":2864,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":2865,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":2866,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":2867,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":2869,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(stlloadercomponent",{"_index":2903,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":2800,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textactorcomponent",{"_index":2916,"title":{},"body":{"components/TextActorComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":2954,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":3018,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":3037,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":3075,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":1633,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1634,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1635,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["pruning",{"_index":2620,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pt",{"_index":2401,"title":{},"body":{"classes/SVGLoader.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["publish",{"_index":3381,"title":{},"body":{"license.html":{}}}],["published",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":3356,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3406,"title":{},"body":{"license.html":{}}}],["px",{"_index":2349,"title":{},"body":{"classes/SVGLoader.html":{}}}],["q",{"_index":2493,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rad2deg",{"_index":2109,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":539,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":535,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":808,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":1291,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":2871,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":809,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":810,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["randomint",{"_index":2922,"title":{},"body":{"components/TextActorComponent.html":{}}}],["randomint(min",{"_index":2930,"title":{},"body":{"components/TextActorComponent.html":{}}}],["rankdir",{"_index":969,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker",{"_index":970,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker'].some(propname",{"_index":1028,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranksep",{"_index":971,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["raycaster",{"_index":298,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":493,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":546,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":548,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":492,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":1817,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":297,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1514,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":300,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1884,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1934,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1929,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1928,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":302,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":544,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1045,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["readonly",{"_index":327,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":2966,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rect",{"_index":2427,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rectangular",{"_index":758,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["references",{"_index":2444,"title":{},"body":{"classes/SVGLoader.html":{}}}],["refreshlayout",{"_index":961,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["register",{"_index":118,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["register(id",{"_index":127,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":1999,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["relative",{"_index":1974,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":929,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removed",{"_index":1921,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["removeduplicatedpoints",{"_index":2794,"title":{},"body":{"classes/SVGLoader.html":{}}}],["removefromarray",{"_index":3244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":3297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removenode",{"_index":850,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["removepass",{"_index":1365,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1379,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":324,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"changelog.html":{}}}],["rendered",{"_index":2217,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":271,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":678,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":489,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":557,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":559,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":488,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":181,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":270,"title":{"components/RendererCanvasComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["rendererservice",{"_index":170,"title":{"injectables/RendererService.html":{}},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2856,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":2231,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":2204,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":632,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":667,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1395,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":666,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1366,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":3308,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":114,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":130,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":121,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:28",{"_index":129,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:36",{"_index":124,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["request",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":323,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":361,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":3357,"title":{},"body":{"index.html":{}}}],["reset",{"_index":378,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":2200,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2254,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2265,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2280,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2250,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1458,"title":{},"body":{"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{}}}],["resolve(data.paths",{"_index":2914,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(mesh",{"_index":2910,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["resolve(model",{"_index":2030,"title":{},"body":{"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolver",{"_index":122,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["resourcepath",{"_index":1968,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":1975,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["restorematerial",{"_index":609,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":620,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":2225,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":3376,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1908,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returned",{"_index":2718,"title":{},"body":{"classes/SVGLoader.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2756,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rights",{"_index":3378,"title":{},"body":{"license.html":{}}}],["ring1",{"_index":1723,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring2",{"_index":1724,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring3",{"_index":1725,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["rotate",{"_index":2550,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rotatespeed",{"_index":1790,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotations",{"_index":2682,"title":{},"body":{"classes/SVGLoader.html":{}}}],["round",{"_index":2721,"title":{},"body":{"classes/SVGLoader.html":{}}}],["run",{"_index":3337,"title":{},"body":{"index.html":{}}}],["rx",{"_index":2485,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rx,ry",{"_index":2480,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rxjs",{"_index":892,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{}}}],["rxs",{"_index":2487,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ry",{"_index":2486,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rys",{"_index":2488,"title":{},"body":{"classes/SVGLoader.html":{}}}],["s",{"_index":2483,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["same",{"_index":2764,"title":{},"body":{"classes/SVGLoader.html":{},"changelog.html":{}}}],["sample",{"_index":3332,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":658,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":3320,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1352,"title":{},"body":{"components/DotScreenComponent.html":{},"classes/SVGLoader.html":{}}}],["scaletofit",{"_index":2821,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2845,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["scalex",{"_index":2560,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scaley",{"_index":2561,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanline",{"_index":2614,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections",{"_index":2657,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.foreach",{"_index":2662,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.sort",{"_index":2659,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlinemaxx",{"_index":2651,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineminx",{"_index":2650,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scene",{"_index":607,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":274,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":2857,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":529,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1367,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":273,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":2404,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager",{"_index":2405,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager.itemerror",{"_index":2415,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.parse",{"_index":2413,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.path",{"_index":2407,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.requestheader",{"_index":2409,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.withcredentials",{"_index":2411,"title":{},"body":{"classes/SVGLoader.html":{}}}],["screen",{"_index":1351,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":228,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":437,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1350,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1353,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:23",{"_index":1356,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:27",{"_index":1355,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1791,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["search",{"_index":2623,"title":{},"body":{"classes/SVGLoader.html":{}}}],["see",{"_index":3156,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":2040,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":757,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":855,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":160,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["self",{"_index":1130,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["self.indexof(value",{"_index":1131,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["sell",{"_index":3385,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["separate",{"_index":1394,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separating",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":3278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":137,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["server/server",{"_index":423,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":424,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":131,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":132,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverfactory",{"_index":1163,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["servericonactorcomponent",{"_index":133,"title":{"components/ServerIconActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverref",{"_index":1166,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.icon",{"_index":1170,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.label",{"_index":1169,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.model",{"_index":1172,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.name",{"_index":1168,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverstandactorcomponent",{"_index":134,"title":{"components/ServerStandActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":313,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{}}}],["services",{"_index":1988,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["services/obj",{"_index":1986,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["set",{"_index":893,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":2169,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1910,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2266,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2283,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setheight(height",{"_index":889,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["seticon(icon",{"_index":2819,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setmaterialcolor(materialcolor",{"_index":2991,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setmaterials",{"_index":2018,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":2020,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(model",{"_index":1864,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":2815,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":2267,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2285,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":2994,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":1982,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["settled",{"_index":704,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":1779,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":1649,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":637,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1359,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":676,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":737,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":736,"title":{},"body":{"components/BlurComponent.html":{}}}],["shadow",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":3394,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1475,"title":{},"body":{"components/FrameMeshComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["shape.holes.push",{"_index":2715,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shape.lineto",{"_index":1478,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":1479,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":1477,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shapepath",{"_index":2024,"title":{},"body":{"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["shapepath.userdata.style.fillrule",{"_index":2701,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapes",{"_index":2840,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["shapestoreturn",{"_index":2702,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn.push",{"_index":2716,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils",{"_index":2387,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils.isclockwise",{"_index":2694,"title":{},"body":{"classes/SVGLoader.html":{}}}],["show",{"_index":307,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":568,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2878,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2880,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2879,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["sides",{"_index":761,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":3301,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":725,"title":{},"body":{"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["simplepath",{"_index":2648,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox",{"_index":2658,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox.getcenter",{"_index":2655,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.identifier",{"_index":2664,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths",{"_index":2695,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.filter",{"_index":2696,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.foreach",{"_index":2703,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.map",{"_index":2700,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplex",{"_index":984,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["single",{"_index":2249,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":578,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":3237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":1462,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":1463,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skewx",{"_index":2563,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skewy",{"_index":2566,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skip",{"_index":2859,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":179,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":1591,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["slightly",{"_index":2525,"title":{},"body":{"classes/SVGLoader.html":{}}}],["smaapass",{"_index":639,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":696,"title":{},"body":{"injectables/BloomService.html":{}}}],["snyk",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":3372,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1671,"title":{},"body":{"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":3054,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":3056,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["sp",{"_index":2697,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sp.points.length",{"_index":2698,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sphere",{"_index":279,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":278,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["split",{"_index":2538,"title":{},"body":{"classes/SVGLoader.html":{}}}],["square",{"_index":2724,"title":{},"body":{"classes/SVGLoader.html":{}}}],["src/app.component.html",{"_index":3321,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":3331,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":3342,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":3328,"title":{},"body":{"index.html":{}}}],["stack",{"_index":2671,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.length",{"_index":2672,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.pop",{"_index":2673,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.push",{"_index":2674,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stand",{"_index":277,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":332,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{}}}],["start.x",{"_index":2507,"title":{},"body":{"classes/SVGLoader.html":{}}}],["start.y",{"_index":2509,"title":{},"body":{"classes/SVGLoader.html":{}}}],["started",{"_index":3079,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":3196,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1047,"title":{},"body":{"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["stats",{"_index":305,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":567,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":494,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2296,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":304,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":565,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":1107,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["step",{"_index":1996,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["still",{"_index":2771,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stl",{"_index":281,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stlloader",{"_index":2906,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["stlloadercomponent",{"_index":280,"title":{"components/StlLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stop",{"_index":333,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["stories",{"_index":3138,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":3100,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":3144,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":2248,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2717,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokecolor",{"_index":2358,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinecap",{"_index":2361,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinejoin",{"_index":2360,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokemiterlimit",{"_index":2362,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokewidth",{"_index":2359,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style",{"_index":2373,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill",{"_index":2448,"title":{},"body":{"classes/SVGLoader.html":{}}}],["styles",{"_index":1772,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1777,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":3390,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":3383,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3354,"title":{},"body":{"index.html":{}}}],["subpaths",{"_index":2581,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subpaths.length",{"_index":2584,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subscribe",{"_index":342,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":365,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["subscribeevents",{"_index":2134,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscription",{"_index":885,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["substantial",{"_index":3395,"title":{},"body":{"license.html":{}}}],["super",{"_index":2392,"title":{},"body":{"classes/SVGLoader.html":{}}}],["super(rendererservice",{"_index":186,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":1005,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":1025,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":923,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{}}}],["super.ngoninit",{"_index":909,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["super.updateparent",{"_index":2860,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":3105,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":3350,"title":{},"body":{"index.html":{}}}],["svg",{"_index":283,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgangle",{"_index":2512,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader",{"_index":2025,"title":{"classes/SVGLoader.html":{}},"body":{"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["svgloader.getstrokestyle",{"_index":2742,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.parse",{"_index":2743,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.pointstostrokewithbuffers",{"_index":2757,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloadercomponent",{"_index":282,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":514,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["sweep_flag",{"_index":2496,"title":{},"body":{"classes/SVGLoader.html":{}}}],["switch",{"_index":2420,"title":{},"body":{"classes/SVGLoader.html":{},"changelog.html":{}}}],["syncgraph",{"_index":851,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphcontainer",{"_index":962,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphcontainer(g",{"_index":997,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphnodes",{"_index":852,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphnodes(g",{"_index":877,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["t2",{"_index":2585,"title":{},"body":{"classes/SVGLoader.html":{}}}],["table",{"_index":3248,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3247,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":1299,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["targetopacity",{"_index":1214,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["template",{"_index":164,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":2197,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["temptransform0",{"_index":2532,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1",{"_index":2557,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1.identity().translate",{"_index":2553,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2",{"_index":2556,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2.identity().rotate",{"_index":2554,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3",{"_index":2559,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3.multiplymatrices",{"_index":2555,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_1",{"_index":2775,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_2",{"_index":2776,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_3",{"_index":2777,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_4",{"_index":2778,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_5",{"_index":2779,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_6",{"_index":2780,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_7",{"_index":2781,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.set",{"_index":2572,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.x",{"_index":2577,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.y",{"_index":2578,"title":{},"body":{"classes/SVGLoader.html":{}}}],["test",{"_index":3317,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3338,"title":{},"body":{"index.html":{}}}],["text",{"_index":285,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":3001,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":528,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":573,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":527,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":3035,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":284,"title":{"components/TextActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":286,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":2042,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texture2d",{"_index":662,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["texturepath",{"_index":1969,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":1993,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1976,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["theta",{"_index":2511,"title":{},"body":{"classes/SVGLoader.html":{}}}],["thetalength",{"_index":811,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":812,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":1464,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["thickness'].some(propname",{"_index":1483,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._height",{"_index":895,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this._materialcolor",{"_index":2999,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":2822,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":3002,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":1651,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.actorrepository.getcomponentfactory(id",{"_index":1153,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.addnode",{"_index":910,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.addpass(renderpass",{"_index":1396,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.align",{"_index":1009,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.animate",{"_index":1243,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":1244,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":362,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":360,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":359,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1245,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1281,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1854,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1246,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe(this.updateanimation",{"_index":1761,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.animationservice.start",{"_index":1247,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":352,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":353,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1342,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applyshadowprops(mesh",{"_index":780,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.applytranslation",{"_index":944,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.aspect",{"_index":2332,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":3067,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":1833,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1835,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":3009,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":3012,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":3011,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":3010,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2326,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2325,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2301,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":682,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":687,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":688,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":686,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":707,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":693,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":684,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2299,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":665,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":711,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.calculateaspectratio(canvas",{"_index":2333,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1912,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":2092,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":2075,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1942,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.left",{"_index":2072,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":2077,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.right",{"_index":2073,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":2074,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2298,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":2076,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":2067,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2242,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2244,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":1307,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.cdref.detectchanges",{"_index":899,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.cdref['destroyed",{"_index":898,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.centered",{"_index":1022,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":1030,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextActorComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1827,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit",{"_index":2147,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":907,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":1388,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":1402,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":1406,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1404,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.render",{"_index":2303,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1410,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1391,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1399,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composition",{"_index":920,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.container.createcomponent(factory",{"_index":1179,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.container.createcomponent(nodefactory",{"_index":1158,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.contentprojection",{"_index":797,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":798,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":1818,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1855,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":1832,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1834,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1838,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":1836,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1844,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1846,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1850,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1842,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1848,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1830,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1856,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1820,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1840,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1852,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1823,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2898,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcomposition(i",{"_index":1141,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createedge(i",{"_index":1145,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createnode(i",{"_index":1143,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.currentdelay",{"_index":2945,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currentpos",{"_index":2942,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currenttext",{"_index":2944,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.curvesegments",{"_index":3008,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dagrelayout",{"_index":900,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getchildren().push(this",{"_index":915,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel",{"_index":911,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes",{"_index":931,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.filter(i",{"_index":932,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.push",{"_index":918,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.refreshlayout",{"_index":922,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.removechildbyname(this.name",{"_index":930,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.updated.subscribe(this.syncgraph",{"_index":906,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dampingfactor",{"_index":1839,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":706,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":715,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashcolor",{"_index":1258,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashincrement",{"_index":1277,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashsize",{"_index":1713,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.defaultdpi",{"_index":2396,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.defaultid",{"_index":145,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":2403,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.depth",{"_index":773,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":776,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthwrite",{"_index":2839,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.destroyall",{"_index":1137,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.disable",{"_index":1895,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1446,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":2104,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":1569,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.done",{"_index":2949,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.edges",{"_index":1253,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1259,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1262,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1260,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1261,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1279,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edgesep",{"_index":1012,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.enabled",{"_index":355,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1837,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1439,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1444,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":697,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":699,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":700,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":698,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":701,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":709,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1339,"title":{},"body":{"components/DofComponent.html":{}}}],["this.font.load(this.fonturl",{"_index":3004,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":2090,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.gapsize",{"_index":1715,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1923,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1938,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getgeometry",{"_index":1488,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.getlayout(model",{"_index":1076,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.getlineposition(event",{"_index":1529,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":778,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getnodecomponent((node.model",{"_index":1164,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.getobject",{"_index":1484,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.getobject().background",{"_index":2862,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getpositions",{"_index":1702,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.gettextmesh(font",{"_index":3005,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.graph",{"_index":1017,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel",{"_index":1004,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel.layout",{"_index":1008,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphupdated",{"_index":905,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.graphupdated?.unsubscribe",{"_index":928,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":1538,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":1532,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":1530,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groundcolor",{"_index":1597,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.groups",{"_index":1943,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1944,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1917,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":772,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":775,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hidedash",{"_index":1278,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.hightsegments",{"_index":2876,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":1241,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1248,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.i",{"_index":1765,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.iconservice.getsource(icon",{"_index":2827,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1385,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":702,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1268,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.injector.get(dagrelayoutcomponent",{"_index":901,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.instances",{"_index":1193,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.foreach(i",{"_index":1189,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(compositionref",{"_index":1205,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(edgeref",{"_index":1187,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(noderef",{"_index":1162,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(serverref",{"_index":1174,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.intensity",{"_index":189,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isccw",{"_index":2828,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.isready",{"_index":1919,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1932,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":1575,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":1585,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":1587,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.label",{"_index":919,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.layout",{"_index":1006,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.line.material.color",{"_index":1718,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.material.needsupdate",{"_index":1720,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.linewidth",{"_index":1710,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.list.get(id",{"_index":148,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":146,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":1828,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1829,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":2029,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.load(this.model",{"_index":2037,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":2031,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loop",{"_index":3063,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.marginx",{"_index":1014,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.marginy",{"_index":1015,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.material",{"_index":1264,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":1271,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1270,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materialcolor",{"_index":1709,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.materials[obj.uuid",{"_index":713,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.matline",{"_index":1704,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.maxblur",{"_index":1346,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdelay",{"_index":2947,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxdistance",{"_index":1845,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1847,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpos",{"_index":2943,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxx",{"_index":2843,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxy",{"_index":2844,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxzoom",{"_index":1851,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1843,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1849,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.model",{"_index":1870,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.modelpath",{"_index":1868,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.modelservice.getsource(model",{"_index":1867,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.mouseenter.emit",{"_index":2145,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":2143,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":2006,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":2008,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":3065,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.name",{"_index":913,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.near",{"_index":1443,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.nodesep",{"_index":1011,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.noholes",{"_index":2830,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.object",{"_index":949,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.object.add(this.ring1",{"_index":1749,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring2",{"_index":1753,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring3",{"_index":1756,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.objloader.load(this.model",{"_index":2014,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.objloader.setmaterials(materialcreator",{"_index":2011,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.offset",{"_index":1576,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1890,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1891,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":2128,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":2129,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":2130,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":2131,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1888,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1889,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2236,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2237,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1892,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1893,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1716,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.openended",{"_index":831,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.overridematerialcolor",{"_index":2833,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.panspeed",{"_index":1831,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":1434,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":1435,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1436,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parentscene",{"_index":1433,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parseandcreate",{"_index":1132,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.pass.push(new",{"_index":735,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1336,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1343,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1340,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1345,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1907,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.preservedrawingbuffer",{"_index":2240,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.radialsegments",{"_index":830,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":3025,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":829,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.randomint(this.mindelay",{"_index":2946,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.rankdir",{"_index":1010,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranker",{"_index":1016,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranksep",{"_index":1013,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1948,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":2132,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":2153,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":2116,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":3015,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.register('barrel",{"_index":140,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":139,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":141,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":143,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":138,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":142,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":1876,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":1622,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1630,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1624,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1627,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1618,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2897,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.removenode",{"_index":924,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.render",{"_index":2323,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1348,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2239,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":367,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2256,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":1387,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1400,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2314,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1392,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2241,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":149,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.resolver.resolvecomponentfactory(dagrecompositioncomponent",{"_index":1195,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagreedgecomponent",{"_index":1177,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrenodecomponent",{"_index":1156,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resourcepath",{"_index":1994,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.restorematerial(i",{"_index":708,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.ring1",{"_index":1746,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.rotatez(math.sin(this.i",{"_index":1768,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.scale.set(70",{"_index":1747,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2",{"_index":1750,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.rotatez(math.cos(this.i",{"_index":1769,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.scale.set(60",{"_index":1751,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3",{"_index":1754,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.rotatez(math.sin(this.i",{"_index":1770,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.scale.set(50",{"_index":1755,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.rotatespeed",{"_index":1821,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":664,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2313,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1441,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2300,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":705,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1397,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1398,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1841,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1925,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1927,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.size",{"_index":1579,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":1470,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":1473,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.skycolor",{"_index":1596,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.solid",{"_index":1712,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.start",{"_index":1739,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.startloading",{"_index":2824,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":2895,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2901,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2900,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2896,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2881,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2305,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.status.emit(false",{"_index":1151,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.status.emit(true",{"_index":1146,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.stop",{"_index":1276,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["this.subscribe",{"_index":1894,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribed",{"_index":1762,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.subscribeevents",{"_index":2133,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.svgloader.load(this.model",{"_index":2835,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.syncgraph",{"_index":903,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraph.bind(this",{"_index":904,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraphcontainer(this.graph",{"_index":1019,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.syncgraphnodes(this.dagrelayout.getgraph",{"_index":950,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.target",{"_index":1306,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.targetopacity",{"_index":1280,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.text",{"_index":2939,"title":{},"body":{"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.text.length",{"_index":2940,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.thetalength",{"_index":833,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":832,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":1474,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":2894,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":1652,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.translatelabely",{"_index":896,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.translatex",{"_index":940,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatey",{"_index":942,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.trytofindgeometry",{"_index":1242,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":3026,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":3027,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":3057,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1896,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":2148,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateanimation",{"_index":1759,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updateanimation.bind(this",{"_index":1760,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updatebaseinfo(g",{"_index":1092,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2322,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updated.emit",{"_index":1020,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.updateedges(g",{"_index":1095,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1078,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatetext",{"_index":2937,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.updatezoom",{"_index":2064,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":3070,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":3069,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":3058,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":3061,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":3059,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":3068,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":3062,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":3064,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":3072,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play",{"_index":3071,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":3073,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":3055,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":2307,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2320,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2304,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2319,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2310,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2311,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2331,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2316,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2315,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2317,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.width",{"_index":945,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.widthsegments",{"_index":774,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.zoom",{"_index":2068,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1824,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":180,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(this.color",{"_index":187,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":582,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":584,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":771,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":1516,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":1543,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":1541,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["three.camera",{"_index":617,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.clock",{"_index":1691,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color(this.background",{"_index":2858,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color(this.materialcolor",{"_index":1719,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color.getstyle",{"_index":2719,"title":{},"body":{"classes/SVGLoader.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":828,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":1304,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1255,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":1881,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(this.color",{"_index":1442,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":2985,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1456,"title":{},"body":{"injectables/FontService.html":{}}}],["three.gridhelper(this.size",{"_index":1568,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":2836,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":1595,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1951,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":2002,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.layers",{"_index":624,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.line(geometry",{"_index":1545,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":1546,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":1257,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1256,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":1230,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":825,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":779,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.getgeometry",{"_index":1481,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":626,"title":{},"body":{"injectables/BloomService.html":{},"components/VideoMeshComponent.html":{}}}],["three.object3d",{"_index":792,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/TextActorComponent.html":{}}}],["three.objectloader",{"_index":2035,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1961,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":2062,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2318,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":2089,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry",{"_index":2099,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":2096,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(this.color",{"_index":2103,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1885,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.ringgeometry(0.85",{"_index":1743,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["three.scene",{"_index":615,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":690,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.shape",{"_index":1476,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.shapebuffergeometry",{"_index":1466,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":1480,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":2875,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":3007,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":3028,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector2(window.innerwidth",{"_index":670,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector3",{"_index":3294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":2078,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(this.maxx",{"_index":2846,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.vector3(x",{"_index":1947,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":3066,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":2293,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":1816,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2890,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/lines/line2",{"_index":1697,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linegeometry",{"_index":1699,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linematerial",{"_index":1700,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1984,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1985,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/stlloader",{"_index":2908,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1335,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":636,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":1382,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":633,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":638,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/smaapass",{"_index":640,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":635,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1358,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":642,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":733,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":731,"title":{},"body":{"components/BlurComponent.html":{}}}],["three@types",{"_index":1706,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["threejs",{"_index":2026,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":3336,"title":{},"body":{"index.html":{}}}],["threejs/videos/ui/retro_futuristic_ui_360p.mp4",{"_index":3077,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["throw",{"_index":1152,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["time",{"_index":1660,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["timescale",{"_index":1661,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["tindex",{"_index":2539,"title":{},"body":{"classes/SVGLoader.html":{}}}],["todo",{"_index":685,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2883,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":3417,"title":{},"body":{"license.html":{}}}],["torus",{"_index":288,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":287,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1936,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1286,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["transform(degrees",{"_index":1287,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":2110,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["transform.premultiply",{"_index":2529,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transform.translate",{"_index":2536,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformpath",{"_index":2450,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack",{"_index":2456,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.length",{"_index":2457,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.push",{"_index":2530,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts",{"_index":2537,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts.length",{"_index":2540,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext",{"_index":2541,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.indexof",{"_index":2545,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.length",{"_index":2547,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transfvec2",{"_index":2570,"title":{},"body":{"classes/SVGLoader.html":{}}}],["translate",{"_index":1574,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":1494,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["translatelabely",{"_index":843,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["translatez",{"_index":1034,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["transparent",{"_index":1548,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["traversechildnodes",{"_index":2419,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tree",{"_index":153,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["triangles",{"_index":2751,"title":{},"body":{"classes/SVGLoader.html":{}}}],["trim",{"_index":2542,"title":{},"body":{"classes/SVGLoader.html":{}}}],["true",{"_index":356,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["truncated",{"_index":2730,"title":{},"body":{"classes/SVGLoader.html":{}}}],["try",{"_index":1136,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["trytofindgeometry",{"_index":1209,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tslint:disable",{"_index":2390,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tube",{"_index":3019,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":3020,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tx",{"_index":2533,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ty",{"_index":2535,"title":{},"body":{"classes/SVGLoader.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":2000,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["u",{"_index":2753,"title":{},"body":{"classes/SVGLoader.html":{}}}],["undefined",{"_index":500,"title":{},"body":{"modules/AtftModule.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":2223,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":499,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":657,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":691,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":2398,"title":{},"body":{"classes/SVGLoader.html":{}}}],["unrealbloompass",{"_index":634,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":669,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":926,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":2138,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":2479,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["update",{"_index":921,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["updateanimation",{"_index":315,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["updateaspectratio",{"_index":2052,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":2057,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatebaseinfo",{"_index":1060,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1067,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2268,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2287,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":350,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updateedges",{"_index":1061,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1069,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1062,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1071,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":1664,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["updateparent",{"_index":2850,"title":{},"body":{"components/SceneComponent.html":{}}}],["updatetext",{"_index":2923,"title":{},"body":{"components/TextActorComponent.html":{}}}],["updatezoom",{"_index":2053,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upgrade",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"classes/SVGLoader.html":{}}}],["usage",{"_index":3309,"title":{},"body":{"index.html":{}}}],["use",{"_index":1992,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":317,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{},"index.html":{}}}],["usednode",{"_index":2441,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usednodeid",{"_index":2439,"title":{},"body":{"classes/SVGLoader.html":{}}}],["useful",{"_index":2773,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usefull",{"_index":2123,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":3300,"title":{},"body":{"index.html":{}}}],["util",{"_index":183,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/fix",{"_index":2995,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["utils",{"_index":1001,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["utils.ts",{"_index":1055,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1066,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:32",{"_index":1068,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:43",{"_index":1070,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:51",{"_index":1072,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:57",{"_index":1064,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":3265,"title":{},"body":{"dependencies.html":{}}}],["uv",{"_index":650,"title":{},"body":{"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["uvs",{"_index":2379,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ux",{"_index":2515,"title":{},"body":{"classes/SVGLoader.html":{}}}],["uxactormodule",{"_index":3029,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["uy",{"_index":2516,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v",{"_index":2754,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v0.0.3",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":2571,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.set",{"_index":2576,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.x",{"_index":2573,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.y",{"_index":2574,"title":{},"body":{"classes/SVGLoader.html":{}}}],["valid",{"_index":2772,"title":{},"body":{"classes/SVGLoader.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":2527,"title":{},"body":{"classes/SVGLoader.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["variable",{"_index":3223,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3426,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":647,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":648,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":654,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":3333,"title":{},"body":{"index.html":{}}}],["vector2",{"_index":2388,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector2d",{"_index":2740,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector3",{"_index":2389,"title":{},"body":{"classes/SVGLoader.html":{}}}],["version",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["vertexcolors",{"_index":1711,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["vertexoffset",{"_index":2380,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vertexshader",{"_index":646,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":730,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":3327,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":1577,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["very",{"_index":2122,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":3318,"title":{},"body":{"index.html":{}}}],["video",{"_index":290,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":3043,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":289,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videosrc",{"_index":3040,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":795,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":2212,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('container",{"_index":1044,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["viewchild('contentprojection",{"_index":794,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":1523,"title":{},"body":{"components/GridActorComponent.html":{}}}],["viewcontainerref",{"_index":1046,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":649,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vx",{"_index":2517,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vy",{"_index":2518,"title":{},"body":{"classes/SVGLoader.html":{}}}],["want",{"_index":3323,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":3402,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3397,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3339,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1962,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":3306,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":2219,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":614,"title":{},"body":{"injectables/BloomService.html":{},"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":3414,"title":{},"body":{"license.html":{}}}],["width",{"_index":748,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":1650,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":749,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["wiki",{"_index":1056,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window.addeventlistener('click",{"_index":1898,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1897,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1899,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":671,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":680,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1902,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1901,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1903,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":2203,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":2207,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["witdh",{"_index":2734,"title":{},"body":{"classes/SVGLoader.html":{}}}],["within",{"_index":1977,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":3375,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2253,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":291,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":136,"title":{"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":3292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writing",{"_index":2766,"title":{},"body":{"classes/SVGLoader.html":{}}}],["written",{"_index":2768,"title":{},"body":{"classes/SVGLoader.html":{}}}],["wrong",{"_index":1705,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["x",{"_index":766,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":1584,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["x1p",{"_index":2500,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x1ps",{"_index":2491,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x_axis_rotation",{"_index":2505,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xml",{"_index":2371,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y",{"_index":763,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":1586,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y1p",{"_index":2498,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y1ps",{"_index":2490,"title":{},"body":{"classes/SVGLoader.html":{}}}],["yaml",{"_index":220,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yaml'].some(propname",{"_index":1134,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yaml.parse(this.yaml",{"_index":1138,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yanked",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":2176,"title":{},"body":{"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":754,"title":{},"body":{"components/BoxMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["z]*/ig",{"_index":2467,"title":{},"body":{"classes/SVGLoader.html":{}}}],["z][^a",{"_index":2466,"title":{},"body":{"classes/SVGLoader.html":{}}}],["zone.js",{"_index":3268,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":377,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":2066,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1792,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      return cacheHit;\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const j: any = key;\n\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComponentFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentFactory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(id: string, component: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            defaultId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId: string;\n\n  constructor(\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string): ComponentFactory {\n    const comp = this.list.get(id ?? this.defaultId);\n    const result = this.resolver.resolveComponentFactory(comp);\n    return result;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(this.color);\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  entryComponents: [\n    ServerStandActorComponent,\n    ServerBarrelActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    ModelActorComponent,\n    DagreNodeComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\nimport {StlLoaderComponent} from './stl-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        composition\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:40\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            darkenNonBloomed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    darkenNonBloomed(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            WebGLRenderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scene\n                                    \n                                            THREE.Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            restoreMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreMaterial(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bloomComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bloomLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Layers()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            darkMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            finalComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            materials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {SMAAPass} from 'three/examples/jsm/postprocessing/SMAAPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer: EffectComposer;\n  private bloomComposer: EffectComposer;\n  public initialized = false;\n  protected scene: THREE.Scene;\n\n  constructor() {\n  }\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        border\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Directive, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreCompositionComponent.html":{"url":"components/DagreCompositionComponent.html","title":"component - DagreCompositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreCompositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreCompositionComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-composition\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                            \n                                    Public\n                                translateLabelY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                composition\n                            \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n                \n                    \n                        Default value : 'plane'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateLabelY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:48\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-composition',\n  providers: [provideParent(DagreCompositionComponent)],\n  template: `\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n  `\n})\nexport class DagreCompositionComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() label: string;\n\n  @Input() border = 'plane';\n\n  private _height: number;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this.translateLabelY = this._height / 2 - 3;\n    if (!this.cdRef['destroyed']) {\n      this.cdRef.detectChanges();\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  @Input() width: number;\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  @Input() composition: string;\n\n  public color: string | number = '#A0A0A0';\n  public translateLabelY: number;\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreCompositionComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.label,\n        composition: this.composition\n      });\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreCompositionComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n\n        // console.log('DagreCompositionComponent.layout: Update position node', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n\n        this.width = node.width;\n        this.height = node.height;\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreCompositionComponent.update');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreCompositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreLayoutComponent.html":{"url":"components/DagreLayoutComponent.html","title":"component - DagreLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreLayoutComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                graph\n                            \n                            \n                                    Protected\n                                graphModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getGraphModel\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                refreshLayout\n                            \n                            \n                                    Protected\n                                syncGraphContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                centered\n                            \n                            \n                                edgesep\n                            \n                            \n                                marginx\n                            \n                            \n                                marginy\n                            \n                            \n                                nodesep\n                            \n                            \n                                rankdir\n                            \n                            \n                                ranker\n                            \n                            \n                                ranksep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edgesep\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginx\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginy\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodesep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rankdir\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranker\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranksep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraphModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraphModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLayout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphContainer(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     dagre.graphlib.Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreUtils} from './dagre-utils';\nimport {GraphModel} from './dagre-model';\n\n\n@Component({\n  selector: 'atft-dagre-layout',\n  providers: [provideParent(DagreLayoutComponent)],\n  template: `\n    `\n})\nexport class DagreLayoutComponent extends AbstractEmptyDirective implements AfterViewInit, OnChanges, OnDestroy, AfterContentInit {\n\n  @Input() align = 'DL';\n  @Input() rankdir = 'BT';\n  @Input() nodesep = 15;\n  @Input() edgesep = 1;\n  @Input() ranksep = 15;\n  @Input() marginx = 0;\n  @Input() marginy = 0;\n  @Input() ranker = 'network-simplex';\n\n  @Input() centered = true;\n\n  @Output() updated = new EventEmitter();\n\n  protected graphModel: GraphModel;\n  protected graph: dagre.graphlib.Graph;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n\n    // Initialize empty model:\n    this.graphModel = {\n      layout: {},\n      nodes: [],\n      edges: []\n    };\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n  }\n\n  ngAfterContentInit() {\n    this.layout();\n  }\n\n\n  public layout() {\n    // console.log('DagreLayoutComponent.layout');\n    this.graphModel.layout = {\n      align: this.align,\n      rankdir: this.rankdir,\n      nodesep: this.nodesep,\n      edgesep: this.edgesep,\n      ranksep: this.ranksep,\n      marginx: this.marginx,\n      marginy: this.marginy,\n      ranker: this.ranker\n    };\n    this.graph = DagreUtils.modelToGraph(this.graphModel);\n    // console.log('DagreLayoutComponent.layout: graph', this.graph);\n    this.syncGraphContainer(this.graph);\n    this.updated.emit();\n    this.rendererService.render();\n  }\n\n\n  protected syncGraphContainer(g: dagre.graphlib.Graph) {\n    // console.log('DagreLayoutComponent.syncGraphContainer');\n    if (this.object && this.centered) {\n      this.translateX = -(g.graph().width / 2);\n      this.translateY = -(g.graph().height / 2);\n      this.applyTranslation();\n    }\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreLayoutComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    let modified = false;\n\n    if (['align', 'rankdir', 'ranksep', 'nodesep', 'edgesep', 'marginx', 'marginy', 'ranker'].some(propName => propName in changes)) {\n      this.layout();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      // this.rendererService.render();\n    }\n\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.graph = undefined;\n    this.graphModel = undefined;\n  }\n\n  public getGraphModel() {\n    return this.graphModel;\n  }\n\n  public refreshLayout() {\n    if (this.graph) {\n      this.layout();\n    }\n  }\n\n  public getGraph() {\n    return this.graph;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreNodeComponent.html":{"url":"components/DagreNodeComponent.html","title":"component - DagreNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreNodeComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-node\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                composition\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, Input, OnDestroy, OnInit, Optional, SkipSelf, ViewChild, ViewContainerRef} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-node',\n  providers: [provideParent(DagreNodeComponent)],\n  template: ''\n})\nexport class DagreNodeComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() composition: string;\n\n  @Input() translateZ = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container;\n\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreNodeComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.name,\n        composition: this.composition\n      });\n\n       // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreNodeComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n        // console.log('DagreLayoutComponent.layout: Update position', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreNodeComponent.syncGraph');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLayout(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.GraphLabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            modelToGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.graphlib.Graph\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateBaseInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    baseInfo\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateEdges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(\n      this.getLayout(model)\n    );\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout', g);\n    dagre.layout(g);\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n    this.updateBaseInfo(g, model.compositions);\n    this.updateBaseInfo(g, model.nodes);\n    this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): dagre.GraphLabel {\n    const layout: dagre.GraphLabel = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreYamlParserComponent.html":{"url":"components/DagreYamlParserComponent.html","title":"component - DagreYamlParserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreYamlParserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreYamlParserComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-yaml-parser\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                instances\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createComposition\n                            \n                            \n                                    Protected\n                                createEdge\n                            \n                            \n                                    Protected\n                                createNode\n                            \n                            \n                                    Protected\n                                destroyAll\n                            \n                            \n                                    Protected\n                                getNodeComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                parseAndCreate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                yaml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, resolver: ComponentFactoryResolver, actorRepository: ActorRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorRepository\n                                                  \n                                                        \n                                                                        ActorRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        yaml\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createComposition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComposition(composition: Composition)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composition\n                                    \n                                                Composition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createEdge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEdge(edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            destroyAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseAndCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseAndCreate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport * as yaml from 'yaml';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreCompositionComponent} from './dagre-composition.component';\nimport {DagreEdgeComponent} from './dagre-edge.component';\nimport {Composition, Edge, GraphModel, Node} from './dagre-model';\nimport {DagreNodeComponent} from './dagre-node.component';\nimport {ActorRepositoryService} from '../service';\n\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\n@Component({\n  selector: 'atft-dagre-yaml-parser',\n  providers: [provideParent(DagreYamlParserComponent)],\n  template: `\n    `\n})\nexport class DagreYamlParserComponent extends AbstractEmptyDirective implements OnChanges, AfterViewInit {\n\n  @Input() yaml;\n\n  @Output() status = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef}) container;\n\n  private instances = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected resolver: ComponentFactoryResolver,\n    protected actorRepository: ActorRepositoryService\n  ) {\n    super(rendererService, parent);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.parseAndCreate();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreYamlParserComponent.ngOnChanges', this.name);\n\n    if (!this.object) {\n      return;\n    }\n\n    if (['yaml'].some(propName => propName in changes)) {\n      this.parseAndCreate();\n    }\n  }\n\n  public parseAndCreate() {\n    // console.log('DagreYamlParserComponent.parseAndCreate');\n    try {\n      this.destroyAll();\n      const model: GraphModel = yaml.parse(this.yaml);\n\n      // console.log('DagreYamlParserComponent.parseAndCreate yaml', model);\n      if (model && model.nodes && model.nodes.length > 0) {\n\n        model.compositions?.forEach(i => this.createComposition(i));\n        model.nodes?.forEach(i => this.createNode(i));\n        model.edges?.forEach(i => this.createEdge(i));\n      }\n      this.status.emit(true);\n    } catch (e) {\n      console.warn('DagreYamlParserComponent.parseAndCreate failed', e);\n      this.status.emit(false);\n      throw e;\n    }\n  }\n\n  protected getNodeComponent(id: string) {\n    return this.actorRepository.getComponentFactory(id);\n  }\n\n  protected createNode(node: Node) {\n    // console.log('DagreYamlParserComponent.createNode', node);\n    const nodeFactory = this.resolver.resolveComponentFactory(DagreNodeComponent);\n    const nodeRef = this.container.createComponent(nodeFactory);\n    nodeRef.instance.name = node.name;\n    nodeRef.instance.composition = node.composition;\n    this.instances.push(nodeRef);\n\n    const serverFactory = this.getNodeComponent((node.model ? 'model' : node.type));\n    const serverRef = nodeRef.instance.container.createComponent(serverFactory);\n    serverRef.instance.name = node.name;\n    serverRef.instance.label = (node.label ? node.label : node.name);\n    serverRef.instance.icon = node.icon;\n    serverRef.instance.model = node.model;\n\n    this.instances.push(serverRef);\n  }\n\n\n  protected createEdge(edge: Edge) {\n    // console.log('DagreYamlParserComponent.createEdge', edge);\n    const factory = this.resolver.resolveComponentFactory(DagreEdgeComponent);\n    const edgeRef = this.container.createComponent(factory);\n    edgeRef.instance.from = edge.from;\n    edgeRef.instance.to = edge.to;\n    if (edge.type) {\n      edgeRef.instance.type = edge.type;\n    }\n    if (edge.color) {\n      edgeRef.instance.materialColor = edge.color;\n    }\n\n    this.instances.push(edgeRef);\n  }\n\n\n  protected destroyAll() {\n    // console.log('DagreYamlParserComponent.destroyAll');\n    this.instances.forEach(i => {\n      // console.log('DagreYamlParserComponent destroy', i);\n      i.destroy();\n    });\n    this.instances = [];\n  }\n\n\n  private createComposition(composition: Composition) {\n    // console.log('DagreYamlParserComponent.createComposition', node);\n    const factory = this.resolver.resolveComponentFactory(DagreCompositionComponent);\n    const compositionRef = this.container.createComponent(factory);\n    compositionRef.instance.name = composition.name;\n    compositionRef.instance.label = (composition.label ? composition.label : composition.name);\n    compositionRef.instance.composition = composition.composition;\n    compositionRef.instance.border = composition.border;\n\n    this.instances.push(compositionRef);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreYamlParserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FF0000'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            tryToFindGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Material\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor: string | number = '#FF0000';\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity;\n  @Input() targetOpacity;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material: THREE.Material;\n  private stop = false;\n  protected animation: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: this.dashColor}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      this.color,\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  public initComposer() {\n    if (!this.composer) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#0000AA'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color: string | number = '#0000AA';\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(this.color, this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/font.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.ShapeBufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh implements OnChanges {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected getGeometry(): THREE.ShapeBufferGeometry {\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    return geometry;\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(this.getGeometry(), material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('FrameMeshComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['sizeX', 'sizeY', 'thickness'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.ShapeBufferGeometry) {\n          const currentGeometry: THREE.ShapeBufferGeometry = mesh.geometry;\n          const newGeometry = this.getGeometry();\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n        modified = true;\n      }\n\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        compositions\n                                \n                                \n                                            Optional\n                                        edges\n                                \n                                \n                                            Optional\n                                        layout\n                                \n                                \n                                            Optional\n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLinePosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridMeshComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('grid', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper';\nimport {provideParent} from '../../../util';\nimport { AbstractEmptyDirective, GridMeshComponent } from '../../../object';\nimport * as THREE from 'three';\nimport {RaycasterEmitEvent} from '../../../raycaster';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends AbstractEmptyDirective {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event: RaycasterEmitEvent) {\n    // console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      // console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event: RaycasterEmitEvent): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#444444'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor: string | number = '#ffffff';\n  @Input() groundColor: string | number = '#444444';\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      this.skyColor,\n      this.groundColor,\n      this.intensity\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                IconSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'md'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowColorOverride\n                                \n                                \n                                        isCCW\n                                \n                                \n                                        noHoles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:28\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractEmptyDirective } from '../../../object';\nimport { EmptyComponent } from '../../../object/helper';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends AbstractEmptyDirective {\n  @Input() label: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                clock\n                            \n                            \n                                    Protected\n                                line\n                            \n                            \n                                    Private\n                                matLine\n                            \n                            \n                                    Protected\n                                time\n                            \n                            \n                                    Protected\n                                timeScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Public\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                getPositions\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                dashSize\n                            \n                            \n                                gapSize\n                            \n                            \n                                lineType\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                solid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashSize\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gapSize\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineType\n                    \n                \n                \n                    \n                        Type :         LineType\n\n                    \n                \n                \n                    \n                        Default value : LineType.dashed\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solid\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createLineMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Line2\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositions()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Clock()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Line2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            matLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timeScale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport * as THREE from 'three';\nimport {AnimationService} from '../../animation';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {Line2} from 'three/examples/jsm/lines/Line2';\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\nimport {LineMaterial} from 'three/examples/jsm/lines/LineMaterial';\n\nexport enum LineType {\n  dashed = 'dash',\n  solid = 'solid'\n}\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector implements OnDestroy, OnChanges {\n\n  @Input() materialColor = 0xFFFFFF;\n  @Input() solid = false;\n  @Input() lineWidth = 2;\n  @Input() dashSize = 3;\n  @Input() gapSize = 0.5;\n  @Input() opacity = 1;\n  @Input() lineType: LineType = LineType.dashed;\n\n  @Input() animated = true;\n  protected animation: Subscription;\n  protected time = 0;\n  protected timeScale = 5;\n  protected clock = new THREE.Clock();\n\n  protected line: Line2;\n  private matLine: LineMaterial;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService,\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createLineMesh(): Line2 {\n    const positions = this.getPositions();\n    const geometry = new LineGeometry();\n    geometry.setPositions(positions);\n\n    this.matLine = new LineMaterial({\n      // wrong type in three@types def color?: number;\n      // color: parseInt(Number(this.materialColor).toString(), 10),\n      color: this.materialColor,\n      linewidth: this.lineWidth,\n      vertexColors: false,\n      dashed: !this.solid,\n      dashSize: this.dashSize,\n      dashOffset: 0,\n      gapSize: this.gapSize,\n      opacity: this.opacity,\n      transparent: this.opacity  propName in changes)) {\n      console.log('Changed color to', this.materialColor);\n      this.line.material.color = new THREE.Color(this.materialColor);\n      this.line.material.needsUpdate = true;\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderActorComponent.html":{"url":"components/LoaderActorComponent.html","title":"component - LoaderActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LoaderActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-loader-actor\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                ring1\n                            \n                            \n                                    Private\n                                ring2\n                            \n                            \n                                    Private\n                                ring3\n                            \n                            \n                                    Private\n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Protected\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { appliedMaterial, provideParent } from '../../../util';\nimport { EmptyComponent } from '../../../object/helper';\nimport { AnimationService } from '../../../animation';\nimport { RendererService } from '../../../renderer';\nimport { AbstractObject3D } from '../../../object';\nimport * as THREE from 'three';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'atft-loader-actor',\n  providers: [provideParent(LoaderActorComponent)],\n  template: ``\n})\nexport class LoaderActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  animate = true;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  private ring1: THREE.Mesh;\n  private ring2: THREE.Mesh;\n  private ring3: THREE.Mesh;\n\n  private subscribed = false;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('LoaderActorComponent.ngAfterViewInit');\n    this.init();\n    this.start();\n  }\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, 'basic');\n  }\n\n  protected init() {\n    // console.log('LoaderActorComponent.init');\n    const geometry = new THREE.RingGeometry(0.85, 1, 64, 1, 0, Math.PI * 1.8);\n    const material = this.getMaterial();\n\n    this.ring1 = new THREE.Mesh(geometry, material);\n    this.ring1.scale.set(70, 70, 1);\n    this.object.add(this.ring1);\n\n    this.ring2 = new THREE.Mesh(geometry, material);\n    this.ring2.scale.set(60, 60, 1);\n    this.object.add(this.ring2);\n\n    this.ring3 = new THREE.Mesh(geometry, material);\n    this.ring3.scale.set(50, 50, 1);\n    this.object.add(this.ring3);\n\n\n  }\n\n  protected start() {\n    // console.log('LoaderActorComponent.updateText');\n    if (this.animate) {\n      // console.log('LoaderActorComponent.animate init');\n      this.updateAnimation = this.updateAnimation.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n      this.subscribed = true;\n      this.animationService.start();\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('LoaderActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.stop();\n  }\n\n  protected updateAnimation() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.updateAnimation');\n      this.i++;\n      this.ring1.scale.set(70 + (Math.sin(this.i / 20) * 10) + 12, 70 + (Math.sin(this.i / 20) * 10) + 12, 1);\n\n      this.ring1.rotateZ(Math.sin(this.i / 100) / 5);\n      this.ring2.rotateZ(Math.cos(this.i / 70) / 10);\n      this.ring3.rotateZ(Math.sin(this.i / 50) / 20);\n    }\n  }\n\n  public stop() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.done');\n      this.subscribed = false;\n      this.i = 0;\n      this.animation?.unsubscribe();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelActorComponent.html":{"url":"components/ModelActorComponent.html","title":"component - ModelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ModelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-model-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelPath\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:36\n                                \n                            \n\n                \n                    \n                        setmodel(model: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            model\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\nimport {AbstractObject3D, IconService, ModelService} from '../../../object';\nimport {RendererService} from '../../../renderer';\n\n@Component({\n  selector: 'atft-model-actor',\n  providers: [provideParent(ModelActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ModelActorComponent extends AbstractServerActor {\n\n  @Input()\n  set model(model: string) {\n    const iconProvider = this.modelService.getSource(model);\n    this.modelPath = iconProvider.url;\n  }\n\n  get model(): string {\n    return this.model;\n  }\n\n  public modelPath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected modelService: ModelService\n  ) {\n    super(rendererService, parent);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                BaseAssetSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '3d'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        face\n                                \n                                \n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, objLoader: ObjLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objLoader\n                                                  \n                                                        \n                                                                        ObjLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:42\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:34\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:34\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {ObjLoaderService} from './services/obj-loader.service';\nimport {IconService} from './services';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected objLoader: ObjLoaderService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    if (this.material) {\n      const preloadingStep = new Promise((resolve, reject) => {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.objLoader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      });\n      // Await preloading and load final model\n      await preloadingStep;\n    }\n\n    const obj = await this.objLoader.load(this.model);\n    return obj.clone();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMaterials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    materialCreator\n                                    \n                                            MTLLoader.MaterialCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh implements OnChanges {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['width', 'height', 'widthSegments', 'heightSegments'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.PlaneBufferGeometry) {\n          const currentGeometry: THREE.PlaneBufferGeometry = mesh.geometry;\n          const newGeometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(this.color, this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                            Optional\n                                        face\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:47\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            resetCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWebGlRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    preserveDrawingBuffer\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EffectComposerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\nimport {BloomService} from './bloom.service';\n\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGLoader.html":{"url":"classes/SVGLoader.html","title":"class - SVGLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/threejs-fork/SVGLoader.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Loader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDPI\n                            \n                            \n                                defaultUnit\n                            \n                            \n                                defs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createShapes\n                            \n                            \n                                    Static\n                                getStrokeStyle\n                            \n                            \n                                load\n                            \n                            \n                                parse\n                            \n                            \n                                    Static\n                                pointsToStroke\n                            \n                            \n                                    Static\n                                pointsToStrokeWithBuffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager?)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 90\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'px'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createShapes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createShapes(shapePath)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:1676\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shapePath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getStrokeStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStrokeStyle(width, color, lineJoin, lineCap, miterLimit)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineJoin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineCap\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    miterLimit\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { strokeColor: any; strokeWidth: any; strokeLineJoin: any; strokeLineCap: any; strokeMiterLimit: ...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(url, onLoad, onProgress, onError)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onLoad\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onProgress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onError\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(text)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { paths: {}; xml: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            pointsToStroke\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStroke(points, style, arcDivisions, minDistance)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            pointsToStrokeWithBuffers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset?)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertices\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normals\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uvs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertexOffset\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Box2,\n  BufferGeometry,\n  FileLoader,\n  Float32BufferAttribute,\n  Loader,\n  Matrix3,\n  Path,\n  Shape,\n  ShapePath,\n  ShapeUtils,\n  Vector2,\n  Vector3\n} from 'three';\n\n/* tslint:disable */\nclass SVGLoader extends Loader {\n\n  defaultDPI = 90; // MA:\n  defaultUnit = 'px'; // MA:\n  defs = []; // MA:\n\n  constructor( manager? ) {\n\n    super( manager );\n\n    // Default dots per inch\n    this.defaultDPI = 90;\n\n    // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n    this.defaultUnit = 'px';\n\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    const scope = this;\n\n    const loader = new FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.setRequestHeader( scope.requestHeader );\n    loader.setWithCredentials( scope.withCredentials );\n    loader.load( url, function ( text ) {\n\n      try {\n\n        onLoad( scope.parse( text ) );\n\n      } catch ( e ) {\n\n        if ( onError ) {\n\n          onError( e );\n\n        } else {\n\n          console.error( e );\n\n        }\n\n        scope.manager.itemError( url );\n\n      }\n\n    }, onProgress, onError );\n\n  }\n\n  parse( text ) {\n\n    const scope = this;\n\n    function parseNode( node, style ) {\n\n      if ( node.nodeType !== 1 ) return;\n\n      const transform = getNodeTransform( node );\n\n      let traverseChildNodes = true;\n\n      let path = null;\n\n      switch ( node.nodeName ) {\n\n        case 'svg':\n          break;\n\n        case 'style':\n          parseCSSStylesheet( node );\n          break;\n\n        case 'g':\n          style = parseStyle( node, style );\n          break;\n\n        case 'path':\n          style = parseStyle( node, style );\n          if ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n          break;\n\n        case 'rect':\n          style = parseStyle( node, style );\n          path = parseRectNode( node );\n          break;\n\n        case 'polygon':\n          style = parseStyle( node, style );\n          path = parsePolygonNode( node );\n          break;\n\n        case 'polyline':\n          style = parseStyle( node, style );\n          path = parsePolylineNode( node );\n          break;\n\n        case 'circle':\n          style = parseStyle( node, style );\n          path = parseCircleNode( node );\n          break;\n\n        case 'ellipse':\n          style = parseStyle( node, style );\n          path = parseEllipseNode( node );\n          break;\n\n        case 'line':\n          style = parseStyle( node, style );\n          path = parseLineNode( node );\n          break;\n\n        case 'defs':\n          traverseChildNodes = false;\n          parseDefs(node);\n          break;\n\n        case 'use':\n          style = parseStyle( node, style );\n          const usedNodeId = node.href.baseVal.substring( 1 );\n          const usedNode = node.viewportElement.getElementById( usedNodeId );\n          if ( usedNode ) {\n\n            parseNode( usedNode, style );\n\n          } else {\n\n            console.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n          }\n\n          break;\n\n        default:\n        // console.log( node );\n\n      }\n\n      if ( path ) {\n\n        if ( style.fill !== undefined && style.fill !== 'none' ) {\n\n          path.color.setStyle( style.fill );\n\n        }\n\n        transformPath( path, currentTransform );\n\n        paths.push( path );\n\n        path.userData = { node: node, style: style };\n\n      }\n\n      if ( traverseChildNodes ) {\n\n        const nodes = node.childNodes;\n\n        for ( let i = 0; i  0 ) {\n\n          currentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n        } else {\n\n          currentTransform.identity();\n\n        }\n\n      }\n\n    }\n\n    function parsePathNode( node ) {\n\n      const path = new ShapePath();\n\n      const point = new Vector2();\n      const control = new Vector2();\n\n      const firstPoint = new Vector2();\n      let isFirstPoint = true;\n      let doSetFirstPoint = false;\n\n      const d = node.getAttribute( 'd' );\n\n      // console.log( d );\n\n      const commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n      for ( let i = 0, l = commands.length; i  0 ) {\n\n              // Reset point to beginning of Path\n              point.copy( firstPoint );\n              path.currentPath.currentPoint.copy( point );\n              isFirstPoint = true;\n\n            }\n\n            break;\n\n          default:\n            console.warn( command );\n\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false;\n\n      }\n\n      return path;\n\n    }\n\n    function parseCSSStylesheet( node ) {\n\n      if ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n      for ( let i = 0; i  i.trim() );\n\n        for ( let j = 0; j  1 ) {\n\n        // scale up rx,ry equally so cr == 1\n        const s = Math.sqrt( cr );\n        rx = s * rx;\n        ry = s * ry;\n        rxs = rx * rx;\n        rys = ry * ry;\n\n      }\n\n      const dq = ( rxs * y1ps + rys * x1ps );\n      const pq = ( rxs * rys - dq ) / dq;\n      let q = Math.sqrt( Math.max( 0, pq ) );\n      if ( large_arc_flag === sweep_flag ) q = - q;\n      const cxp = q * rx * y1p / ry;\n      const cyp = - q * ry * x1p / rx;\n\n      // Step 3: Compute (cx, cy) from (cx', cy')\n      const cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n      const cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n      // Step 4: Compute θ1 and Δθ\n      const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n      const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n      path.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n    }\n\n    function svgAngle( ux, uy, vx, vy ) {\n\n      const dot = ux * vx + uy * vy;\n      const len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n      let ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n      if ( ( ux * vy - uy * vx )  i.trim() );\n\n        for ( let i = 0; i  0 ) {\n\n        transform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n      }\n\n      currentTransform.copy( transform );\n      transformStack.push( transform );\n\n      return transform;\n\n    }\n\n    function parseNodeTransform( node ) {\n\n      const transform = new Matrix3();\n      const currentTransform = tempTransform0;\n\n      if ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n        const tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n        const ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n        transform.translate( tx, ty );\n\n      }\n\n      if ( node.hasAttribute( 'transform' ) ) {\n\n        const transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n        for ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n          const transformText = transformsTexts[ tIndex ].trim();\n\n          if ( transformText === '' ) continue;\n\n          const openParPos = transformText.indexOf( '(' );\n          const closeParPos = transformText.length;\n\n          if ( openParPos > 0 && openParPos = 1 ) {\n\n                  const tx = array[ 0 ];\n                  let ty = tx;\n\n                  if ( array.length >= 2 ) {\n\n                    ty = array[ 1 ];\n\n                  }\n\n                  currentTransform.translate( tx, ty );\n\n                }\n\n                break;\n\n              case 'rotate':\n\n                if ( array.length >= 1 ) {\n\n                  let angle = 0;\n                  let cx = 0;\n                  let cy = 0;\n\n                  // Angle\n                  angle = - array[ 0 ] * Math.PI / 180;\n\n                  if ( array.length >= 3 ) {\n\n                    // Center x, y\n                    cx = array[ 1 ];\n                    cy = array[ 2 ];\n\n                  }\n\n                  // Rotate around center (cx, cy)\n                  tempTransform1.identity().translate( - cx, - cy );\n                  tempTransform2.identity().rotate( angle );\n                  tempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n                  tempTransform1.identity().translate( cx, cy );\n                  currentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n                }\n\n                break;\n\n              case 'scale':\n\n                if ( array.length >= 1 ) {\n\n                  const scaleX = array[ 0 ];\n                  let scaleY = scaleX;\n\n                  if ( array.length >= 2 ) {\n\n                    scaleY = array[ 1 ];\n\n                  }\n\n                  currentTransform.scale( scaleX, scaleY );\n\n                }\n\n                break;\n\n              case 'skewX':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n                    0, 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'skewY':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, 0, 0,\n                    Math.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'matrix':\n\n                if ( array.length === 6 ) {\n\n                  currentTransform.set(\n                    array[ 0 ], array[ 2 ], array[ 4 ],\n                    array[ 1 ], array[ 3 ], array[ 5 ],\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n            }\n\n          }\n\n          transform.premultiply( currentTransform );\n\n        }\n\n      }\n\n      return transform;\n\n    }\n\n    function transformPath( path, m ) {\n\n      function transfVec2( v2 ) {\n\n        tempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n        v2.set( tempV3.x, tempV3.y );\n\n      }\n\n      const isRotated = isTransformRotated( m );\n\n      const subPaths = path.subPaths;\n\n      for ( let i = 0, n = subPaths.length; i = 1 ) || ( t2  1 ) ) {\n\n        //1. lines are parallel or edges don't intersect\n\n        return null;\n\n      } else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n        //2. lines are colinear\n\n        //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n        for ( let i = 0; i  Number.EPSILON ) {\n\n        classifyResult.loc = IntersectionLocationType.RIGHT;\n        return;\n\n\n      }\n\n      if ( ( ( ax * bx )  i.t = intersection.t - Number.EPSILON ) === undefined ) {\n\n            intersectionsRaw.push( intersection );\n            intersections.push( new Vector2( intersection.x, intersection.y ) );\n\n          }\n\n        }\n\n      }\n\n      return intersections;\n\n    }\n\n    function getScanlineIntersections( scanline, boundingBox, paths ) {\n\n      const center = new Vector2();\n      boundingBox.getCenter( center );\n\n      const allIntersections = [];\n\n      paths.forEach( path => {\n\n        // check if the center of the bounding box is in the bounding box of the paths.\n        // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n        // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n        if ( path.boundingBox.containsPoint( center ) ) {\n\n          const intersections = getIntersections( scanline, path.points );\n\n          intersections.forEach( p => {\n\n            allIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n          } );\n\n        }\n\n      } );\n\n      allIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      return allIntersections;\n\n    }\n\n    function isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n      if ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n        _fillRule = 'nonzero';\n\n      }\n\n      const centerBoundingBox = new Vector2();\n      simplePath.boundingBox.getCenter( centerBoundingBox );\n\n      const scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n      const scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n      scanlineIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      const baseIntersections = [];\n      const otherIntersections = [];\n\n      scanlineIntersections.forEach( i => {\n\n        if ( i.identifier === simplePath.identifier ) {\n\n          baseIntersections.push( i );\n\n        } else {\n\n          otherIntersections.push( i );\n\n        }\n\n      } );\n\n      const firstXOfPath = baseIntersections[ 0 ].point.x;\n\n      // build up the path hierarchy\n      const stack = [];\n      let i = 0;\n\n      while ( i  0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n          stack.pop();\n\n        } else {\n\n          stack.push( otherIntersections[ i ].identifier );\n\n        }\n\n        i ++;\n\n      }\n\n      stack.push( simplePath.identifier );\n\n      if ( _fillRule === 'evenodd' ) {\n\n        const isHole = stack.length % 2 === 0 ? true : false;\n        const isHoleFor = stack[ stack.length - 2 ];\n\n        return { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n      } else if ( _fillRule === 'nonzero' ) {\n\n        // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n        let isHole = true;\n        let isHoleFor = null;\n        let lastCWValue = null;\n\n        for ( let i = 0; i  {\n\n      const points = p.getPoints();\n      let maxY = - BIGNUMBER;\n      let minY = BIGNUMBER;\n      let maxX = - BIGNUMBER;\n      let minX = BIGNUMBER;\n\n      //points.forEach(p => p.y *= -1);\n\n      for ( let i = 0; i  maxY ) {\n\n          maxY = p.y;\n\n        }\n\n        if ( p.y  maxX ) {\n\n          maxX = p.x;\n\n        }\n\n        if ( p.x = minX ) {\n\n        scanlineMinX = minX - 1;\n\n      }\n\n      return { points: points, isCW: ShapeUtils.isClockWise( points ), identifier: identifier ++, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n    } );\n\n    simplePaths = simplePaths.filter( sp => sp.points.length > 0 );\n\n    // check if path is solid or a hole\n    const isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule ) );\n\n\n    const shapesToReturn = [];\n    simplePaths.forEach( p => {\n\n      const amIAHole = isAHole[ p.identifier ];\n\n      if ( ! amIAHole.isHole ) {\n\n        const shape = new Shape( p.points );\n        const holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n        holes.forEach( h => {\n\n          const path = simplePaths[ h.identifier ];\n          shape.holes.push( new Path( path.points ) );\n\n        } );\n        shapesToReturn.push( shape );\n\n      }\n\n    } );\n\n    return shapesToReturn;\n\n  }\n\n  static getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n    // Param width: Stroke width\n    // Param color: As returned by THREE.Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n      strokeColor: color,\n      strokeWidth: width,\n      strokeLineJoin: lineJoin,\n      strokeLineCap: lineCap,\n      strokeMiterLimit: miterLimit\n    };\n\n  }\n\n  static pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    if ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n      return null;\n\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n    return geometry;\n\n  }\n\n  static pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset? ) {\n\n    // This function can be called to update existing arrays or buffers.\n    // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n    // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n    // Returns number of written vertices / normals / uvs pairs\n    // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n    // 'normals' and 'uvs' buffers are optional\n\n    const tempV2_1 = new Vector2();\n    const tempV2_2 = new Vector2();\n    const tempV2_3 = new Vector2();\n    const tempV2_4 = new Vector2();\n    const tempV2_5 = new Vector2();\n    const tempV2_6 = new Vector2();\n    const tempV2_7 = new Vector2();\n    const lastPointL = new Vector2();\n    const lastPointR = new Vector2();\n    const point0L = new Vector2();\n    const point0R = new Vector2();\n    const currentPointL = new Vector2();\n    const currentPointR = new Vector2();\n    const nextPointL = new Vector2();\n    const nextPointR = new Vector2();\n    const innerPoint = new Vector2();\n    const outerPoint = new Vector2();\n\n    arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n    minDistance = minDistance !== undefined ? minDistance : 0.001;\n    vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n    // First ensure there are no duplicated points\n    points = removeDuplicatedPoints( points );\n\n    const numPoints = points.length;\n\n    if ( numPoints = minDistance ) {\n\n          newPoints.push( points[ i ] );\n\n        }\n\n      }\n\n      newPoints.push( points[ points.length - 1 ] );\n\n      return newPoints;\n\n    }\n\n  }\n\n\n}\n\nexport { SVGLoader };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                icon\n                            \n                            \n                                isCCW\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                noHoles\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, svgLoader: SvgLoaderService, iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgLoader\n                                                  \n                                                        \n                                                                        SvgLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCCW\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noHoles\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:41\n                                \n                            \n\n                \n                    \n                        seticon(icon: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            icon\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, fixCenter, provideParent, scaleToFit} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {IconService, SvgLoaderService} from './services';\nimport * as THREE from 'three';\n\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): string {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: string) {\n    this._overrideMaterialColor = value;\n    if (this.object) {\n      this.startLoading();\n    }\n  }\n\n  @Input()\n  set icon(icon: string) {\n    // console.log('SVGLoaderComponent.icon', icon);\n    const iconProvider = this.iconService.getSource(icon);\n    this.model = iconProvider.url;\n    this.isCCW = iconProvider.isCCW;\n    this.noHoles = iconProvider.noHoles;\n    if (!iconProvider.allowColorOverride) {\n      this.overrideMaterialColor = undefined;\n    }\n  }\n\n  get icon(): string {\n    return this.model;\n  }\n  private _overrideMaterialColor: string = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  @Input()\n  isCCW = false;\n\n  @Input()\n  noHoles = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected svgLoader: SvgLoaderService,\n    protected iconService: IconService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('SVGLoaderComponent.loadLazyObject', this.model);\n\n    const paths = await this.svgLoader.load(this.model);\n    const group = new THREE.Group();\n\n    for (const path of paths) {\n      const color = (this._overrideMaterialColor ? this._overrideMaterialColor : path.color);\n      const material = appliedMaterial(color, this.material, this.depthWrite);\n      const shapes: THREE.Shape[] = path.toShapes(this.isCCW, this.noHoles);\n\n      for (const shape of shapes) {\n        const geometry = new THREE.ShapeBufferGeometry(shape);\n        const mesh = new THREE.Mesh(geometry, material);\n        group.add(mesh);\n      }\n    }\n\n\n    if (this.maxX || this.maxY) {\n      scaleToFit(group, new THREE.Vector3(this.maxX, this.maxY, 0));\n    }\n    if (this.centered) {\n      fixCenter(group);\n    }\n\n    return group;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background: number | string = '#ffffff';\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(this.background);\n    return scene;\n  }\n\n  public updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(this.background);\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StlLoaderComponent.html":{"url":"components/StlLoaderComponent.html","title":"component - StlLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StlLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/stl-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(StlLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-stl-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new STLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\n\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\n\n@Component({\n  selector: 'atft-stl-loader',\n  providers: [provideParent(StlLoaderComponent)],\n  template: ''\n})\nexport class StlLoaderComponent extends AbstractModelLoader {\n  private loader = new STLLoader();\n\n  @Input()\n  material: string;\n\n  @Input()\n  materialColor: string | number = '#FFFFFF';\n\n  @Input()\n  depthWrite = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('StlLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, geometry => {\n          const material = appliedMaterial(this.materialColor, this.material, this.depthWrite);\n          const mesh = new THREE.Mesh(geometry, material);\n          resolve(mesh);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'StlLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/svg-loader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextActorComponent.html":{"url":"components/TextActorComponent.html","title":"component - TextActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-actor\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                currentDelay\n                            \n                            \n                                    Private\n                                currentPos\n                            \n                            \n                                    Public\n                                currentText\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                maxPos\n                            \n                            \n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                done\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                randomInt\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                updateText\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                            \n                                maxDelay\n                            \n                            \n                                minDelay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDelay\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDelay\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            done\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    done()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            randomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomInt(min, max)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateText()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-text-actor',\n  providers: [provideParent(TextActorComponent)],\n  template: `\n    \n    \n  `\n})\nexport class TextActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  text: string;\n\n  @Input()\n  animate = false;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  @Input()\n  minDelay = 5;\n\n  @Input()\n  maxDelay = 10;\n\n  subscribed = false;\n\n  private currentDelay: number;\n  public currentText: string;\n  private currentPos = 0;\n  private maxPos = 0;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('TextActorComponent.ngAfterViewInit');\n    this.updateText();\n  }\n\n  protected updateText() {\n    // console.log('TextActorComponent.updateText');\n    if (this.text && this.text.length > 0) {\n      // console.log('TextActorComponent.updateText', this.text);\n      if (this.animate) {\n        // console.log('TextActorComponent.animate init');\n        if (!this.subscribed) {\n          this.updateAnimation = this.updateAnimation.bind(this);\n          this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n          this.subscribed = true;\n          this.animationService.start();\n        }\n\n        this.currentPos = 0;\n        this.maxPos = this.text.length;\n        this.currentText = '';\n        this.currentDelay = this.randomInt(this.minDelay, this.maxDelay);\n      } else {\n        this.currentText = this.text;\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('TextActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.done();\n  }\n\n  public updateAnimation() {\n    if (this.subscribed) {\n      // console.log('TextActorComponent.updateAnimation');\n      this.i++;\n      if (this.i % this.currentDelay === 0) {\n        // console.log('TextActorComponent.updateAnimation: step');\n        this.currentPos++;\n        if (this.currentPos  propName in changes)) {\n      this.updateText();\n      modified = true;\n    }\n\n    if (['animate'].some(propName => propName in changes)) {\n      if (this.animate) {\n        this.updateText();\n      } else {\n        this.done();\n        this.currentText = this.text;\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, font: FontService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        font\n                                                  \n                                                        \n                                                                        FontService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTextMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#DADADA'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fontCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Font\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:30\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {FontService} from '../loader/services/font.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor: string | number = '#DADADA';\n  @Input()\n  set materialColor(materialColor: string | number) {\n    this._materialColor = materialColor;\n    if (this.object) {\n      // console.log('TextMeshComponent.set materialColor', materialColor + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    if (this.object) {\n      // console.log('TextMeshComponent.set text', text + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected font: FontService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject', this.name);\n\n    const font = await this.font.load(this.fontUrl);\n    // console.log('TextMeshComponent.loadLazyObject font', font);\n    return this.getTextMesh(font);\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh', this.text + ' / ' + this.name);\n    if (this.text) {\n      const geometry = new THREE.TextGeometry(this.text, {\n        font: font,\n        size: this.size,\n        height: this.height,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelOffset\n      });\n\n      const material = this.getMaterial();\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.castShadow = this.castShadow;\n      mesh.receiveShadow = this.receiveShadow;\n\n      if (this.centered) {\n        fixCenter(mesh);\n      }\n      return mesh;\n    } else {\n      return new THREE.Mesh();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:27\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:21\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            heightSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            widthSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  protected animate() {\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animation?.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n\n      \n      \n      \n      \n\n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n\n          \n          \n          \n          \n\n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc = 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            function\n            onlyUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/stl-loader.component.ts\n            \n            component\n            StlLoaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            class\n            SVGLoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/common : ^11.2.12\n        \n            @angular/compiler : ^11.2.12\n        \n            @angular/core : ^11.2.12\n        \n            @angular/forms : ^11.2.12\n        \n            @angular/platform-browser : ^11.2.12\n        \n            @angular/platform-browser-dynamic : ^11.2.12\n        \n            @angular/router : ^11.2.12\n        \n            core-js : ^3.11.1\n        \n            dagre : ^0.8.5\n        \n            rxjs : ^6.6.7\n        \n            snyk : ^1.573.0\n        \n            three : ^0.128.0\n        \n            uuid : ^8.3.2\n        \n            yaml : ^1.10.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            onlyUnique   (projects/.../dagre-yaml-parser.component.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            onlyUnique\n                        \n                        \n                    \n                \n            \n            \n                \nonlyUnique(value, index, self)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            removeFromArray\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array, element)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three dagre atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTIRE_SCENE_LAYER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fragmentShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertexShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REPLACE_SYMBOL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '?'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ':'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
