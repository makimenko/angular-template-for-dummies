var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractServerActor.html",[0,0.095,1,2.186]],["body/classes/AbstractServerActor.html",[0,0.108,1,3.262,2,4.498,3,0.161,4,0.161,5,0.126,6,4.147,7,6.862,8,1.41,9,3.906,10,1.228,11,1.039,12,0.498,13,1.72,14,2.516,15,0.684,16,2.54,17,3.662,18,4.086,19,4.086,20,1.228,21,3.851,22,4.093,23,4.093,24,3.262,25,3.851,26,2.986,27,3.639,28,0.782,29,0.015,30,1.415,31,1.137,32,1.094,33,3.281,34,0.867,35,4.498,36,4.498,37,0.727,38,1.477,39,4.498,40,4.498,41,3.319,42,4.498,43,2.003,44,4.498,45,4.498,46,3.975,47,4.498,48,4.498,49,4.498,50,0.188,51,1.567,52,5.455,53,0.143,54,4.498,55,0.161,56,0.973,57,1.22,58,4.498,59,5.71,60,4.498,61,4.498,62,4.498,63,4.498,64,0.008,65,0.01,66,0.008]],["title/injectables/AnimationService.html",[67,2.073,68,2.073]],["body/injectables/AnimationService.html",[0,0.101,3,0.151,4,0.151,5,0.118,12,0.466,13,1.648,15,0.656,16,2.508,26,3.221,28,0.444,29,0.015,31,1.089,32,1.048,34,0.807,37,0.704,38,1.43,43,1.433,46,3.342,50,0.18,53,0.134,55,0.151,57,1.048,64,0.007,65,0.01,66,0.007,67,2.964,68,2.964,69,2.806,70,3.662,71,2.806,72,5.607,73,6.801,74,5.647,75,5.544,76,3.983,77,4.415,78,4.904,79,1.121,80,5.647,81,4.05,82,4.904,83,5.647,84,5.647,85,6.801,86,6.801,87,6.367,88,2.403,89,4.978,90,6.801,91,7.298,92,7.298,93,0.968,94,0.983,95,1.354,96,5.647,97,0.639,98,0.513,99,0.639,100,4.216,101,4.216,102,4.415,103,4.216,104,5.647,105,4.216,106,4.904,107,1.166,108,5.647,109,5.647,110,5.647,111,5.647,112,5.647,113,5.647,114,5.647,115,4.978,116,2.892,117,1.021,118,5.647,119,4.216,120,6.158,121,4.216,122,4.216,123,2.213,124,4.216,125,4.216,126,4.216,127,0.723,128,4.216,129,4.216,130,2.47]],["title/modules/AtftAnimationModule.html",[131,0.677,132,2.629]],["body/modules/AtftAnimationModule.html",[0,0.142,3,0.212,4,0.212,5,0.165,29,0.014,50,0.222,53,0.188,55,0.212,64,0.01,65,0.012,66,0.01,68,4.174,131,1.011,132,5.292,133,1.928,134,1.928,135,0.5,136,2.084,137,2.084,138,0.822,139,2.084,140,5.122,141,5.122,142,2.371,143,2.084,144,2.004,145,5.897,146,5.897,147,2.566,148,5.897]],["title/modules/AtftCameraModule.html",[131,0.677,149,2.629]],["body/modules/AtftCameraModule.html",[0,0.136,3,0.203,4,0.203,5,0.158,29,0.015,50,0.233,53,0.181,55,0.203,64,0.01,65,0.012,66,0.01,131,0.971,133,1.852,134,1.852,135,0.481,136,2.582,137,2.002,138,0.627,139,2.582,142,2.315,143,2.002,144,1.925,147,2.505,149,5.303,150,4.921,151,4.921,152,4.921,153,1.35,154,5.666,155,5.666,156,2.718,157,2.169,158,1.051,159,5.666,160,2.083]],["title/modules/AtftConnectorModule.html",[131,0.677,161,2.629]],["body/modules/AtftConnectorModule.html",[0,0.131,3,0.196,4,0.196,5,0.152,29,0.015,50,0.238,53,0.174,55,0.196,64,0.01,65,0.012,66,0.01,131,0.935,133,1.782,134,1.782,135,0.463,136,2.539,137,1.926,138,0.603,139,2.539,142,2.262,143,1.926,144,1.852,147,2.447,156,2.655,157,2.087,160,2.004,161,5.383,162,4.735,163,4.735,164,4.735,165,1.344,166,1.344,167,5.452,168,5.452,169,1.012,170,1.188,171,6.657]],["title/modules/AtftControlModule.html",[131,0.677,172,2.629]],["body/modules/AtftControlModule.html",[0,0.131,3,0.196,4,0.196,5,0.152,29,0.015,50,0.239,53,0.174,55,0.196,64,0.01,65,0.012,66,0.01,131,0.936,133,1.785,134,1.785,135,0.463,136,2.541,137,1.93,138,0.604,139,2.541,142,2.264,143,1.93,144,1.856,147,2.45,156,2.658,157,2.091,160,2.008,172,5.384,173,4.743,174,4.743,175,4.743,176,1.344,177,1.344,178,5.462,179,5.462,180,1.013,181,6.665,182,1.013]],["title/modules/AtftDataCenterActorModule.html",[131,0.677,183,2.833]],["body/modules/AtftDataCenterActorModule.html",[0,0.111,3,0.166,4,0.166,5,0.129,6,2.429,29,0.015,50,0.249,53,0.147,55,0.166,64,0.008,65,0.011,66,0.008,131,0.794,133,1.513,134,1.513,135,0.393,136,2.355,137,1.635,138,0.512,139,2.355,142,2.04,143,1.635,144,1.573,147,2.208,156,2.395,157,1.772,160,2.208,183,5.921,184,4.02,185,4.02,186,4.02,187,4.02,188,1.315,189,1.315,190,1.315,191,1.315,192,1.315,193,1.315,194,4.663,195,4.628,196,3.619,197,3.08,198,4.628,199,4.628,200,7.49,201,4.628,202,7.054,203,0.826,204,0.826,205,0.826,206,0.826,207,4.628]],["title/modules/AtftEffectModule.html",[131,0.677,208,2.629]],["body/modules/AtftEffectModule.html",[0,0.127,3,0.19,4,0.19,5,0.148,29,0.015,50,0.242,53,0.169,55,0.19,64,0.009,65,0.012,66,0.009,131,0.907,133,1.729,134,1.729,135,0.449,136,2.506,137,1.869,138,0.585,139,2.506,142,2.221,143,1.869,144,1.797,147,2.403,156,2.607,157,2.025,160,1.945,208,5.431,209,4.595,210,4.595,211,4.595,212,1.285,213,1.339,214,1.339,215,5.29,216,5.29,217,0.944,218,5.29,219,5.29,220,5.29]],["title/modules/AtftHelperModule.html",[131,0.677,221,2.629]],["body/modules/AtftHelperModule.html",[0,0.127,3,0.19,4,0.19,5,0.147,11,1.285,29,0.015,50,0.242,53,0.168,55,0.19,64,0.009,65,0.012,66,0.009,131,0.905,133,1.726,134,1.726,135,0.448,136,2.504,137,1.866,138,0.584,139,2.504,142,2.218,143,1.866,144,1.794,147,2.4,156,2.604,157,2.021,160,1.941,221,5.43,222,4.587,223,4.587,224,4.587,225,1.339,226,1.339,227,5.281,228,5.281,229,0.98,230,6.528,231,5.281,232,0.942]],["title/modules/AtftLightModule.html",[131,0.677,233,2.629]],["body/modules/AtftLightModule.html",[0,0.127,3,0.189,4,0.189,5,0.147,29,0.015,50,0.242,53,0.168,55,0.189,64,0.009,65,0.012,66,0.009,131,0.904,133,1.723,134,1.723,135,0.447,136,2.502,137,1.863,138,0.583,139,2.502,142,2.216,143,1.863,144,1.791,147,2.397,156,2.601,157,2.018,160,1.938,233,5.429,234,4.579,235,4.579,236,4.579,237,1.338,238,1.338,239,1.338,240,5.272,241,5.272,242,0.978,243,7.081,244,0.978,245,0.978]],["title/modules/AtftLoaderModule.html",[131,0.677,246,2.629]],["body/modules/AtftLoaderModule.html",[0,0.127,3,0.189,4,0.189,5,0.147,29,0.015,50,0.242,53,0.168,55,0.189,64,0.009,65,0.012,66,0.009,131,0.904,133,1.723,134,1.723,135,0.447,136,2.502,137,1.863,138,0.583,139,2.502,142,2.216,143,1.863,144,1.791,147,2.397,156,2.601,157,2.018,160,1.938,246,5.429,247,4.579,248,4.579,249,4.579,250,1.338,251,1.338,252,1.338,253,5.272,254,5.272,255,0.833,256,7.081,257,0.941,258,0.941]],["title/modules/AtftMeshModule.html",[131,0.677,259,2.629]],["body/modules/AtftMeshModule.html",[0,0.108,3,0.161,4,0.161,5,0.125,29,0.015,50,0.25,53,0.143,55,0.161,64,0.008,65,0.01,66,0.008,107,0.769,131,0.769,133,1.466,134,1.466,135,0.381,136,2.319,137,1.584,138,0.496,139,2.319,142,1.999,143,1.584,144,1.524,147,2.163,156,2.346,157,1.717,160,1.649,232,0.8,259,5.51,260,3.895,261,3.895,262,3.895,263,1.309,264,1.256,265,1.309,266,1.309,267,1.309,268,1.309,269,1.309,270,1.309,271,4.484,272,4.484,273,0.8,274,6.668,275,0.832,276,0.8,277,0.832,278,0.832,279,0.832,280,0.8]],["title/modules/AtftModule.html",[131,0.677,194,2.459]],["body/modules/AtftModule.html",[0,0.106,3,0.159,4,0.159,5,0.123,29,0.015,32,0.82,50,0.251,53,0.141,55,0.159,64,0.008,65,0.01,66,0.008,81,3.169,131,0.999,132,5.278,133,1.445,134,1.445,135,0.375,136,1.561,137,1.561,138,0.489,139,2.303,142,1.98,143,1.561,144,1.502,147,2.142,149,5.278,160,2.396,172,5.278,194,5.155,208,5.278,281,3.838,282,3.838,283,3.838,284,5.278,285,5.278,286,5.278,287,5.278,288,4.419,289,4.419,290,4.419,291,4.419,292,4.419,293,4.419,294,4.419,295,4.338,296,4.419,297,4.419,298,4.419,299,4.419,300,4.419,301,4.419,302,4.419,303,4.419,304,4.419,305,4.419,306,4.419,307,3.838,308,3.838,309,3.838,310,2.588,311,4.419,312,3.838,313,4.419]],["title/modules/AtftObjectModule.html",[131,0.677,284,2.629]],["body/modules/AtftObjectModule.html",[0,0.109,3,0.163,4,0.163,5,0.127,29,0.015,50,0.25,53,0.145,55,0.163,64,0.008,65,0.01,66,0.008,131,0.778,133,1.484,134,1.484,135,0.385,136,2.333,137,1.603,138,0.502,139,2.333,142,2.014,143,1.603,144,1.542,147,2.18,156,2.365,157,1.737,160,2.18,161,5.299,221,5.299,233,5.299,246,5.299,259,5.299,284,5.508,314,3.941,315,3.941,316,3.941,317,3.941,318,1.227,319,1.207,320,5.299,321,4.538,322,4.538,323,4.538,324,4.538,325,4.538,326,4.538,327,4.538,328,4.538,329,4.538,330,4.538,331,4.538,332,4.538,333,4.538,334,4.538,335,4.538,336,0.842,337,4.538]],["title/modules/AtftPipeModule.html",[131,0.677,295,2.629]],["body/modules/AtftPipeModule.html",[0,0.132,3,0.197,4,0.197,5,0.153,29,0.015,50,0.239,53,0.175,55,0.197,64,0.01,65,0.012,66,0.01,131,0.94,133,1.792,134,1.792,135,0.465,136,2.545,137,1.937,138,0.606,139,2.545,142,2.269,143,1.937,144,1.862,147,2.456,156,2.664,157,2.098,160,2.015,295,5.387,338,4.761,339,4.761,340,4.761,341,5.435,342,5.435,343,5.481,344,5.481,345,5.481,346,5.481]],["title/modules/AtftRaycasterModule.html",[131,0.677,285,2.629]],["body/modules/AtftRaycasterModule.html",[0,0.123,3,0.184,4,0.184,5,0.143,29,0.015,50,0.245,53,0.163,55,0.184,64,0.009,65,0.011,66,0.009,131,0.879,133,1.677,134,1.677,135,0.435,136,2.471,137,1.812,138,0.774,139,2.471,142,2.178,143,1.812,144,1.743,147,2.357,156,2.557,157,1.963,160,1.886,285,5.447,347,4.455,348,4.455,349,4.455,350,4.455,351,1.28,352,1.28,353,1.28,354,3.659,355,5.129,356,5.129,357,1.061,358,5.129,359,3.679,360,5.129,361,5.129]],["title/modules/AtftRendererModule.html",[131,0.677,286,2.629]],["body/modules/AtftRendererModule.html",[0,0.132,3,0.197,4,0.197,5,0.154,29,0.015,50,0.239,53,0.175,55,0.197,64,0.01,65,0.012,66,0.01,95,1.452,127,0.943,131,0.943,133,1.798,134,1.798,135,0.467,136,2.549,137,1.944,138,0.798,139,2.549,142,2.274,143,1.944,144,1.869,147,2.461,156,2.67,157,2.106,160,2.022,286,5.359,362,4.778,363,4.778,364,4.778,365,4.778,366,1.345,367,5.501,368,5.501,369,5.501,370,4.778]],["title/modules/AtftStatsModule.html",[131,0.677,287,2.629]],["body/modules/AtftStatsModule.html",[0,0.132,3,0.197,4,0.197,5,0.154,29,0.015,50,0.239,53,0.175,55,0.197,64,0.01,65,0.012,66,0.01,131,0.943,133,1.798,134,1.798,135,0.467,136,2.549,137,1.944,138,0.798,139,2.549,142,2.274,143,1.944,144,1.869,147,2.461,156,2.67,157,2.106,160,2.022,287,5.359,371,4.778,372,4.778,373,4.778,374,4.778,375,1.292,376,4.583,377,5.501,378,4.778,379,0.943,380,0.943,381,5.501]],["title/modules/AtftTextModule.html",[131,0.677,320,2.629]],["body/modules/AtftTextModule.html",[0,0.136,3,0.203,4,0.203,5,0.158,29,0.015,50,0.233,53,0.181,55,0.203,64,0.01,65,0.012,66,0.01,131,0.971,133,1.852,134,1.852,135,0.481,136,2.582,137,2.002,138,0.627,139,2.582,142,2.315,143,2.002,144,1.925,147,2.505,156,2.718,157,2.169,160,2.083,274,4.921,320,5.303,382,4.921,383,4.921,384,4.921,385,1.35,386,5.666,387,5.666,388,1.051]],["title/components/AxesHelperComponent.html",[225,0.65,389,0.021]],["body/components/AxesHelperComponent.html",[0,0.089,3,0.132,4,0.132,5,0.103,8,1.147,10,1.073,11,0.583,12,0.408,15,0.598,20,1.073,28,0.542,29,0.014,30,1.621,34,0.657,37,0.408,50,0.216,51,1.158,53,0.118,55,0.132,56,0.798,57,0.684,64,0.007,65,0.009,66,0.007,79,0.815,93,0.884,94,0.86,95,1.3,97,0.559,98,0.782,99,0.901,107,0.632,117,0.893,127,0.632,135,0.313,138,0.57,153,0.607,158,0.684,165,0.607,166,0.607,169,0.684,170,0.919,176,0.607,177,0.607,180,0.684,182,0.684,188,0.607,189,0.607,190,0.607,191,0.607,192,0.607,193,0.607,203,0.658,204,0.658,205,0.658,206,0.658,212,0.583,213,0.607,214,0.607,217,0.658,225,1.059,226,0.607,229,1.102,232,0.919,237,0.607,238,0.607,239,0.607,242,0.684,244,0.684,245,0.684,250,0.607,251,0.607,252,0.607,255,0.815,257,0.658,258,0.658,263,0.607,264,0.583,265,0.607,266,0.607,267,0.607,268,0.607,269,0.607,270,0.607,273,0.658,275,0.684,276,0.658,277,0.684,278,0.684,279,0.684,280,0.658,318,0.607,319,0.559,336,0.684,351,0.583,352,0.583,353,0.583,357,0.901,366,0.607,375,0.583,379,0.632,380,0.632,385,0.607,388,0.684,389,0.032,390,0.712,391,0.712,392,5.584,393,2.884,394,1.897,395,0.536,396,5.153,397,1.309,398,1.204,399,4.475,400,0.956,401,1.356,402,2.023,403,3.953,404,1.741,405,4.475,406,3.688,407,4.475,408,1.448,409,1.248,410,0.798,411,0.829,412,0.962,413,0.999,414,3.688,415,0.829,416,3.688,417,0.956,418,0.994,419,0.428,420,1.24,421,0.712,422,0.994,423,1.438,424,0.712,425,1.146,426,0.712,427,0.712,428,0.712,429,0.712,430,1.305,431,0.994,432,0.994,433,1.146,434,0.712,435,0.712,436,0.712,437,0.712,438,0.684,439,0.536,440,0.712,441,0.712,442,0.712,443,0.712,444,0.684,445,0.712]],["title/components/BoxMeshComponent.html",[263,0.65,389,0.021]],["body/components/BoxMeshComponent.html",[0,0.07,3,0.104,4,0.104,5,0.081,8,1.025,10,0.902,11,0.458,12,0.321,15,0.503,20,0.902,28,0.305,29,0.015,30,2.03,31,1.245,32,1.197,34,0.76,37,0.321,50,0.206,51,1.502,53,0.092,55,0.104,56,0.937,57,0.803,64,0.005,65,0.008,66,0.005,79,0.684,93,0.742,94,0.676,95,1.197,97,0.44,98,0.699,99,1.147,107,0.497,117,0.702,127,0.497,135,0.246,138,0.479,153,0.477,158,0.538,165,0.477,166,0.477,169,1.197,170,0.772,176,0.477,177,0.477,180,0.538,182,0.538,188,0.477,189,0.477,190,0.477,191,0.477,192,0.477,193,0.477,203,0.517,204,0.517,205,0.517,206,0.517,212,0.458,213,0.477,214,0.477,217,0.517,225,0.477,226,0.477,229,0.538,232,0.772,237,0.477,238,0.477,239,0.477,242,0.538,244,0.538,245,0.538,250,0.477,251,0.477,252,0.477,255,0.684,257,0.517,258,0.517,263,0.946,264,0.458,265,0.477,266,0.477,267,0.477,268,0.477,269,0.477,270,0.477,273,0.924,275,0.538,276,0.517,277,0.538,278,0.538,279,0.538,280,0.517,318,0.477,319,0.44,336,0.538,351,0.458,352,0.458,353,0.458,357,0.786,366,0.477,375,0.458,379,0.497,380,0.497,385,0.477,388,0.538,389,0.028,390,0.559,391,0.559,394,1.556,395,0.421,397,1.29,398,1.186,400,0.803,401,1.233,402,1.808,404,1.556,408,1.217,409,1.048,410,0.627,411,0.651,412,1.129,413,0.785,415,0.651,417,0.803,418,0.835,419,0.336,420,1.109,421,0.559,422,0.835,423,1.355,424,0.559,425,1,426,0.559,427,0.559,428,0.559,429,0.559,430,1.186,431,0.835,432,0.835,433,1,434,0.559,435,0.559,436,0.559,437,0.559,438,0.538,439,0.421,440,0.559,441,0.559,442,0.559,443,0.559,444,0.538,445,0.559,446,6.102,447,1.447,448,3.035,449,4.329,450,5.807,451,5.181,452,3.337,453,4.051,454,4.45,455,4.051,456,4.329,457,4.017,458,2.266,459,5.603,460,5.045,461,5.603,462,4.329,463,5.603,464,6.386,465,2.725,466,5.603,467,5.603,468,5.603,469,5.603,470,5.603,471,2.266,472,3.105,473,2.899,474,2.079,475,3.105,476,2.517,477,2.899,478,2.899,479,1.63,480,1.447,481,2.899,482,2.079,483,2.899,484,2.266,485,2.266,486,2.899,487,1.966,488,1.698,489,1.698,490,1.805]],["title/components/ContentProjectionComponent.html",[318,0.65,389,0.021]],["body/components/ContentProjectionComponent.html",[0,0.085,3,0.128,4,0.128,5,0.099,8,1.129,10,1.047,11,1.055,12,0.394,13,1.466,15,0.583,28,0.613,29,0.014,34,0.7,37,0.556,38,0.799,50,0.221,53,0.113,55,0.128,56,0.77,64,0.006,65,0.009,66,0.006,79,0.794,93,0.862,94,0.83,95,1.286,97,0.762,98,0.812,99,0.96,107,0.61,117,0.861,127,0.61,135,0.302,138,0.556,153,0.586,158,0.66,165,0.586,166,0.586,169,0.66,170,0.897,176,0.586,177,0.586,180,0.66,182,0.66,188,0.586,189,0.586,190,0.586,191,0.586,192,0.586,193,0.586,203,0.635,204,0.635,205,0.635,206,0.635,212,0.563,213,0.586,214,0.586,217,0.635,225,0.586,226,0.586,229,0.66,232,0.897,237,0.586,238,0.586,239,0.586,242,0.66,244,0.66,245,0.66,250,0.586,251,0.586,252,0.586,255,1.055,257,0.635,258,0.635,263,0.586,264,0.563,265,0.586,266,0.586,267,0.586,268,0.586,269,0.586,270,0.586,273,0.635,275,0.66,276,0.635,277,0.66,278,0.66,279,0.66,280,0.635,308,3.09,318,1.042,319,0.54,336,1.174,351,0.563,352,0.563,353,0.563,357,0.883,366,0.586,375,0.563,379,0.61,380,0.61,385,0.586,388,0.66,389,0.031,390,0.686,391,0.686,394,1.876,395,0.517,397,1.306,398,1.201,400,0.932,401,1.269,402,1.833,404,1.807,408,1.412,409,1.216,410,0.77,411,0.799,412,0.928,413,0.963,417,0.932,418,0.969,419,0.583,420,1.221,421,0.686,422,0.969,423,1.427,424,0.686,425,1.124,426,0.686,427,0.686,428,0.686,429,0.686,430,1.288,431,0.969,432,0.969,433,1.124,434,0.686,435,0.686,436,0.686,437,0.686,438,0.66,439,0.517,440,0.686,441,0.686,442,0.686,443,0.686,444,0.66,445,0.686,491,5.497,492,3.09,493,5.025,494,5.025,495,6.329,496,5.025,497,5.025,498,5.025,499,3.011,500,3.558,501,2.084,502,2.084,503,3.09,504,5.025,505,3.09,506,3.558,507,3.558,508,3.558,509,3.558,510,3.558,511,3.558,512,3.558,513,3.09,514,3.09,515,3.558]],["title/components/Css3dVideoMeshComponent.html",[264,0.624,389,0.021]],["body/components/Css3dVideoMeshComponent.html",[0,0.078,3,0.116,4,0.198,5,0.09,8,1.082,10,0.979,11,0.512,12,0.358,13,1.371,15,0.545,20,0.979,28,0.341,29,0.015,31,0.625,32,0.601,34,0.712,37,0.52,38,0.728,43,1.596,50,0.214,51,1.055,53,0.103,55,0.116,56,1.016,57,0.601,64,0.006,65,0.008,66,0.006,79,0.743,93,0.805,94,0.755,95,1.246,97,0.491,98,0.738,99,0.838,107,0.555,116,1.471,117,0.784,127,0.555,135,0.275,138,0.52,153,0.533,158,0.601,165,0.533,166,0.533,169,1.125,170,0.838,176,0.533,177,0.533,180,0.601,182,0.601,188,0.533,189,0.533,190,0.533,191,0.533,192,0.533,193,0.533,203,0.578,204,0.578,205,0.578,206,0.578,212,0.512,213,0.533,214,0.533,217,0.578,225,0.533,226,0.533,229,0.601,232,0.838,237,0.533,238,0.533,239,0.533,242,0.601,244,0.601,245,0.601,250,0.533,251,0.533,252,0.533,255,0.958,257,0.578,258,0.578,263,0.533,264,0.958,265,0.533,266,0.533,267,0.533,268,0.533,269,0.533,270,0.533,273,0.578,275,0.601,276,0.578,277,0.601,278,0.601,279,1.125,280,1.354,318,0.533,319,0.491,336,0.601,351,0.512,352,0.512,353,0.512,357,0.838,366,0.533,375,0.512,379,0.555,380,0.555,385,0.533,388,0.601,389,0.03,390,0.625,391,0.625,394,1.641,395,0.471,397,1.299,398,1.195,400,0.872,401,1.291,404,1.641,408,1.32,410,0.701,411,0.728,412,0.845,413,0.877,415,0.728,417,0.872,418,0.906,419,0.376,420,1.17,421,0.625,422,0.906,423,1.395,424,0.625,425,1.066,426,0.625,427,0.625,428,0.625,429,0.625,430,1.242,431,0.906,432,0.906,433,1.066,434,0.625,435,0.625,436,0.625,437,0.625,438,0.601,439,0.471,440,0.625,441,0.625,442,0.625,443,0.625,444,0.601,445,0.625,447,1.617,465,1.144,479,1.739,516,5.831,517,4.801,518,1.66,519,2.759,520,4.698,521,6.063,522,3.356,523,4.801,524,3.673,525,2.156,526,2.813,527,6.063,528,3.239,529,4.698,530,2.813,531,4.801,532,4.698,533,3.239,534,3.239,535,3.239,536,4.698,537,3.239,538,3.239,539,3.239,540,3.239,541,3.239,542,3.239,543,1.471,544,3.239,545,3.239,546,3.239,547,3.239,548,3.239,549,3.239,550,3.239,551,3.239,552,3.239,553,3.239,554,2.6,555,3.239,556,3.239,557,3.239,558,3.239,559,3.239,560,3.239,561,3.239,562,3.239,563,3.239]],["title/components/CylinderMeshComponent.html",[265,0.65,389,0.021]],["body/components/CylinderMeshComponent.html",[0,0.077,3,0.116,4,0.116,5,0.09,8,1.079,10,0.975,11,0.509,12,0.356,15,0.543,20,0.975,28,0.339,29,0.015,31,1.367,32,1.314,34,0.811,37,0.356,50,0.214,51,1.622,53,0.103,55,0.116,56,1.012,57,0.868,64,0.006,65,0.008,66,0.006,79,0.74,93,0.802,94,0.751,95,1.244,97,0.489,98,0.736,99,0.836,107,0.552,116,2.126,117,0.78,127,0.552,135,0.273,138,0.518,153,0.531,158,0.598,165,0.531,166,0.531,169,1.244,170,0.835,176,0.531,177,0.531,180,0.598,182,0.598,188,0.531,189,0.531,190,0.531,191,0.531,192,0.531,193,0.531,203,0.575,204,0.575,205,0.575,206,0.575,212,0.509,213,0.531,214,0.531,217,0.575,225,0.531,226,0.531,229,0.598,232,0.835,237,0.531,238,0.531,239,0.531,242,0.598,244,0.598,245,0.598,250,0.531,251,0.531,252,0.531,255,0.74,257,0.575,258,0.575,263,0.531,264,0.509,265,0.996,266,0.531,267,0.531,268,0.531,269,0.531,270,0.531,273,0.575,275,1.023,276,0.575,277,0.598,278,0.598,279,0.598,280,0.575,318,0.531,319,0.489,336,0.598,351,0.509,352,0.509,353,0.509,357,0.836,366,0.531,375,0.509,379,0.552,380,0.552,385,0.531,388,0.598,389,0.029,390,0.622,391,0.622,394,1.637,395,0.468,397,1.299,398,1.194,400,0.868,401,1.288,402,1.903,404,1.739,408,1.315,409,1.133,410,0.697,411,0.724,412,1.221,413,0.872,415,0.724,417,0.868,418,0.903,419,0.374,420,1.167,421,0.622,422,0.903,423,1.393,424,0.622,425,1.063,426,0.622,427,0.622,428,0.622,429,0.622,430,1.239,431,0.903,432,0.903,433,1.063,434,0.622,435,0.622,436,0.622,437,0.622,438,0.598,439,0.468,440,0.622,441,0.622,442,0.622,443,0.622,444,0.598,445,0.622,447,1.608,448,3.228,452,2.751,453,4.309,457,4.172,465,1.653,479,1.734,480,1.608,482,2.311,485,2.519,487,2.126,488,1.887,489,1.887,490,2.006,524,2.519,525,2.144,543,2.126,564,6.454,565,4.68,566,5.511,567,4.786,568,5.511,569,5.511,570,5.511,571,5.511,572,4.064,573,2.798,574,2.798,575,2.798,576,3.356,577,2.311,578,3.115,579,4.68,580,2.798,581,3.222,582,2.59,583,3.222,584,3.222,585,3.222,586,3.222,587,2.798,588,3.222,589,3.222,590,3.222]],["title/directives/DashedDrawDirective.html",[212,0.624,419,0.459]],["body/directives/DashedDrawDirective.html",[0,0.105,3,0.157,4,0.157,5,0.122,12,0.485,13,1.69,15,0.672,28,0.61,29,0.015,34,0.764,37,0.641,38,1.458,43,1.968,50,0.22,53,0.14,55,0.157,57,1.333,64,0.008,65,0.01,66,0.008,68,3.624,72,4.655,75,5.399,88,2.699,93,0.993,97,0.664,98,0.533,99,0.664,116,1.99,123,2.299,212,0.916,217,1.033,255,0.916,394,1.869,395,0.637,397,0.693,398,0.842,409,1.402,412,1.143,419,0.509,439,0.637,460,5.074,465,1.548,479,2.173,487,1.99,499,2.084,513,3.805,518,2.047,519,3.239,522,3.822,543,1.99,576,3.142,582,2.425,591,6.237,592,3.805,593,6.49,594,3.425,595,5.793,596,3.393,597,4.381,598,4.381,599,3.425,600,3.425,601,2.916,602,4.381,603,4.381,604,3.805,605,4.381,606,3.805,607,4.381,608,4.381,609,5.793,610,4.381,611,4.381,612,4.381,613,4.381,614,4.381,615,5.793,616,4.381,617,4.381,618,4.381,619,4.381,620,4.381,621,6.49,622,5.793,623,4.381,624,4.381,625,3.425,626,4.381,627,4.381,628,4.381,629,4.381,630,6.49,631,4.381,632,4.381,633,4.381,634,4.381,635,4.381,636,4.381,637,4.381,638,3.805,639,3.805,640,4.381,641,4.381,642,4.381,643,4.381,644,4.381,645,4.381]],["title/pipes/Deg2RadPipe.html",[341,2.629,646,2.629]],["body/pipes/Deg2RadPipe.html",[0,0.137,3,0.205,4,0.205,5,0.159,15,0.663,28,0.601,29,0.015,30,2.446,34,0.631,37,0.631,50,0.182,53,0.182,55,0.205,64,0.01,65,0.012,66,0.01,97,0.866,98,0.892,99,0.866,341,4.556,395,0.83,415,1.282,518,2.017,578,3.799,646,4.556,647,4.463,648,4.958,649,6.845,650,4.958,651,6.845,652,5.708,653,5.945,654,6.752,655,5.945,656,5.945,657,4.958,658,5.708,659,4.958]],["title/components/DirectionalLightComponent.html",[237,0.65,389,0.021]],["body/components/DirectionalLightComponent.html",[0,0.08,3,0.119,4,0.119,5,0.092,8,1.093,10,0.995,11,0.524,12,0.367,14,2.345,15,0.554,20,0.995,28,0.349,29,0.015,31,1.253,32,1.137,33,2.384,34,0.748,37,0.367,43,1.902,50,0.216,51,1.459,53,0.106,55,0.119,56,0.717,57,1.039,64,0.006,65,0.008,66,0.006,79,0.755,93,0.819,94,0.773,95,1.256,97,0.502,98,0.746,99,0.849,107,0.568,117,0.802,127,0.568,135,0.281,138,0.528,153,0.546,158,0.615,165,0.546,166,0.546,169,0.615,170,0.852,176,0.546,177,0.546,180,0.615,182,0.615,188,0.546,189,0.546,190,0.546,191,0.546,192,0.546,193,0.546,203,0.591,204,0.591,205,0.591,206,0.591,212,0.524,213,0.546,214,0.546,217,0.591,225,0.546,226,0.546,229,0.615,232,0.852,237,1.009,238,0.546,239,0.546,242,0.615,244,0.615,245,1.039,250,0.546,251,0.546,252,0.546,255,0.755,257,0.591,258,0.591,263,0.546,264,0.524,265,0.546,266,0.546,267,0.546,268,0.546,269,0.546,270,0.546,273,0.591,275,0.615,276,0.591,277,0.615,278,0.615,279,0.615,280,0.591,318,0.546,319,0.502,336,0.615,351,0.524,352,0.524,353,0.524,357,0.849,366,0.546,375,0.524,379,0.568,380,0.568,385,0.546,388,0.615,389,0.03,390,0.639,391,0.639,394,1.832,395,0.482,397,1.301,398,1.196,400,0.886,401,1.302,402,1.928,404,1.659,408,1.342,409,1.156,410,0.717,411,0.744,412,0.864,413,0.897,415,0.744,417,0.886,418,0.921,419,0.385,420,1.182,421,0.639,422,0.921,423,1.403,424,0.639,425,1.08,426,0.639,427,0.639,428,0.639,429,0.639,430,1.253,431,0.921,432,0.921,433,1.08,434,0.639,435,0.639,436,0.639,437,0.639,438,0.615,439,0.482,440,0.639,441,0.639,442,0.639,443,0.639,444,0.615,445,0.639,465,1.687,479,1.043,499,2.272,554,3.392,660,6.057,661,2.376,662,4.776,663,4.395,664,4.378,665,4.378,666,6.127,667,4.776,668,2.591,669,2.591,670,3.313,671,3.313,672,1.654,673,2.205,674,3.313,675,3.313,676,3.313,677,2.878,678,3.313,679,3.313,680,3.734,681,2.878,682,1.834,683,2.376,684,3.313,685,3.313,686,3.313,687,3.313,688,2.878,689,2.376,690,2.878,691,2.878,692,3.313,693,2.878,694,2.878,695,2.878]],["title/components/DofComponent.html",[213,0.65,389,0.021]],["body/components/DofComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,8,1.054,11,0.485,12,0.339,13,1.317,15,0.524,16,2.153,20,0.94,28,0.564,29,0.015,31,1.033,32,0.994,34,0.802,37,0.696,38,1.479,43,1.82,50,0.188,51,1.327,53,0.098,55,0.11,57,0.569,64,0.005,65,0.008,66,0.005,79,0.713,93,0.774,94,0.715,95,1.222,97,0.684,98,0.766,99,0.896,107,0.526,116,1.393,117,0.742,127,0.526,130,3.137,135,0.26,153,0.505,158,0.569,165,0.505,166,0.505,169,0.569,170,0.805,176,0.505,177,0.505,180,0.569,182,0.569,188,0.505,189,0.505,190,0.505,191,0.505,192,0.505,193,0.505,203,0.547,204,0.547,205,0.547,206,0.547,212,0.485,213,0.973,214,0.505,217,0.547,225,0.505,226,0.505,229,0.569,232,0.805,237,0.505,238,0.505,239,0.505,242,0.569,244,0.569,245,0.569,250,0.505,251,0.505,252,0.505,255,0.713,257,0.547,258,0.547,263,0.505,264,0.485,265,0.505,266,0.505,267,0.505,268,0.505,269,0.505,270,0.505,273,0.547,275,0.569,276,0.547,277,0.569,278,0.569,279,0.569,280,0.547,318,0.505,319,0.955,336,0.569,351,0.485,352,0.485,353,0.485,357,0.812,366,0.505,375,0.485,379,0.526,380,0.526,385,0.505,388,0.569,389,0.029,390,0.591,391,0.591,395,0.446,397,1.295,398,1.191,400,0.569,401,1.474,404,1.599,408,1.268,415,0.689,417,0.837,418,0.871,419,0.356,420,1.14,421,0.591,422,0.871,423,1.376,424,0.591,425,1.033,426,0.591,427,0.591,428,0.591,429,0.591,430,1.215,431,0.871,432,0.871,433,1.033,434,0.591,435,0.591,436,0.591,437,0.591,438,0.569,439,0.446,440,0.591,441,0.591,442,0.591,443,0.591,444,0.569,445,0.591,452,1.53,454,2.04,457,2.809,518,1.594,519,2.673,522,3.269,696,2.663,697,3.334,698,3.564,699,4.513,700,6.585,701,4.618,702,3.931,703,3.003,704,3.677,705,6.296,706,6.296,707,6.296,708,4.513,709,4.513,710,3.066,711,3.066,712,4.513,713,3.066,714,3.066,715,3.066,716,3.066,717,3.003,718,3.931,719,3.066,720,3.677,721,3.066,722,3.066,723,3.066,724,3.066,725,3.066,726,4.513,727,3.066,728,3.066,729,5.355,730,5.355,731,4.513,732,2.663,733,2.397,734,3.066,735,3.066,736,3.066,737,3.066,738,2.663,739,5.468,740,3.066,741,4.187,742,4.651,743,3.066,744,3.066,745,3.066,746,3.066,747,3.066]],["title/components/EmptyComponent.html",[11,0.624,389,0.021]],["body/components/EmptyComponent.html",[0,0.09,3,0.135,4,0.135,5,0.105,8,1.157,10,1.088,11,1.025,12,0.416,15,0.606,28,0.396,29,0.014,34,0.578,37,0.416,50,0.217,53,0.12,55,0.135,56,0.814,57,0.698,64,0.007,65,0.009,66,0.007,79,0.826,93,0.896,94,0.877,95,1.309,97,0.57,98,0.789,99,0.91,107,0.645,117,0.911,127,0.645,135,0.319,138,0.578,153,0.619,158,0.698,165,0.619,166,0.619,169,0.698,170,0.932,176,0.619,177,0.619,180,0.698,182,0.698,188,0.619,189,0.619,190,0.619,191,0.619,192,0.619,193,0.619,203,0.671,204,0.671,205,0.671,206,0.671,212,0.595,213,0.619,214,0.619,217,0.671,225,0.619,226,0.619,229,0.698,232,0.932,237,0.619,238,0.619,239,0.619,242,0.698,244,0.698,245,0.698,250,0.619,251,0.619,252,0.619,255,0.826,257,0.671,258,0.671,263,0.619,264,0.595,265,0.619,266,0.619,267,0.619,268,0.619,269,0.619,270,0.619,273,0.671,275,0.698,276,0.671,277,0.698,278,0.698,279,0.698,280,0.671,318,0.619,319,0.57,336,0.698,351,0.595,352,0.595,353,0.595,357,0.91,366,0.619,375,0.595,379,0.645,380,0.645,385,0.619,388,0.698,389,0.032,390,0.726,391,0.726,394,1.909,395,0.547,397,1.31,398,1.205,400,0.969,401,1.366,402,2.04,404,1.756,408,1.468,409,1.265,410,0.814,411,0.845,412,0.981,413,1.018,415,0.845,417,0.969,418,1.008,419,0.437,420,1.251,421,0.726,422,1.008,423,1.445,424,0.726,425,1.158,426,0.726,427,0.726,428,0.726,429,0.726,430,1.314,431,1.008,432,1.008,433,1.158,434,0.726,435,0.726,436,0.726,437,0.726,438,0.698,439,0.547,440,0.726,441,0.726,442,0.726,443,0.726,444,0.698,445,0.726,499,2.855,518,1.846,519,2.996,748,3.267,749,5.224,750,5.224,751,3.761,752,3.761]],["title/components/FogComponent.html",[214,0.65,389,0.021]],["body/components/FogComponent.html",[0,0.076,3,0.114,4,0.114,5,0.088,8,1.071,11,0.501,12,0.351,13,1.35,14,2.298,15,0.537,16,2.179,20,0.964,28,0.575,29,0.015,31,1.054,32,1.013,34,0.808,37,0.706,38,1.497,50,0.203,51,1.349,53,0.101,55,0.114,57,0.589,64,0.006,65,0.008,66,0.006,79,0.731,93,0.793,94,0.74,95,1.237,97,0.702,98,0.777,99,0.91,107,0.544,117,0.768,127,0.544,130,2.71,135,0.269,153,0.522,158,0.589,165,0.522,166,0.522,169,0.589,170,0.825,176,0.522,177,0.522,180,0.589,182,0.589,188,0.522,189,0.522,190,0.522,191,0.522,192,0.522,193,0.522,203,0.566,204,0.566,205,0.566,206,0.566,212,0.501,213,0.522,214,0.989,217,0.566,225,0.522,226,0.522,229,0.589,232,0.825,237,0.522,238,0.522,239,0.522,242,0.589,244,0.589,245,0.589,250,0.522,251,0.522,252,0.522,255,0.731,257,0.566,258,0.566,263,0.522,264,0.501,265,0.522,266,0.522,267,0.522,268,0.522,269,0.522,270,0.522,273,0.566,275,0.589,276,0.566,277,0.589,278,0.589,279,0.589,280,0.566,310,1.858,318,0.522,319,0.968,336,0.589,351,0.501,352,0.501,353,0.501,357,0.828,366,0.522,375,0.501,379,0.544,380,0.544,385,0.522,388,0.589,389,0.029,390,0.612,391,0.612,395,0.461,397,1.298,398,1.193,400,0.589,401,1.485,404,1.728,408,1.3,409,1.12,411,0.712,415,0.712,417,0.858,418,0.892,419,0.368,420,1.158,421,0.612,422,0.892,423,1.388,424,0.612,425,1.054,426,0.612,427,0.612,428,0.612,429,0.612,430,1.231,431,0.892,432,0.892,433,1.054,434,0.612,435,0.612,436,0.612,437,0.612,438,0.589,439,0.461,440,0.612,441,0.612,442,0.612,443,0.612,444,0.589,445,0.612,518,1.635,519,2.726,522,3.323,554,2.561,672,1.583,697,3.4,698,3.635,703,3.079,704,3.737,717,3.079,718,3.995,720,2.88,741,2.48,753,2.754,754,4.626,755,3.737,756,6.003,757,6.003,758,4.743,759,5.214,760,4.626,761,4.626,762,3.171,763,3.171,764,3.318,765,3.171,766,3.171,767,3.171,768,3.171,769,3.171,770,3.171,771,4.018,772,3.171,773,3.171,774,5.461,775,4.626,776,3.171,777,3.171,778,3.171,779,4.018,780,4.626,781,3.171,782,4.626,783,3.171,784,2.754,785,2.754,786,3.171,787,3.171,788,3.171]],["title/components/FrameMeshComponent.html",[266,0.65,389,0.021]],["body/components/FrameMeshComponent.html",[0,0.078,3,0.116,4,0.116,5,0.09,8,1.082,10,0.979,11,0.513,12,0.359,15,0.546,20,0.979,28,0.341,29,0.015,31,1.067,32,1.026,34,0.712,37,0.359,50,0.214,51,1.363,53,0.103,55,0.116,56,1.017,57,1.026,64,0.006,65,0.008,66,0.006,79,0.743,93,0.806,94,0.756,95,1.246,97,0.492,98,0.738,99,0.839,107,0.948,117,0.785,127,0.556,135,0.275,138,0.52,153,0.534,158,0.602,165,0.534,166,0.534,169,1.246,170,0.839,176,0.534,177,0.534,180,0.602,182,0.602,188,0.534,189,0.534,190,0.534,191,0.534,192,0.534,193,0.534,203,0.579,204,0.579,205,0.579,206,0.579,212,0.513,213,0.534,214,0.534,217,0.579,225,0.534,226,0.534,229,0.602,232,0.839,237,0.534,238,0.534,239,0.534,242,0.602,244,0.602,245,0.602,250,0.534,251,0.534,252,0.534,255,0.743,257,0.579,258,0.579,263,0.534,264,0.513,265,0.534,266,0.999,267,0.534,268,0.534,269,0.534,270,0.534,273,0.579,275,0.602,276,0.579,277,0.602,278,0.602,279,0.602,280,0.579,318,0.534,319,0.492,336,0.602,351,0.513,352,0.513,353,0.513,357,0.839,366,0.534,375,0.513,379,0.556,380,0.556,385,0.534,388,0.602,389,0.03,390,0.626,391,0.626,394,1.642,395,0.471,397,1.299,398,1.195,400,0.872,401,1.291,402,1.909,404,1.642,408,1.321,409,1.138,410,0.701,411,0.728,412,1.226,413,0.878,415,0.728,417,0.872,418,0.907,419,0.376,420,1.17,421,0.626,422,0.907,423,1.395,424,0.626,425,1.067,426,0.626,427,0.626,428,0.626,429,0.626,430,1.242,431,0.907,432,0.907,433,1.067,434,0.626,435,0.626,436,0.626,437,0.626,438,0.602,439,0.471,440,0.626,441,0.626,442,0.626,443,0.626,444,0.602,445,0.626,447,1.618,448,3.24,458,2.535,474,2.326,479,2.18,480,1.618,487,2.136,488,1.899,489,1.899,490,2.019,525,2.158,543,2.136,577,3.372,582,2.602,789,5.833,790,4.702,791,5.531,792,5.531,793,5.531,794,5.269,795,7.096,796,3.243,797,4.702,798,7.522,799,3.243,800,7.44,801,3.243,802,3.243,803,3.243,804,3.243,805,6.716,806,6.066,807,3.243]],["title/components/GridHelperComponent.html",[226,0.65,389,0.021]],["body/components/GridHelperComponent.html",[0,0.087,3,0.13,4,0.13,5,0.101,8,1.14,10,1.062,11,0.575,12,0.402,15,0.592,20,1.062,28,0.62,29,0.014,30,2.01,34,0.707,37,0.402,50,0.214,51,1.324,53,0.116,55,0.13,56,0.786,57,0.675,64,0.006,65,0.009,66,0.006,79,0.806,93,0.875,94,0.848,95,1.295,97,0.551,98,0.777,99,0.894,107,0.623,117,0.88,127,0.623,135,0.308,138,0.564,153,0.599,158,0.675,165,0.599,166,0.599,169,0.675,170,0.91,176,0.599,177,0.599,180,0.675,182,0.675,188,0.599,189,0.599,190,0.599,191,0.599,192,0.599,193,0.599,203,0.649,204,0.649,205,0.649,206,0.649,212,0.575,213,0.599,214,0.599,217,0.649,225,0.599,226,1.052,229,0.675,232,1.14,237,0.599,238,0.599,239,0.599,242,0.675,244,0.675,245,0.675,250,0.599,251,0.599,252,0.599,255,0.806,257,0.649,258,0.649,263,0.599,264,0.575,265,0.599,266,0.599,267,0.599,268,0.599,269,0.599,270,0.599,273,0.649,275,0.675,276,0.649,277,0.675,278,0.675,279,0.675,280,0.649,318,0.599,319,0.551,336,0.675,351,0.575,352,0.575,353,0.575,357,0.894,366,0.599,375,0.575,379,0.623,380,0.623,385,0.599,388,0.675,389,0.031,390,0.701,391,0.701,393,2.842,394,1.889,395,0.528,397,1.308,398,1.203,399,4.43,400,0.947,401,1.349,402,2.01,403,3.922,404,1.73,405,3.157,407,4.43,408,1.433,409,1.235,410,0.786,411,0.817,412,0.948,413,0.984,415,0.817,417,0.947,418,0.984,419,0.422,420,1.233,421,0.701,422,0.984,423,1.434,424,0.701,425,1.137,426,0.701,427,0.701,428,0.701,429,0.701,430,1.298,431,0.984,432,0.984,433,1.137,434,0.701,435,0.701,436,0.701,437,0.701,438,0.675,439,0.528,440,0.701,441,0.701,442,0.701,443,0.701,444,0.675,445,0.701,808,5.844,809,5.101,810,5.893,811,5.101,812,3.635,813,3.635,814,3.635,815,3.635]],["title/components/GridMeshComponent.html",[267,0.65,389,0.021]],["body/components/GridMeshComponent.html",[0,0.079,3,0.118,4,0.118,5,0.092,8,1.09,10,0.99,11,0.52,12,0.364,15,0.552,20,0.99,28,0.346,29,0.015,31,1.179,32,1.134,34,0.747,37,0.364,50,0.215,51,1.455,53,0.105,55,0.118,56,1.028,57,0.611,64,0.006,65,0.008,66,0.006,79,0.751,88,1.163,93,0.815,94,0.768,95,1.253,97,0.499,98,0.743,99,0.846,107,0.564,117,0.797,123,1.728,127,0.564,135,0.279,138,0.526,153,0.542,158,0.611,165,0.542,166,0.542,169,1.134,170,0.848,176,0.542,177,0.542,180,0.611,182,0.611,188,0.542,189,0.542,190,0.542,191,0.542,192,0.542,193,0.542,203,0.587,204,0.587,205,0.587,206,0.587,212,0.52,213,0.542,214,0.542,217,0.587,225,0.542,226,0.542,229,0.611,232,1.156,237,0.542,238,0.542,239,0.542,242,0.611,244,0.611,245,0.611,250,0.542,251,0.542,252,0.542,255,0.751,257,0.587,258,0.587,263,0.542,264,0.52,265,0.542,266,0.542,267,1.006,268,0.542,269,0.542,270,0.542,273,0.587,275,0.611,276,0.587,277,0.611,278,0.611,279,0.611,280,0.587,318,0.542,319,0.499,336,0.611,351,0.52,352,0.52,353,0.52,357,0.846,366,0.542,375,0.52,379,0.564,380,0.564,385,0.542,388,0.611,389,0.03,390,0.635,391,0.635,394,1.654,395,0.479,397,1.301,398,1.196,400,0.882,401,1.299,402,1.922,403,3.713,404,1.654,408,1.336,409,1.151,410,0.712,411,0.739,412,1.24,413,0.891,417,0.882,418,0.917,419,0.382,420,1.179,421,0.635,422,0.917,423,1.4,424,0.635,425,1.076,426,0.635,427,0.635,428,0.635,429,0.635,430,1.25,431,0.917,432,0.917,433,1.076,434,0.635,435,0.635,436,0.635,437,0.635,438,0.611,439,0.479,440,0.635,441,0.635,442,0.635,443,0.635,444,0.611,445,0.635,447,1.643,448,3.267,471,3.716,472,2.361,474,2.361,475,2.361,479,2.038,480,1.643,525,2.191,543,2.534,577,2.361,582,2.631,816,6.045,817,4.753,818,5.578,819,5.578,820,6.109,821,6.109,822,4.753,823,4.128,824,3.292,825,3.292,826,3.292,827,5.578,828,2.574,829,3.292,830,5.578,831,2.859,832,3.292,833,3.292,834,3.292,835,3.292,836,3.292,837,5.578,838,3.292,839,3.292,840,3.292]],["title/components/HemisphereLightComponent.html",[238,0.65,389,0.021]],["body/components/HemisphereLightComponent.html",[0,0.085,3,0.127,4,0.127,5,0.098,8,1.124,10,1.04,11,0.557,12,0.39,14,1.349,15,0.579,20,1.04,28,0.371,29,0.015,31,1.118,32,1.075,33,2.491,34,0.736,37,0.39,50,0.22,51,1.416,53,0.112,55,0.127,56,0.763,57,0.654,64,0.006,65,0.009,66,0.006,79,0.789,93,0.856,94,0.822,95,1.282,97,0.535,98,0.767,99,0.879,107,0.604,117,0.853,127,0.604,135,0.299,138,0.552,153,0.581,158,0.654,165,0.581,166,0.581,169,0.654,170,0.891,176,0.581,177,0.581,180,0.654,182,0.654,188,0.581,189,0.581,190,0.581,191,0.581,192,0.581,193,0.581,203,0.629,204,0.629,205,0.629,206,0.629,212,0.557,213,0.581,214,0.581,217,0.629,225,0.581,226,0.581,229,0.654,232,0.891,237,0.581,238,1.038,239,0.581,242,0.654,244,1.075,245,0.654,250,0.581,251,0.581,252,0.581,255,0.789,257,0.629,258,0.629,263,0.581,264,0.557,265,0.581,266,0.581,267,0.581,268,0.581,269,0.581,270,0.581,273,0.629,275,0.654,276,0.629,277,0.654,278,0.654,279,0.654,280,0.629,318,0.581,319,0.535,336,0.654,351,0.557,352,0.557,353,0.557,357,0.879,366,0.581,375,0.557,379,0.604,380,0.604,385,0.581,388,0.654,389,0.031,390,0.68,391,0.68,394,1.87,395,0.512,397,1.306,398,1.201,400,0.926,401,1.334,402,1.983,404,1.706,408,1.403,409,1.208,410,0.763,411,0.792,412,0.919,413,0.954,415,0.792,417,0.926,418,0.963,419,0.409,420,1.216,421,0.68,422,0.963,423,1.424,424,0.68,425,1.118,426,0.68,427,0.68,428,0.68,429,0.68,430,1.283,431,0.963,432,0.963,433,1.118,434,0.68,435,0.68,436,0.68,437,0.68,438,0.654,439,0.512,440,0.68,441,0.68,442,0.68,443,0.68,444,0.654,445,0.68,465,1.764,479,1.109,661,2.528,663,4.52,665,4.531,668,2.756,669,2.756,672,1.76,673,2.346,841,5.999,842,4.992,843,5.795,844,5.795,845,4.335,846,4.992,847,3.062,848,3.525,849,3.525,850,3.525,851,3.525]],["title/components/LayerActorComponent.html",[188,0.65,389,0.021]],["body/components/LayerActorComponent.html",[0,0.074,3,0.11,4,0.11,5,0.086,6,4.01,8,1.055,10,0.942,11,0.996,12,0.34,13,1.32,14,2.053,15,0.525,16,2.333,17,3.105,18,3.465,19,3.465,20,0.942,24,2.503,25,3.142,26,2.437,27,2.969,28,0.764,29,0.015,30,2.342,31,0.593,32,0.571,34,0.845,37,0.697,38,1.329,41,2.151,46,3.577,50,0.171,51,1.329,52,4.625,53,0.098,55,0.11,57,0.996,59,4.659,64,0.005,65,0.008,66,0.005,79,0.715,88,1.896,97,0.466,98,0.829,99,0.466,107,0.527,127,0.527,135,0.261,138,0.5,153,0.506,158,0.571,165,0.506,166,0.506,169,0.571,170,0.807,176,0.506,177,0.506,180,0.571,182,0.571,188,0.974,189,0.506,190,0.506,191,0.506,192,0.506,193,0.506,203,0.549,204,0.549,205,0.549,206,0.549,212,0.486,213,0.506,214,0.506,217,0.549,225,0.506,226,0.506,229,0.571,232,0.807,237,0.506,238,0.506,239,0.506,242,0.571,244,0.571,245,0.571,250,0.506,251,0.506,252,0.506,255,0.486,257,0.549,258,0.549,263,0.506,264,0.486,265,0.506,266,0.506,267,0.506,268,0.506,269,0.506,270,0.506,273,0.549,275,0.571,276,0.549,277,0.571,278,0.571,279,0.571,280,0.549,318,0.506,319,0.466,336,0.571,351,0.486,352,0.486,353,0.486,357,0.814,366,0.506,375,0.486,379,0.527,380,0.527,385,0.506,388,0.571,389,0.029,390,0.593,391,0.593,395,0.447,397,1.295,398,1.191,400,0.839,401,0.907,402,1.688,410,0.665,411,0.691,415,0.691,417,0.839,418,0.873,419,0.357,420,1.141,421,0.593,422,0.873,423,1.377,424,0.593,425,1.035,426,0.593,427,0.593,428,0.593,429,1.035,430,1.216,431,0.873,432,0.873,433,1.035,434,0.593,435,0.593,436,0.593,437,0.593,438,0.996,439,0.447,440,0.593,441,0.593,442,0.593,443,0.593,444,0.571,445,0.593,452,2.678,454,4.536,499,1.463,501,1.801,502,1.801,543,1.397,764,2.205,852,6.636,853,1.801,854,4.523,855,5.365,856,5.365,857,2.816,858,3.075,859,3.075,860,4.523,861,3.075,862,3.075,863,3.075,864,3.075,865,3.075,866,3.075,867,3.075,868,5.915,869,3.075,870,3.075,871,3.075,872,3.075,873,3.075,874,3.075,875,1.914,876,3.075,877,5.365,878,3.075,879,3.075]],["title/components/LineConnectorComponent.html",[165,0.65,389,0.021]],["body/components/LineConnectorComponent.html",[0,0.079,3,0.118,4,0.118,5,0.092,8,1.088,10,0.988,11,0.519,12,0.363,13,1.383,14,1.815,15,0.55,16,1.82,20,0.988,28,0.586,29,0.015,31,0.633,32,0.88,34,0.746,37,0.525,38,1.065,50,0.222,51,1.065,53,0.105,55,0.118,56,1.205,57,0.88,64,0.006,65,0.008,66,0.006,79,0.75,81,2.353,88,2.383,93,0.813,94,0.765,95,1.251,97,0.498,98,0.742,99,0.844,107,0.563,117,0.794,127,0.813,130,1.922,135,0.278,138,0.525,153,0.54,158,0.609,165,1.005,166,0.54,169,0.609,170,1.241,176,0.54,177,0.54,180,0.609,182,0.609,188,0.54,189,0.54,190,0.54,191,0.54,192,0.54,193,0.54,203,0.585,204,0.585,205,0.585,206,0.585,212,0.519,213,0.54,214,0.54,217,0.585,225,0.54,226,0.54,229,0.609,232,0.846,237,0.54,238,0.54,239,0.54,242,0.609,244,0.609,245,0.609,250,0.54,251,0.54,252,0.54,255,0.75,257,0.585,258,0.585,263,0.54,264,0.519,265,0.54,266,0.54,267,0.54,268,0.54,269,0.54,270,0.54,273,0.585,275,0.609,276,0.585,277,0.609,278,0.609,279,0.609,280,0.585,318,0.54,319,0.498,336,0.609,351,0.519,352,0.519,353,0.519,357,0.844,366,0.54,375,0.519,379,0.563,380,0.563,385,0.54,388,0.609,389,0.03,390,0.633,391,0.633,394,1.651,395,0.477,397,1.3,398,1.196,400,0.88,401,0.951,404,1.651,408,1.333,409,1.148,410,0.71,411,0.737,412,0.856,413,0.888,415,0.737,417,0.88,418,0.915,419,0.381,420,1.177,421,0.633,422,0.915,423,1.399,424,0.633,425,1.074,426,0.633,427,0.633,428,0.633,429,0.633,430,1.248,431,0.915,432,0.915,433,1.074,434,0.633,435,0.633,436,0.633,437,0.633,438,0.609,439,0.477,440,0.633,441,0.633,442,0.633,443,0.633,444,0.609,445,0.633,465,1.675,479,1.032,480,2.779,487,2.154,672,1.638,673,2.184,682,1.816,828,3.708,875,2.043,880,6.039,881,2.566,882,4.836,883,4.742,884,4.354,885,5.298,886,5.298,887,3.994,888,4.118,889,4.118,890,3.281,891,2.85,892,6.1,893,3.281,894,3.281,895,2.85,896,4.836,897,4.118,898,3.281,899,2.85,900,3.281,901,2.85,902,3.281,903,3.281,904,2.85,905,3.281,906,2.85,907,3.281,908,4.118,909,2.566,910,3.281,911,4.118,912,3.281,913,3.281]],["title/components/MapControlsComponent.html",[176,0.65,389,0.021]],["body/components/MapControlsComponent.html",[0,0.067,3,0.1,4,0.1,5,0.078,8,1.005,10,0.875,11,0.441,12,0.308,15,0.488,20,0.875,28,0.533,29,0.015,30,1.322,31,1.388,32,1.335,34,0.824,37,0.465,38,0.944,50,0.203,51,1.638,53,0.089,55,0.1,56,0.603,57,0.517,64,0.005,65,0.007,66,0.005,68,3.463,72,3.014,79,0.664,89,2.179,93,0.721,94,0.65,95,1.18,97,0.637,98,0.736,99,0.637,102,2.179,107,0.478,116,2.888,117,0.675,127,0.478,130,2.462,135,0.236,153,0.459,158,0.517,165,0.459,166,0.459,169,0.517,170,0.75,176,0.928,177,0.459,180,0.78,182,0.939,188,0.459,189,0.459,190,0.459,191,0.459,192,0.459,193,0.459,203,0.497,204,0.497,205,0.497,206,0.497,212,0.441,213,0.459,214,0.459,217,0.497,225,0.459,226,0.459,229,0.517,232,0.75,237,0.459,238,0.459,239,0.459,242,0.517,244,0.517,245,0.517,250,0.459,251,0.459,252,0.459,255,0.441,257,0.497,258,0.497,263,0.459,264,0.441,265,0.459,266,0.459,267,0.459,268,0.459,269,0.459,270,0.459,273,0.497,275,0.517,276,0.497,277,0.517,278,0.517,279,0.517,280,0.497,318,0.459,319,0.423,336,0.517,351,0.441,352,0.441,353,0.441,354,3.231,357,0.767,366,0.459,375,0.441,379,0.478,380,0.721,385,0.459,388,0.517,389,0.027,390,0.538,391,0.538,395,0.405,397,1.286,398,1.183,400,0.78,401,1.275,413,0.754,415,0.626,417,0.78,418,0.811,419,0.324,420,1.087,421,0.538,422,0.811,423,1.341,424,0.538,425,0.976,426,0.538,427,0.538,428,0.538,429,0.538,430,1.167,431,0.811,432,0.811,433,0.976,434,0.538,435,0.538,436,0.538,437,0.538,438,0.517,439,0.405,440,0.538,441,0.538,442,0.538,443,0.538,444,0.517,445,0.538,452,1.391,457,2.617,465,0.985,518,1.485,543,1.909,554,1.542,578,2.797,596,1.632,600,2.179,682,1.542,689,4.042,698,3.368,703,2.797,717,2.797,718,3.75,720,1.735,794,3.65,914,2.179,915,6.524,916,2.179,917,4.395,918,4.395,919,3.286,920,4.395,921,4.894,922,5.06,923,5.06,924,5.06,925,5.06,926,5.06,927,5.06,928,5.06,929,5.06,930,4.395,931,5.06,932,4.395,933,4.203,934,2.787,935,3.014,936,2.787,937,2.787,938,2.787,939,4.203,940,2.787,941,2.42,942,2.787,943,4.894,944,2.42,945,2.787,946,2.787,947,2.787,948,2.787,949,4.203,950,2.179,951,2.42,952,2.42,953,3.65,954,2.179,955,2.42,956,3.65,957,3.65,958,2.42,959,3.65,960,3.65,961,2.787,962,2.787,963,2.42,964,2.42,965,2.42,966,2.787,967,2.787,968,2.787,969,4.203,970,2.787,971,2.787,972,2.787,973,4.203,974,2.787,975,2.787,976,2.787,977,2.787,978,2.787,979,2.787,980,2.787,981,2.787,982,2.787,983,2.787,984,2.787,985,2.787,986,2.787,987,4.203,988,2.787,989,2.787,990,2.787,991,2.787,992,1.999,993,3.014]],["title/components/MeshLineConnectorComponent.html",[166,0.65,389,0.021]],["body/components/MeshLineConnectorComponent.html",[0,0.066,3,0.099,4,0.099,5,0.077,8,0.998,10,0.866,11,0.434,12,0.304,13,1.213,14,1.92,15,0.483,20,0.866,28,0.589,29,0.015,31,1.304,32,1.255,34,0.829,37,0.555,38,1.127,43,2.148,50,0.221,51,1.555,53,0.088,55,0.099,56,0.899,57,1.038,64,0.005,65,0.007,66,0.005,68,3.446,75,4.374,78,4.356,79,0.657,88,2.568,93,0.713,94,0.641,95,1.173,97,0.416,98,0.681,99,0.761,107,0.471,116,1.888,117,0.665,127,0.471,130,1.609,135,0.233,138,0.46,153,0.452,158,0.51,165,0.452,166,0.921,169,1.115,170,1.397,176,0.452,177,0.452,180,0.51,182,0.51,188,0.452,189,0.452,190,0.452,191,0.452,192,0.452,193,0.452,203,0.49,204,0.49,205,0.49,206,0.49,212,0.434,213,0.452,214,0.452,217,0.49,225,0.452,226,0.452,229,0.51,232,0.742,237,0.452,238,0.452,239,0.452,242,0.51,244,0.51,245,0.51,250,0.452,251,0.452,252,0.452,255,0.657,257,0.49,258,0.49,263,0.452,264,0.434,265,0.452,266,0.452,267,0.452,268,0.452,269,0.452,270,0.452,273,0.49,275,0.51,276,0.49,277,0.51,278,0.51,279,0.51,280,0.49,318,0.452,319,0.416,336,0.51,351,0.434,352,0.434,353,0.434,357,0.761,366,0.452,375,0.434,379,0.471,380,0.471,385,0.452,388,0.51,389,0.027,390,0.53,391,0.53,394,1.514,395,0.399,397,1.285,398,1.182,400,0.771,401,1.006,404,1.514,408,1.168,409,1.006,410,0.594,411,0.617,412,0.716,413,0.744,415,0.617,417,0.771,418,0.802,419,0.319,420,1.079,421,0.53,422,0.802,423,1.335,424,0.53,425,0.968,426,0.53,427,0.53,428,0.53,429,0.53,430,1.159,431,0.802,432,0.802,433,0.968,434,0.53,435,0.53,436,0.53,437,0.53,438,0.51,439,0.399,440,0.53,441,0.53,442,0.53,443,0.53,444,0.51,445,0.53,479,1.308,480,2.503,582,2.301,600,2.147,638,2.385,639,2.385,672,1.371,673,1.828,682,1.52,683,1.97,689,2.981,828,3.25,881,2.147,882,4.356,884,3.922,885,4.858,886,4.858,887,3.597,888,2.385,889,3.61,891,2.385,896,3.61,897,3.61,899,3.61,908,5.219,911,2.385,935,4.012,994,6.558,995,4.157,996,5.016,997,5.016,998,6.009,999,4.31,1000,6.009,1001,6.009,1002,4.157,1003,2.746,1004,4.157,1005,2.746,1006,2.746,1007,2.746,1008,2.746,1009,2.746,1010,2.746,1011,2.746,1012,2.746,1013,2.746,1014,5.593,1015,2.746,1016,6.009,1017,2.746,1018,2.147,1019,2.746,1020,2.746,1021,2.746,1022,4.157,1023,4.157,1024,4.157,1025,4.157,1026,4.157,1027,3.61,1028,4.157,1029,4.157,1030,4.157,1031,4.157,1032,4.157,1033,2.746,1034,2.746,1035,2.746,1036,2.746,1037,2.746,1038,2.746,1039,2.746,1040,2.746,1041,2.746,1042,2.746,1043,2.746,1044,2.746]],["title/components/ObjLoaderComponent.html",[250,0.65,389,0.021]],["body/components/ObjLoaderComponent.html",[0,0.068,3,0.102,4,0.102,5,0.179,8,1.014,10,0.887,11,0.448,12,0.313,13,1.242,15,0.494,16,0.926,20,0.887,28,0.641,29,0.015,31,0.821,32,0.79,34,0.755,37,0.471,38,0.637,41,3.247,50,0.218,51,1.277,53,0.09,55,0.102,56,0.921,57,1.187,64,0.005,65,0.008,66,0.005,71,1.886,79,0.673,88,2.26,93,0.73,94,0.661,95,1.187,97,0.645,98,0.741,99,0.862,107,0.486,117,0.686,127,0.486,135,0.24,138,0.471,153,0.467,158,0.526,165,0.467,166,0.467,169,0.526,170,0.759,176,0.467,177,0.467,180,0.526,182,0.526,188,0.467,189,0.467,190,0.467,191,0.467,192,0.467,193,0.467,203,0.506,204,0.506,205,0.506,206,0.506,212,0.448,213,0.467,214,0.467,217,0.506,225,0.467,226,0.467,229,0.526,232,0.759,237,0.467,238,0.467,239,0.467,242,0.526,244,0.526,245,0.526,250,0.936,251,0.467,252,0.467,255,0.673,257,1.269,258,0.506,263,0.467,264,0.448,265,0.467,266,0.467,267,0.467,268,0.467,269,0.467,270,0.467,273,0.506,275,0.526,276,0.506,277,0.526,278,0.526,279,0.526,280,0.506,310,2.994,318,0.467,319,0.43,336,0.526,351,0.448,352,0.448,353,0.448,357,0.775,366,0.467,375,0.448,379,0.486,380,0.486,385,0.467,388,0.526,389,0.033,390,0.547,391,0.547,394,1.538,395,0.412,397,1.288,398,1.184,400,0.79,401,1.221,404,1.538,408,1.196,409,1.03,410,0.613,411,0.637,412,0.739,413,0.767,415,0.956,417,0.79,418,0.821,419,0.329,420,1.096,421,0.547,422,0.821,423,1.347,424,0.547,425,0.986,426,0.547,427,0.547,428,0.547,429,0.547,430,1.175,431,0.821,432,0.821,433,0.986,434,0.547,435,0.547,436,0.547,437,0.547,438,0.526,439,0.412,440,0.547,441,0.547,442,0.547,443,0.547,444,0.526,445,0.547,465,1.001,479,0.892,487,2.581,682,1.568,857,2.65,875,1.764,1045,6.065,1046,2.032,1047,4.256,1048,4.256,1049,5.112,1050,4.256,1051,2.461,1052,3.997,1053,4.256,1054,4.588,1055,6.636,1056,3.666,1057,4.076,1058,4.935,1059,4.935,1060,4.256,1061,2.834,1062,6.091,1063,6.091,1064,6.091,1065,5.29,1066,6.091,1067,6.178,1068,3.697,1069,2.834,1070,4.439,1071,2.834,1072,2.834,1073,2.834,1074,4.256,1075,2.834,1076,2.834,1077,3.997,1078,2.834,1079,2.834,1080,2.834,1081,2.032,1082,2.834,1083,2.834,1084,5.112,1085,2.461,1086,2.834,1087,3.328,1088,4.443,1089,2.461,1090,2.834,1091,4.256,1092,2.834,1093,2.461,1094,2.216,1095,2.216,1096,2.461,1097,2.461,1098,2.834,1099,2.834,1100,2.834,1101,2.834,1102,2.834,1103,2.834,1104,2.834,1105,2.834,1106,2.834,1107,2.834,1108,2.216,1109,2.461]],["title/components/ObjectLoaderComponent.html",[251,0.65,389,0.021]],["body/components/ObjectLoaderComponent.html",[0,0.085,3,0.126,4,0.126,5,0.098,8,1.124,10,1.039,11,0.557,12,0.389,13,1.455,15,0.579,26,1.599,28,0.371,29,0.015,31,0.679,32,0.653,34,0.641,37,0.389,50,0.22,53,0.112,55,0.126,56,1.079,57,1.075,64,0.006,65,0.009,66,0.006,79,0.788,88,2.046,93,0.855,94,0.821,95,1.281,97,0.534,98,0.767,99,0.878,107,0.604,117,0.852,127,0.604,135,0.299,138,0.552,153,0.58,158,0.653,165,0.58,166,0.58,169,0.653,170,0.89,176,0.58,177,0.58,180,0.653,182,0.653,188,0.58,189,0.58,190,0.58,191,0.58,192,0.58,193,0.58,203,0.628,204,0.628,205,0.628,206,0.628,212,0.557,213,0.58,214,0.58,217,0.628,225,0.58,226,0.58,229,0.653,232,0.89,237,0.58,238,0.58,239,0.58,242,0.653,244,0.653,245,0.653,250,0.58,251,1.037,252,0.58,255,0.996,257,0.628,258,0.628,263,0.58,264,0.557,265,0.58,266,0.58,267,0.58,268,0.58,269,0.58,270,0.58,273,0.628,275,0.653,276,0.628,277,0.653,278,0.653,279,0.653,280,0.628,310,2.062,318,0.58,319,0.534,336,0.653,351,0.557,352,0.557,353,0.557,357,0.878,366,0.58,375,0.557,379,0.604,380,0.604,385,0.58,388,0.653,389,0.031,390,0.679,391,0.679,394,1.705,395,0.512,397,1.306,398,1.201,400,0.926,401,1.333,404,1.705,408,1.402,409,1.207,410,0.762,411,0.791,412,0.918,413,0.953,415,0.791,417,0.926,418,0.962,419,0.409,420,1.215,421,0.679,422,0.962,423,1.423,424,0.679,425,1.117,426,0.679,427,0.679,428,0.679,429,0.679,430,1.283,431,0.962,432,0.962,433,1.117,434,0.679,435,0.679,436,0.679,437,0.679,438,0.653,439,0.512,440,0.679,441,0.679,442,0.679,443,0.679,444,0.653,445,0.679,1046,2.525,1052,4.528,1054,4.952,1056,4.154,1057,4.518,1065,3.058,1067,3.058,1077,4.528,1087,2.753,1088,3.9,1108,2.753,1109,3.058,1110,5.471,1111,4.988,1112,4.988,1113,3.058,1114,4.988,1115,3.058,1116,3.521,1117,3.521,1118,3.521,1119,3.058,1120,3.521,1121,3.521,1122,3.521]],["title/components/OrbitControlsComponent.html",[177,0.65,389,0.021]],["body/components/OrbitControlsComponent.html",[0,0.082,3,0.122,4,0.122,5,0.095,8,1.108,10,1.016,11,0.539,12,0.377,15,0.566,20,1.016,28,0.513,29,0.015,31,0.941,32,0.905,34,0.727,37,0.539,38,1.095,50,0.209,51,1.278,53,0.109,55,0.122,56,0.738,57,0.633,64,0.006,65,0.009,66,0.006,79,0.771,93,0.836,94,0.795,95,1.268,97,0.739,98,0.799,99,0.739,107,0.585,117,0.826,127,0.585,135,0.289,153,0.562,158,0.633,165,0.562,166,0.562,169,0.633,170,0.87,176,0.562,177,1.023,180,1.152,182,0.633,188,0.562,189,0.562,190,0.562,191,0.562,192,0.562,193,0.562,203,0.608,204,0.608,205,0.608,206,0.608,212,0.539,213,0.562,214,0.562,217,0.608,225,0.562,226,0.562,229,0.633,232,0.87,237,0.562,238,0.562,239,0.562,242,0.633,244,0.633,245,0.633,250,0.562,251,0.562,252,0.562,255,0.539,257,0.608,258,0.608,263,0.562,264,0.539,265,0.562,266,0.562,267,0.562,268,0.562,269,0.562,270,0.562,273,0.608,275,0.633,276,0.608,277,0.633,278,0.633,279,0.633,280,0.608,318,0.562,319,0.517,336,0.633,351,0.539,352,0.539,353,0.539,354,3.422,357,0.863,366,0.562,375,0.539,379,0.585,380,0.585,385,0.562,388,0.633,389,0.03,390,0.658,391,0.658,395,0.496,397,1.303,398,1.198,400,0.905,401,1.317,413,0.923,415,0.766,417,0.905,418,0.941,419,0.396,420,1.198,421,0.658,422,0.941,423,1.413,424,0.658,425,1.098,426,0.658,427,0.658,428,0.658,429,0.658,430,1.267,431,0.941,432,0.941,433,1.098,434,0.658,435,0.658,436,0.658,437,0.658,438,0.633,439,0.496,440,0.658,441,0.658,442,0.658,443,0.658,444,0.633,445,0.658,452,1.702,457,3.035,465,1.205,518,1.723,554,1.888,596,1.998,698,3.787,703,3.245,717,3.245,718,4.132,720,2.123,914,2.667,916,2.667,917,4.942,918,4.942,919,3.812,920,4.942,921,5.393,930,4.942,932,4.942,941,2.962,943,4.234,944,4.234,950,3.812,951,2.962,952,2.962,953,4.234,954,2.667,955,2.962,956,4.234,957,4.234,958,2.962,959,4.234,960,4.234,963,2.962,964,2.962,965,2.962,992,2.446,993,3.497,1123,5.934,1124,3.41,1125,3.41]],["title/components/PerspectiveCameraComponent.html",[153,0.65,389,0.021]],["body/components/PerspectiveCameraComponent.html",[0,0.083,3,0.124,4,0.124,5,0.096,8,1.113,10,1.024,11,0.545,12,0.382,15,0.571,16,1.872,20,1.024,28,0.694,29,0.015,30,2.31,34,0.759,37,0.544,38,1.286,50,0.21,51,1.402,53,0.11,55,0.124,56,0.746,57,0.64,64,0.006,65,0.009,66,0.006,79,0.777,93,0.843,94,0.804,95,1.273,97,0.745,98,0.803,99,0.745,107,0.591,115,2.697,117,0.835,127,0.591,135,0.293,138,0.544,153,1.028,158,1.063,165,0.568,166,0.568,169,0.64,170,0.877,176,0.568,177,0.568,180,0.64,182,0.64,188,0.568,189,0.568,190,0.568,191,0.568,192,0.568,193,0.568,203,0.615,204,0.615,205,0.615,206,0.615,212,0.545,213,0.568,214,0.568,217,0.615,225,0.568,226,0.568,229,0.64,232,0.877,237,0.568,238,0.568,239,0.568,242,0.64,244,0.64,245,0.64,250,0.568,251,0.568,252,0.568,255,0.545,257,0.615,258,0.615,263,0.568,264,0.545,265,0.568,266,0.568,267,0.568,268,0.568,269,0.568,270,0.568,273,0.615,275,0.64,276,0.615,277,0.64,278,0.64,279,0.64,280,0.615,310,2.879,318,0.568,319,0.523,336,0.64,351,0.545,352,0.545,353,0.545,357,0.868,366,0.568,375,0.545,379,0.591,380,0.591,385,0.568,388,0.64,389,0.031,390,0.665,391,0.665,395,0.501,397,1.304,398,1.199,400,0.912,401,1.251,409,1.19,410,0.746,411,0.775,413,0.934,417,0.912,418,0.948,419,0.4,420,1.204,421,0.665,422,0.948,423,1.416,424,0.665,425,1.105,426,0.665,427,0.665,428,0.665,429,0.665,430,1.273,431,0.948,432,0.948,433,1.105,434,0.665,435,0.665,436,0.665,437,0.665,438,0.64,439,0.501,440,0.665,441,0.665,442,0.665,443,0.665,444,0.64,445,0.665,758,4.973,759,4.973,784,2.996,785,2.996,1126,6.129,1127,2.996,1128,4.731,1129,4.915,1130,3.565,1131,6.241,1132,4.915,1133,5.726,1134,4.915,1135,3.449,1136,3.449,1137,3.449,1138,4.915,1139,3.449,1140,4.973,1141,3.449,1142,3.449,1143,3.449,1144,2.697,1145,3.449,1146,3.449,1147,3.449,1148,3.449,1149,3.449]],["title/components/PlaneMeshComponent.html",[268,0.65,389,0.021]],["body/components/PlaneMeshComponent.html",[0,0.075,3,0.112,4,0.112,5,0.087,8,1.062,10,0.951,11,0.492,12,0.344,15,0.53,20,0.951,28,0.328,29,0.015,30,1.872,31,1.148,32,1.104,34,0.732,37,0.344,50,0.211,51,1.423,53,0.099,55,0.112,56,0.987,57,0.847,64,0.006,65,0.008,66,0.006,79,0.721,93,0.782,94,0.726,95,1.229,97,0.472,98,0.724,99,1.119,107,0.534,117,0.754,127,0.534,135,0.264,138,0.505,153,0.513,158,0.578,165,0.513,166,0.513,169,1.229,170,0.814,176,0.513,177,0.513,180,0.578,182,0.578,188,0.513,189,0.513,190,0.513,191,0.513,192,0.513,193,0.513,203,0.555,204,0.555,205,0.555,206,0.555,212,0.492,213,0.513,214,0.513,217,0.555,225,0.513,226,0.513,229,0.578,232,0.814,237,0.513,238,0.513,239,0.513,242,0.578,244,0.578,245,0.578,250,0.513,251,0.513,252,0.513,255,0.721,257,0.555,258,0.555,263,0.513,264,0.492,265,0.513,266,0.513,267,0.513,268,0.98,269,0.513,270,0.513,273,0.555,275,0.578,276,0.964,277,0.578,278,0.578,279,0.578,280,0.555,318,0.513,319,0.472,336,0.578,351,0.492,352,0.492,353,0.492,357,0.819,366,0.513,375,0.492,379,0.534,380,0.534,385,0.513,388,0.578,389,0.029,390,0.601,391,0.601,394,1.611,395,0.453,397,1.296,398,1.192,400,0.847,401,1.27,402,1.872,404,1.611,408,1.282,409,1.105,410,0.673,411,0.699,412,1.19,413,0.843,415,0.699,417,0.847,418,0.88,419,0.361,420,1.148,421,0.601,422,0.88,423,1.381,424,0.601,425,1.042,426,0.601,427,0.601,428,0.601,429,0.601,430,1.222,431,0.88,432,0.88,433,1.042,434,0.601,435,0.601,436,0.601,437,0.601,438,0.578,439,0.453,440,0.601,441,0.601,442,0.601,443,0.601,444,0.578,445,0.601,447,1.554,448,3.165,452,3.414,453,4.225,454,4.553,455,4.225,457,3.704,458,2.434,459,5.168,460,4.652,461,5.168,463,5.168,464,6.093,465,2.636,466,5.168,467,5.168,468,5.168,469,5.168,470,5.168,471,2.434,472,3.273,474,2.233,475,3.273,476,3.964,479,1.7,480,1.554,482,2.233,484,2.434,485,2.434,487,2.073,488,1.823,489,1.823,490,1.938,582,2.526,1150,5.941,1151,4.564,1152,3.113,1153,3.113]],["title/components/PointLightComponent.html",[239,0.65,389,0.021]],["body/components/PointLightComponent.html",[0,0.081,3,0.122,4,0.122,5,0.095,8,1.104,10,1.011,11,0.536,12,0.375,14,2.17,15,0.563,20,1.011,28,0.357,29,0.015,31,1.194,32,1.149,33,2.422,34,0.754,37,0.375,43,1.151,50,0.209,51,1.472,53,0.108,55,0.122,56,0.733,57,0.629,64,0.006,65,0.009,66,0.006,79,0.767,93,0.832,94,0.79,95,1.265,97,0.514,98,0.753,99,0.86,107,0.581,116,2.204,117,0.82,127,0.581,135,0.287,138,0.537,153,0.558,158,0.629,165,0.558,166,0.558,169,0.629,170,0.866,176,0.558,177,0.558,180,0.629,182,0.629,188,0.558,189,0.558,190,0.558,191,0.558,192,0.558,193,0.558,203,0.604,204,0.604,205,0.604,206,0.604,212,0.536,213,0.558,214,0.558,217,0.604,225,0.558,226,0.558,229,0.629,232,0.866,237,0.558,238,0.558,239,1.019,242,1.052,244,0.629,245,0.629,250,0.558,251,0.558,252,0.558,255,0.767,257,0.604,258,0.604,263,0.558,264,0.536,265,0.558,266,0.558,267,0.558,268,0.558,269,0.558,270,0.558,273,0.604,275,0.629,276,0.604,277,0.629,278,0.629,279,0.629,280,0.604,318,0.558,319,0.514,336,0.629,351,0.536,352,0.536,353,0.536,357,0.86,366,0.558,375,0.536,379,0.581,380,0.581,385,0.558,388,0.629,389,0.03,390,0.654,391,0.654,394,1.845,395,0.492,397,1.303,398,1.198,400,0.9,401,1.313,402,1.948,404,1.676,408,1.364,409,1.175,410,0.733,411,0.761,412,0.884,413,0.917,415,0.761,417,0.9,418,0.936,419,0.393,420,1.194,421,0.654,422,0.936,423,1.41,424,0.654,425,1.094,426,0.654,427,0.654,428,0.654,429,0.654,430,1.264,431,0.936,432,0.936,433,1.094,434,0.654,435,0.654,436,0.654,437,0.654,438,0.629,439,0.492,440,0.654,441,0.654,442,0.654,443,0.654,444,0.629,445,0.654,465,2.003,479,1.066,661,2.43,663,4.44,664,4.433,665,4.433,668,2.649,669,2.649,672,1.691,677,2.942,680,3.794,681,2.942,682,1.875,683,2.43,688,2.942,690,2.942,691,4.923,693,4.214,694,2.942,695,2.942,845,4.214,847,2.942,935,2.43,1154,6.097,1155,4.852,1156,4.923,1157,3.387,1158,3.387,1159,3.387,1160,3.387,1161,3.387,1162,3.387]],["title/pipes/Rad2DegPipe.html",[342,2.629,646,2.629]],["body/pipes/Rad2DegPipe.html",[0,0.137,3,0.204,4,0.204,5,0.159,15,0.66,28,0.599,29,0.015,30,2.444,34,0.629,37,0.629,50,0.181,53,0.181,55,0.204,64,0.01,65,0.012,66,0.01,71,3.785,97,0.862,98,0.891,99,0.862,342,4.546,395,0.827,415,1.278,518,2.009,578,3.785,646,4.546,647,4.447,650,4.939,653,5.932,654,5.932,655,6.926,656,5.932,657,4.939,659,4.939,1163,4.939,1164,6.83,1165,6.83,1166,5.687]],["title/directives/RaycasterCameraDirective.html",[351,0.624,419,0.459]],["body/directives/RaycasterCameraDirective.html",[0,0.133,3,0.199,4,0.199,5,0.155,12,0.613,15,0.781,28,0.583,29,0.014,34,0.744,37,0.613,38,1.51,50,0.231,53,0.177,55,0.199,64,0.01,65,0.012,66,0.01,88,2.376,93,1.153,97,0.84,98,0.674,99,0.84,351,1.063,354,3.773,357,1.02,359,3.974,395,0.806,397,0.876,398,0.977,419,0.643,439,0.806,518,2.376,519,3.613,522,4.166,594,4.333,596,3.938,601,3.688,1128,5.398,1130,4.506,1167,4.818,1168,4.813,1169,5.541,1170,5.541,1171,4.333,1172,5.541]],["title/directives/RaycasterEnableDirective.html",[352,0.624,419,0.459]],["body/directives/RaycasterEnableDirective.html",[0,0.136,3,0.203,4,0.203,5,0.158,12,0.626,15,0.79,28,0.595,29,0.014,34,0.753,37,0.626,38,1.529,50,0.217,53,0.18,55,0.203,64,0.01,65,0.012,66,0.01,88,1.998,93,1.167,97,0.858,98,0.688,99,0.858,352,1.076,354,3.747,357,1.032,359,4.056,395,0.822,397,0.894,398,0.989,419,0.657,439,0.822,518,2.405,519,3.645,522,4.195,601,3.764,702,4.53,1167,4.86,1173,4.912,1174,5.655,1175,5.655,1176,5.655,1177,5.655]],["title/directives/RaycasterGroupDirective.html",[353,0.624,419,0.459]],["body/directives/RaycasterGroupDirective.html",[0,0.096,3,0.143,4,0.143,5,0.111,12,0.441,15,0.631,17,3.489,24,3.011,28,0.7,29,0.015,34,0.856,37,0.813,38,1.704,46,3.857,50,0.212,52,5.198,53,0.127,55,0.143,57,1.149,64,0.007,65,0.01,66,0.007,71,2.655,76,2.336,79,1.051,81,3.901,88,2.83,93,0.933,97,0.605,98,0.485,99,0.605,255,0.631,257,1.104,353,0.86,354,3.495,357,1.15,359,2.861,394,1.8,395,0.58,397,0.631,398,0.966,412,1.04,419,0.463,439,0.58,479,1.711,518,1.922,519,3.089,522,3.68,594,3.119,596,3.186,599,3.119,601,2.655,604,4.724,697,3.853,704,4.139,1167,5.194,1178,3.464,1179,5.439,1180,4.425,1181,4.724,1182,4.724,1183,5.439,1184,5.439,1185,5.439,1186,5.439,1187,5.439,1188,6.648,1189,6.648,1190,6.648,1191,6.648,1192,4.84,1193,5.376,1194,5.376,1195,5.439,1196,3.989,1197,3.989,1198,3.989,1199,3.989,1200,3.989,1201,3.989,1202,3.989,1203,3.989,1204,3.989,1205,3.119,1206,6.189,1207,3.989,1208,6.189,1209,3.989,1210,5.376,1211,3.464,1212,3.989,1213,3.989,1214,3.989,1215,3.989,1216,3.989,1217,3.989,1218,3.989,1219,3.989,1220,3.989,1221,3.989,1222,3.989,1223,3.989]],["title/injectables/RaycasterService.html",[67,2.073,354,1.879]],["body/injectables/RaycasterService.html",[0,0.069,3,0.103,4,0.103,5,0.08,12,0.318,13,1.254,15,0.499,16,2.518,17,2.256,27,2.852,28,0.701,29,0.015,31,1.104,32,1.061,34,0.867,37,0.828,38,1.648,43,1.46,50,0.195,53,0.091,55,0.103,57,0.956,64,0.005,65,0.008,66,0.005,67,2.256,69,1.911,76,3.35,88,2.874,89,4.028,93,0.883,97,1.011,98,0.811,99,1.011,102,2.245,106,4.968,116,2.92,120,4.968,123,2.704,255,0.454,354,2.045,357,0.975,394,1.549,409,1.041,412,0.749,415,1.54,465,1.519,472,4.611,475,3.695,479,1.8,499,2.914,518,1.014,543,1.952,599,2.245,697,2.676,701,4.473,702,3.807,704,3.561,732,2.494,733,2.245,738,2.494,857,2.676,935,2.059,1128,4.611,1130,4.267,1144,3.361,1156,3.733,1171,2.245,1180,3.807,1205,2.245,1210,4.475,1211,2.494,1224,2.494,1225,5.72,1226,5.152,1227,4.298,1228,4.298,1229,4.298,1230,4.298,1231,4.298,1232,5.72,1233,5.72,1234,3.733,1235,5.72,1236,5.152,1237,4.298,1238,4.298,1239,2.871,1240,2.871,1241,2.871,1242,4.298,1243,2.871,1244,4.298,1245,4.473,1246,2.871,1247,4.298,1248,2.494,1249,2.871,1250,4.298,1251,2.871,1252,4.298,1253,2.871,1254,4.298,1255,5.152,1256,2.871,1257,2.871,1258,2.871,1259,3.733,1260,2.871,1261,2.871,1262,2.871,1263,2.871,1264,2.871,1265,4.298,1266,2.871,1267,4.298,1268,2.871,1269,2.871,1270,2.871,1271,2.871,1272,5.152,1273,2.871,1274,5.152,1275,2.871,1276,2.871,1277,2.871,1278,2.871,1279,2.871,1280,2.871,1281,2.871,1282,2.871,1283,2.871,1284,2.871,1285,5.152,1286,2.871,1287,2.871,1288,2.871,1289,2.871,1290,4.298,1291,5.152,1292,4.298,1293,4.298,1294,6.125,1295,4.298,1296,2.871,1297,2.494,1298,2.871,1299,2.871,1300,4.298,1301,4.298,1302,2.871,1303,2.871,1304,2.871,1305,3.733,1306,2.871,1307,2.871,1308,2.871,1309,2.871,1310,2.871,1311,2.871,1312,2.494,1313,4.298,1314,5.152,1315,2.871,1316,5.72,1317,4.298,1318,2.871,1319,2.871,1320,2.871]],["title/components/RendererCanvasComponent.html",[366,0.65,389,0.021]],["body/components/RendererCanvasComponent.html",[0,0.073,3,0.109,4,0.109,5,0.085,8,1.05,11,0.481,12,0.337,13,1.31,15,0.521,16,1.468,20,0.935,26,2.039,28,0.472,29,0.015,31,0.866,32,0.833,34,0.771,37,0.497,38,0.684,43,2.232,50,0.143,51,1.198,53,0.097,55,0.109,64,0.005,65,0.008,66,0.005,76,3.448,77,4.603,79,0.71,88,2.218,93,0.77,94,0.71,95,1.219,97,0.462,98,0.716,99,0.462,107,0.522,127,1.241,135,0.258,142,1.525,153,0.501,158,0.565,165,0.501,166,0.501,169,0.565,170,0.801,176,0.501,177,0.501,180,0.99,182,0.565,188,0.501,189,0.501,190,0.501,191,0.501,192,0.501,193,0.501,203,0.543,204,0.543,205,0.543,206,0.543,212,0.481,213,0.501,214,0.501,217,0.543,225,0.501,226,0.501,229,0.565,232,0.801,237,0.501,238,0.501,239,0.501,242,0.565,244,0.565,245,0.565,250,0.501,251,0.501,252,0.501,255,0.481,257,0.543,258,0.543,263,0.501,264,0.481,265,0.501,266,0.501,267,0.501,268,0.501,269,0.501,270,0.501,273,0.543,275,0.565,276,0.543,277,0.565,278,0.565,279,0.565,280,0.543,309,2.644,318,0.501,319,0.462,336,0.565,351,0.481,352,0.481,353,0.481,357,0.809,366,0.969,370,2.644,375,0.481,379,0.522,380,0.522,385,0.501,388,0.565,389,0.029,390,0.587,391,0.587,395,0.443,397,1.294,398,1.19,400,0.565,415,1.008,417,0.833,418,1.136,419,0.353,420,1.136,421,0.587,422,0.866,423,1.373,424,0.587,425,1.029,426,0.587,427,0.587,428,0.587,429,0.587,430,1.211,431,0.866,432,0.866,433,1.029,434,0.587,435,0.587,436,0.587,437,0.587,438,0.565,439,0.443,440,0.587,441,0.587,442,0.587,443,0.587,444,0.565,445,0.587,465,1.586,503,2.644,505,2.644,518,1.586,519,1.519,554,3.258,596,1.783,755,2.795,857,2.795,895,3.899,906,3.899,909,3.51,914,2.38,919,3.51,992,2.183,993,4.222,1182,3.899,1321,6.182,1322,2.644,1323,5.333,1324,5.451,1325,5.333,1326,4.489,1327,4.489,1328,5.333,1329,5.887,1330,4.632,1331,4.632,1332,4.489,1333,4.489,1334,5.333,1335,4.489,1336,3.044,1337,3.044,1338,3.044,1339,3.044,1340,3.044,1341,6.793,1342,4.489,1343,4.489,1344,3.044,1345,3.044,1346,3.044,1347,5.887,1348,4.489,1349,4.489,1350,4.489,1351,5.887,1352,4.489,1353,3.899,1354,4.489,1355,4.489,1356,4.489,1357,4.489,1358,4.489,1359,3.899,1360,3.899,1361,3.044,1362,3.044,1363,3.044,1364,3.044,1365,3.044,1366,3.044,1367,3.044,1368,3.044,1369,2.644,1370,2.644,1371,3.044,1372,2.644,1373,3.044,1374,3.044,1375,3.044,1376,3.044,1377,3.044,1378,3.044,1379,3.044,1380,3.044,1381,3.044,1382,3.044,1383,3.044,1384,4.489,1385,3.044,1386,3.044,1387,2.644]],["title/injectables/RendererService.html",[67,2.073,95,0.733]],["body/injectables/RendererService.html",[0,0.064,3,0.096,4,0.096,5,0.075,12,0.546,13,1.188,15,0.473,16,2.603,26,2.506,28,0.797,29,0.015,30,1.553,31,0.516,32,0.496,34,0.863,37,0.809,38,1.574,41,2.347,43,2.126,50,0.219,53,0.085,55,0.096,57,1.024,64,0.005,65,0.007,66,0.005,67,2.138,69,1.78,88,2.837,93,0.698,95,0.756,97,1.042,98,0.836,99,1.042,116,2.506,123,3.117,310,1.566,319,0.949,376,3.665,403,3.952,409,0.986,415,1.108,452,2.964,454,1.78,465,2.098,479,1.969,518,0.945,530,2.322,543,1.215,682,2.731,683,1.918,697,2.536,704,3.435,733,2.091,755,3.697,779,4.285,1128,4.487,1130,3.895,1140,4.285,1144,4.314,1171,2.091,1234,3.538,1245,5.479,1259,3.538,1305,4.285,1324,4.892,1330,5.824,1331,5.824,1369,4.285,1370,4.285,1372,6.275,1387,2.322,1388,2.322,1389,4.934,1390,5.65,1391,4.934,1392,4.285,1393,4.073,1394,4.073,1395,5.517,1396,5.517,1397,5.517,1398,4.073,1399,4.073,1400,4.073,1401,4.073,1402,4.073,1403,2.322,1404,4.073,1405,4.073,1406,7.124,1407,2.674,1408,4.073,1409,2.674,1410,2.674,1411,2.674,1412,2.674,1413,4.073,1414,2.674,1415,2.674,1416,4.073,1417,2.674,1418,2.674,1419,4.073,1420,2.674,1421,2.674,1422,4.073,1423,2.674,1424,4.073,1425,2.674,1426,2.674,1427,4.934,1428,2.674,1429,2.674,1430,2.674,1431,2.674,1432,2.674,1433,2.674,1434,4.934,1435,2.674,1436,2.674,1437,2.674,1438,4.073,1439,2.674,1440,2.674,1441,2.674,1442,4.073,1443,4.073,1444,2.674,1445,5.938,1446,2.674,1447,2.674,1448,2.674,1449,2.674,1450,2.674,1451,2.322,1452,2.322,1453,2.674,1454,2.674,1455,2.674,1456,2.674,1457,2.674,1458,5.517,1459,2.674,1460,2.674,1461,2.674,1462,2.674,1463,2.674,1464,2.674,1465,2.674,1466,2.674,1467,2.674,1468,2.674,1469,2.674,1470,2.674,1471,2.674,1472,2.674,1473,2.674,1474,4.073,1475,4.073,1476,2.674,1477,2.674,1478,2.674,1479,4.073,1480,2.674,1481,2.674,1482,2.674,1483,2.674,1484,2.674,1485,2.674,1486,2.674,1487,2.674,1488,2.674,1489,2.674,1490,2.674,1491,2.674,1492,2.674,1493,2.674,1494,2.674,1495,2.674,1496,2.674,1497,2.674]],["title/components/SVGLoaderComponent.html",[252,0.65,389,0.021]],["body/components/SVGLoaderComponent.html",[0,0.073,3,0.109,4,0.109,5,0.085,8,1.05,10,0.934,11,0.481,12,0.336,13,1.309,15,0.521,20,0.934,28,0.691,29,0.015,30,2.309,31,1.211,32,1.26,34,0.812,37,0.496,38,0.683,43,1.999,50,0.227,51,1.525,53,0.097,55,0.109,56,0.97,57,1.092,64,0.005,65,0.008,66,0.005,79,0.709,88,2.32,93,0.769,94,0.709,95,1.218,97,0.68,98,0.764,99,0.892,107,0.521,117,0.736,123,1.596,127,0.521,135,0.258,138,0.496,153,0.501,158,0.564,165,0.501,166,0.501,169,0.564,170,0.8,176,0.501,177,0.501,180,0.564,182,0.564,188,0.501,189,0.501,190,0.501,191,0.501,192,0.501,193,0.501,196,2.378,197,2.024,203,0.543,204,0.543,205,0.543,206,0.543,212,0.481,213,0.501,214,0.501,217,0.543,225,0.501,226,0.501,229,0.564,232,0.8,237,0.501,238,0.501,239,0.501,242,0.564,244,0.564,245,0.564,250,0.501,251,0.501,252,0.969,255,0.709,257,0.543,258,0.951,263,0.501,264,0.481,265,0.501,266,0.501,267,0.501,268,0.501,269,0.501,270,0.501,273,0.543,275,0.564,276,0.543,277,0.564,278,0.564,279,0.564,280,0.543,310,2.628,318,0.501,319,0.461,336,0.564,351,0.481,352,0.481,353,0.481,357,0.808,366,0.501,375,0.481,379,0.521,380,0.521,385,0.501,388,0.564,389,0.028,390,0.587,391,0.587,394,1.593,395,0.442,397,1.294,398,1.19,400,0.832,401,1.258,404,1.593,408,1.261,409,1.086,410,0.658,411,0.683,412,0.793,413,0.823,415,1.008,417,0.832,418,0.865,419,0.353,420,1.135,421,0.587,422,0.865,423,1.373,424,0.587,425,1.028,426,0.587,427,0.587,428,0.587,429,0.587,430,1.211,431,0.865,432,0.865,433,1.028,434,0.587,435,0.587,436,0.587,437,0.587,438,0.564,439,0.442,440,0.587,441,0.587,442,0.587,443,0.587,444,0.564,445,0.587,479,1.411,487,2.421,606,2.641,672,1.518,857,2.793,875,1.893,999,3.823,1046,2.181,1052,4.168,1054,4.709,1056,3.823,1057,4.22,1068,2.641,1077,2.378,1087,2.378,1088,2.378,1108,2.378,1113,2.641,1115,2.641,1180,2.024,1498,6.45,1499,4.486,1500,5.33,1501,4.629,1502,5.33,1503,5.33,1504,6.275,1505,4.486,1506,3.041,1507,3.041,1508,3.508,1509,3.041,1510,3.041,1511,3.041,1512,3.041,1513,3.041,1514,5.33,1515,3.041,1516,3.041,1517,2.181,1518,2.181,1519,2.641,1520,2.378,1521,3.041,1522,2.641,1523,4.486,1524,3.041,1525,2.641,1526,3.041,1527,3.041]],["title/components/SceneComponent.html",[319,0.599,389,0.021]],["body/components/SceneComponent.html",[0,0.081,3,0.121,4,0.121,5,0.094,8,1.103,10,1.009,11,0.534,12,0.374,14,1.294,15,0.562,16,1.851,20,1.009,28,0.51,29,0.015,31,0.652,32,0.627,33,2.418,34,0.724,37,0.626,38,1.088,43,1.148,50,0.217,51,1.088,53,0.108,55,0.121,56,0.731,57,1.051,64,0.006,65,0.009,66,0.006,79,0.766,93,0.831,94,0.788,95,1.264,97,0.735,98,0.797,99,0.938,107,0.58,116,1.535,117,0.818,127,0.58,130,1.98,135,0.287,138,0.536,153,0.557,158,0.627,165,0.557,166,0.557,169,0.627,170,0.864,176,0.557,177,0.557,180,0.627,182,0.627,188,0.557,189,0.557,190,0.557,191,0.557,192,0.557,193,0.557,203,0.603,204,0.603,205,0.603,206,0.603,212,0.534,213,0.557,214,0.557,217,0.603,225,0.557,226,0.557,229,0.627,232,0.864,237,0.557,238,0.557,239,0.557,242,0.627,244,0.627,245,0.627,250,0.557,251,0.557,252,0.557,255,0.766,257,0.603,258,0.603,263,0.557,264,0.534,265,0.557,266,0.557,267,0.557,268,0.557,269,0.557,270,0.557,273,0.603,275,0.627,276,0.603,277,0.627,278,0.627,279,0.627,280,0.603,318,0.557,319,0.938,336,0.627,351,0.534,352,0.534,353,0.534,357,0.859,366,0.557,375,0.534,379,0.58,380,0.58,385,0.557,388,0.627,389,0.03,390,0.652,391,0.652,394,1.844,395,0.491,397,1.303,398,1.198,400,0.899,401,1.439,402,1.946,404,1.772,408,1.361,409,1.173,410,0.731,411,0.759,412,0.882,413,0.915,415,1.088,417,0.899,418,0.935,419,0.562,420,1.193,421,0.652,422,0.935,423,1.409,424,0.652,425,1.092,426,0.652,427,0.652,428,0.652,429,0.652,430,1.263,431,0.935,432,0.935,433,1.092,434,0.652,435,0.652,436,0.652,437,0.652,438,0.627,439,0.491,440,0.652,441,0.652,442,0.652,443,0.652,444,0.627,445,0.652,479,1.063,518,1.712,672,1.687,673,2.25,682,1.871,698,3.768,703,3.224,717,3.224,718,4.116,720,3.016,739,4.917,741,2.643,755,4.075,771,4.917,954,2.643,1528,2.936,1529,4.844,1530,6.184,1531,5.662,1532,4.844,1533,3.38,1534,3.38,1535,3.38,1536,3.38,1537,3.38,1538,4.844,1539,3.38,1540,3.38,1541,3.38,1542,3.38,1543,3.38]],["title/components/ServerBarrelActorComponent.html",[189,0.65,389,0.021]],["body/components/ServerBarrelActorComponent.html",[0,0.083,1,4.253,3,0.125,4,0.125,5,0.097,6,1.823,8,1.262,10,1.029,11,0.781,12,0.384,13,1.441,14,1.89,15,0.573,16,2.247,17,3.017,18,3.367,19,3.367,20,1.029,21,2.893,22,3.075,23,3.075,24,2.734,25,2.893,26,2.243,27,2.734,28,0.723,29,0.014,30,1.093,31,0.953,32,0.916,33,1.733,34,0.835,37,0.692,38,1.291,41,2.349,43,1.18,46,3.017,50,0.183,53,0.111,55,0.125,56,0.751,64,0.006,65,0.009,66,0.006,79,0.781,98,0.699,107,0.595,127,0.595,135,0.295,138,0.546,153,0.572,158,0.644,165,0.572,166,0.572,169,0.644,170,0.881,176,0.572,177,0.572,180,0.644,182,0.644,188,0.572,189,1.031,190,0.572,191,0.572,192,0.572,193,0.572,203,1.117,204,0.62,205,0.62,206,0.62,212,0.549,213,0.572,214,0.572,217,0.62,225,0.572,226,0.572,229,0.644,232,0.881,237,0.572,238,0.572,239,0.572,242,0.644,244,0.644,245,0.644,250,0.572,251,0.572,252,0.572,255,0.549,257,0.62,258,0.62,263,0.572,264,0.549,265,0.572,266,0.572,267,0.572,268,0.572,269,0.572,270,0.572,273,0.62,275,0.644,276,0.62,277,0.644,278,0.644,279,0.644,280,0.62,318,0.572,319,0.527,336,0.644,351,0.549,352,0.549,353,0.549,357,0.872,366,0.572,375,0.549,379,0.595,380,0.595,385,0.572,388,0.644,389,0.031,390,0.67,391,0.67,395,0.505,397,1.305,398,1.2,400,0.916,401,0.99,402,1.808,410,0.751,411,0.78,417,0.916,418,0.953,419,0.403,420,1.208,421,0.67,422,0.953,423,1.419,424,0.67,425,1.109,426,0.67,427,0.67,428,0.67,429,0.67,430,1.276,431,0.953,432,0.953,433,1.109,434,0.67,435,0.67,436,0.67,437,0.67,438,1.162,439,0.505,440,0.67,441,0.67,442,0.67,443,0.67,444,0.644,445,0.67,499,1.652,501,4.419,502,2.034,853,2.034,1544,2.311,1545,4.939,1546,2.311,1547,2.311,1548,2.311,1549,2.311,1550,2.311,1551,2.311,1552,2.311,1553,2.311,1554,2.311,1555,2.311]],["title/components/ServerCompactActorComponent.html",[190,0.65,389,0.021]],["body/components/ServerCompactActorComponent.html",[0,0.083,1,4.253,3,0.125,4,0.125,5,0.097,6,1.823,8,1.262,10,1.029,11,0.781,12,0.384,13,1.441,14,1.89,15,0.573,16,2.247,17,3.017,18,3.367,19,3.367,20,1.029,21,2.893,22,3.075,23,3.075,24,2.734,25,2.893,26,2.243,27,2.734,28,0.723,29,0.014,30,1.093,31,0.953,32,0.916,33,1.733,34,0.835,37,0.692,38,1.291,41,2.349,43,1.18,46,3.017,50,0.183,53,0.111,55,0.125,56,0.751,64,0.006,65,0.009,66,0.006,79,0.781,98,0.699,107,0.595,127,0.595,135,0.295,138,0.546,153,0.572,158,0.644,165,0.572,166,0.572,169,0.644,170,0.881,176,0.572,177,0.572,180,0.644,182,0.644,188,0.572,189,0.572,190,1.031,191,0.572,192,0.572,193,0.572,203,0.62,204,0.62,205,1.117,206,0.62,212,0.549,213,0.572,214,0.572,217,0.62,225,0.572,226,0.572,229,0.644,232,0.881,237,0.572,238,0.572,239,0.572,242,0.644,244,0.644,245,0.644,250,0.572,251,0.572,252,0.572,255,0.549,257,0.62,258,0.62,263,0.572,264,0.549,265,0.572,266,0.572,267,0.572,268,0.572,269,0.572,270,0.572,273,0.62,275,0.644,276,0.62,277,0.644,278,0.644,279,0.644,280,0.62,318,0.572,319,0.527,336,0.644,351,0.549,352,0.549,353,0.549,357,0.872,366,0.572,375,0.549,379,0.595,380,0.595,385,0.572,388,0.644,389,0.031,390,0.67,391,0.67,395,0.505,397,1.305,398,1.2,400,0.916,401,0.99,402,1.808,410,0.751,411,0.78,417,0.916,418,0.953,419,0.403,420,1.208,421,0.67,422,0.953,423,1.419,424,0.67,425,1.109,426,0.67,427,0.67,428,0.67,429,0.67,430,1.276,431,0.953,432,0.953,433,1.109,434,0.67,435,0.67,436,0.67,437,0.67,438,1.162,439,0.505,440,0.67,441,0.67,442,0.67,443,0.67,444,0.644,445,0.67,499,1.652,501,4.419,502,2.034,853,2.034,1544,2.311,1546,2.311,1547,2.311,1548,2.311,1549,2.311,1550,2.311,1551,2.311,1552,2.311,1553,2.311,1554,2.311,1555,2.311,1556,4.939]],["title/components/ServerIconActorComponent.html",[191,0.65,389,0.021]],["body/components/ServerIconActorComponent.html",[0,0.083,1,4.253,3,0.125,4,0.125,5,0.097,6,1.823,8,1.262,10,1.029,11,0.781,12,0.384,13,1.441,14,1.89,15,0.573,16,2.247,17,3.017,18,3.367,19,3.367,20,1.029,21,2.893,22,3.075,23,3.075,24,2.734,25,2.893,26,2.243,27,2.734,28,0.723,29,0.014,30,1.093,31,0.953,32,0.916,33,1.733,34,0.835,37,0.692,38,1.291,41,2.349,43,1.18,46,3.017,50,0.183,53,0.111,55,0.125,56,0.751,64,0.006,65,0.009,66,0.006,79,0.781,98,0.699,107,0.595,127,0.595,135,0.295,138,0.546,153,0.572,158,0.644,165,0.572,166,0.572,169,0.644,170,0.881,176,0.572,177,0.572,180,0.644,182,0.644,188,0.572,189,0.572,190,0.572,191,1.031,192,0.572,193,0.572,203,0.62,204,0.62,205,0.62,206,1.117,212,0.549,213,0.572,214,0.572,217,0.62,225,0.572,226,0.572,229,0.644,232,0.881,237,0.572,238,0.572,239,0.572,242,0.644,244,0.644,245,0.644,250,0.572,251,0.572,252,0.572,255,0.549,257,0.62,258,0.62,263,0.572,264,0.549,265,0.572,266,0.572,267,0.572,268,0.572,269,0.572,270,0.572,273,0.62,275,0.644,276,0.62,277,0.644,278,0.644,279,0.644,280,0.62,318,0.572,319,0.527,336,0.644,351,0.549,352,0.549,353,0.549,357,0.872,366,0.572,375,0.549,379,0.595,380,0.595,385,0.572,388,0.644,389,0.031,390,0.67,391,0.67,395,0.505,397,1.305,398,1.2,400,0.916,401,0.99,402,1.808,410,0.751,411,0.78,417,0.916,418,0.953,419,0.403,420,1.208,421,0.67,422,0.953,423,1.419,424,0.67,425,1.109,426,0.67,427,0.67,428,0.67,429,0.67,430,1.276,431,0.953,432,0.953,433,1.109,434,0.67,435,0.67,436,0.67,437,0.67,438,1.162,439,0.505,440,0.67,441,0.67,442,0.67,443,0.67,444,0.644,445,0.67,499,1.652,501,4.419,502,2.034,853,2.034,1544,2.311,1546,2.311,1547,2.311,1548,2.311,1549,2.311,1550,2.311,1551,2.311,1552,2.311,1553,2.311,1554,2.311,1555,2.311,1557,4.939]],["title/components/ServerStandActorComponent.html",[192,0.65,389,0.021]],["body/components/ServerStandActorComponent.html",[0,0.083,1,4.253,3,0.125,4,0.125,5,0.097,6,1.823,8,1.262,10,1.029,11,0.781,12,0.384,13,1.441,14,1.89,15,0.573,16,2.247,17,3.017,18,3.367,19,3.367,20,1.029,21,2.893,22,3.075,23,3.075,24,2.734,25,2.893,26,2.243,27,2.734,28,0.723,29,0.014,30,1.093,31,0.953,32,0.916,33,1.733,34,0.835,37,0.692,38,1.291,41,2.349,43,1.18,46,3.017,50,0.183,53,0.111,55,0.125,56,0.751,64,0.006,65,0.009,66,0.006,79,0.781,98,0.699,107,0.595,127,0.595,135,0.295,138,0.546,153,0.572,158,0.644,165,0.572,166,0.572,169,0.644,170,0.881,176,0.572,177,0.572,180,0.644,182,0.644,188,0.572,189,0.572,190,0.572,191,0.572,192,1.031,193,0.572,203,0.62,204,1.117,205,0.62,206,0.62,212,0.549,213,0.572,214,0.572,217,0.62,225,0.572,226,0.572,229,0.644,232,0.881,237,0.572,238,0.572,239,0.572,242,0.644,244,0.644,245,0.644,250,0.572,251,0.572,252,0.572,255,0.549,257,0.62,258,0.62,263,0.572,264,0.549,265,0.572,266,0.572,267,0.572,268,0.572,269,0.572,270,0.572,273,0.62,275,0.644,276,0.62,277,0.644,278,0.644,279,0.644,280,0.62,318,0.572,319,0.527,336,0.644,351,0.549,352,0.549,353,0.549,357,0.872,366,0.572,375,0.549,379,0.595,380,0.595,385,0.572,388,0.644,389,0.031,390,0.67,391,0.67,395,0.505,397,1.305,398,1.2,400,0.916,401,0.99,402,1.808,410,0.751,411,0.78,417,0.916,418,0.953,419,0.403,420,1.208,421,0.67,422,0.953,423,1.419,424,0.67,425,1.109,426,0.67,427,0.67,428,0.67,429,0.67,430,1.276,431,0.953,432,0.953,433,1.109,434,0.67,435,0.67,436,0.67,437,0.67,438,1.162,439,0.505,440,0.67,441,0.67,442,0.67,443,0.67,444,0.644,445,0.67,499,1.652,501,4.419,502,2.034,853,2.034,1544,2.311,1546,2.311,1547,2.311,1548,2.311,1549,2.311,1550,2.311,1551,2.311,1552,2.311,1553,2.311,1554,2.311,1555,2.311,1558,4.939]],["title/components/SphereMeshComponent.html",[269,0.65,389,0.021]],["body/components/SphereMeshComponent.html",[0,0.084,3,0.125,4,0.125,5,0.097,8,1.12,10,1.033,11,0.552,12,0.386,15,0.576,20,1.033,28,0.661,29,0.015,30,2.167,34,0.733,37,0.386,50,0.219,51,1.41,53,0.111,55,0.125,56,1.073,57,0.92,64,0.006,65,0.009,66,0.006,79,0.784,93,0.85,94,0.815,95,1.278,97,0.53,98,0.764,99,0.874,107,0.599,117,0.846,127,0.599,135,0.296,138,0.549,153,0.575,158,0.648,165,0.575,166,0.575,169,1.278,170,0.885,176,0.575,177,0.575,180,0.648,182,0.648,188,0.575,189,0.575,190,0.575,191,0.575,192,0.575,193,0.575,203,0.623,204,0.623,205,0.623,206,0.623,212,0.552,213,0.575,214,0.575,217,0.623,225,0.575,226,0.575,229,0.648,232,0.885,237,0.575,238,0.575,239,0.575,242,0.648,244,0.648,245,0.648,250,0.575,251,0.575,252,0.575,255,0.784,257,0.623,258,0.623,263,0.575,264,0.552,265,0.575,266,0.575,267,0.575,268,0.575,269,1.034,270,0.575,273,0.623,275,0.648,276,0.623,277,1.07,278,0.648,279,0.648,280,0.623,318,0.575,319,0.53,336,0.648,351,0.552,352,0.552,353,0.552,357,0.874,366,0.575,375,0.552,379,0.599,380,0.599,385,0.575,388,0.648,389,0.031,390,0.674,391,0.674,394,1.699,395,0.508,397,1.305,398,1.2,400,0.92,401,1.329,402,1.975,404,1.699,408,1.394,409,1.201,410,0.756,411,0.785,412,1.293,413,0.946,415,0.785,417,0.92,418,0.957,419,0.405,420,1.211,421,0.674,422,0.957,423,1.421,424,0.674,425,1.112,426,0.674,427,0.674,428,0.674,429,0.674,430,1.279,431,0.957,432,0.957,433,1.112,434,0.674,435,0.674,436,0.674,437,0.674,438,0.648,439,0.508,440,0.674,441,0.674,442,0.674,443,0.674,444,0.648,445,0.674,447,1.743,448,3.377,455,4.508,479,1.814,480,1.743,484,2.731,487,2.253,488,2.046,489,2.046,490,2.174,525,2.325,575,3.034,582,2.745,1559,5.981,1560,4.959,1561,5.766,1562,5.008,1563,4.307,1564,3.493,1565,3.493,1566,3.493,1567,3.493]],["title/directives/StatsAutoShowDirective.html",[375,0.624,419,0.459]],["body/directives/StatsAutoShowDirective.html",[0,0.134,3,0.201,4,0.201,5,0.156,12,0.62,15,0.786,28,0.59,29,0.014,34,0.749,37,0.62,38,1.521,50,0.216,53,0.179,55,0.201,64,0.01,65,0.012,66,0.01,88,1.98,93,1.161,97,0.85,98,0.682,99,0.85,375,1.07,376,4.603,378,4.866,379,1.161,380,1.326,395,0.814,397,0.886,398,0.984,419,0.65,439,0.814,444,1.256,518,2.392,519,3.63,522,4.182,601,3.729,1403,4.866,1568,6.317,1569,4.866,1570,5.603,1571,5.603,1572,5.603]],["title/injectables/StatsService.html",[67,2.073,376,2.313]],["body/injectables/StatsService.html",[0,0.117,3,0.175,4,0.175,5,0.136,12,0.541,13,1.815,15,0.722,16,2.63,28,0.515,29,0.015,34,0.854,37,0.822,38,1.707,50,0.198,53,0.156,55,0.175,64,0.009,65,0.011,66,0.009,67,3.265,69,3.254,76,2.864,88,2.417,93,1.173,376,3.643,379,1.324,518,1.728,531,6.254,697,3.873,704,4.483,1097,6.254,1297,5.402,1573,4.246,1574,7.2,1575,7.2,1576,6.22,1577,4.889,1578,4.889,1579,4.889,1580,4.889,1581,4.889,1582,4.889,1583,4.889,1584,4.889,1585,4.889,1586,4.889,1587,4.889,1588,7.599,1589,4.889,1590,6.22,1591,4.889,1592,4.889,1593,4.889,1594,4.889]],["title/components/TextMeshComponent.html",[385,0.65,389,0.021]],["body/components/TextMeshComponent.html",[0,0.06,3,0.089,4,0.089,5,0.069,8,0.946,10,0.801,11,0.392,12,0.274,13,1.122,14,0.95,15,0.446,16,1.54,20,0.801,28,0.667,29,0.015,30,1.806,31,1.43,32,1.376,34,0.861,37,0.587,38,0.864,41,2.731,43,2.224,50,0.202,51,1.679,53,0.079,55,0.089,56,0.832,57,0.984,64,0.004,65,0.007,66,0.004,79,0.608,88,2.146,93,0.659,94,0.579,95,1.127,97,0.714,98,0.739,99,0.871,107,0.425,116,1.747,117,0.601,123,2.019,127,0.425,135,0.211,138,0.425,153,0.409,158,0.46,165,0.409,166,0.409,169,0.984,170,0.686,176,0.409,177,0.409,180,0.46,182,0.46,188,0.409,189,0.409,190,0.409,191,0.409,192,0.409,193,0.409,197,1.651,203,0.443,204,0.443,205,0.443,206,0.443,212,0.392,213,0.409,214,0.409,217,0.443,225,0.409,226,0.409,229,0.46,232,0.686,237,0.409,238,0.409,239,0.409,242,0.46,244,0.46,245,0.46,250,0.409,251,0.409,252,0.409,255,0.744,257,0.443,258,0.443,263,0.409,264,0.392,265,0.409,266,0.409,267,0.409,268,0.409,269,0.409,270,0.409,273,0.443,275,0.46,276,0.443,277,0.46,278,0.46,279,0.46,280,0.443,318,0.409,319,0.376,336,0.46,351,0.392,352,0.392,353,0.392,357,0.714,366,0.409,375,0.392,379,0.425,380,0.425,385,0.874,388,1.318,389,0.025,390,0.479,391,0.479,394,1.436,395,0.361,397,1.275,398,1.173,400,0.714,401,1.151,403,3.531,404,1.436,408,1.081,409,0.931,410,0.537,411,0.557,412,1.003,413,0.672,415,1.192,417,0.714,418,0.742,419,0.288,420,1.023,421,0.479,422,0.742,423,1.297,424,0.479,425,0.909,426,0.479,427,0.479,428,0.479,429,0.479,430,1.107,431,0.742,432,0.742,433,0.909,434,0.479,435,0.479,436,0.479,437,0.479,438,0.46,439,0.361,440,0.479,441,0.479,442,0.479,443,0.479,444,0.46,445,0.479,447,1.238,452,2.648,465,1.359,479,1.669,480,1.238,482,1.78,487,2.608,488,1.453,489,1.453,543,1.747,573,2.155,577,2.758,580,2.155,625,3.007,664,3.682,680,1.94,689,3.805,742,2.155,764,2.758,831,2.155,857,2.394,875,2.394,887,4.695,999,3.378,1027,2.155,1054,1.78,1056,3.378,1057,3.805,1089,2.155,1501,4.09,1508,3.007,1517,1.78,1518,1.78,1519,2.155,1525,3.34,1563,2.155,1595,6.785,1596,4.709,1597,3.846,1598,4.709,1599,4.709,1600,5.305,1601,5.305,1602,5.305,1603,5.305,1604,5.305,1605,5.305,1606,5.305,1607,4.709,1608,4.709,1609,3.846,1610,2.481,1611,2.481,1612,2.481,1613,2.481,1614,2.481,1615,2.481,1616,2.481,1617,2.481,1618,3.846,1619,2.481,1620,3.846,1621,2.481,1622,2.481,1623,2.481,1624,3.846,1625,2.481,1626,2.481,1627,3.846,1628,3.846,1629,2.481,1630,2.481,1631,2.481,1632,2.481,1633,2.481,1634,2.481,1635,2.481,1636,2.481,1637,3.846,1638,2.481,1639,3.846,1640,2.481,1641,2.481,1642,2.481,1643,2.481,1644,2.481,1645,4.709,1646,2.481,1647,2.481,1648,2.481,1649,2.481,1650,2.481,1651,3.846,1652,2.481,1653,2.481,1654,2.481,1655,2.481,1656,2.481,1657,2.481]],["title/components/TorusMeshComponent.html",[270,0.65,389,0.021]],["body/components/TorusMeshComponent.html",[0,0.078,3,0.116,4,0.116,5,0.09,8,1.08,10,0.976,11,0.51,12,0.357,15,0.544,20,0.976,28,0.581,29,0.015,30,1.905,31,1.168,32,1.123,34,0.765,37,0.357,50,0.214,51,1.506,53,0.103,55,0.116,56,1.014,57,0.87,64,0.006,65,0.008,66,0.006,79,0.741,93,0.804,94,0.753,95,1.244,97,0.49,98,0.737,99,0.837,107,0.554,117,0.782,127,0.554,135,0.274,138,0.518,153,0.532,158,0.599,165,0.532,166,0.532,169,1.244,170,0.836,176,0.532,177,0.532,180,0.599,182,0.599,188,0.532,189,0.532,190,0.532,191,0.532,192,0.532,193,0.532,197,4.029,203,0.576,204,0.576,205,0.576,206,0.576,212,0.51,213,0.532,214,0.532,217,0.576,225,0.532,226,0.532,229,0.599,232,0.836,237,0.532,238,0.532,239,0.532,242,0.599,244,0.599,245,0.599,250,0.532,251,0.532,252,0.532,255,0.741,257,0.576,258,0.576,263,0.532,264,0.51,265,0.532,266,0.532,267,0.532,268,0.532,269,0.532,270,0.997,273,0.576,275,0.599,276,0.576,277,0.599,278,1.284,279,0.599,280,0.576,318,0.532,319,0.49,336,0.599,351,0.51,352,0.51,353,0.51,357,0.837,366,0.532,375,0.51,379,0.554,380,0.554,385,0.532,388,0.599,389,0.029,390,0.623,391,0.623,394,1.639,395,0.469,397,1.299,398,1.194,400,0.87,401,1.289,402,1.905,404,1.639,408,1.317,409,1.135,410,0.699,411,0.725,412,1.222,413,0.874,415,0.725,417,0.87,418,0.904,419,0.375,420,1.168,421,0.623,422,0.904,423,1.394,424,0.623,425,1.064,426,0.623,427,0.623,428,0.623,429,0.623,430,1.24,431,0.904,432,0.904,433,1.064,434,0.623,435,0.623,436,0.623,437,0.623,438,0.599,439,0.469,440,0.623,441,0.623,442,0.623,443,0.623,444,0.599,445,0.623,447,1.612,448,3.232,465,2.139,479,1.736,480,1.612,487,2.129,488,1.891,489,1.891,490,2.01,524,2.525,526,2.804,543,2.129,567,4.792,572,2.804,574,2.804,576,3.362,578,3.119,582,2.594,587,4.071,1562,6.009,1658,6.156,1659,4.687,1660,5.518,1661,6.919,1662,5.518,1663,4.687,1664,4.687,1665,4.687,1666,3.229,1667,3.229,1668,4.687,1669,4.687,1670,3.229]],["title/components/WorkstationActorComponent.html",[193,0.65,389,0.021]],["body/components/WorkstationActorComponent.html",[0,0.083,1,4.248,3,0.124,4,0.124,5,0.096,6,2.58,8,1.177,10,1.024,11,0.777,12,0.382,13,1.434,14,1.881,15,0.571,16,2.242,17,3.005,18,3.354,19,3.354,20,1.024,21,2.879,22,3.06,23,3.06,24,2.72,25,2.879,26,2.233,27,2.72,28,0.722,29,0.014,30,1.085,31,0.948,32,0.912,33,1.722,34,0.842,37,0.69,38,1.286,41,2.338,43,1.172,46,3.005,50,0.182,51,1.104,53,0.11,55,0.124,56,0.746,64,0.006,65,0.009,66,0.006,79,0.777,98,0.697,107,0.591,127,0.591,135,0.293,138,0.544,153,0.568,158,0.64,165,0.568,166,0.568,169,0.64,170,0.877,176,0.568,177,0.568,180,0.64,182,0.64,188,0.568,189,0.568,190,0.568,191,0.568,192,0.568,193,1.028,203,0.615,204,0.615,205,0.615,206,0.615,212,0.545,213,0.568,214,0.568,217,0.615,225,0.568,226,0.568,229,0.64,232,0.877,237,0.568,238,0.568,239,0.568,242,0.64,244,0.64,245,0.64,250,0.568,251,0.568,252,0.568,255,0.545,257,0.615,258,0.615,263,0.568,264,0.545,265,0.568,266,0.568,267,0.568,268,0.568,269,0.568,270,0.568,273,0.615,275,0.64,276,0.615,277,0.64,278,0.64,279,0.64,280,0.615,318,0.568,319,0.523,336,0.64,351,0.545,352,0.545,353,0.545,357,0.868,366,0.568,375,0.545,379,0.591,380,0.591,385,0.568,388,0.64,389,0.031,390,0.665,391,0.665,395,0.501,397,1.304,398,1.199,400,0.912,401,0.985,402,1.802,410,0.746,411,0.775,417,0.912,418,0.948,419,0.4,420,1.204,421,0.665,422,0.948,423,1.416,424,0.665,425,1.105,426,0.665,427,0.665,428,0.665,429,0.665,430,1.273,431,0.948,432,0.948,433,1.105,434,0.665,435,0.665,436,0.665,437,1.105,438,1.158,439,0.501,440,0.665,441,0.665,442,0.665,443,0.665,444,0.64,445,0.665,499,1.641,501,4.413,502,2.02,523,4.973,853,2.02,1546,2.296,1547,2.296,1548,2.296,1549,2.296,1550,2.296,1551,2.296,1552,2.296,1553,2.296,1554,2.296,1555,2.296,1671,4.269,1672,4.915,1673,3.449]],["title/changelog.html",[1674,2.574,1675,2.574,1676,2.859]],["body/changelog.html",[5,0.117,16,1.376,26,1.913,29,0.011,31,0.812,34,0.466,51,0.946,57,1.315,64,0.007,65,0.01,66,0.007,68,2.21,72,4.563,76,3.981,77,4.411,79,1.006,82,3.657,95,1.047,107,0.722,115,3.292,131,0.722,196,3.292,197,2.802,255,0.892,264,0.666,273,0.751,276,0.751,354,2.003,357,1.031,389,0.023,398,1.101,404,1.14,419,0.489,438,0.781,439,0.82,517,3.657,663,3.02,701,3.292,702,2.802,720,2.621,755,2.621,764,3.02,884,3.292,901,4.9,909,3.292,1058,3.657,1059,3.657,1081,3.02,1085,3.657,1094,4.411,1095,4.411,1119,3.657,1130,2.621,1180,4.235,1181,5.903,1312,3.657,1353,5.526,1359,3.657,1360,4.9,1390,3.657,1392,3.657,1451,5.526,1452,3.657,1676,5.526,1677,5.903,1678,4.21,1679,5.903,1680,4.21,1681,4.21,1682,4.21,1683,4.21,1684,4.21,1685,4.21,1686,4.21,1687,4.21,1688,4.21,1689,4.21,1690,5.642,1691,4.21,1692,3.657,1693,4.21,1694,5.642,1695,4.9,1696,5.526,1697,4.21,1698,4.21,1699,4.21,1700,7.087,1701,3.657,1702,4.21,1703,4.21,1704,4.21,1705,4.21,1706,4.21,1707,3.657,1708,4.21,1709,4.21,1710,5.642,1711,4.21,1712,4.21,1713,4.21,1714,7.087,1715,5.642,1716,4.21,1717,4.21,1718,5.642,1719,5.642,1720,6.797,1721,4.21,1722,4.21,1723,4.21,1724,5.642,1725,4.21,1726,4.21,1727,4.21,1728,4.21,1729,4.9,1730,3.657,1731,3.657,1732,5.642,1733,4.21,1734,4.21,1735,4.21,1736,3.657,1737,4.21,1738,4.21,1739,3.657,1740,4.21,1741,4.21,1742,4.21,1743,4.21,1744,4.21,1745,4.21,1746,4.21,1747,6.363,1748,5.642,1749,4.21,1750,6.363,1751,3.657,1752,4.21,1753,6.363,1754,4.21,1755,6.363,1756,4.21,1757,4.21,1758,4.21,1759,4.21,1760,4.21,1761,4.21,1762,4.21,1763,5.642,1764,4.21,1765,4.21,1766,4.21,1767,3.657,1768,4.21,1769,4.21,1770,4.21,1771,4.21,1772,4.21,1773,3.657,1774,4.9,1775,4.21,1776,4.21,1777,4.21,1778,4.21,1779,3.657,1780,4.21,1781,4.21,1782,4.21,1783,4.21,1784,4.21,1785,5.642,1786,4.21,1787,4.21]],["title/coverage.html",[1788,4.692]],["body/coverage.html",[0,0.086,1,1.986,5,0.1,6,3.746,7,3.116,8,0.64,9,3.116,11,0.567,28,0.378,29,0.015,57,0.666,64,0.006,65,0.009,66,0.006,67,3.334,68,1.883,70,3.116,95,0.666,123,4.35,153,0.591,165,0.591,166,0.591,170,0.64,176,0.591,177,0.591,188,0.591,189,0.591,190,0.591,191,0.591,192,0.591,193,0.591,203,0.64,204,0.64,205,0.64,206,0.64,212,0.567,213,0.591,214,0.591,225,0.591,226,0.591,237,0.591,238,0.591,239,0.591,250,0.591,251,0.591,252,0.591,263,0.591,264,0.567,265,0.591,266,0.591,267,0.591,268,0.591,269,0.591,270,0.591,280,0.64,318,0.591,319,0.544,341,2.388,342,2.388,351,0.567,352,0.567,353,0.567,354,1.707,366,0.591,375,0.567,376,2.102,380,0.615,385,0.591,389,0.044,392,3.116,393,3.952,410,0.776,419,0.777,446,3.116,447,3.698,491,3.116,492,3.116,516,3.116,554,2.798,564,3.116,576,2.573,591,3.116,592,3.116,646,3.364,648,3.116,660,3.116,661,4.197,672,1.791,696,3.116,748,3.116,753,3.116,789,3.116,808,3.116,816,3.116,841,3.116,852,3.116,853,4.069,880,3.116,881,3.952,915,3.116,916,3.952,994,3.116,1045,3.116,1046,4.197,1110,3.116,1123,3.116,1126,3.116,1127,3.116,1150,3.116,1154,3.116,1163,3.116,1167,3.894,1168,3.116,1173,3.116,1178,3.116,1224,3.116,1321,3.116,1322,3.116,1388,3.116,1498,3.116,1517,2.573,1518,2.573,1520,2.805,1528,3.116,1544,4.228,1559,3.116,1568,3.116,1569,3.116,1573,3.116,1595,3.116,1658,3.116,1671,3.116,1788,3.116,1789,2.805,1790,3.588,1791,3.588,1792,3.588,1793,6.352,1794,6.352,1795,3.588,1796,5.054,1797,5.054,1798,6.947,1799,3.588,1800,6.947,1801,6.352,1802,3.588,1803,5.054,1804,6.352,1805,3.588,1806,3.588,1807,3.588,1808,3.588,1809,3.588,1810,3.588,1811,5.054,1812,6.947,1813,3.588,1814,3.588,1815,3.588,1816,4.39,1817,3.116,1818,6.947,1819,5.054,1820,3.116,1821,3.116,1822,3.116,1823,3.116,1824,3.116,1825,3.116,1826,3.116,1827,3.116,1828,3.116,1829,3.116,1830,3.588,1831,3.588]],["title/dependencies.html",[134,1.554,1096,2.859]],["body/dependencies.html",[29,0.015,53,0.188,64,0.01,65,0.012,66,0.01,134,1.928,157,2.257,409,1.428,904,5.122,1018,4.611,1832,5.897,1833,8.092,1834,5.897,1835,5.897,1836,6.979,1837,5.457,1838,5.897,1839,5.897,1840,5.897,1841,5.897,1842,5.897,1843,5.897,1844,5.897,1845,5.897,1846,5.897,1847,5.897,1848,5.897,1849,5.897]],["title/miscellaneous/enumerations.html",[1850,2.361,1851,4.129]],["body/miscellaneous/enumerations.html",[12,0.687,29,0.014,32,1.409,64,0.011,65,0.013,66,0.011,1167,4.134,1192,5.625,1193,6.248,1194,6.248,1205,5.625,1850,4.455,1851,5.394,1852,6.211,1853,7.194]],["title/miscellaneous/functions.html",[1850,2.361,1854,4.129]],["body/miscellaneous/functions.html",[12,0.564,14,2.799,21,2.989,28,0.673,29,0.014,30,2.195,31,0.985,32,0.947,37,0.772,41,2.428,51,1.146,64,0.009,65,0.011,66,0.009,71,4.253,97,1.165,98,0.935,99,1.165,307,4.432,312,4.432,389,0.027,410,1.383,450,4.432,487,2.903,625,3.99,672,3.19,702,3.397,887,3.66,999,4.584,1180,4.644,1245,4.997,1248,6.352,1517,4.584,1518,4.584,1520,4.997,1816,5.55,1817,5.55,1820,5.55,1821,4.432,1822,5.55,1823,5.55,1824,4.432,1825,5.55,1826,4.432,1827,5.55,1828,4.432,1829,5.55,1850,3.66,1854,4.432,1855,6.391,1856,5.103,1857,5.103,1858,5.103,1859,5.103,1860,5.103,1861,6.391,1862,6.977,1863,6.391,1864,5.103,1865,6.391,1866,5.103,1867,5.103,1868,5.103,1869,5.103,1870,5.103,1871,5.103,1872,6.391,1873,5.103,1874,6.391]],["title/index.html",[12,0.364,1674,2.574,1675,2.574]],["body/index.html",[29,0.014,50,0.195,64,0.008,65,0.011,66,0.008,79,1.165,123,2.494,127,0.815,131,0.815,160,1.747,194,3.802,319,0.721,398,1.096,400,1.133,409,1.15,412,1.239,417,0.882,452,3.048,514,4.127,554,3.381,596,2.783,755,3.802,875,2.958,950,3.715,992,3.408,993,3.408,1018,3.715,1070,4.127,1081,3.408,1094,5.57,1095,5.57,1130,2.958,1192,3.715,1324,3.715,1508,3.715,1522,4.127,1677,6.401,1679,5.304,1695,6.401,1696,6.551,1729,4.127,1730,4.127,1731,5.304,1736,4.127,1739,4.127,1751,5.862,1767,4.127,1773,5.304,1774,4.127,1779,4.127,1789,5.278,1837,3.715,1875,4.751,1876,4.751,1877,4.751,1878,4.751,1879,4.751,1880,4.127,1881,6.108,1882,4.751,1883,4.751,1884,4.751,1885,4.751,1886,4.751,1887,6.108,1888,4.751,1889,4.751,1890,4.751,1891,4.751,1892,4.751,1893,4.751,1894,4.751,1895,6.108,1896,6.108,1897,4.751,1898,4.751,1899,4.751,1900,4.751,1901,4.751,1902,4.751,1903,4.751,1904,4.751,1905,4.751,1906,4.751,1907,4.751,1908,4.751,1909,4.751,1910,4.751,1911,6.108,1912,4.751,1913,4.751,1914,4.751,1915,7.124,1916,4.751,1917,4.751,1918,4.751,1919,4.751,1920,4.751,1921,4.751,1922,4.751,1923,4.751,1924,4.751,1925,4.751,1926,4.751,1927,4.751,1928,4.751,1929,4.751,1930,4.751,1931,4.127,1932,4.751,1933,4.751,1934,4.751,1935,4.751,1936,4.751]],["title/license.html",[1674,2.574,1675,2.574,1937,2.859]],["body/license.html",[29,0.012,64,0.01,65,0.012,66,0.01,76,3.17,144,1.839,1051,4.701,1081,4.754,1093,4.701,1692,5.757,1707,4.701,1789,4.232,1880,4.701,1931,4.701,1937,4.701,1938,5.413,1939,7.164,1940,5.413,1941,5.413,1942,5.413,1943,5.413,1944,6.628,1945,5.413,1946,5.413,1947,5.413,1948,5.413,1949,5.413,1950,6.628,1951,8.03,1952,5.413,1953,5.413,1954,7.164,1955,5.413,1956,5.413,1957,5.413,1958,5.413,1959,5.413,1960,5.413,1961,5.413,1962,5.413,1963,5.413,1964,5.413,1965,6.628,1966,5.413,1967,5.413,1968,5.413,1969,5.413,1970,5.413,1971,5.413,1972,6.628,1973,6.628,1974,5.413,1975,5.413,1976,5.413,1977,5.413,1978,5.413,1979,5.413,1980,5.413,1981,5.413,1982,5.413,1983,5.413,1984,5.413,1985,5.413,1986,5.413,1987,5.413,1988,5.413,1989,5.413,1990,5.413,1991,5.413,1992,5.413,1993,5.413,1994,5.413,1995,5.413,1996,5.413,1997,5.413,1998,5.413,1999,5.413,2000,5.413]],["title/modules.html",[133,1.766]],["body/modules.html",[29,0.012,64,0.01,65,0.012,66,0.01,132,3.648,133,1.792,149,3.648,161,3.648,172,3.648,183,3.931,194,3.413,208,3.648,221,3.648,233,3.648,246,3.648,258,1.476,259,3.648,284,3.648,285,3.648,286,3.648,287,3.648,295,3.648,320,3.648,1701,7.187,1837,6.47,2001,8.275]],["title/overview.html",[2002,4.692]],["body/overview.html",[0,0.059,11,0.998,29,0.015,64,0.004,65,0.007,66,0.004,68,2.457,69,1.635,79,0.388,95,0.869,131,0.421,132,4.46,133,0.803,134,0.803,135,0.208,136,0.868,137,0.868,138,0.272,139,0.868,140,2.134,141,2.134,142,1.297,143,0.868,144,0.835,149,4.559,150,2.134,151,2.134,152,2.134,153,1.04,161,4.778,162,2.134,163,2.134,164,2.134,165,1.04,166,1.04,172,4.778,173,2.134,174,2.134,175,2.134,176,1.04,177,1.04,183,5.509,184,2.134,185,2.134,186,2.134,187,2.134,188,1.04,189,1.04,190,1.04,191,1.04,192,1.04,193,1.04,194,4.874,208,4.926,209,2.134,210,2.134,211,2.134,212,0.998,213,1.04,214,1.04,221,4.926,222,2.134,223,2.134,224,2.134,225,1.04,226,1.04,233,4.926,234,2.134,235,2.134,236,2.134,237,1.04,238,1.04,239,1.04,246,4.926,247,2.134,248,2.134,249,2.134,250,1.04,251,1.04,252,1.04,259,5.267,260,2.134,261,2.134,262,2.134,263,1.04,264,0.998,265,1.04,266,1.04,267,1.04,268,1.04,269,1.04,270,1.04,281,2.134,282,2.134,283,2.134,284,5.254,285,5,286,4.715,287,4.715,295,4.343,314,2.134,315,2.134,316,2.134,317,2.134,318,0.771,319,0.957,320,4.559,338,2.134,339,2.134,340,2.134,341,4.201,342,4.201,347,2.134,348,2.134,349,2.134,350,2.134,351,0.998,352,0.998,353,0.998,354,2.226,362,2.134,363,2.134,364,2.134,365,2.134,366,1.04,371,2.134,372,2.134,373,2.134,374,2.134,375,0.998,376,2.741,382,2.134,383,2.134,384,2.134,385,1.04,439,0.357,465,0.868,543,1.116,647,1.921,823,2.134,2002,2.134,2003,2.457,2004,2.457,2005,2.457]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":123,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{}}}],["0,0",{"_index":834,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":674,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":579,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["0.0.0",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":695,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["0.002",{"_index":1004,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.01",{"_index":712,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":709,"title":{},"body":{"components/DofComponent.html":{}}}],["0.05",{"_index":1034,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.1",{"_index":689,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["0.11.3",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["0.122.0",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":628,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0.3",{"_index":1620,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":1664,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":935,"title":{},"body":{"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0/1",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":540,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["04",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["0x0000aa",{"_index":761,"title":{},"body":{"components/FogComponent.html":{}}}],["0x444444",{"_index":846,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x999999",{"_index":611,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xa0a0a0",{"_index":868,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["0xa4a4a4",{"_index":879,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["0xda1111",{"_index":618,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xdadada",{"_index":1628,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0xffa0a0",{"_index":63,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xfff0f0",{"_index":60,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xffff00",{"_index":889,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["0xffffff",{"_index":33,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["1",{"_index":465,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["1.0",{"_index":457,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["1.0.2",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["1.01",{"_index":630,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["1.05",{"_index":822,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["1.2",{"_index":943,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["1.411.0",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":764,"title":{},"body":{"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["10.2.1",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":554,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["100px",{"_index":1385,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":693,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["17",{"_index":2003,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["180",{"_index":659,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":543,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":797,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/8",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":794,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":939,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":1941,"title":{},"body":{"license.html":{}}}],["2019",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":558,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["3.6.5",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":821,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["34",{"_index":2004,"title":{},"body":{"overview.html":{}}}],["37",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["379579926",{"_index":1043,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["39",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":412,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"index.html":{}}}],["4",{"_index":2005,"title":{},"body":{"overview.html":{}}}],["4/7",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":823,"title":{},"body":{"components/GridMeshComponent.html":{},"overview.html":{}}}],["500",{"_index":691,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1665,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["6.6.3",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":576,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["95",{"_index":1117,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_materialcolor",{"_index":1598,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":1500,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":1599,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":855,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["above",{"_index":1971,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1469,"title":{},"body":{"injectables/RendererService.html":{}}}],["abstract",{"_index":56,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractcamera",{"_index":1128,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractconnector",{"_index":882,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":517,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"changelog.html":{}}}],["abstractions",{"_index":1745,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":1596,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":448,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1052,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":394,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":917,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":1,"title":{"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractserveractor:10",{"_index":1550,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:13",{"_index":1551,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:16",{"_index":1549,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:19",{"_index":1548,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:21",{"_index":1555,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:24",{"_index":1547,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:26",{"_index":1554,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:31",{"_index":1553,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:36",{"_index":1552,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:7",{"_index":1546,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accessors",{"_index":857,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":1994,"title":{},"body":{"license.html":{}}}],["actor",{"_index":438,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":430,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":200,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["actor.component.ts",{"_index":853,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:19",{"_index":859,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:22",{"_index":860,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:27",{"_index":872,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:31",{"_index":867,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:33",{"_index":858,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1673,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:35",{"_index":862,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:36",{"_index":863,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:37",{"_index":861,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:39",{"_index":869,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:41",{"_index":870,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:43",{"_index":866,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:47",{"_index":865,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:51",{"_index":864,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.module.ts",{"_index":198,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["actor.ts",{"_index":9,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:10",{"_index":48,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:13",{"_index":49,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:16",{"_index":47,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:19",{"_index":45,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:21",{"_index":35,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:24",{"_index":44,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:26",{"_index":40,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:31",{"_index":39,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:36",{"_index":36,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:7",{"_index":42,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actors",{"_index":1712,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":445,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":961,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":496,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":498,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["added",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["addgroup",{"_index":1227,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1238,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addpass",{"_index":1393,"title":{},"body":{"injectables/RendererService.html":{}}}],["addpass(pass",{"_index":1405,"title":{},"body":{"injectables/RendererService.html":{}}}],["adheres",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":988,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["afterviewinit",{"_index":519,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["akimenko",{"_index":1943,"title":{},"body":{"license.html":{}}}],["allows",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["along",{"_index":469,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["alpha",{"_index":1455,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":909,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":1963,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1695,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":157,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":75,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animated",{"_index":78,"title":{},"body":{"injectables/AnimationService.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation",{"_index":72,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":301,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":146,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":148,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":600,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation/atft",{"_index":300,"title":{},"body":{"modules/AtftModule.html":{}}}],["animationincrement",{"_index":997,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["animations",{"_index":104,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":68,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":90,"title":{},"body":{"injectables/AnimationService.html":{}}}],["antialias",{"_index":1454,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":1100,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":705,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":744,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":1773,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":1876,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":672,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":1860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this.color",{"_index":676,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.groundcolor",{"_index":850,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":851,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":899,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":849,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":1517,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":1864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1640,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["arc",{"_index":1660,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":1357,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arguments",{"_index":1337,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":1998,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1019,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["array",{"_index":1265,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["aspect",{"_index":1140,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1142,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":1618,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["associated",{"_index":1952,"title":{},"body":{"license.html":{}}}],["async",{"_index":1056,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":398,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":201,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["atftanimationmodule",{"_index":132,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":149,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":161,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":172,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":183,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":208,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":221,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":233,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":246,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":259,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":194,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":284,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":295,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":285,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":286,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":287,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":320,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":515,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["attribute",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1987,"title":{},"body":{"license.html":{}}}],["auto",{"_index":380,"title":{},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autorotate",{"_index":922,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":923,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":112,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":1105,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["axes",{"_index":229,"title":{},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":225,"title":{"components/AxesHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":463,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["background",{"_index":1531,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":1542,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":203,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["based",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1508,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["behaviour",{"_index":1379,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":1882,"title":{},"body":{"index.html":{}}}],["bevelenabled",{"_index":1601,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":1602,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":1603,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":1604,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":1605,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["binding",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":1779,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":1120,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["blending",{"_index":1031,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["body",{"_index":1908,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":700,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":727,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":1245,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["box",{"_index":273,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":263,"title":{"components/BoxMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":2001,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1837,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":1116,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":1911,"title":{},"body":{"index.html":{}}}],["c",{"_index":1940,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":832,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":1394,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":1408,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":1823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":1868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":85,"title":{},"body":{"injectables/AnimationService.html":{}}}],["camera",{"_index":1130,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":434,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":159,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1127,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":1135,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1136,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":1134,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":1137,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":1139,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.directive",{"_index":360,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1168,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1170,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1169,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":290,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":155,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1171,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":289,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":441,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas",{"_index":1324,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":435,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":1458,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":1479,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":369,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":1327,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":1325,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":1322,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":1344,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:15",{"_index":1336,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:18",{"_index":1335,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:28",{"_index":1340,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":1346,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:46",{"_index":1362,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:51",{"_index":1339,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.parentelement.appendchild(this.css3drenderer.domelement",{"_index":1472,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.border",{"_index":1478,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":1477,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":1476,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":1465,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":1328,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":307,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["cast",{"_index":1098,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":664,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["center",{"_index":197,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":1825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":195,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/layer",{"_index":852,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/server/abstract",{"_index":7,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/server",{"_index":1544,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":1671,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["centered",{"_index":1501,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":109,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1676,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":720,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":955,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":958,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":1947,"title":{},"body":{"license.html":{}}}],["child",{"_index":513,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.add(this.edges",{"_index":633,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.material",{"_index":609,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.scale.setscalar(0.999",{"_index":635,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.visible",{"_index":636,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childs",{"_index":1183,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["claim",{"_index":1990,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["click",{"_index":1192,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clone",{"_index":1912,"title":{},"body":{"index.html":{}}}],["cluster_atftanimationmodule",{"_index":140,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":141,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":150,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":151,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":152,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":162,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":163,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":164,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":173,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":174,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":175,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":184,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":185,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":187,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":186,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":209,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":210,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":211,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":222,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":223,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":224,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":234,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":235,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":236,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":247,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":248,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":249,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":260,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":261,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":262,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":281,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":283,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":282,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":314,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":315,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":317,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":316,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":338,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":339,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":340,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":347,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":348,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":349,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":350,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":362,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":363,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":364,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":365,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":371,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":372,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":373,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":374,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":382,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":383,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":384,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["code",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":14,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":1927,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":156,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}}}],["compact",{"_index":205,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":389,"title":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":421,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["components",{"_index":79,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["composer",{"_index":1389,"title":{},"body":{"injectables/RendererService.html":{}}}],["composite",{"_index":1187,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["conditions",{"_index":1970,"title":{},"body":{"license.html":{}}}],["config",{"_index":1919,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1999,"title":{},"body":{"license.html":{}}}],["connector",{"_index":884,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":431,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":171,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":881,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:100",{"_index":1012,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:17",{"_index":890,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":1008,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:20",{"_index":894,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":888,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":1009,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":1007,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":891,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":1006,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":1003,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":1005,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:41",{"_index":1013,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:42",{"_index":1015,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:43",{"_index":1002,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:49",{"_index":893,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:54",{"_index":1011,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:96",{"_index":1010,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.module",{"_index":324,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":168,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":323,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1184,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["console.error('contentprojectioncomponent",{"_index":509,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log('add",{"_index":1286,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":414,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":478,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":742,"title":{},"body":{"components/DofComponent.html":{},"components/TextMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":583,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":584,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dashed",{"_index":602,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('disablefog",{"_index":786,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":723,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('dofcomponent.disable",{"_index":735,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('dofcomponent.enable",{"_index":724,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('enablefog",{"_index":781,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent",{"_index":777,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":772,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":813,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('meshlineconnectorcomponent.updatelinegeometry",{"_index":1041,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":773,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":1115,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1141,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1147,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1287,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":1444,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.constructor",{"_index":1364,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":1450,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":1367,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('rendererservice.addpass",{"_index":1488,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('rendererservice.initcomposer",{"_index":1484,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('rendererservice.removepass",{"_index":1491,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":62,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":61,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":58,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":1565,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":1641,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1281,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log(child",{"_index":612,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(event",{"_index":1302,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log(this.edges",{"_index":620,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(this.host.getobject().parent",{"_index":642,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["const",{"_index":479,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor(host",{"_index":594,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(raycasterservice",{"_index":1174,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":94,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor(statsservice",{"_index":1403,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["content",{"_index":336,"title":{},"body":{"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":495,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":318,"title":{"components/ContentProjectionComponent.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continuously",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1995,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1926,"title":{},"body":{"index.html":{}}}],["control",{"_index":1355,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["control.module",{"_index":294,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":179,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":293,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":918,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":432,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":181,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":920,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":916,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:15",{"_index":1124,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":944,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":946,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":934,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":936,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":938,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1125,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":937,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":945,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":942,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":940,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":941,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":933,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:46",{"_index":947,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:61",{"_index":948,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":653,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":835,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["copies",{"_index":1965,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1950,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1939,"title":{},"body":{"license.html":{}}}],["core",{"_index":904,"title":{},"body":{"components/LineConnectorComponent.html":{},"dependencies.html":{}}}],["coverage",{"_index":1788,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":531,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":1131,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["createconnectorobject",{"_index":885,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["createcss3dobject",{"_index":521,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["creates",{"_index":1866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":108,"title":{},"body":{"injectables/AnimationService.html":{}}}],["css",{"_index":1380,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3d",{"_index":279,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["css3dobject",{"_index":527,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["css3dobject(div",{"_index":559,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["css3drenderer",{"_index":1390,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":264,"title":{"components/Css3dVideoMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["currently",{"_index":1349,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["curvesegments",{"_index":1606,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cylinder",{"_index":275,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":265,"title":{"components/CylinderMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":830,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["damages",{"_index":1991,"title":{},"body":{"license.html":{}}}],["damping",{"_index":975,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dampingfactor",{"_index":924,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dasharray",{"_index":1033,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashed",{"_index":217,"title":{},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dasheddrawdirective",{"_index":212,"title":{"directives/DashedDrawDirective.html":{}},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashoffset",{"_index":1035,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashratio",{"_index":1036,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["data",{"_index":196,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{}}}],["data.paths",{"_index":1527,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["deal",{"_index":1953,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2000,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["decorators",{"_index":503,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["defaultcolor",{"_index":1861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":464,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["deg2rad",{"_index":649,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":345,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":341,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":658,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":654,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["demo",{"_index":1729,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":1898,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1080,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":450,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":451,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthtest",{"_index":998,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["depthwrite",{"_index":999,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":71,"title":{},"body":{"injectables/AnimationService.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":25,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["details",{"_index":1925,"title":{},"body":{"index.html":{}}}],["detected",{"_index":778,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":1894,"title":{},"body":{"index.html":{}}}],["development",{"_index":1739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["direct",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":245,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":237,"title":{"components/DirectionalLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":419,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":601,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":439,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":701,"title":{},"body":{"components/DofComponent.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["disablefog",{"_index":756,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":992,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1156,"title":{},"body":{"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["distribute",{"_index":1961,"title":{},"body":{"license.html":{}}}],["div",{"_index":532,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.appendchild(this.video",{"_index":557,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.id",{"_index":541,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.backgroundcolor",{"_index":539,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.height",{"_index":537,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.width",{"_index":534,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["divisions",{"_index":810,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":1583,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":1592,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('div",{"_index":533,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["document.createelement('source",{"_index":548,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":529,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["documentation",{"_index":1789,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":699,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":426,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dof.component",{"_index":220,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["dofcomponent",{"_index":213,"title":{"components/DofComponent.html":{}},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":390,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["draw",{"_index":593,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":218,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":592,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:18",{"_index":598,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:61",{"_index":597,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:9",{"_index":595,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":440,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":901,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["dynamic",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1892,"title":{},"body":{"index.html":{}}}],["edges",{"_index":460,"title":{},"body":{"components/BoxMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/PlaneMeshComponent.html":{}}}],["edges.add(child",{"_index":637,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edges.children[0].visible",{"_index":644,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edges.material.color.set(0xffffff",{"_index":643,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgesgeom",{"_index":613,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["effect.module",{"_index":306,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":216,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect/atft",{"_index":305,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":1427,"title":{},"body":{"injectables/RendererService.html":{}}}],["effectcomposer(this.webglrenderer",{"_index":1485,"title":{},"body":{"injectables/RendererService.html":{}}}],["element",{"_index":418,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["elementref",{"_index":1341,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["embedded",{"_index":512,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":1181,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":74,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":125,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":129,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1047,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":750,"title":{},"body":{"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":427,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":231,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":11,"title":{"components/EmptyComponent.html":{}},"body":{"classes/AbstractServerActor.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":502,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enable",{"_index":702,"title":{},"body":{"components/DofComponent.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":361,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":1173,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":1176,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":1175,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":442,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enablecss3d",{"_index":1330,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["enabled",{"_index":89,"title":{},"body":{"injectables/AnimationService.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":925,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":757,"title":{},"body":{"components/FogComponent.html":{}}}],["enablewebgl",{"_index":1331,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["end",{"_index":1473,"title":{},"body":{"injectables/RendererService.html":{}}}],["entire",{"_index":1903,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1851,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":308,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["etc",{"_index":111,"title":{},"body":{"injectables/AnimationService.html":{}}}],["event",{"_index":76,"title":{},"body":{"injectables/AnimationService.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":1584,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.key",{"_index":1585,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1293,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1291,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1304,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":46,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["events",{"_index":1182,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":1353,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":1891,"title":{},"body":{"index.html":{}}}],["execution",{"_index":113,"title":{},"body":{"injectables/AnimationService.html":{}}}],["exploration",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1879,"title":{},"body":{"index.html":{}}}],["export",{"_index":55,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":311,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["exposition",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1978,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["faces",{"_index":468,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["far",{"_index":758,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":788,"title":{},"body":{"components/FogComponent.html":{}}}],["favor",{"_index":1706,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1930,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1051,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":1078,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":1106,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["find",{"_index":1312,"title":{},"body":{"injectables/RaycasterService.html":{},"changelog.html":{}}}],["fit",{"_index":1522,"title":{},"body":{"components/SVGLoaderComponent.html":{},"index.html":{}}}],["fit.ts",{"_index":1829,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":1983,"title":{},"body":{"license.html":{}}}],["fix",{"_index":312,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":1518,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":1870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":1656,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":993,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["focus",{"_index":706,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":740,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":754,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":428,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":219,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":214,"title":{"components/FogComponent.html":{}},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":1707,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":1645,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fonturl",{"_index":1607,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["format",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":1017,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["found",{"_index":511,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["fov",{"_index":1133,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["frame",{"_index":107,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":266,"title":{"components/FrameMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":1931,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1854,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1968,"title":{},"body":{"license.html":{}}}],["general",{"_index":833,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["geometry",{"_index":480,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["getcamera",{"_index":1395,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":1361,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getfirstintersectedgroup",{"_index":1228,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1242,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getisenabled",{"_index":1270,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getmaterial",{"_index":1600,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmaterialcolor",{"_index":1630,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getrenderpane",{"_index":1345,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscene",{"_index":1396,"title":{},"body":{"injectables/RendererService.html":{}}}],["gettext",{"_index":1632,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":1674,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":871,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":1767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["goals",{"_index":1884,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1946,"title":{},"body":{"license.html":{}}}],["grid",{"_index":232,"title":{},"body":{"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridhelpercomponent",{"_index":226,"title":{"components/GridHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":267,"title":{"components/GridMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":843,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1180,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.directive",{"_index":358,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1178,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:13",{"_index":1196,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:14",{"_index":1197,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:15",{"_index":1195,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:26",{"_index":1198,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:31",{"_index":1203,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:38",{"_index":1204,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:47",{"_index":1202,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:51",{"_index":1201,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:55",{"_index":1200,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":1199,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1288,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":443,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1225,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["halfx",{"_index":795,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":798,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":452,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["heightsegments",{"_index":453,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":399,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":422,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":230,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":393,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":405,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":811,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":406,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":812,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":326,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":228,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":325,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":506,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":1889,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":244,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":238,"title":{"components/HemisphereLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":1945,"title":{},"body":{"license.html":{}}}],["hierarchical",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["hightsegments",{"_index":1561,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":1988,"title":{},"body":{"license.html":{}}}],["horizontally",{"_index":1905,"title":{},"body":{"index.html":{}}}],["host",{"_index":596,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":1363,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":1374,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":1332,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":417,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":1372,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":1079,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/makimenko/angular",{"_index":1913,"title":{},"body":{"index.html":{}}}],["https://github.com/spite/three.meshline/issues/51#issuecomment",{"_index":1042,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["i.dispatchevent({type",{"_index":1300,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["i.e",{"_index":1356,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["icon",{"_index":206,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["id",{"_index":510,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["ideas",{"_index":1934,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["ignorepaused",{"_index":1247,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["implement",{"_index":1886,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1350,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":518,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["implied",{"_index":1979,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"index.html":{}}}],["included",{"_index":1093,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":1692,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":313,"title":{},"body":{"modules/AtftModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":1923,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":501,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["init",{"_index":1391,"title":{},"body":{"injectables/RendererService.html":{}}}],["initcomposer",{"_index":1397,"title":{},"body":{"injectables/RendererService.html":{}}}],["initial",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":1398,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":1413,"title":{},"body":{"injectables/RendererService.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"overview.html":{}}}],["injected",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":51,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":20,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["install",{"_index":1731,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":608,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["instead",{"_index":1122,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":1890,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":665,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["intersection[0",{"_index":1320,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1319,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["intersections",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["isenabled",{"_index":1236,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isolated",{"_index":1737,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":1881,"title":{},"body":{"index.html":{}}}],["isready",{"_index":1229,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1244,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["issue",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":1863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":114,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":818,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":819,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["ivy",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["jetbrains",{"_index":1929,"title":{},"body":{"index.html":{}}}],["join",{"_index":1932,"title":{},"body":{"index.html":{}}}],["js",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1317,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["keep",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1977,"title":{},"body":{"license.html":{}}}],["label",{"_index":21,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":1119,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"changelog.html":{}}}],["later",{"_index":1143,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":429,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/layer",{"_index":199,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":188,"title":{"components/LayerActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lazy",{"_index":1635,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":135,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["length",{"_index":459,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["leverage",{"_index":1875,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1992,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1989,"title":{},"body":{"license.html":{}}}],["library",{"_index":1677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":1937,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":663,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":425,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":681,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":243,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":661,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":1157,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":668,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":669,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":845,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":670,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:19",{"_index":667,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:26",{"_index":847,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:28",{"_index":671,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.module",{"_index":328,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":241,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":694,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":685,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":690,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":686,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":688,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":687,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":684,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":1161,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":692,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":1160,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":1162,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":678,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":327,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":1888,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1956,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":902,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["limited",{"_index":1980,"title":{},"body":{"license.html":{}}}],["line",{"_index":170,"title":{},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["lineconnectorcomponent",{"_index":165,"title":{"components/LineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":624,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["linematerial",{"_index":996,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["linewidth",{"_index":908,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["linewidth=1",{"_index":900,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["list",{"_index":605,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["listened",{"_index":1358,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":1049,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loaded",{"_index":1067,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":1054,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["loader'},{'name",{"_index":433,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":256,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1046,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":1112,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:20",{"_index":1511,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":1071,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:23",{"_index":1072,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1113,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:26",{"_index":1061,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:29",{"_index":1513,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:33",{"_index":1068,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:36",{"_index":1507,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:39",{"_index":1509,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":1060,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:42",{"_index":1510,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:45",{"_index":1506,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":1505,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:50",{"_index":1069,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:56",{"_index":1512,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load(this.fonturl",{"_index":1644,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loader.module",{"_index":330,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":254,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader/atft",{"_index":329,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loadlazyobject",{"_index":1057,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":1918,"title":{},"body":{"index.html":{}}}],["logic",{"_index":80,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":102,"title":{},"body":{"injectables/AnimationService.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{}}}],["main",{"_index":126,"title":{},"body":{"injectables/AnimationService.html":{}}}],["makimenko",{"_index":1774,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":182,"title":{},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":949,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":176,"title":{"components/MapControlsComponent.html":{}},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1909,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1179,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":65,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":487,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.opacity",{"_index":627,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["material.transparent",{"_index":626,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["material.ts",{"_index":1820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":887,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":1636,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":1102,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialcreator.preload",{"_index":1103,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":1865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["math.pi",{"_index":578,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["max",{"_index":1874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxblur",{"_index":707,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":746,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdistance",{"_index":926,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpolarangle",{"_index":927,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxx",{"_index":1502,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":1503,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["meant",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1982,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1959,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":169,"title":{},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh'},{'name",{"_index":423,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":1652,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":274,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":447,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:15",{"_index":1564,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":525,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":1563,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":524,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":474,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":573,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":577,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":574,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":471,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":575,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":526,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":580,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":572,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":458,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:32",{"_index":1629,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":1663,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":1624,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":824,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":476,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":1633,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":581,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":1666,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":473,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":1623,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":1152,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:48",{"_index":1621,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":456,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:51",{"_index":1616,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:52",{"_index":528,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["mesh.component.ts:54",{"_index":1610,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:57",{"_index":1614,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":477,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:60",{"_index":1613,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:63",{"_index":1611,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:66",{"_index":1612,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:69",{"_index":1619,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:72",{"_index":1615,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:75",{"_index":1622,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:78",{"_index":1617,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:81",{"_index":1609,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:90",{"_index":1625,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:94",{"_index":1626,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.module",{"_index":332,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":272,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":1653,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":331,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":1743,"title":{},"body":{"changelog.html":{}}}],["meshline",{"_index":1014,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["meshlineconnectorcomponent",{"_index":166,"title":{"components/MeshLineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meshlinematerial",{"_index":1016,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["metadata",{"_index":395,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["middle",{"_index":836,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":1942,"title":{},"body":{"license.html":{}}}],["mindistance",{"_index":928,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":1850,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":1938,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1924,"title":{},"body":{"index.html":{}}}],["model",{"_index":1077,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["modified",{"_index":739,"title":{},"body":{"components/DofComponent.html":{},"components/SceneComponent.html":{}}}],["modify",{"_index":1958,"title":{},"body":{"license.html":{}}}],["module",{"_index":131,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1922,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1359,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mouseenter",{"_index":1193,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1194,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1308,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["move",{"_index":895,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":1055,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["multiple",{"_index":1451,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["mywrapper",{"_index":542,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["name",{"_index":98,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":759,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1313,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1316,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1314,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestintersection.distance",{"_index":1318,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["necessary",{"_index":1090,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["new",{"_index":57,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newobject3dinstance",{"_index":402,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["newtexturepath",{"_index":1074,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["ng",{"_index":514,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":522,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["ngmodule",{"_index":147,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}}}],["ngonchanges",{"_index":703,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["ngonchanges(changes",{"_index":717,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["ngondestroy",{"_index":704,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}}}],["ngoninit",{"_index":1329,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["none",{"_index":1387,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["noninfringement",{"_index":1986,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":81,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/LineConnectorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":1972,"title":{},"body":{"license.html":{}}}],["now",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1095,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":1297,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":30,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/GridHelperComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":257,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":1216,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1214,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1215,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":1219,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1217,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1218,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":255,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":292,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":322,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":607,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":599,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":291,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":874,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["object/helper/empty.component",{"_index":54,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["object/scene.component",{"_index":1436,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":1893,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":251,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":1070,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["objloadercomponent",{"_index":250,"title":{"components/ObjLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1949,"title":{},"body":{"license.html":{}}}],["official",{"_index":1921,"title":{},"body":{"index.html":{}}}],["offset",{"_index":820,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["once",{"_index":86,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":698,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["onclick",{"_index":17,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["onclick(event",{"_index":1250,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":18,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ondestroy",{"_index":697,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}}}],["oninit",{"_index":1323,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onmouseenter",{"_index":1188,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1189,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":1230,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1252,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onresize(event",{"_index":1375,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":19,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ontouchstart",{"_index":1231,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1254,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1000,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["openended",{"_index":566,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["opengl",{"_index":903,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["optimization",{"_index":83,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":99,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1901,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":180,"title":{},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":950,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":177,"title":{"components/OrbitControlsComponent.html":{}},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["others",{"_index":962,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":1997,"title":{},"body":{"license.html":{}}}],["out",{"_index":144,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1386,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":52,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":24,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["overridematerialcolor",{"_index":1504,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":1524,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":2002,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1096,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pane",{"_index":1347,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":929,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":461,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["param",{"_index":657,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":404,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["parent.ts",{"_index":1827,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parenttype",{"_index":1872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":1984,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1406,"title":{},"body":{"injectables/RendererService.html":{}}}],["passes",{"_index":1493,"title":{},"body":{"injectables/RendererService.html":{}}}],["passes.indexof(pass",{"_index":1495,"title":{},"body":{"injectables/RendererService.html":{}}}],["passes.length",{"_index":1497,"title":{},"body":{"injectables/RendererService.html":{}}}],["passes.splice(index",{"_index":1496,"title":{},"body":{"injectables/RendererService.html":{}}}],["patch",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1062,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["paths",{"_index":1526,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["pause",{"_index":1232,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["paused",{"_index":1226,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["performance",{"_index":82,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":1944,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1966,"title":{},"body":{"license.html":{}}}],["person",{"_index":1948,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1967,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":158,"title":{},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":153,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":646,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":297,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":344,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":296,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":647,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":656,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixels",{"_index":1383,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":276,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":268,"title":{"components/PlaneMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platforms",{"_index":907,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["player",{"_index":544,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["point",{"_index":242,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pointlightcomponent",{"_index":239,"title":{"components/PointLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":1975,"title":{},"body":{"license.html":{}}}],["position",{"_index":110,"title":{},"body":{"injectables/AnimationService.html":{}}}],["preloading",{"_index":1084,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":1086,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep.then",{"_index":1107,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":88,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{}}}],["profile",{"_index":905,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["project",{"_index":1679,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":494,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":424,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":337,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":492,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:15",{"_index":497,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:24",{"_index":500,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projects/.../applied",{"_index":1855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../calculate",{"_index":1856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":1857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../provide",{"_index":1858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../scale",{"_index":1859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":6,"title":{},"body":{"classes/AbstractServerActor.html":{},"modules/AtftDataCenterActorModule.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":70,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":105,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":96,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":101,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:39",{"_index":103,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:45",{"_index":100,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":145,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":288,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":154,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1126,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":178,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":915,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":1123,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":215,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":591,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts",{"_index":696,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:12",{"_index":711,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:13",{"_index":710,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:14",{"_index":713,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:16",{"_index":708,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:25",{"_index":715,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:40",{"_index":714,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:46",{"_index":716,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:50",{"_index":721,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/dof.component.ts:54",{"_index":719,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":753,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":762,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":765,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:15",{"_index":763,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:17",{"_index":760,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:28",{"_index":768,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:37",{"_index":767,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:43",{"_index":766,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:49",{"_index":770,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:54",{"_index":769,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":321,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":167,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":880,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/mesh",{"_index":994,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/content",{"_index":491,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":227,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":392,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":748,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":751,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":752,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":808,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":240,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":660,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":841,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":1154,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":253,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1045,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":1110,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":1498,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":271,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":446,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/css3d",{"_index":516,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":564,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":789,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":816,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":1150,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":1559,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":1658,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":1528,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":1532,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:26",{"_index":1533,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:32",{"_index":1535,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:36",{"_index":1534,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":386,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":1595,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":343,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":648,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":652,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1163,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1166,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":355,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1167,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1224,"title":{},"body":{"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:106",{"_index":1256,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:11",{"_index":1268,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:118",{"_index":1246,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:12",{"_index":1269,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:127",{"_index":1243,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:13",{"_index":1264,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:14",{"_index":1263,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":1266,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":1237,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:26",{"_index":1249,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:31",{"_index":1261,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:37",{"_index":1262,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:44",{"_index":1241,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":1240,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":1257,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":1258,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:61",{"_index":1271,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":1260,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:70",{"_index":1239,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:75",{"_index":1253,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:94",{"_index":1251,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":367,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":1321,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":1388,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:105",{"_index":1420,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:123",{"_index":1409,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":1432,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:131",{"_index":1425,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:138",{"_index":1412,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:145",{"_index":1407,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":1433,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:153",{"_index":1417,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":1426,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:167",{"_index":1411,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:17",{"_index":1431,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:171",{"_index":1410,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":1430,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:19",{"_index":1435,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:21",{"_index":1429,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:22",{"_index":1428,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:24",{"_index":1404,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:33",{"_index":1415,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:38",{"_index":1423,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:42",{"_index":1421,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:47",{"_index":1418,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:64",{"_index":1414,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":1568,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":377,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":1573,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":1581,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":1580,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":1577,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":1579,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":1578,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":1576,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":1821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":1824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":1826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":1828,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":1627,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":1087,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["promise(resolve",{"_index":1642,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["properties",{"_index":13,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["property",{"_index":1351,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":741,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["props",{"_index":683,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":401,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["provided",{"_index":1880,"title":{},"body":{"index.html":{},"license.html":{}}}],["provideparent",{"_index":410,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(axeshelpercomponent",{"_index":396,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":449,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":1871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":493,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(css3dvideomeshcomponent",{"_index":520,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":565,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":662,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":749,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":790,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":809,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":817,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":842,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":854,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":883,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(meshlineconnectorcomponent",{"_index":995,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":1111,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1053,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":1129,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":1151,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":1155,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":1529,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":1545,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":1556,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":1557,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":1558,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":1560,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":1499,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":1597,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":1659,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":1672,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["public",{"_index":16,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["publish",{"_index":1960,"title":{},"body":{"license.html":{}}}],["published",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":1935,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1985,"title":{},"body":{"license.html":{}}}],["px",{"_index":536,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["rad2deg",{"_index":1164,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":346,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":342,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":567,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":655,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":1562,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":568,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":569,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["raycaster",{"_index":357,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":303,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":356,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":359,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":302,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":952,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":351,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterenabledirective",{"_index":352,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1205,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1301,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1298,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1296,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":353,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":354,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":1608,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rectangular",{"_index":467,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["regardless",{"_index":910,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["reject",{"_index":1088,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["relative",{"_index":1063,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":1097,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removepass",{"_index":1399,"title":{},"body":{"injectables/RendererService.html":{}}}],["removepass(pass",{"_index":1416,"title":{},"body":{"injectables/RendererService.html":{}}}],["render",{"_index":26,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["rendered",{"_index":1348,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":127,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.module",{"_index":299,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":368,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":370,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":298,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":117,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":366,"title":{"components/RendererCanvasComponent.html":{}},"body":{"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":1452,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["rendererservice",{"_index":95,"title":{"injectables/RendererService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":1536,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":1360,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":1334,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":1438,"title":{},"body":{"injectables/RendererService.html":{}}}],["renderpass(this.scene.getobject",{"_index":1486,"title":{},"body":{"injectables/RendererService.html":{}}}],["repo",{"_index":1885,"title":{},"body":{"index.html":{}}}],["request",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":84,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":121,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":1936,"title":{},"body":{"index.html":{}}}],["required",{"_index":974,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["reset",{"_index":143,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["resettling",{"_index":1382,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":1400,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":1419,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":1378,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1091,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resolve(mesh",{"_index":1657,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["resolve(model",{"_index":1109,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["resourcepath",{"_index":1058,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":1064,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1354,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":1955,"title":{},"body":{"license.html":{}}}],["result",{"_index":64,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["resume",{"_index":1233,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["return",{"_index":415,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1957,"title":{},"body":{"license.html":{}}}],["rotatespeed",{"_index":930,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotation",{"_index":976,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["run",{"_index":1915,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1586,"title":{},"body":{"injectables/StatsService.html":{}}}],["same",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1899,"title":{},"body":{"index.html":{}}}],["scaletofit",{"_index":1520,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":1873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scene",{"_index":755,"title":{},"body":{"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":436,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.add(this.edges",{"_index":634,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["scene.background",{"_index":1537,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":335,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenecomponent",{"_index":319,"title":{"components/SceneComponent.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1904,"title":{},"body":{"index.html":{}}}],["screenspacepanning",{"_index":931,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["see",{"_index":1751,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":1118,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":466,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":27,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["selector",{"_index":397,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["sell",{"_index":1964,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["separating",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":8,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":202,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":207,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":189,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":190,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servericonactorcomponent",{"_index":191,"title":{"components/ServerIconActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverstandactorcomponent",{"_index":192,"title":{"components/ServerStandActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":73,"title":{},"body":{"injectables/AnimationService.html":{}}}],["set",{"_index":875,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":1234,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1259,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setmaterialcolor(materialcolor",{"_index":1631,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":1515,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":1401,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":1422,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":1634,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":1073,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["setupcontrols",{"_index":921,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":873,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shadow",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1973,"title":{},"body":{"license.html":{}}}],["shape",{"_index":802,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto",{"_index":805,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":806,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":804,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["show",{"_index":444,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":381,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":1569,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":1571,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":1570,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":22,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["side",{"_index":1029,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["sides",{"_index":470,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":1878,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":718,"title":{},"body":{"components/DofComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["single",{"_index":1377,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":403,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":1822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":791,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":792,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skip",{"_index":1539,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":408,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["skycolor",{"_index":844,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["snyk",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1951,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":549,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["source.type",{"_index":551,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["sphere",{"_index":277,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":269,"title":{"components/SphereMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.component.html",{"_index":1900,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":1910,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":1920,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":1907,"title":{},"body":{"index.html":{}}}],["stand",{"_index":204,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":91,"title":{},"body":{"injectables/AnimationService.html":{}}}],["started",{"_index":1675,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1343,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["stats",{"_index":379,"title":{},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":378,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":304,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":1441,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":375,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":376,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["step",{"_index":1085,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["stop",{"_index":92,"title":{},"body":{"injectables/AnimationService.html":{}}}],["stories",{"_index":1730,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":1696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":1736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":1376,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":914,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":919,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":1969,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1962,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1933,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":106,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":128,"title":{},"body":{"injectables/AnimationService.html":{}}}],["subscribeevents",{"_index":1190,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["substantial",{"_index":1974,"title":{},"body":{"license.html":{}}}],["super(rendererservice",{"_index":413,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":560,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":954,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["super.updateparent",{"_index":1540,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":1701,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":1928,"title":{},"body":{"index.html":{}}}],["svg",{"_index":258,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":1514,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["svgloadercomponent",{"_index":252,"title":{"components/SVGLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgname",{"_index":23,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["switch",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":800,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["table",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":666,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["template",{"_index":400,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1326,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["test",{"_index":1895,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1916,"title":{},"body":{"index.html":{}}}],["text",{"_index":388,"title":{},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":1638,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":334,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":387,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":333,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["textmeshcomponent",{"_index":385,"title":{"components/TextMeshComponent.html":{}},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":1121,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["texturepath",{"_index":1059,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":1082,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1065,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":570,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":571,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":793,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._materialcolor",{"_index":1637,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":1523,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":1639,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":877,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.addpass(renderpass",{"_index":1487,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.animate",{"_index":638,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.animate.bind(this",{"_index":639,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.animate.emit",{"_index":124,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":122,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animated",{"_index":1023,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animation.animate.subscribe(this.animate",{"_index":640,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animation.animate.unsubscribe",{"_index":645,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animation.start",{"_index":641,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animationincrement",{"_index":1040,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":989,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1038,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationservice.start",{"_index":991,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationstep",{"_index":118,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":119,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":730,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applyshadowprops(mesh",{"_index":490,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.aspect",{"_index":1482,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autorotate",{"_index":969,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":971,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":1648,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":1651,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":1650,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":1649,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bokehpass",{"_index":726,"title":{},"body":{"components/DofComponent.html":{}}}],["this.bokehpass.uniforms['aperture'].value",{"_index":745,"title":{},"body":{"components/DofComponent.html":{}}}],["this.bokehpass.uniforms['focus'].value",{"_index":743,"title":{},"body":{"components/DofComponent.html":{}}}],["this.bokehpass.uniforms['maxblur'].value",{"_index":747,"title":{},"body":{"components/DofComponent.html":{}}}],["this.calculateaspectratio(canvas",{"_index":1483,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1144,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1148,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.camera",{"_index":1305,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":1442,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1149,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.canvasref",{"_index":1371,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":1373,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":680,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.centered",{"_index":1655,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.childcameras.first.camera",{"_index":963,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit(this.host",{"_index":1222,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":59,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":1445,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":1490,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.passes",{"_index":1494,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.passes.length",{"_index":1492,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1446,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.contentprojection",{"_index":507,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":508,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":953,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":990,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":968,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":970,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":977,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":972,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":983,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":985,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":981,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":966,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":956,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":979,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":987,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":959,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":1591,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.css3drenderer",{"_index":1466,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.position",{"_index":1468,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.top",{"_index":1470,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.zindex",{"_index":1471,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.render(this.scene.getobject",{"_index":1448,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.setsize(width",{"_index":1481,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.setsize(window.innerwidth",{"_index":1467,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.curvesegments",{"_index":1647,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dampingfactor",{"_index":978,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.depth",{"_index":483,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":486,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthtest",{"_index":1028,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.depthwrite",{"_index":1027,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.disable",{"_index":738,"title":{},"body":{"components/DofComponent.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":787,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":1159,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":815,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.edges",{"_index":615,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":619,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":623,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":621,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":622,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.x",{"_index":629,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.y",{"_index":631,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.z",{"_index":632,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.enable",{"_index":737,"title":{},"body":{"components/DofComponent.html":{}}}],["this.enablecss3d",{"_index":1370,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["this.enabled",{"_index":120,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":973,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":780,"title":{},"body":{"components/FogComponent.html":{}}}],["this.enablewebgl",{"_index":1369,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["this.far",{"_index":785,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.focus",{"_index":729,"title":{},"body":{"components/DofComponent.html":{}}}],["this.fov",{"_index":1146,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.geometry",{"_index":896,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.geometry.getattribute('position').array",{"_index":1020,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1292,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1303,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.getlinegeometry",{"_index":897,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.getmaterial",{"_index":488,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.getobject().background",{"_index":1543,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.groups",{"_index":1306,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1307,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1289,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.height",{"_index":482,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.heightsegments",{"_index":485,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.hightsegments",{"_index":1567,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":603,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.host.getobject",{"_index":604,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.init",{"_index":1443,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1489,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.intensity",{"_index":677,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isready",{"_index":1290,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1299,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":826,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":838,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":840,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.line",{"_index":911,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.line.geometry",{"_index":913,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.setgeometry(arr",{"_index":1021,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.line.setgeometry(this.geometry",{"_index":1044,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial",{"_index":1022,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial.uniforms.dashoffset.value",{"_index":1039,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linewidth",{"_index":1026,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.listeningcontrolelement",{"_index":964,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":965,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(this.model",{"_index":1108,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":1104,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.material",{"_index":1089,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.maxblur",{"_index":731,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdistance",{"_index":984,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":986,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":982,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mouseenter.emit(this.host",{"_index":1221,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit(this.host",{"_index":1220,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":1099,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":1101,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.near",{"_index":784,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.object",{"_index":1541,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.offset",{"_index":827,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1210,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1211,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1206,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1207,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1208,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1209,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1272,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1273,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":1365,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":1366,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1274,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1275,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1025,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.openended",{"_index":588,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.panspeed",{"_index":967,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":774,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":775,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":776,"title":{},"body":{"components/FogComponent.html":{}}}],["this.paused",{"_index":1285,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.radialsegments",{"_index":587,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":1667,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":586,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1310,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1212,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":1177,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1172,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":1654,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.remove",{"_index":1590,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.render",{"_index":1475,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":725,"title":{},"body":{"components/DofComponent.html":{}}}],["this.rendererservice.addpass(this.bokehpass",{"_index":734,"title":{},"body":{"components/DofComponent.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":728,"title":{},"body":{"components/DofComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":1368,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.removepass(this.bokehpass",{"_index":736,"title":{},"body":{"components/DofComponent.html":{}}}],["this.rendererservice.render",{"_index":130,"title":{},"body":{"injectables/AnimationService.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/SceneComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":1384,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolutionx",{"_index":535,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.resolutiony",{"_index":538,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.resourcepath",{"_index":1083,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.rotatespeed",{"_index":957,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":779,"title":{},"body":{"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":782,"title":{},"body":{"components/FogComponent.html":{}}}],["this.screenspacepanning",{"_index":980,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1294,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1295,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.size",{"_index":831,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":796,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":799,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.startloading",{"_index":1525,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":1588,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":1594,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":1593,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":1589,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":1572,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":1449,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.subscribe",{"_index":1276,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.subscribeevents",{"_index":1213,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.target",{"_index":679,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.thetalength",{"_index":590,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":589,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":801,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":1587,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":878,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.transparent",{"_index":1024,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.tube",{"_index":1668,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":1669,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1277,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":1223,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":1474,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.video.addeventlistener('canplay",{"_index":562,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":556,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":545,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.load",{"_index":561,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.loop",{"_index":546,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.muted",{"_index":547,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.play",{"_index":563,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.style.height",{"_index":555,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.style.width",{"_index":553,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.videosrc",{"_index":550,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":1453,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":1464,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":1447,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":1463,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":1456,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":1457,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":1480,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":1460,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":1459,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":1461,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.widthsegments",{"_index":484,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["this.zoomspeed",{"_index":960,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":409,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.axeshelper",{"_index":407,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":416,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":481,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.buffergeometry",{"_index":828,"title":{},"body":{"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":1538,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":585,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":675,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.doubleside",{"_index":1030,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.edgesgeometry(child.geometry",{"_index":614,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.fog(appliedcolor(this.color",{"_index":783,"title":{},"body":{"components/FogComponent.html":{}}}],["three.fontloader",{"_index":1643,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.gridhelper(this.size",{"_index":814,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":606,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":848,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1315,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.js",{"_index":1094,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.line",{"_index":892,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.line(this.geometry",{"_index":912,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial",{"_index":898,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":617,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":616,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":625,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":582,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":489,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(this.line.geometry",{"_index":1037,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":610,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.meshline",{"_index":1018,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.normalblending",{"_index":1032,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.object3d",{"_index":499,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LayerActorComponent.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["three.objectloader",{"_index":1114,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1048,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":1462,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1145,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":1153,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":1158,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1267,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.scene",{"_index":771,"title":{},"body":{"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shape",{"_index":803,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":807,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":1566,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":1646,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":1670,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector3",{"_index":1869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(x",{"_index":1309,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.webglrenderer",{"_index":1434,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":951,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":1582,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1075,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1076,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/svgloader",{"_index":1516,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":722,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":1437,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":1440,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":1439,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/renderers/css3drenderer",{"_index":530,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"injectables/RendererService.html":{}}}],["threejs.git",{"_index":1914,"title":{},"body":{"index.html":{}}}],["todo",{"_index":682,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":1574,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":1996,"title":{},"body":{"license.html":{}}}],["torus",{"_index":278,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":270,"title":{"components/TorusMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1255,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["transform",{"_index":650,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":651,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1165,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":825,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":856,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["transparent",{"_index":1001,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["tree",{"_index":391,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["try",{"_index":1311,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["tube",{"_index":1661,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":1662,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typescript",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1092,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["undefined",{"_index":310,"title":{},"body":{"modules/AtftModule.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{}}}],["underlying",{"_index":1352,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":309,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["unsubscribe",{"_index":1235,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1191,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":1897,"title":{},"body":{"index.html":{}}}],["update",{"_index":1575,"title":{},"body":{"injectables/StatsService.html":{}}}],["updateaspectratio",{"_index":1132,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":1138,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["updatechildcamerasaspectratio",{"_index":1402,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":1424,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":115,"title":{},"body":{"injectables/AnimationService.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updatelinegeometry",{"_index":886,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["updateparent",{"_index":1530,"title":{},"body":{"components/SceneComponent.html":{}}}],["upgrade",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":1887,"title":{},"body":{"index.html":{}}}],["use",{"_index":1081,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":77,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["usefull",{"_index":1186,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":1877,"title":{},"body":{"index.html":{}}}],["util",{"_index":411,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/applied",{"_index":673,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":1519,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["util/scale",{"_index":1521,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["v0.0.3",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":32,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":420,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["version",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["vertically",{"_index":1906,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":829,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["very",{"_index":1185,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":1896,"title":{},"body":{"index.html":{}}}],["video",{"_index":280,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["video/mp4",{"_index":552,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["videosrc",{"_index":523,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":505,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":1342,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('contentprojection",{"_index":504,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["want",{"_index":1902,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1981,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1976,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1917,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1050,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":1883,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":906,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":1392,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":1993,"title":{},"body":{"license.html":{}}}],["width",{"_index":454,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{}}}],["width(width",{"_index":876,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":455,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["window.addeventlistener('click",{"_index":1279,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1278,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1280,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":733,"title":{},"body":{"components/DofComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["window.innerwidth",{"_index":732,"title":{},"body":{"components/DofComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1283,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1282,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1284,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":1333,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":1338,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["within",{"_index":1066,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":1954,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":1381,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":437,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":193,"title":{"components/WorkstationActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":1867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":475,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{}}}],["x0",{"_index":837,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y",{"_index":472,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{}}}],["y0",{"_index":839,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["yanked",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":1248,"title":{},"body":{"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":462,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["zone.js",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":142,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/RendererCanvasComponent.html":{},"overview.html":{}}}],["zoomspeed",{"_index":932,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractServerActor.html":{"url":"classes/AbstractServerActor.html","title":"class - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EmptyComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:19\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper/empty.component';\n\nexport abstract class AbstractServerActor extends EmptyComponent {\n\n  @Input()\n  label: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Input()\n  svgName: string;\n\n  color = 0xffffff;\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = 0xfff0f0;\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = 0xffffff;\n  }\n\n  public onClick() {\n    // console.log('ServerActorComponent.onClick');\n    this.color = 0xffa0a0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits animate event, which should be used by animated components for animation logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animation loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:39\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animation frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animation frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits animate event, which should be used by animated components for animation logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animation frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animation frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animation loop.\n   */\n  public start() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    if (this.enabled) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animation, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MeshLineConnectorComponent} from './mesh-line-connector.component';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './dof.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCss3dVideoMeshComponent\n\nCss3dVideoMeshComponent\n\nAtftMeshModule -->\n\nCss3dVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent  -->\n\nAtftMeshModule->Css3dVideoMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            Css3dVideoMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            Css3dVideoMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {Css3dVideoMeshComponent} from './css3d-video-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    Css3dVideoMeshComponent,\n    GridMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    Css3dVideoMeshComponent,\n    GridMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: THREE.Object3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            THREE.Object3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Directive, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: THREE.Object3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection id not found! Embedded child object in \"ng-content\" can not be attached to parent object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Css3dVideoMeshComponent.html":{"url":"components/Css3dVideoMeshComponent.html","title":"component - Css3dVideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  Css3dVideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCss3dMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(Css3dVideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-css3d-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                video\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCss3dObject\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCss3dObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCss3dObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CSS3DObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, Optional, SkipSelf } from '@angular/core';\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractCss3dMesh } from './abstract-css3d-mesh';\n\n@Component({\n  selector: 'atft-css3d-video-mesh',\n  providers: [provideParent(Css3dVideoMeshComponent)],\n  template: ''\n})\nexport class Css3dVideoMeshComponent extends AbstractCss3dMesh implements AfterViewInit {\n\n  @Input()\n  videoSrc;\n\n  video = document.createElement('video');\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected createCss3dObject(): CSS3DObject {\n    // 1. Create DIV\n    const div = document.createElement('div');\n    div.style.width = this.resolutionX + 'px';\n    div.style.height = this.resolutionY + 'px';\n    div.style.backgroundColor = '#000000';\n    div.id = 'myWrapper';\n\n    // 2. Create Video Player with source\n    this.video.autoplay = false;\n    this.video.loop = true;\n    this.video.muted = true;\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = 'video/mp4';\n    this.video.style.width = '100%';\n    this.video.style.height = '100%';\n    this.video.appendChild(source);\n    div.appendChild(this.video);\n\n    // 3. Create CSS3DObject\n    const object = new CSS3DObject(div);\n    return object;\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.video.load();\n    this.video.addEventListener('canplay', () => {\n      this.video.play();\n    });\n\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'Css3dVideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                edges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animation: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animation\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit {\n\n  private edges: any;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animation: AnimationService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    console.log('Dashed draw for', this.host);\n\n    const object = this.host.getObject() as THREE.Object3D;\n\n    const list = new THREE.Group();\n\n    object.traverse(child => {\n      if (child instanceof THREE.Mesh) {\n        // child.material = new THREE.MeshBasicMaterial({color: 0x999999});\n        console.log(child);\n\n        const edgesGeom = new THREE.EdgesGeometry(child.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: 0xDA1111}));\n        this.edges.computeLineDistances();\n        // console.log(this.edges);\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n\n\n        const material = child.material as THREE.Material;\n        material.transparent = true;\n        material.opacity = 0.2;\n\n        // this.edges.scale.x = 1.01;\n        // this.edges.scale.y = 1.01;\n        // this.edges.scale.z = 1.01;\n        child.add(this.edges);\n\n        // scene.add(this.edges);\n        // child.scale.setScalar(0.999);\n        // child.visible = false;\n        // edges.add(child);\n      }\n    });\n\n\n    this.animate = this.animate.bind(this);\n    this.animation.animate.subscribe(this.animate);\n    this.animation.start();\n  }\n\n  private animate() {\n\n    // console.log(this.host.getObject().parent);\n    if (this.edges) {\n      this.edges.material.dashSize += 2;\n      if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n        // edges.material.color.set(0xffffff);\n        // edges.children[0].visible = true;\n        // this.animation.animate.unsubscribe();\n      }\n    }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/dof.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                bokehPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dof.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dof.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dof.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dof.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dof.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dof.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dof.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bokehPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BokehPass\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dof.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  protected bokehPass: BokehPass;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parent);\n  }\n\n  protected enable() {\n    // console.log('DofComponent.enable', this.rendererService);\n\n    this.bokehPass = new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n      focus: this.focus,\n      aperture: this.aperture,\n      maxblur: this.maxblur,\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    this.rendererService.addPass(this.bokehPass);\n    this.rendererService.render();\n  }\n\n  protected disable() {\n    // console.log('DofComponent.disable');\n    this.rendererService.removePass(this.bokehPass);\n    this.rendererService.render();\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.bokehPass) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['focus'].some(propName => propName in changes)) {\n      // console.log('change focus', this.focus);\n      this.bokehPass.uniforms['focus'].value = this.focus;\n      modified = true;\n    }\n\n    if (['aperture'].some(propName => propName in changes)) {\n      // console.log('change aperture', this.aperture);\n      this.bokehPass.uniforms['aperture'].value = this.aperture;\n      modified = true;\n    }\n\n    if (['maxblur'].some(propName => propName in changes)) {\n      // console.log('change maxblur');\n      this.bokehPass.uniforms['maxblur'].value = this.maxblur;\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0x0000AA\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\nimport {appliedColor} from '../util';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color = 0x0000AA;\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parent);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parent);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parent scene', this.parent);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(appliedColor(this.color), this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = x0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                name\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EmptyComponent } from '../../../object/helper';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends EmptyComponent {\n  @Input() name: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Line\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractConnector } from './abstract-connector';\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  // TODO: move to abstract?\n  private geometry: THREE.BufferGeometry;\n\n  private line: THREE.Line;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createConnectorObject(): THREE.Line {\n    this.geometry = this.getLineGeometry();\n\n    const material = new THREE.LineBasicMaterial({\n      color: appliedColor(this.materialColor),\n      /**\n       * NOTE: linewidth=1: Due to limitations of the OpenGL Core Profile\n       * with the WebGL renderer on most platforms linewidth will always be 1\n       * regardless of the set value.\n       */\n      linewidth: 1\n    });\n\n    this.line = new THREE.Line(this.geometry, material);\n\n    return this.line;\n  }\n\n  updateLineGeometry(): void {\n    this.geometry = this.getLineGeometry();\n    this.line.geometry = this.geometry;\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                minDistance\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n\n  @Input() zoomSpeed = 1.2;\n\n  @Input() autoRotate = false;\n\n  @Input() autoRotateSpeed = 0.5;\n\n  @Input() enableDamping = false;\n\n  @Input() dampingFactor = 0.1;\n\n  @Input() screenSpacePanning = false;\n\n  @Input() minDistance = 20;\n\n  @Input() maxDistance = 200;\n\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n\n  @Input() panSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping; // an animation loop is required when either damping or auto-rotation are enabled\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.update();\n\n    // Advanced animation:\n    if (this.autoRotate || this.enableDamping) {\n      this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeshLineConnectorComponent.html":{"url":"components/MeshLineConnectorComponent.html","title":"component - MeshLineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeshLineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(MeshLineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-mesh-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                            \n                                    Private\n                                lineMaterial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                animationIncrement\n                            \n                            \n                                depthTest\n                            \n                            \n                                depthWrite\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                transparent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animationIncrement\n                    \n                \n                \n                    \n                        Default value : 0.002\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthTest\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        transparent\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lineMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport { provideParent } from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {MeshLine, MeshLineMaterial} from 'three.meshline';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\nimport {AnimationService} from '../../animation/animation.service';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-mesh-line-connector',\n  providers: [provideParent(MeshLineConnectorComponent)],\n  template: ''\n})\nexport class MeshLineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  @Input()\n  transparent = true;\n\n  @Input()\n  opacity = 0.5;\n\n  @Input()\n  lineWidth = 0.5;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  depthTest = true;\n\n  @Input()\n  animated = false;\n\n  @Input() animationIncrement = 0.002;\n\n  private geometry: THREE.BufferGeometry;\n  private line: MeshLine;\n  private lineMaterial: MeshLineMaterial;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  createConnectorObject(): THREE.Mesh {\n    this.geometry = this.getLineGeometry();\n\n    this.line = new MeshLine();\n    const arr = this.geometry.getAttribute('position').array;\n    this.line.setGeometry(arr);\n\n    this.lineMaterial = (this.animated ?\n        new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending,\n          // TODO: props\n          dashArray: 0.05,\n          dashOffset: 0.1,\n          dashRatio: 0.1\n        })\n        : new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending\n        })\n    );\n\n    const mesh = new THREE.Mesh(this.line.geometry, this.lineMaterial);\n    if (this.animated) {\n      this.animate = this.animate.bind(this);\n      this.animationService.animate.subscribe(this.animate);\n    }\n    return mesh;\n  }\n\n  private animate() {\n    this.lineMaterial.uniforms.dashOffset.value += this.animationIncrement;\n  }\n\n  updateLineGeometry(): void {\n    // console.log('MeshLineConnectorComponent.updateLineGeometry');\n    this.geometry = this.getLineGeometry();\n    // https://github.com/spite/THREE.MeshLine/issues/51#issuecomment-379579926\n    this.line.setGeometry(this.geometry);\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeshLineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private loader = new OBJLoader();\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    const preloadingStep = new Promise((resolve, reject) => {\n      if (this.material === undefined) {\n        // No preloading necessary\n        resolve();\n      } else {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.loader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      }\n    });\n\n    // Await preloading and load final model\n    return preloadingStep.then(() => {\n      return new Promise((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        }, undefined, reject);\n      });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter>();\n  @Output() mouseExit = new EventEmitter>();\n  @Output() click = new EventEmitter>();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit(this.host);\n  }\n\n  private onMouseEnter() {\n    this.mouseEnter.emit(this.host);\n  }\n\n  private onClick() {\n    this.click.emit(this.host);\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Object3D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:61\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i) {\n        this.selected = i;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i) {\n      i.dispatchEvent({type: RaycasterEvent.click});\n    }\n  }\n\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i) {\n      i.dispatchEvent({type: RaycasterEvent.click});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): THREE.Object3D {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return nearestGroup;\n    } else {\n      return;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableCss3d\n                            \n                            \n                                enableWebGl\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableCss3d\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableWebGl\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:51\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input()\n  enableWebGl = true;\n\n  @Input()\n  enableCss3d = true;\n\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.enableWebGl, this.enableCss3d);\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                css3dRenderer\n                            \n                            \n                                    Private\n                                enableCss3d\n                            \n                            \n                                    Private\n                                enableWebGl\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, enableWebGl: boolean, enableCss3d: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    enableWebGl\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    enableCss3d\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            css3dRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CSS3DRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enableCss3d\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enableWebGl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {CSS3DRenderer} from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\nimport {StatsService} from '../stats/stats.service';\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n  private init = false;\n\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private enableWebGl: boolean;\n  private enableCss3d: boolean;\n  private webGlRenderer: THREE.WebGLRenderer;\n  // TODO:\n  private css3dRenderer: CSS3DRenderer;\n  private composer: EffectComposer;\n\n  private aspect: number;\n\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    if (this.init && this.scene && this.camera) {\n      // console.log('render');\n      if (this.enableWebGl) {\n        if (this.composer) {\n          this.composer.render(0.1);\n        } else {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      }\n      if (this.enableCss3d) {\n        this.css3dRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, enableWebGl: boolean, enableCss3d: boolean) {\n    // console.log('RendererComponent.initialize');\n\n    this.enableWebGl = enableWebGl;\n    this.enableCss3d = enableCss3d;\n\n    if (enableWebGl) {\n      // TODO: Multiple renderers\n      this.webGlRenderer = new THREE.WebGLRenderer({\n        canvas: canvas,\n        antialias: true,\n        alpha: true\n      });\n      this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n      this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n      // TODO: props\n      this.webGlRenderer.shadowMap.enabled = false;\n      this.webGlRenderer.shadowMap.autoUpdate = false;\n      this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      this.webGlRenderer.setClearColor(0x000000, 0);\n      this.webGlRenderer.autoClear = true;\n      canvas.style.zIndex = '2';\n    }\n\n    if (enableCss3d) {\n      this.css3dRenderer = new CSS3DRenderer();\n      this.css3dRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.css3dRenderer.domElement.style.position = 'absolute';\n      this.css3dRenderer.domElement.style.top = '0';\n      this.css3dRenderer.domElement.style.zIndex = '-1';\n      canvas.parentElement.appendChild(this.css3dRenderer.domElement);\n    }\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    if (this.enableWebGl) {\n      this.webGlRenderer.setSize(width, height, true);\n    }\n\n    if (this.enableCss3d) {\n      this.css3dRenderer.setSize(width, height);\n    }\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public initComposer() {\n    // console.log('RendererService.initComposer');\n    this.composer = new EffectComposer(this.webGlRenderer);\n    const renderPass = new RenderPass(this.scene.getObject(), this.camera.camera);\n    this.addPass(renderPass);\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('RendererService.addPass', pass);\n    if (!this.composer) {\n      this.initComposer();\n    }\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('RendererService.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SVGLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, appliedMaterial, provideParent } from '../../util';\nimport { fixCenter } from '../../util/fix-center';\nimport { scaleToFit } from '../../util/scale-to-fit';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): number {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: number) {\n    this._overrideMaterialColor = value;\n    this.startLoading();\n  }\n\n  private _overrideMaterialColor: number = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  private loader = new SVGLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, data => {\n          const paths = data.paths;\n          const group = new THREE.Group();\n\n          for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {appliedColor} from '../util/applied-color';\nimport {AbstractObject3D} from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background = 0xffffff;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    return scene;\n  }\n\n  protected updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(appliedColor(this.background));\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n  \n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n      \n\n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xDADADA\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:28\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:39\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedMaterial, provideParent } from '../../util';\nimport { fixCenter } from '../../util/fix-center';\nimport { AbstractLazyObject3D } from '../abstract-lazy-object-3d';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n\n  private _materialColor = 0xDADADA;\n  @Input()\n  set materialColor(materialColor: number) {\n    // console.log('change color', materialColor);\n    this._materialColor = materialColor;\n    this.startLoading();\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    this.startLoading();\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject');\n\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(this.fontUrl, font => {\n\n        const geometry = new THREE.TextGeometry(this.text, {\n          font: font,\n          size: this.size,\n          height: this.height,\n          curveSegments: this.curveSegments,\n          bevelEnabled: this.bevelEnabled,\n          bevelThickness: this.bevelThickness,\n          bevelSize: this.bevelSize,\n          bevelOffset: this.bevelOffset,\n          bevelSegments: this.bevelOffset\n        });\n        const material = this.getMaterial();\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.castShadow = this.castShadow;\n        mesh.receiveShadow = this.receiveShadow;\n\n        if (this.centered) {\n          fixCenter(mesh);\n        }\n        resolve(mesh);\n      });\n    });\n\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            class\n            AbstractServerActor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n            \n            component\n            MeshLineConnectorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts\n            \n            component\n            Css3dVideoMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.1\n        \n            @angular/common : ^10.2.1\n        \n            @angular/compiler : ^10.2.1\n        \n            @angular/core : ^10.2.1\n        \n            @angular/forms : ^10.2.1\n        \n            @angular/platform-browser : ^10.2.1\n        \n            @angular/platform-browser-dynamic : ^10.2.1\n        \n            @angular/router : ^10.2.1\n        \n            core-js : ^3.6.5\n        \n            rxjs : ^6.6.3\n        \n            snyk : ^1.411.0\n        \n            three : ^0.122.0\n        \n            three.meshline : ^1.3.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCss3dVideoMeshComponent\n\nCss3dVideoMeshComponent\n\nAtftMeshModule -->\n\nCss3dVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent  -->\n\nAtftMeshModule->Css3dVideoMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    34 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
