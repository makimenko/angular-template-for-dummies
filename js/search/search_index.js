var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCacheService.html",[0,0.125,1,2.932]],["body/classes/AbstractCacheService.html",[0,0.17,1,4.895,2,4.255,3,0.154,4,0.154,5,0.124,6,7.04,7,5.064,8,0.507,9,1.514,10,1.512,11,6.13,12,0.92,13,1.807,14,5.66,15,1.881,16,4.733,17,5.234,18,1.011,19,0.982,20,0.011,21,1.208,22,1.107,23,0.934,24,5.767,25,5.66,26,3.055,27,5.767,28,0.92,29,0.649,30,0.624,31,0.752,32,5.679,33,0.891,34,5.531,35,5.66,36,5.767,37,0.154,38,1.83,39,7.685,40,5.767,41,5.767,42,1.244,43,5.767,44,5.767,45,7.685,46,5.767,47,5.767,48,0.007,49,0.009,50,0.007]],["title/classes/AbstractComposeEffect.html",[0,0.125,51,2.762]],["body/classes/AbstractComposeEffect.html",[0,0.141,2,3.54,3,0.128,4,0.128,5,0.103,8,0.422,9,1.347,10,1.534,12,0.819,13,1.836,15,1.956,18,0.841,19,0.817,20,0.011,23,1.016,28,0.915,29,0.645,30,0.659,31,0.825,33,1.023,37,0.128,42,0.841,48,0.006,49,0.008,50,0.006,51,4.103,52,7.411,53,5.823,54,4.214,55,1.725,56,3.121,57,2.824,58,3.354,59,5.169,60,4.657,61,4.614,62,4.192,63,5.528,64,3.099,65,2.793,66,2.731,67,0.956,68,1.024,69,1.441,70,4.584,71,1.169,72,6.312,73,4.354,74,4.657,75,3.605,76,4.799,77,2.699,78,3.531,79,4.799,80,1.658,81,4.799,82,4.799,83,4.799,84,2.793,85,4.799,86,4.799,87,0.201,88,1.588,89,0.209,90,1.241,91,0.841,92,3.311,93,4.214,94,4.799,95,3.311,96,5.035,97,4.799,98,4.799,99,4.799,100,6.312,101,4.214,102,3.484,103,4.799,104,4.799,105,4.799,106,3.828,107,4.799,108,4.799]],["title/components/AmbientLightComponent.html",[109,0.037,110,0.703]],["body/components/AmbientLightComponent.html",[0,0.115,3,0.105,4,0.105,5,0.084,8,0.344,10,1.308,12,0.713,13,0.883,18,0.963,19,0.936,20,0.011,21,0.667,22,0.611,23,0.837,28,0.508,29,0.63,30,0.344,31,0.673,33,0.492,37,0.105,38,0.933,42,0.686,48,0.005,49,0.007,50,0.005,67,0.832,68,0.835,69,1.356,71,0.611,87,0.194,88,1.383,89,0.17,90,1.013,91,0.686,109,0.055,110,1.139,111,0.857,112,0.727,113,0.727,114,6.369,115,2.702,116,0.909,117,1.945,118,0.593,119,0.69,120,4.385,121,1.444,122,1.32,123,1.146,124,4.751,125,0.991,126,2.671,127,1.239,128,2.627,129,4.686,130,1.935,131,4.055,132,3.221,133,3.438,134,5.497,135,3.916,136,1.318,137,1.274,138,2.012,139,0.859,140,0.859,141,0.832,142,1.164,143,0.959,144,3.916,145,3.916,146,3.124,147,0.4,148,0.991,149,0.991,150,0.492,151,1.278,152,0.727,153,1.278,154,0.648,155,0.706,156,1.02,157,0.648,158,0.727,159,0.648,160,0.686,161,1.487,162,0.648,163,0.706,164,0.727,165,0.648,166,0.706,167,0.648,168,1.098,169,0.727,170,0.667,171,0.727,172,0.648,173,0.727,174,0.648,175,0.727,176,0.648,177,0.667,178,0.727,179,0.648,180,0.706,181,0.648,182,0.727,183,0.648,184,0.727,185,0.727,186,0.727,187,0.648,188,0.727,189,0.648,190,0.727,191,0.648,192,0.667,193,0.648,194,1.113,195,1.463,196,0.648,197,0.648,198,0.648,199,0.706,200,0.648,201,0.727,202,0.648,203,0.686,204,0.727,205,0.648,206,0.648,207,0.648,208,1.02,209,0.648,210,1.178,211,0.648,212,0.667,213,0.648,214,0.706,215,0.648,216,0.706,217,1.02,218,0.648,219,0.706,220,0.648,221,0.686,222,0.648,223,0.706,224,0.648,225,0.667,226,0.727,227,0.611,228,0.727,229,0.648,230,1.278,231,0.686,232,0.648,233,0.686,234,0.648,235,0.558,236,0.648,237,0.686,238,0.648,239,0.706,240,0.648,241,0.686,242,0.648,243,0.991,244,0.648,245,0.648,246,0.706,247,0.648,248,0.706,249,0.648,250,0.727,251,0.706,252,0.593,253,0.629,254,0.667,255,0.727,256,0.629,257,0.933,258,0.727,259,0.629,260,0.727,261,0.611,262,0.727,263,0.629,264,0.667,265,0.667,266,0.706,267,0.727]],["title/injectables/AnimationService.html",[268,1.758,269,2.099]],["body/injectables/AnimationService.html",[0,0.139,3,0.126,4,0.126,5,0.101,8,0.414,9,1.329,12,0.808,15,2.039,18,1.092,19,1.061,20,0.011,21,1.061,23,0.966,28,0.61,29,0.43,30,0.414,31,0.499,33,0.877,37,0.126,48,0.006,49,0.008,50,0.006,67,0.943,68,1.004,69,1.433,80,1.449,87,0.167,89,0.205,90,1.217,102,2.324,111,1.206,192,1.266,225,0.801,268,2.577,269,4.188,270,2.757,271,4.131,272,3.058,273,3.65,274,7.434,275,6.23,276,4.97,277,3.981,278,4.596,279,5.47,280,6.23,281,4.596,282,5.47,283,6.23,284,6.23,285,4.326,286,7.434,287,7.434,288,6.984,289,4.54,290,2.552,291,5.931,292,7.434,293,6.978,294,6.34,295,6.23,296,4.705,297,4.705,298,4.596,299,4.705,300,6.23,301,3.907,302,4.705,303,4.97,304,6.23,305,6.23,306,4.049,307,6.23,308,6.23,309,6.23,310,6.23,311,5.153,312,2.261,313,6.23,314,4.705,315,4.705,316,6.34,317,1.438,318,4.705,319,4.705,320,6.23,321,4.705,322,4.705,323,1.715,324,4.705,325,4.705,326,3.753,327,3.753,328,4.705]],["title/modules/AtftAnimationModule.html",[329,0.932,330,2.932]],["body/modules/AtftAnimationModule.html",[0,0.19,3,0.173,4,0.173,5,0.138,20,0.011,37,0.173,48,0.008,49,0.009,50,0.008,87,0.203,89,0.281,119,1.013,147,0.66,269,4.25,329,1.416,330,5.936,331,2.353,332,2.353,333,2.504,334,2.504,335,2.504,336,5.67,337,5.67,338,2.768,339,2.427,340,2.427,341,6.457,342,6.457,343,3.04,344,6.457]],["title/modules/AtftCameraModule.html",[329,0.932,345,2.932]],["body/modules/AtftCameraModule.html",[0,0.178,3,0.162,4,0.162,5,0.129,20,0.011,37,0.162,48,0.007,49,0.009,50,0.007,87,0.218,89,0.263,119,0.758,147,0.618,215,1.461,216,1.089,218,1.461,219,1.089,329,1.325,331,2.201,332,2.201,333,3.041,334,2.342,335,3.041,338,2.66,339,2.27,340,2.27,343,2.922,345,6.041,346,5.303,347,5.303,348,5.303,349,6.04,350,6.04,351,3.121,352,2.498,353,7.297,354,2.418]],["title/modules/AtftConnectorModule.html",[329,0.932,355,2.932]],["body/modules/AtftConnectorModule.html",[0,0.184,3,0.167,4,0.167,5,0.134,20,0.011,37,0.167,48,0.008,49,0.009,50,0.008,87,0.213,89,0.271,119,0.783,147,0.638,202,1.467,203,1.093,329,1.368,331,2.273,332,2.273,333,3.083,334,2.418,335,3.083,338,2.711,339,2.344,340,2.344,343,2.978,351,3.181,352,2.579,354,2.497,355,5.952,356,5.476,357,5.476,358,5.476,359,6.236,360,6.236,361,6.236]],["title/modules/AtftControlModule.html",[329,0.932,362,2.932]],["body/modules/AtftControlModule.html",[0,0.178,3,0.162,4,0.162,5,0.129,20,0.011,22,0.942,37,0.162,48,0.007,49,0.009,50,0.007,87,0.218,89,0.263,119,0.758,147,0.618,207,1.461,213,1.461,214,1.089,329,1.325,331,2.201,332,2.201,333,3.041,334,2.342,335,3.041,338,2.66,339,2.27,340,2.27,343,2.922,351,3.121,352,2.498,354,2.418,362,6.041,363,5.303,364,5.303,365,5.303,366,6.04,367,6.04,368,7.297]],["title/modules/AtftDataCenterActorModule.html",[329,0.932,369,3.135]],["body/modules/AtftDataCenterActorModule.html",[0,0.131,3,0.119,4,0.119,5,0.096,20,0.011,37,0.119,48,0.005,49,0.007,50,0.005,87,0.225,89,0.194,119,0.56,147,0.456,167,1.417,170,1.459,172,1.4,174,1.417,176,1.4,193,1.4,200,1.4,229,1.417,231,0.781,232,1.417,233,0.781,234,1.417,235,0.635,236,1.417,237,0.781,249,1.4,329,0.978,331,1.625,332,1.625,333,2.636,334,1.729,335,2.636,338,2.19,339,1.676,340,1.676,343,2.406,351,2.57,352,1.844,354,2.406,369,6.632,370,3.915,371,3.915,372,3.915,373,3.915,374,4.819,375,1.625,376,4.458,377,3.557,378,3.289,379,3.915,380,6.01,381,4.458,382,7.023,383,3.915,384,7.276,385,4.458,386,4.458,387,2.388]],["title/modules/AtftEffectModule.html",[329,0.932,388,2.932]],["body/modules/AtftEffectModule.html",[0,0.159,3,0.144,4,0.144,5,0.115,20,0.011,37,0.144,48,0.007,49,0.008,50,0.007,71,1.357,87,0.227,89,0.234,92,3.716,119,0.676,147,0.551,157,1.44,181,1.44,183,1.44,189,1.44,253,1.398,254,0.917,329,1.181,331,1.963,332,1.963,333,2.889,334,2.089,335,2.889,338,2.478,339,2.024,340,2.024,343,2.722,351,2.908,352,2.228,354,2.156,388,6.16,389,4.729,390,4.729,391,4.729,392,5.386,393,5.386,394,5.386,395,5.386,396,5.386,397,5.386,398,5.386,399,5.386,400,5.386]],["title/modules/AtftHelperModule.html",[329,0.932,401,2.932]],["body/modules/AtftHelperModule.html",[0,0.173,3,0.157,4,0.157,5,0.126,20,0.011,37,0.157,48,0.007,49,0.009,50,0.007,87,0.221,89,0.255,119,0.736,147,0.6,154,1.456,155,1.058,187,1.456,194,1.028,196,1.456,329,1.286,331,2.137,332,2.137,333,3.002,334,2.274,335,3.002,338,2.613,339,2.204,340,2.204,343,2.87,351,3.065,352,2.425,354,2.348,401,6.091,402,5.149,403,5.149,404,5.149,405,5.864,406,5.864,407,7.168,408,5.864]],["title/modules/AtftLightModule.html",[329,0.932,409,2.932]],["body/modules/AtftLightModule.html",[0,0.166,3,0.15,4,0.15,5,0.12,20,0.011,37,0.15,48,0.007,49,0.008,50,0.007,87,0.223,89,0.245,110,1.458,119,0.706,120,6.062,123,1.014,147,0.575,179,1.448,180,1.014,198,1.448,199,1.014,222,1.448,223,1.014,329,1.233,331,2.049,332,2.049,333,2.947,334,2.181,335,2.947,338,2.546,339,2.113,340,2.113,343,2.796,351,2.987,352,2.326,354,2.251,409,6.115,410,4.937,411,4.937,412,4.937,413,4.937,414,5.623,415,5.623,416,7.947]],["title/modules/AtftLoaderModule.html",[329,0.932,417,2.932]],["body/modules/AtftLoaderModule.html",[0,0.173,3,0.157,4,0.157,5,0.125,20,0.011,37,0.157,48,0.007,49,0.009,50,0.007,87,0.221,89,0.255,119,0.735,141,0.886,147,0.599,209,1.455,211,1.455,212,0.997,240,1.455,241,1.026,329,1.284,331,2.134,332,2.134,333,3,334,2.27,335,3,338,2.61,339,2.201,340,2.201,343,2.867,351,3.063,352,2.422,354,2.344,417,6.09,418,5.141,419,5.141,420,5.141,421,5.855,422,5.855,423,7.736]],["title/modules/AtftMeshModule.html",[329,0.932,424,2.932]],["body/modules/AtftMeshModule.html",[0,0.15,3,0.136,4,0.136,5,0.109,20,0.011,37,0.136,48,0.006,49,0.008,50,0.006,87,0.228,89,0.221,119,0.638,147,0.519,159,1.428,160,0.89,165,1.428,166,0.916,191,1.428,192,0.865,194,0.89,197,1.428,220,1.428,221,0.89,238,1.428,239,0.916,245,1.428,246,0.916,247,1.428,248,0.916,329,1.114,331,1.851,332,1.851,333,2.811,334,1.969,335,2.811,338,2.387,339,1.909,340,1.909,343,2.622,351,2.801,352,2.101,354,2.033,424,6.179,425,4.46,426,4.46,427,4.46,428,5.079,429,5.079,430,7.345]],["title/modules/AtftModule.html",[329,0.932,374,2.617]],["body/modules/AtftModule.html",[0,0.148,3,0.134,4,0.134,5,0.107,19,0.853,20,0.011,37,0.134,48,0.006,49,0.008,50,0.006,87,0.229,89,0.218,119,0.629,147,0.512,281,3.693,329,1.423,330,5.942,331,1.825,332,1.825,333,1.941,334,1.941,335,2.791,338,2.365,339,1.881,340,1.881,343,2.597,345,5.942,354,2.882,362,5.942,374,5.516,388,5.942,431,4.395,432,4.395,433,4.395,434,5.942,435,5.942,436,5.942,437,5.942,438,5.006,439,5.006,440,5.006,441,5.006,442,5.006,443,5.006,444,5.006,445,4.966,446,5.006,447,5.006,448,5.006,449,5.006,450,5.006,451,5.006,452,5.006,453,5.006,454,5.006,455,5.006,456,5.006,457,4.395,458,4.395,459,4.395,460,2.8,461,5.006,462,4.395,463,5.006]],["title/modules/AtftObjectModule.html",[329,0.932,434,2.932]],["body/modules/AtftObjectModule.html",[0,0.145,3,0.131,4,0.131,5,0.105,20,0.011,37,0.131,48,0.006,49,0.008,50,0.006,87,0.228,89,0.213,119,0.895,147,0.501,162,1.33,163,0.884,206,0.811,227,1.34,329,1.075,331,1.787,332,1.787,333,2.764,334,1.901,335,2.764,338,2.333,339,1.843,340,1.843,343,2.563,351,2.738,352,2.028,354,2.563,355,5.924,401,5.924,409,5.924,417,5.924,424,5.924,434,6.194,464,4.305,465,4.305,466,4.305,467,4.305,468,4.305,469,5.924,470,5.225,471,4.951,472,5.225,473,4.903,474,4.903,475,4.903,476,4.903,477,4.903,478,4.903,479,4.903,480,4.903,481,4.903,482,4.903,483,4.903,484,4.903,485,4.903,486,4.903,487,4.903,488,4.903]],["title/modules/AtftPipeModule.html",[329,0.932,445,2.932]],["body/modules/AtftPipeModule.html",[0,0.179,3,0.162,4,0.162,5,0.13,20,0.011,37,0.162,48,0.007,49,0.009,50,0.007,87,0.218,89,0.264,119,0.761,147,0.62,329,1.329,331,2.208,332,2.208,333,3.045,334,2.349,335,3.045,338,2.665,339,2.277,340,2.277,343,2.927,351,3.127,352,2.506,354,2.426,445,6.044,489,5.32,490,5.32,491,5.32,492,6.094,493,6.094,494,6.059,495,6.059,496,6.059,497,6.059]],["title/modules/AtftRaycasterModule.html",[329,0.932,435,2.932]],["body/modules/AtftRaycasterModule.html",[0,0.168,3,0.153,4,0.153,5,0.122,20,0.011,37,0.153,48,0.007,49,0.009,50,0.007,87,0.224,89,0.249,119,0.961,147,0.584,256,1.409,257,1.124,259,1.409,261,1.368,329,1.253,331,2.083,332,2.083,333,2.968,334,2.216,335,2.968,338,2.572,339,2.148,340,2.148,343,2.825,351,3.017,352,2.364,354,2.288,435,6.109,498,5.018,499,5.018,500,5.018,501,5.018,502,3.977,503,5.715,504,5.715,505,5.715,506,3.943,507,5.715,508,5.715]],["title/modules/AtftRendererModule.html",[329,0.932,436,2.932]],["body/modules/AtftRendererModule.html",[0,0.179,3,0.163,4,0.163,5,0.13,20,0.011,37,0.163,48,0.007,49,0.009,50,0.007,69,1.531,87,0.218,89,0.264,119,0.987,147,0.622,224,1.462,225,1.035,329,1.333,331,2.215,332,2.215,333,3.049,334,2.357,335,3.049,338,2.67,339,2.284,340,2.284,343,2.933,351,3.133,352,2.514,354,2.433,436,6.014,509,5.337,510,5.337,511,5.337,512,5.337,513,6.078,514,6.078,515,6.078,516,5.337]],["title/modules/AtftStatsModule.html",[329,0.932,437,2.932]],["body/modules/AtftStatsModule.html",[0,0.179,3,0.163,4,0.163,5,0.13,20,0.011,37,0.163,48,0.007,49,0.009,50,0.007,87,0.218,89,0.264,119,0.987,147,0.622,263,1.42,264,1.035,265,1.035,329,1.333,331,2.215,332,2.215,333,3.049,334,2.357,335,3.049,338,2.67,339,2.284,340,2.284,343,2.933,351,3.133,352,2.514,354,2.433,437,6.014,517,5.337,518,5.337,519,5.337,520,5.337,521,5.227,522,6.078,523,5.337,524,6.078]],["title/modules/AtftTextModule.html",[329,0.932,469,2.932]],["body/modules/AtftTextModule.html",[0,0.184,3,0.167,4,0.167,5,0.134,20,0.011,37,0.167,48,0.008,49,0.009,50,0.008,87,0.213,89,0.271,119,0.783,147,0.638,243,1.125,244,1.467,329,1.368,331,2.273,332,2.273,333,3.083,334,2.418,335,3.083,338,2.711,339,2.344,340,2.344,343,2.978,351,3.181,352,2.579,354,2.497,430,5.476,469,5.952,525,5.476,526,5.476,527,5.476,528,6.236,529,6.236]],["title/components/AxesHelperComponent.html",[109,0.037,154,0.703]],["body/components/AxesHelperComponent.html",[0,0.117,3,0.107,4,0.107,5,0.085,8,0.35,10,1.317,12,0.722,13,0.898,18,0.699,19,0.679,20,0.011,21,0.679,22,0.622,23,0.779,28,0.517,29,0.634,30,0.35,31,0.68,33,0.5,37,0.107,42,0.699,48,0.005,49,0.007,50,0.005,67,0.842,68,0.85,69,1.364,71,0.622,87,0.195,88,1.4,89,0.173,90,1.031,91,0.699,109,0.055,110,0.659,111,0.868,112,0.739,113,0.739,116,0.921,117,1.956,118,0.603,119,0.699,121,1.445,122,1.321,123,0.719,125,1.004,126,2.691,127,1.254,130,1.95,136,1.155,137,1.289,139,0.874,140,0.874,141,0.842,142,1.184,143,0.976,147,0.408,148,1.004,149,1.004,150,0.5,151,1.288,152,0.739,153,1.288,154,1.148,155,1.156,156,1.033,157,0.659,158,0.739,159,0.659,160,0.699,161,1.493,162,0.659,163,0.719,164,0.739,165,0.659,166,0.719,167,0.659,168,1.105,169,0.739,170,0.679,171,0.739,172,0.659,173,0.739,174,0.659,175,0.739,176,0.659,177,0.679,178,0.739,179,0.659,180,0.719,181,0.659,182,0.739,183,0.659,184,0.739,185,0.739,186,0.739,187,0.659,188,0.739,189,0.659,190,0.739,191,0.659,192,0.679,193,0.659,194,1.124,195,1.469,196,0.659,197,0.659,198,0.659,199,0.719,200,0.659,201,0.739,202,0.659,203,0.699,204,0.739,205,0.659,206,0.659,207,0.659,208,1.033,209,0.659,210,1.19,211,0.659,212,0.679,213,0.659,214,0.719,215,0.659,216,0.719,217,1.033,218,0.659,219,0.719,220,0.659,221,0.699,222,0.659,223,0.719,224,0.659,225,0.679,226,0.739,227,0.622,228,0.739,229,0.659,230,1.288,231,0.699,232,0.659,233,0.699,234,0.659,235,0.568,236,0.659,237,0.699,238,0.659,239,0.719,240,0.659,241,0.699,242,0.659,243,1.004,244,0.659,245,0.659,246,0.719,247,0.659,248,0.719,249,0.659,250,0.739,251,0.719,252,0.603,253,0.64,254,0.679,255,0.739,256,0.64,257,0.942,258,0.739,259,0.64,260,0.739,261,0.622,262,0.739,263,0.64,264,0.679,265,0.679,266,0.719,267,0.739,530,6.093,531,3.179,532,5.564,533,4.886,534,4.167,535,4.886,536,4.439,537,3.985,538,4.886,539,3.985,540,3.985]],["title/interfaces/BaseInfo.html",[541,1.597,542,2.49]],["body/interfaces/BaseInfo.html",[3,0.159,4,0.159,5,0.128,8,0.523,9,1.544,20,0.011,26,3.241,29,0.741,30,0.73,31,0.859,37,0.222,48,0.007,49,0.009,50,0.007,87,0.159,116,1.289,128,2.463,168,1.095,235,0.848,375,2.171,387,3.189,541,3.122,542,4.868,543,3.331,544,2.832,545,3.871,546,4.449,547,4.342,548,3.06,549,3.871,550,3.331,551,1.873,552,3.189,553,3.871,554,4.108,555,4.36,556,3.871,557,3.189]],["title/components/BlurComponent.html",[109,0.037,157,0.703]],["body/components/BlurComponent.html",[0,0.105,3,0.096,4,0.096,5,0.076,8,0.314,9,1.098,10,1.388,12,0.667,13,1.578,15,1.617,18,0.626,19,0.608,20,0.011,22,0.557,23,0.979,28,0.857,29,0.687,30,0.615,31,0.773,33,0.984,37,0.096,42,0.626,48,0.004,49,0.006,50,0.004,51,5.238,53,2.462,59,3.55,60,4.873,61,3.716,62,3.376,63,5.547,64,2.496,65,2.278,66,2.199,67,0.779,68,0.761,69,1.316,70,4.293,71,1.092,73,2.462,74,4.452,75,3.406,77,2.825,78,2.879,80,1.514,84,1.58,87,0.201,88,1.295,89,0.155,90,0.923,91,1.058,92,2.462,109,0.052,110,0.591,111,0.803,112,0.662,113,0.662,116,0.851,118,0.54,121,1.438,122,1.315,123,0.644,125,0.644,141,0.54,143,0.874,147,0.365,148,0.928,149,0.928,150,0.448,151,1.226,152,0.662,153,1.226,154,0.591,155,0.644,156,0.955,157,1.093,158,0.662,159,0.591,160,0.626,161,1.455,162,0.591,163,0.644,164,0.662,165,0.591,166,0.644,167,0.591,168,1.06,169,0.662,170,0.608,171,0.662,172,0.591,173,0.662,174,0.591,175,0.662,176,0.591,177,0.608,178,0.662,179,0.591,180,0.644,181,0.591,182,0.662,183,0.591,184,0.662,185,0.662,186,0.662,187,0.591,188,0.662,189,0.591,190,0.662,191,0.591,192,0.608,193,0.591,194,1.058,195,1.428,196,0.591,197,0.591,198,0.591,199,0.644,200,0.591,201,0.662,202,0.591,203,0.626,204,0.662,205,0.591,206,0.591,207,0.591,208,0.955,209,0.591,210,1.12,211,0.591,212,0.608,213,0.591,214,0.644,215,0.591,216,0.644,217,0.955,218,0.591,219,0.644,220,0.591,221,0.626,222,0.591,223,0.644,224,0.591,225,0.608,226,0.662,227,0.557,228,0.662,229,0.591,230,1.226,231,0.626,232,0.591,233,0.626,234,0.591,235,0.509,236,0.591,237,0.626,238,0.591,239,0.644,240,0.591,241,0.626,242,0.591,243,0.928,244,0.591,245,0.591,246,0.644,247,0.591,248,0.644,249,0.591,250,0.662,251,0.644,252,0.54,253,0.573,254,0.608,255,0.662,256,0.573,257,0.886,258,0.662,259,0.573,260,0.662,261,0.557,262,0.662,263,0.573,264,0.608,265,0.608,266,0.644,267,0.662,312,1.156,558,3.134,559,5.146,560,3.569,561,3.569,562,3.569,563,4.509,564,2.847,565,2.847,566,2.847,567,2.847,568,2.847,569,2.847,570,2.847,571,2.847,572,3.134,573,3.134,574,3.569,575,3.569,576,3.569,577,3.569,578,5.269,579,5.146,580,5.146,581,1.912,582,2.847]],["title/components/BoxMeshComponent.html",[109,0.037,159,0.703]],["body/components/BoxMeshComponent.html",[0,0.095,3,0.087,4,0.087,5,0.069,8,0.285,10,1.214,12,0.621,13,1.08,18,1.235,19,1.2,20,0.011,21,0.816,22,0.505,23,0.91,28,0.42,29,0.576,30,0.285,31,0.87,33,0.407,37,0.087,38,1.359,42,0.567,48,0.004,49,0.006,50,0.004,67,0.725,68,0.691,69,1.271,71,0.505,87,0.189,88,1.206,89,0.141,90,0.837,91,0.567,109,0.049,110,0.536,111,0.747,112,0.601,113,0.601,116,0.793,117,1.631,118,0.49,119,0.602,121,1.431,122,1.308,123,0.584,125,0.864,126,2.445,127,1.08,130,1.772,136,1.513,137,1.11,139,0.71,140,0.71,141,0.725,142,1.424,143,0.793,147,0.331,148,0.864,149,0.864,150,0.407,151,1.17,152,0.601,153,1.17,154,0.536,155,0.584,156,0.889,157,0.536,158,0.601,159,1.043,160,1,161,1.419,162,0.536,163,0.584,164,0.601,165,0.536,166,0.584,167,0.536,168,1.019,169,0.601,170,0.551,171,0.601,172,0.536,173,0.601,174,0.536,175,0.601,176,0.536,177,0.551,178,0.601,179,0.536,180,0.584,181,0.536,182,0.601,183,0.536,184,0.601,185,0.601,186,0.601,187,0.536,188,0.601,189,0.536,190,0.601,191,0.536,192,0.551,193,0.536,194,1,195,1.389,196,0.536,197,0.536,198,0.536,199,0.584,200,0.536,201,0.601,202,0.536,203,0.567,204,0.601,205,0.536,206,0.536,207,0.536,208,0.889,209,0.536,210,1.059,211,0.536,212,0.551,213,0.536,214,0.584,215,0.536,216,0.584,217,0.889,218,0.536,219,0.584,220,0.536,221,0.567,222,0.536,223,0.584,224,0.536,225,0.551,226,0.601,227,0.505,228,0.601,229,0.536,230,1.17,231,0.567,232,0.536,233,0.567,234,0.536,235,0.461,236,0.536,237,0.567,238,0.536,239,0.584,240,0.536,241,0.567,242,0.536,243,0.864,244,0.536,245,0.536,246,0.584,247,0.536,248,0.584,249,0.536,250,0.601,251,0.584,252,0.49,253,0.52,254,0.551,255,0.601,256,0.52,257,0.838,258,0.601,259,0.52,260,0.601,261,0.505,262,0.601,263,0.52,264,0.551,265,0.551,266,0.584,267,0.601,551,2.217,557,3.774,583,6.715,584,1.734,585,3.343,586,4.792,587,3.605,588,6.404,589,5.705,590,3.344,591,4.209,592,4.274,593,4.209,594,4.792,595,3.943,596,2.583,597,5.622,598,5.622,599,4.792,600,5.622,601,6.372,602,3.142,603,6.188,604,6.188,605,6.188,606,6.188,607,6.188,608,2.583,609,3.115,610,3.238,611,2.389,612,3.115,613,2.843,614,3.238,615,3.238,616,1.484,617,3.238,618,2.104,619,3.238,620,2.389,621,2.389,622,3.238,623,2.197,624,1.811,625,1.811,626,1.994]],["title/interfaces/Composition.html",[541,1.597,546,2.276]],["body/interfaces/Composition.html",[3,0.163,4,0.163,5,0.13,8,0.535,9,1.564,20,0.011,26,3.21,29,0.556,30,0.692,31,0.777,37,0.224,48,0.007,49,0.009,50,0.007,87,0.163,116,1.351,128,2.518,168,1.11,235,0.867,375,2.219,387,3.26,541,3.141,542,4.898,543,3.406,544,2.895,545,3.957,546,4.214,547,3.26,548,3.128,549,5.309,550,3.406,551,1.915,552,3.26,553,3.957,554,4.2,555,4.402,556,3.957,557,3.26]],["title/components/ContentProjectionComponent.html",[109,0.037,162,0.703]],["body/components/ContentProjectionComponent.html",[0,0.114,3,0.104,4,0.104,5,0.083,8,0.34,9,1.163,10,1.236,12,0.707,13,0.873,20,0.011,22,0.604,23,0.833,28,0.707,29,0.685,30,0.555,31,0.726,33,0.685,37,0.104,48,0.005,49,0.007,50,0.005,67,0.826,68,0.826,69,1.352,71,0.604,80,0.804,87,0.201,88,1.372,89,0.169,90,1.002,91,0.679,95,2.671,109,0.054,110,0.641,111,0.851,112,0.719,113,0.719,116,0.902,117,2.067,118,0.586,119,0.685,121,1.443,122,1.32,123,0.698,125,0.984,126,2.448,130,1.926,137,1.264,139,0.849,140,0.849,141,1.094,142,1.151,143,0.948,147,0.396,148,0.984,149,0.984,150,0.685,151,1.272,152,0.719,153,1.272,154,0.641,155,0.698,156,1.012,157,0.641,158,0.719,159,0.641,160,0.679,161,1.483,162,1.134,163,1.236,164,0.719,165,0.641,166,0.698,167,0.641,168,1.094,169,0.719,170,0.66,171,0.719,172,0.641,173,0.719,174,0.641,175,0.719,176,0.641,177,0.66,178,0.719,179,0.641,180,0.698,181,0.641,182,0.719,183,0.641,184,0.719,185,0.719,186,0.719,187,1.195,188,0.719,189,0.641,190,0.719,191,0.641,192,0.66,193,0.641,194,1.107,195,1.459,196,0.641,197,0.641,198,0.641,199,0.698,200,0.641,201,0.719,202,0.641,203,0.679,204,0.719,205,0.641,206,0.641,207,0.641,208,1.012,209,0.641,210,1.171,211,0.641,212,0.66,213,0.641,214,0.698,215,0.641,216,0.698,217,1.012,218,0.641,219,0.698,220,0.641,221,0.679,222,0.641,223,0.698,224,0.641,225,0.66,226,0.719,227,0.604,228,0.719,229,0.641,230,1.272,231,0.679,232,0.641,233,0.679,234,0.641,235,0.552,236,0.641,237,0.679,238,0.641,239,0.698,240,0.641,241,0.679,242,0.641,243,0.984,244,0.641,245,0.641,246,0.698,247,0.641,248,0.698,249,0.641,250,0.719,251,0.698,252,0.586,253,0.622,254,0.66,255,0.719,256,0.622,257,0.927,258,0.719,259,0.622,260,0.719,261,0.604,262,0.719,263,0.622,264,0.66,265,0.66,266,0.698,267,0.719,458,3.4,563,2.269,627,6.017,628,3.4,629,5.454,630,5.454,631,6.853,632,5.454,633,5.454,634,5.454,635,3.872,636,3.089,637,2.269,638,2.671,639,5.454,640,2.671,641,3.872,642,3.872,643,3.872,644,3.872,645,2.671,646,3.872,647,3.4,648,3.4,649,3.872]],["title/components/CylinderMeshComponent.html",[109,0.037,165,0.703]],["body/components/CylinderMeshComponent.html",[0,0.105,3,0.095,4,0.095,5,0.076,8,0.312,10,1.261,12,0.665,13,1.156,18,1.347,19,1.309,20,0.011,21,0.873,22,0.554,23,0.966,28,0.461,29,0.602,30,0.312,31,0.638,33,0.446,37,0.095,38,1.433,42,0.623,48,0.004,49,0.006,50,0.004,67,0.776,68,0.758,69,1.313,71,0.554,87,0.195,88,1.29,89,0.155,90,0.919,91,0.623,95,2.451,109,0.052,110,0.588,111,0.8,112,0.659,113,0.659,116,0.849,117,1.704,118,0.538,119,0.644,121,1.438,122,1.314,123,0.641,125,0.925,126,2.556,127,1.156,130,1.852,136,1.625,137,1.188,139,0.779,140,0.779,141,0.776,142,1.524,143,0.87,147,0.363,148,0.925,149,0.925,150,0.446,151,1.223,152,0.659,153,1.223,154,0.588,155,0.641,156,0.952,157,0.588,158,0.659,159,0.588,160,0.623,161,1.453,162,0.588,163,0.641,164,0.659,165,1.09,166,1.086,167,0.588,168,1.058,169,0.659,170,0.605,171,0.659,172,0.588,173,0.659,174,0.588,175,0.659,176,0.588,177,0.605,178,0.659,179,0.588,180,0.641,181,0.588,182,0.659,183,0.588,184,0.659,185,0.659,186,0.659,187,0.588,188,0.659,189,0.588,190,0.659,191,0.588,192,0.605,193,0.588,194,1.055,195,1.426,196,0.588,197,0.588,198,0.588,199,0.641,200,0.588,201,0.659,202,0.588,203,0.623,204,0.659,205,0.588,206,0.588,207,0.588,208,0.952,209,0.588,210,1.117,211,0.588,212,0.605,213,0.588,214,0.641,215,0.588,216,0.641,217,0.952,218,0.588,219,0.641,220,0.588,221,0.623,222,0.588,223,0.641,224,0.588,225,0.605,226,0.659,227,0.554,228,0.659,229,0.588,230,1.223,231,0.623,232,0.588,233,0.623,234,0.588,235,0.506,236,0.588,237,0.623,238,0.588,239,0.641,240,0.588,241,0.623,242,0.588,243,0.925,244,0.588,245,0.588,246,0.641,247,0.588,248,0.641,249,0.588,250,0.659,251,0.641,252,0.538,253,0.571,254,0.605,255,0.659,256,0.571,257,0.884,258,0.659,259,0.571,260,0.659,261,0.554,262,0.659,263,0.571,264,0.605,265,0.605,266,0.641,267,0.659,312,1.66,584,1.903,585,3.527,587,3.743,590,2.76,591,4.44,595,4.074,602,1.928,616,1.629,618,2.309,621,2.621,623,2.352,624,1.988,625,1.988,626,2.188,650,7.069,651,5.129,652,6.019,653,5.285,654,6.019,655,6.019,656,6.019,657,6.019,658,3.784,659,3.12,660,3.12,661,3.12,662,3.538,663,2.621,664,2.834,665,2.621,666,2.352,667,3.334,668,4.503,669,3.553,670,3.553,671,2.747,672,3.553,673,3.553,674,3.553,675,3.553,676,3.12,677,3.553,678,3.553,679,3.553]],["title/components/DagreCompositionComponent.html",[109,0.037,167,0.703]],["body/components/DagreCompositionComponent.html",[0,0.076,3,0.069,4,0.069,5,0.056,8,0.228,9,0.863,10,1.482,12,0.525,15,1.976,18,0.709,19,0.689,20,0.011,21,0.848,22,0.404,23,1.016,26,2.05,28,0.645,29,0.656,30,0.692,31,0.646,33,0.922,37,0.069,38,0.617,42,0.454,48,0.003,49,0.005,50,0.003,55,1.106,57,1.992,66,2.05,67,0.612,68,0.553,69,1.166,71,0.404,80,1.523,87,0.181,88,1.018,89,0.113,91,0.454,109,0.043,110,0.429,111,0.631,112,0.481,113,0.481,116,0.669,117,1.454,118,0.392,119,0.508,121,1.413,122,1.293,123,0.467,125,0.73,127,0.912,128,2.058,130,1.58,136,1.341,139,0.568,140,0.568,141,0.612,143,0.634,147,0.265,148,0.73,149,0.73,150,0.325,151,1.043,152,0.481,153,1.043,154,0.429,155,0.467,156,0.751,157,0.429,158,0.481,159,0.429,160,0.454,161,1.332,162,0.429,163,0.467,164,0.481,165,0.429,166,0.467,167,0.93,168,1.132,169,0.481,170,0.441,171,0.481,172,0.93,173,0.481,174,0.429,175,0.481,176,0.429,177,0.441,178,0.481,179,0.429,180,0.467,181,0.429,182,0.481,183,0.429,184,0.481,185,0.481,186,0.481,187,0.429,188,0.481,189,0.429,190,0.481,191,0.429,192,0.441,193,0.429,194,0.872,195,1.296,196,0.429,197,0.429,198,0.429,199,0.467,200,0.429,201,0.481,202,0.429,203,0.454,204,0.481,205,0.429,206,0.429,207,0.429,208,0.751,209,0.429,210,0.923,211,0.429,212,0.441,213,0.429,214,0.467,215,0.429,216,0.467,217,0.751,218,0.429,219,0.467,220,0.429,221,0.872,222,0.429,223,0.467,224,0.429,225,0.689,226,0.481,227,0.404,228,0.481,229,0.429,230,1.043,231,0.454,232,0.429,233,0.454,234,0.429,235,0.369,236,0.429,237,0.454,238,0.429,239,0.467,240,0.429,241,0.454,242,0.429,243,0.73,244,0.429,245,0.429,246,0.467,247,0.429,248,0.467,249,0.429,250,0.481,251,0.467,252,0.392,253,0.416,254,0.441,255,0.481,256,0.416,257,0.731,258,0.481,259,0.416,260,0.481,261,0.404,262,0.481,263,0.416,264,0.441,265,0.441,266,0.467,267,0.481,285,2.784,290,1.93,301,3.777,306,1.684,375,3.059,387,3.266,544,3.991,546,3.461,547,3.011,548,2.889,549,3.235,551,2.39,590,3.096,592,2.916,618,1.684,645,1.788,666,1.188,680,2.276,681,3.235,682,3.97,683,4.046,684,4.976,685,4.37,686,4.37,687,4.976,688,4.937,689,4.486,690,4.149,691,4.486,692,4.937,693,4.937,694,4.937,695,3.552,696,2.63,697,3.97,698,3.671,699,2.491,700,5.928,701,4.976,702,5.623,703,4.046,704,2.591,705,2.591,706,4.046,707,2.591,708,2.591,709,2.591,710,2.591,711,2.591,712,2.591,713,2.591,714,2.591,715,2.591,716,2.591,717,2.591,718,2.591,719,2.591,720,3.552,721,3.671,722,2.591,723,1.912,724,2.591,725,4.486,726,2.591,727,2.591,728,2.916,729,2.591,730,2.591,731,2.591,732,2.591,733,3.295,734,2.276,735,1.45,736,1.684,737,2.591,738,4.976,739,2.591,740,2.067,741,2.591,742,2.591,743,4.937,744,2.276,745,2.591,746,2.276,747,2.276,748,2.276,749,2.276,750,4.37,751,2.276,752,2.276,753,2.276,754,3.552,755,2.591,756,3.756,757,2.276,758,2.276,759,2.276,760,2.067,761,4.486,762,2.276,763,2.591,764,2.276,765,4.486,766,3.552,767,1.596,768,2.276,769,2.591,770,1.912,771,1.788,772,2.276,773,2.985,774,2.276,775,1.519,776,2.276,777,2.276,778,2.276,779,2.591,780,2.276,781,2.276,782,2.276,783,2.276,784,2.591,785,2.067,786,2.276,787,2.067,788,2.276,789,2.067,790,2.591,791,2.591,792,2.591,793,2.591,794,1.45,795,2.276]],["title/components/DagreLayoutComponent.html",[109,0.037,172,0.703]],["body/components/DagreLayoutComponent.html",[0,0.081,3,0.074,4,0.074,5,0.059,8,0.243,9,0.906,10,1.371,12,0.551,15,1.952,18,1.282,19,1.246,20,0.011,21,0.47,22,0.43,23,1.012,28,0.672,29,0.606,30,0.583,31,0.665,33,0.919,37,0.074,42,0.908,48,0.003,49,0.005,50,0.003,55,1.161,56,2.292,57,2.073,58,2.462,64,2.405,65,1.88,66,2.12,67,0.643,68,0.589,69,1.196,71,0.43,75,2.574,77,1.816,80,1.433,84,1.88,87,0.185,88,1.069,89,0.12,91,0.484,102,2.098,109,0.044,110,0.457,111,0.663,112,0.512,113,0.512,116,0.703,117,1.504,118,0.418,119,0.533,121,1.418,122,1.297,123,0.498,125,0.766,127,0.957,130,1.634,136,1.55,139,0.605,140,0.605,141,0.643,143,0.675,147,0.282,148,0.766,149,0.766,150,0.347,151,1.079,152,0.512,153,1.079,154,0.457,155,0.498,156,0.788,157,0.457,158,0.512,159,0.457,160,0.484,161,1.357,162,0.457,163,0.498,164,0.512,165,0.457,166,0.498,167,0.457,168,1.151,169,0.512,170,0.47,171,0.512,172,0.962,173,0.512,174,0.457,175,0.512,176,0.457,177,0.47,178,0.512,179,0.457,180,0.498,181,0.457,182,0.512,183,0.457,184,0.512,185,0.512,186,0.512,187,0.457,188,0.512,189,0.457,190,0.512,191,0.457,192,0.47,193,0.457,194,0.908,195,1.323,196,0.457,197,0.457,198,0.457,199,0.498,200,0.457,201,0.512,202,0.457,203,0.484,204,0.512,205,0.457,206,0.457,207,0.457,208,0.788,209,0.457,210,0.961,211,0.457,212,0.47,213,0.457,214,0.498,215,0.457,216,0.498,217,0.788,218,0.457,219,0.498,220,0.457,221,0.484,222,0.457,223,0.498,224,0.457,225,0.723,226,0.512,227,0.43,228,0.512,229,0.457,230,1.079,231,0.484,232,0.457,233,0.484,234,0.457,235,0.393,236,0.457,237,0.484,238,0.457,239,0.498,240,0.457,241,0.484,242,0.457,243,0.766,244,0.457,245,0.457,246,0.498,247,0.457,248,0.498,249,0.457,250,0.512,251,0.498,252,0.418,253,0.443,254,0.47,255,0.512,256,0.443,257,0.761,258,0.512,259,0.443,260,0.512,261,0.43,262,0.512,263,0.443,264,0.47,265,0.47,266,0.498,267,0.512,301,2.897,311,3.82,312,0.893,317,1.583,323,2.12,375,3.049,387,3.699,460,2.376,544,3.979,552,3.551,556,1.794,557,1.478,602,1.596,666,1.947,681,3.366,696,2.761,721,4.632,723,2.036,733,2.489,756,1.699,761,4.639,767,1.699,775,2.489,785,2.201,787,2.201,789,2.201,794,2.376,796,2.423,797,5.178,798,4.247,799,5.815,800,5.815,801,5.815,802,5.815,803,4.247,804,6.279,805,4.131,806,6.279,807,6.279,808,6.279,809,6.279,810,6.279,811,5.815,812,6.279,813,4.247,814,4.247,815,2.759,816,2.759,817,2.759,818,2.759,819,2.759,820,5.815,821,2.759,822,4.247,823,2.759,824,4.247,825,4.247,826,2.759,827,2.759,828,2.759,829,2.759,830,2.759,831,2.759,832,2.759,833,2.759,834,2.759,835,2.759,836,2.759,837,4.247,838,2.759,839,2.759,840,2.036,841,2.759,842,2.423,843,2.423,844,5.178,845,1.904,846,5.178,847,3.73,848,2.759,849,2.759,850,2.759,851,2.759,852,2.759,853,2.759,854,2.759,855,2.759,856,2.759,857,6.279,858,2.759,859,2.759,860,2.759,861,2.759,862,2.201,863,2.759,864,2.759,865,1.699,866,2.759,867,3.366,868,2.759,869,1.544,870,2.036]],["title/components/DagreNodeComponent.html",[109,0.037,174,0.703]],["body/components/DagreNodeComponent.html",[0,0.091,3,0.082,4,0.082,5,0.066,8,0.27,9,0.984,10,1.518,12,0.598,18,0.539,19,0.524,20,0.011,22,0.479,23,0.96,26,1.68,28,0.598,29,0.674,30,0.579,31,0.651,33,0.868,37,0.082,38,0.732,48,0.004,49,0.006,50,0.004,55,1.26,57,2.215,66,2.24,67,0.698,68,0.656,69,1.247,71,0.479,80,1.435,87,0.192,88,1.16,89,0.134,91,0.539,109,0.048,110,0.509,111,0.719,112,0.57,113,0.57,116,0.763,117,1.59,118,0.465,119,0.579,121,1.427,122,1.306,123,0.554,125,0.832,127,1.039,130,1.727,136,1.148,139,0.674,140,0.674,141,0.698,143,0.752,147,0.314,148,0.832,149,0.832,150,0.386,151,1.14,152,0.57,153,1.14,154,0.509,155,0.554,156,0.855,157,0.509,158,0.57,159,0.509,160,0.539,161,1.4,162,0.509,163,0.554,164,0.57,165,0.509,166,0.554,167,0.509,168,1.181,169,0.57,170,0.524,171,0.57,172,1.017,173,0.57,174,1.017,175,0.57,176,0.509,177,0.524,178,0.57,179,0.509,180,0.554,181,0.509,182,0.57,183,0.509,184,0.57,185,0.57,186,0.57,187,0.509,188,0.57,189,0.509,190,0.57,191,0.509,192,0.524,193,0.509,194,0.97,195,1.368,196,0.509,197,0.509,198,0.509,199,0.554,200,0.509,201,0.57,202,0.509,203,0.539,204,0.57,205,0.509,206,0.509,207,0.509,208,0.855,209,0.509,210,1.026,211,0.509,212,0.524,213,0.509,214,0.554,215,0.509,216,0.554,217,0.855,218,0.509,219,0.554,220,0.509,221,0.539,222,0.509,223,0.554,224,0.509,225,0.785,226,0.57,227,0.479,228,0.57,229,0.509,230,1.14,231,0.539,232,0.509,233,0.539,234,0.509,235,0.438,236,0.509,237,0.539,238,0.509,239,0.554,240,0.509,241,0.539,242,0.509,243,0.832,244,0.509,245,0.509,246,0.554,247,0.509,248,0.554,249,0.509,250,0.57,251,0.554,252,0.465,253,0.494,254,0.524,255,0.57,256,0.494,257,0.813,258,0.57,259,0.494,260,0.57,261,0.479,262,0.57,263,0.494,264,0.524,265,0.524,266,0.554,267,0.57,306,1.998,317,1.41,323,1.68,375,2.912,387,3.527,544,3.799,546,3.292,547,1.646,548,3.384,638,2.121,640,2.121,645,2.121,681,3.596,682,4.413,685,4.857,686,4.857,688,5.397,689,4.903,693,5.397,694,5.397,695,4.048,700,6.296,720,4.048,721,4.081,723,2.268,728,3.242,734,2.699,735,1.72,743,5.397,744,2.699,746,2.699,747,2.699,748,2.699,749,2.699,752,2.699,753,2.699,754,4.048,756,4.258,757,2.699,758,2.699,759,2.699,760,2.452,761,4.903,762,2.699,764,2.699,765,4.903,766,4.048,767,1.893,768,2.699,770,2.268,771,2.121,772,2.699,773,3.401,774,2.699,775,1.801,776,2.699,777,2.699,778,2.699,780,2.699,781,2.699,782,2.699,783,2.699,785,2.452,786,2.699,787,2.452,788,2.699,789,2.452,794,1.72,795,2.699,847,2.699,871,2.699,872,4.61,873,4.857,874,5.532,875,4.61,876,3.074,877,3.074,878,3.074,879,3.074,880,3.074,881,3.074,882,3.074,883,3.074,884,4.048,885,4.048,886,4.857,887,3.401,888,3.074,889,3.074,890,3.074,891,3.074,892,3.074,893,3.074,894,3.074]],["title/classes/DagreUtils.html",[0,0.125,840,3.135]],["body/classes/DagreUtils.html",[0,0.14,2,3.501,3,0.127,4,0.127,5,0.102,8,0.417,12,0.812,15,1.898,20,0.011,21,0.808,23,0.942,28,1.006,29,0.728,30,0.682,31,0.822,33,0.974,37,0.127,38,1.492,42,1.229,48,0.006,49,0.008,50,0.006,80,1.456,87,0.168,168,1.062,272,3.085,317,1.915,375,2.904,387,3.355,542,4.545,544,3.788,547,2.541,548,3.219,550,3.505,552,4.603,553,4.559,555,3.924,590,2.176,592,2.781,721,6.305,723,5.877,775,5.036,840,4.622,887,6.398,895,4.167,896,6.265,897,6.265,898,6.265,899,6.265,900,6.265,901,6.265,902,6.265,903,6.265,904,4.745,905,6.265,906,4.745,907,6.265,908,4.745,909,6.265,910,4.745,911,6.265,912,4.745,913,4.745,914,4.745,915,4.745,916,4.745,917,4.745,918,4.745,919,6.265,920,4.745,921,4.745,922,4.745,923,4.167,924,4.998,925,5.501,926,4.745,927,4.745,928,4.745,929,4.745,930,4.167,931,4.745,932,6.265,933,4.745,934,4.167,935,4.745,936,4.745]],["title/components/DagreYamlParserComponent.html",[109,0.037,176,0.703]],["body/components/DagreYamlParserComponent.html",[0,0.078,3,0.071,4,0.071,5,0.057,8,0.444,9,0.88,10,1.427,12,0.535,15,1.598,18,0.466,19,0.452,20,0.011,21,0.452,22,0.414,23,0.941,26,1.842,28,0.847,29,0.661,30,0.672,31,0.746,33,0.884,37,0.071,38,1.722,42,1.144,48,0.003,49,0.005,50,0.003,55,1.127,56,2.237,58,2.404,64,2.357,65,1.825,67,0.624,68,0.567,69,1.178,71,0.414,75,2.522,77,1.764,80,1.414,84,1.825,87,0.198,88,1.038,89,0.116,91,0.466,109,0.043,110,0.439,111,0.643,112,0.493,113,0.493,116,0.682,117,1.474,118,0.402,119,0.518,121,1.415,122,1.294,123,0.479,125,0.744,127,0.93,130,1.601,136,0.856,139,0.583,140,0.583,141,0.624,143,0.65,147,0.272,148,0.744,149,0.744,150,0.334,151,1.057,152,0.493,153,1.057,154,0.439,155,0.479,156,0.765,157,0.439,158,0.493,159,0.439,160,0.466,161,1.342,162,0.439,163,0.479,164,0.493,165,0.439,166,0.479,167,0.682,168,1.14,169,0.493,170,0.702,171,0.493,172,0.439,173,0.493,174,0.682,175,0.493,176,0.943,177,1.418,178,0.493,179,0.439,180,0.479,181,0.439,182,0.493,183,0.439,184,0.493,185,0.493,186,0.493,187,0.439,188,0.493,189,0.439,190,0.493,191,0.439,192,0.452,193,0.439,194,0.886,195,1.307,196,0.439,197,0.439,198,0.439,199,0.479,200,0.439,201,0.493,202,0.439,203,0.466,204,0.493,205,0.439,206,0.439,207,0.439,208,0.765,209,0.439,210,0.938,211,0.439,212,0.452,213,0.439,214,0.479,215,0.439,216,0.479,217,0.765,218,0.439,219,0.479,220,0.439,221,0.466,222,0.439,223,0.479,224,0.439,225,0.702,226,0.493,227,0.414,228,0.493,229,0.682,230,1.145,231,0.723,232,0.682,233,0.723,234,0.682,235,0.588,236,0.682,237,0.466,238,0.439,239,0.479,240,0.439,241,0.466,242,0.439,243,0.744,244,0.439,245,0.439,246,0.479,247,0.439,248,0.479,249,0.439,250,0.493,251,0.479,252,0.402,253,0.427,254,0.452,255,0.493,256,0.427,257,0.743,258,0.493,259,0.427,260,0.493,261,0.414,262,0.493,263,0.427,264,0.452,265,0.452,266,0.479,267,0.493,290,2.241,301,2.828,317,0.812,323,0.968,375,2.856,544,3.726,546,3.304,548,3.501,550,3.653,552,2.209,638,1.832,640,1.832,681,3.286,696,2.681,733,2.417,756,1.636,775,3.339,794,1.486,845,1.832,865,1.636,869,1.486,873,4.439,884,3.621,885,3.621,886,4.439,923,3.621,925,2.332,930,2.332,934,2.332,937,2.119,938,4.124,939,4.124,940,5.055,941,4.124,942,4.124,943,4.124,944,5.698,945,4.124,946,5.698,947,5.055,948,5.055,949,5.698,950,4.124,951,2.656,952,2.656,953,4.124,954,2.656,955,4.124,956,2.656,957,4.124,958,2.656,959,2.656,960,4.124,961,2.656,962,2.656,963,2.656,964,2.656,965,2.656,966,2.656,967,2.656,968,2.656,969,2.119,970,2.332,971,2.332,972,2.656,973,4.124,974,2.656,975,2.656,976,4.124,977,2.119,978,2.656,979,2.656,980,2.656,981,2.656,982,2.656,983,2.656,984,2.656,985,2.656,986,2.656,987,2.656,988,2.656,989,5.055,990,2.656,991,2.656,992,2.656,993,2.656,994,2.656,995,2.656,996,2.656,997,2.656,998,2.656,999,2.656,1000,2.656,1001,2.656,1002,2.656,1003,2.656,1004,5.055,1005,2.656,1006,2.656,1007,2.656,1008,2.656,1009,2.656,1010,2.656,1011,2.656,1012,2.656,1013,2.656,1014,2.656,1015,2.656,1016,2.656,1017,2.656,1018,4.124,1019,2.656,1020,2.656,1021,4.124,1022,2.656,1023,2.656,1024,2.656,1025,4.124,1026,2.656,1027,4.124,1028,2.656,1029,2.656,1030,2.656,1031,2.656,1032,2.656,1033,2.656,1034,2.656,1035,2.656,1036,2.656,1037,2.656,1038,2.656,1039,2.656,1040,4.124,1041,2.656,1042,4.124,1043,2.656,1044,2.656,1045,2.656,1046,2.656,1047,2.656]],["title/directives/DashedDrawDirective.html",[150,0.534,253,0.683]],["body/directives/DashedDrawDirective.html",[0,0.12,3,0.109,4,0.109,5,0.087,8,0.357,9,1.203,10,1.168,12,0.731,18,1.226,19,1.192,20,0.011,21,1.103,23,1.027,28,0.527,29,0.371,30,0.615,31,0.43,33,0.879,37,0.109,38,1.542,48,0.005,49,0.007,50,0.005,55,1.541,56,2.866,57,2.593,64,2.894,66,2.55,67,0.854,80,1.525,87,0.204,89,0.177,117,1.81,118,0.615,121,0.653,122,0.828,127,1.271,136,1.579,137,1.306,138,2.087,140,0.891,141,0.854,142,1.207,150,0.51,252,0.615,253,0.906,254,1.103,269,3.854,273,4.1,289,4.548,290,2.944,294,5.167,312,2.38,317,1.724,323,1.48,557,3.468,602,2.119,616,1.862,623,3.208,637,2.38,647,5.687,662,2.802,668,4.951,671,3.019,728,3.795,735,2.272,1048,7.462,1049,3.566,1050,6.476,1051,6.997,1052,6.476,1053,6.476,1054,6.476,1055,6.476,1056,6.476,1057,3.24,1058,5.638,1059,3.304,1060,5.638,1061,4.061,1062,3.472,1063,4.061,1064,4.061,1065,4.061,1066,4.061,1067,4.061,1068,4.061,1069,4.061,1070,4.061,1071,4.061,1072,4.778,1073,4.061,1074,4.061,1075,2.802,1076,3.566,1077,2.64,1078,4.061,1079,3.24,1080,4.061,1081,3.566,1082,6.476,1083,3.24,1084,5.638,1085,2.802,1086,3.24,1087,2.64,1088,3.24,1089,2.802,1090,3.24,1091,4.061,1092,6.997,1093,4.498,1094,4.061,1095,6.476,1096,4.061,1097,4.061,1098,4.061,1099,4.061,1100,4.061,1101,4.061,1102,6.476,1103,5.638,1104,4.061,1105,4.061,1106,4.16,1107,4.061,1108,4.061,1109,4.061,1110,6.476,1111,4.061,1112,6.476,1113,5.638,1114,4.061,1115,4.061,1116,2.996,1117,4.061,1118,4.951,1119,4.061,1120,4.061,1121,4.061,1122,6.476,1123,2.996]],["title/pipes/Deg2RadPipe.html",[492,2.932,1124,2.932]],["body/pipes/Deg2RadPipe.html",[0,0.185,3,0.168,4,0.168,5,0.134,12,0.814,20,0.011,23,0.763,28,0.814,29,0.729,30,0.552,31,0.665,33,0.788,37,0.168,42,1.1,48,0.008,49,0.009,50,0.008,55,1.716,87,0.168,89,0.273,118,0.95,492,5.152,551,2.651,667,4.08,1124,5.152,1125,5.008,1126,5.512,1127,7.468,1128,5.512,1129,7.468,1130,6.277,1131,6.558,1132,7.4,1133,6.558,1134,6.558,1135,5.512,1136,6.277,1137,5.512]],["title/components/DirectionalLightComponent.html",[109,0.037,179,0.703]],["body/components/DirectionalLightComponent.html",[0,0.107,3,0.097,4,0.097,5,0.078,8,0.32,10,1.273,12,0.677,13,0.821,18,1.237,19,1.135,20,0.011,21,1.039,22,0.568,23,0.892,28,0.472,29,0.609,30,0.32,31,0.647,33,0.457,37,0.097,38,0.867,42,0.638,48,0.004,49,0.006,50,0.004,67,0.79,68,0.777,69,1.324,71,0.568,87,0.196,88,1.313,89,0.158,90,0.942,91,0.638,109,0.052,110,0.602,111,0.814,112,0.676,113,0.676,115,2.512,116,0.864,117,1.899,118,0.551,119,0.655,121,1.439,122,1.316,123,0.657,124,4.598,125,0.941,126,2.585,127,1.177,128,2.757,129,4.502,130,1.873,131,2.686,132,3.059,136,1.464,137,1.209,138,1.871,139,0.798,140,0.798,141,0.79,142,1.082,143,0.891,146,2.904,147,0.372,148,0.941,149,0.941,150,0.457,151,1.237,152,0.676,153,1.237,154,0.602,155,0.657,156,0.969,157,0.602,158,0.676,159,0.602,160,0.638,161,1.462,162,0.602,163,0.657,164,0.676,165,0.602,166,0.657,167,0.602,168,1.068,169,0.676,170,0.62,171,0.676,172,0.602,173,0.676,174,0.602,175,0.676,176,0.602,177,0.62,178,0.676,179,1.103,180,1.101,181,0.602,182,0.676,183,0.602,184,0.676,185,0.676,186,0.676,187,0.602,188,0.676,189,0.602,190,0.676,191,0.602,192,0.62,193,0.602,194,1.07,195,1.435,196,0.602,197,0.602,198,0.602,199,0.657,200,0.602,201,0.676,202,0.602,203,0.638,204,0.676,205,0.602,206,0.602,207,0.602,208,0.969,209,0.602,210,1.132,211,0.602,212,0.62,213,0.602,214,0.657,215,0.602,216,0.657,217,0.969,218,0.602,219,0.657,220,0.602,221,0.638,222,0.602,223,0.657,224,0.602,225,0.62,226,0.676,227,0.568,228,0.676,229,0.602,230,1.237,231,0.638,232,0.602,233,0.638,234,0.602,235,0.519,236,0.602,237,0.638,238,0.602,239,0.657,240,0.602,241,0.638,242,0.602,243,0.941,244,0.602,245,0.602,246,0.657,247,0.602,248,0.657,249,0.602,250,0.676,251,0.657,252,0.551,253,0.585,254,0.62,255,0.676,256,0.585,257,0.896,258,0.676,259,0.585,260,0.676,261,0.568,262,0.676,263,0.585,264,0.62,265,0.62,266,0.657,267,0.676,317,1.866,581,1.95,602,1.962,637,3.059,1138,6.64,1139,5.22,1140,4.868,1141,6.665,1142,5.22,1143,2.904,1144,3.641,1145,3.641,1146,2.904,1147,3.641,1148,3.641,1149,3.641,1150,3.641,1151,3.641,1152,4.164,1153,3.197,1154,2.904,1155,3.641,1156,3.905,1157,3.641,1158,3.641,1159,3.641,1160,3.197,1161,2.686,1162,3.197,1163,3.197,1164,3.641,1165,3.197,1166,3.197,1167,3.197]],["title/components/DofComponent.html",[109,0.037,181,0.703]],["body/components/DofComponent.html",[0,0.097,3,0.088,4,0.088,5,0.071,8,0.289,9,1.035,10,1.357,12,0.629,13,1.528,15,1.556,18,1.114,19,1.083,20,0.011,22,0.514,23,0.993,28,0.825,29,0.67,30,0.596,31,0.752,33,0.965,37,0.088,42,0.577,48,0.004,49,0.006,50,0.004,51,5.149,53,2.272,59,3.348,60,4.691,61,3.549,62,3.224,63,5.41,64,2.383,65,2.148,66,2.1,67,0.735,68,0.703,69,1.279,70,4.133,71,1.057,73,2.272,74,4.251,75,3.331,77,3.033,78,2.715,80,1.472,84,1.458,87,0.181,88,1.221,89,0.143,90,0.852,91,1.01,92,2.272,109,0.05,110,0.545,111,0.757,112,0.611,113,0.611,116,0.803,118,0.499,121,1.432,122,1.31,123,0.594,125,0.594,127,1.094,136,1.319,141,0.499,143,0.806,147,0.337,148,0.875,149,0.875,150,0.414,151,1.18,152,0.611,153,1.18,154,0.545,155,0.594,156,0.9,157,0.545,158,0.611,159,0.545,160,0.577,161,1.425,162,0.545,163,0.594,164,0.611,165,0.545,166,0.594,167,0.545,168,1.026,169,0.611,170,0.561,171,0.611,172,0.545,173,0.611,174,0.545,175,0.611,176,0.545,177,0.561,178,0.611,179,0.545,180,0.594,181,1.052,182,0.611,183,0.545,184,0.611,185,0.611,186,0.611,187,0.545,188,0.611,189,0.545,190,0.611,191,0.545,192,0.561,193,0.545,194,1.01,195,1.396,196,0.545,197,0.545,198,0.545,199,0.594,200,0.545,201,0.611,202,0.545,203,0.577,204,0.611,205,0.545,206,0.545,207,0.545,208,0.9,209,0.545,210,1.069,211,0.545,212,0.561,213,0.545,214,0.594,215,0.545,216,0.594,217,0.9,218,0.545,219,0.594,220,0.545,221,0.577,222,0.545,223,0.594,224,0.545,225,0.561,226,0.611,227,0.514,228,0.611,229,0.545,230,1.18,231,0.577,232,0.545,233,0.577,234,0.545,235,0.469,236,0.545,237,0.577,238,0.545,239,0.594,240,0.545,241,0.577,242,0.545,243,0.875,244,0.545,245,0.545,246,0.594,247,0.545,248,0.594,249,0.545,250,0.611,251,0.594,252,0.499,253,0.529,254,0.561,255,0.611,256,0.529,257,0.846,258,0.611,259,0.529,260,0.611,261,0.514,262,0.611,263,0.529,264,0.561,265,0.561,266,0.594,267,0.611,312,1.066,317,1.762,563,4.41,564,2.627,565,2.627,566,2.627,567,2.627,568,2.627,569,2.627,570,2.627,571,2.627,578,2.627,590,1.51,592,1.93,595,2.715,867,4.406,869,3.224,1168,2.892,1169,4.853,1170,6.779,1171,6.779,1172,6.779,1173,4.853,1174,4.853,1175,3.293,1176,3.293,1177,4.853,1178,3.293,1179,3.293,1180,3.293,1181,3.293,1182,3.293,1183,3.293,1184,5.762,1185,5.762,1186,3.293,1187,3.293,1188,5.762,1189,3.293,1190,3.293,1191,3.293,1192,4.853,1193,3.293,1194,2.892,1195,2.43,1196,2.43]],["title/components/DotScreenComponent.html",[109,0.037,183,0.703]],["body/components/DotScreenComponent.html",[0,0.104,3,0.094,4,0.094,5,0.076,8,0.31,9,1.088,10,1.383,12,0.662,13,1.571,15,1.608,18,0.894,19,0.869,20,0.011,22,0.55,23,0.987,28,0.852,29,0.685,30,0.613,31,0.77,33,0.981,37,0.094,42,0.618,48,0.004,49,0.006,50,0.004,51,5.225,53,2.433,59,3.519,60,4.846,61,3.691,62,3.353,63,5.526,64,2.479,65,2.258,66,2.185,67,0.772,68,0.752,69,1.31,70,4.269,71,1.087,73,2.433,74,4.422,75,3.395,77,2.563,78,3.353,80,1.507,84,1.561,87,0.194,88,1.284,89,0.153,90,0.912,91,1.051,92,2.433,109,0.051,110,0.583,111,0.796,112,0.654,113,0.654,116,0.844,118,0.534,121,1.437,122,1.314,123,0.636,125,0.636,127,1.15,136,1.059,141,0.534,143,0.863,147,0.361,148,0.92,149,0.92,150,0.443,151,1.219,152,0.654,153,1.219,154,0.583,155,0.636,156,0.947,157,0.583,158,0.654,159,0.583,160,0.618,161,1.45,162,0.583,163,0.636,164,0.654,165,0.583,166,0.636,167,0.583,168,1.055,169,0.654,170,0.601,171,0.654,172,0.583,173,0.654,174,0.583,175,0.654,176,0.583,177,0.601,178,0.654,179,0.583,180,0.636,181,0.583,182,0.654,183,1.087,184,1.112,185,0.654,186,0.654,187,0.583,188,0.654,189,0.583,190,0.654,191,0.583,192,0.601,193,0.583,194,1.051,195,1.423,196,0.583,197,0.583,198,0.583,199,0.636,200,0.583,201,0.654,202,0.583,203,0.618,204,0.654,205,0.583,206,0.583,207,0.583,208,0.947,209,0.583,210,1.112,211,0.583,212,0.601,213,0.583,214,0.636,215,0.583,216,0.636,217,0.947,218,0.583,219,0.636,220,0.583,221,0.618,222,0.583,223,0.636,224,0.583,225,0.601,226,0.654,227,0.55,228,0.654,229,0.583,230,1.219,231,0.618,232,0.583,233,0.618,234,0.583,235,0.502,236,0.583,237,0.618,238,0.583,239,0.636,240,0.583,241,0.618,242,0.583,243,0.92,244,0.583,245,0.583,246,0.636,247,0.583,248,0.636,249,0.583,250,0.654,251,0.636,252,0.534,253,0.567,254,0.601,255,0.654,256,0.567,257,0.88,258,0.654,259,0.567,260,0.654,261,0.55,262,0.654,263,0.567,264,0.601,265,0.601,266,0.636,267,0.654,312,1.142,563,4.495,564,2.813,565,2.813,566,2.813,567,2.813,568,2.813,569,2.813,570,2.813,571,2.813,572,3.097,573,3.097,578,2.813,581,1.889,582,2.813,1197,6.119,1198,3.097,1199,4.479,1200,5.994,1201,5.101,1202,4.07,1203,3.527,1204,3.527,1205,3.527,1206,3.527,1207,3.527]],["title/interfaces/Edge.html",[541,1.597,550,2.377]],["body/interfaces/Edge.html",[3,0.159,4,0.159,5,0.127,8,0.521,9,1.539,20,0.011,26,3.24,29,0.542,30,0.763,31,0.858,37,0.222,48,0.007,49,0.009,50,0.007,87,0.159,116,1.339,128,3.348,168,1.092,235,0.845,375,2.16,387,3.174,541,3.118,542,4.861,543,3.316,544,2.819,545,3.853,546,3.864,547,3.174,548,3.046,549,3.853,550,4.036,551,2.447,552,3.174,553,3.853,554,4.089,555,4.351,556,3.853,557,3.174]],["title/components/EffectComposerComponent.html",[71,0.663,109,0.037]],["body/components/EffectComposerComponent.html",[0,0.095,3,0.086,4,0.086,5,0.069,8,0.499,9,1.016,10,1.21,12,0.618,15,2.072,18,0.563,19,0.547,20,0.011,21,0.811,22,0.501,23,0.969,28,0.814,29,0.665,30,0.618,31,0.745,33,0.938,37,0.086,38,1.352,42,0.563,48,0.004,49,0.006,50,0.004,55,1.302,56,2.512,57,2.273,58,2.7,59,5.434,64,2.597,65,2.108,66,2.289,67,0.721,68,0.685,69,1.267,70,4.36,71,0.98,75,2.779,77,1.373,80,1.55,84,2.108,87,0.188,88,1.198,89,0.14,90,0.83,91,0.995,93,2.819,95,4.332,96,5.802,101,2.819,102,1.586,109,0.054,110,0.531,111,0.743,112,0.596,113,0.596,118,0.486,121,1.43,122,1.308,123,0.579,125,0.579,127,1.074,136,1.178,141,0.721,147,0.328,148,0.859,149,0.859,150,0.403,151,1.165,152,0.596,153,1.165,154,0.531,155,0.579,156,0.884,157,0.531,158,0.596,159,0.531,160,0.563,161,1.416,162,0.531,163,0.579,164,0.596,165,0.531,166,0.579,167,0.531,168,1.015,169,0.596,170,0.547,171,0.596,172,0.531,173,0.596,174,0.531,175,0.596,176,0.531,177,0.547,178,0.596,179,0.531,180,0.579,181,0.531,182,0.596,183,0.531,184,0.596,185,0.596,186,0.596,187,0.531,188,0.596,189,0.531,190,0.596,191,0.531,192,0.547,193,0.531,194,0.995,195,1.386,196,0.531,197,0.531,198,0.531,199,0.579,200,0.531,201,0.596,202,0.531,203,0.563,204,0.596,205,0.531,206,0.531,207,0.531,208,0.884,209,0.531,210,1.053,211,0.531,212,0.547,213,0.531,214,0.579,215,0.531,216,0.579,217,0.884,218,0.531,219,0.579,220,0.531,221,0.563,222,0.531,223,0.579,224,0.531,225,0.547,226,0.596,227,1.135,228,0.596,229,0.531,230,1.165,231,0.563,232,0.531,233,0.563,234,0.531,235,0.457,236,0.531,237,0.563,238,0.531,239,0.579,240,0.531,241,0.563,242,0.531,243,0.859,244,0.531,245,0.531,246,0.579,247,0.531,248,0.579,249,0.531,250,0.596,251,0.579,252,0.486,253,0.516,254,0.547,255,0.596,256,0.516,257,0.834,258,0.596,259,0.516,260,0.596,261,0.501,262,0.596,263,0.516,264,0.547,265,0.547,266,0.579,267,0.596,285,3.513,317,1.456,323,1.17,460,1.796,581,1.719,602,2.36,1194,2.819,1208,7.075,1209,2.819,1210,4.762,1211,6.28,1212,6.28,1213,4.762,1214,5.677,1215,5.677,1216,4.762,1217,3.21,1218,3.21,1219,4.762,1220,3.21,1221,3.21,1222,3.21,1223,3.21,1224,3.21,1225,3.21,1226,4.762,1227,3.21,1228,3.21,1229,5.677,1230,3.21,1231,5.677,1232,3.21,1233,3.21,1234,3.21,1235,4.762,1236,3.21,1237,3.21,1238,2.215,1239,3.21,1240,3.21,1241,2.819,1242,3.21,1243,2.819,1244,2.819,1245,3.21,1246,3.21,1247,3.21,1248,3.21,1249,3.21,1250,3.21,1251,3.21,1252,3.21,1253,3.21,1254,3.21,1255,3.21,1256,3.21,1257,3.21,1258,3.21,1259,3.21]],["title/components/EmptyComponent.html",[109,0.037,187,0.703]],["body/components/EmptyComponent.html",[0,0.12,3,0.109,4,0.109,5,0.087,8,0.357,10,1.326,12,0.731,13,0.916,20,0.011,21,0.692,22,0.634,23,0.685,28,0.527,29,0.64,30,0.357,31,0.686,33,0.51,37,0.109,42,0.712,48,0.005,49,0.007,50,0.005,55,1.541,56,2.866,67,0.854,68,0.866,69,1.372,71,0.634,87,0.197,88,1.419,89,0.177,90,1.05,91,0.712,109,0.056,110,0.672,111,0.879,112,0.754,113,0.754,116,0.933,117,1.968,118,0.615,119,0.708,121,1.446,122,1.322,123,0.733,125,1.017,126,2.713,130,1.966,137,1.306,139,0.891,140,0.891,141,0.854,142,1.207,143,0.994,147,0.415,148,1.017,149,1.017,150,0.51,151,1.298,152,0.754,153,1.298,154,0.672,155,0.733,156,1.046,157,0.672,158,0.754,159,0.672,160,0.712,161,1.499,162,0.672,163,0.733,164,0.754,165,0.672,166,0.733,167,0.672,168,1.113,169,0.754,170,0.692,171,0.754,172,0.672,173,0.754,174,0.672,175,0.754,176,0.672,177,0.692,178,0.754,179,0.672,180,0.733,181,0.672,182,0.754,183,0.672,184,0.754,185,0.754,186,0.754,187,1.158,188,0.754,189,0.672,190,0.754,191,0.672,192,0.692,193,0.672,194,1.135,195,1.476,196,0.672,197,0.672,198,0.672,199,0.733,200,0.672,201,0.754,202,0.672,203,0.712,204,0.754,205,0.672,206,0.672,207,0.672,208,1.046,209,0.672,210,1.202,211,0.672,212,0.692,213,0.672,214,0.733,215,0.672,216,0.733,217,1.046,218,0.672,219,0.733,220,0.672,221,0.712,222,0.672,223,0.733,224,0.672,225,0.692,226,0.754,227,0.634,228,0.754,229,0.672,230,1.298,231,0.712,232,0.672,233,0.712,234,0.672,235,0.579,236,0.672,237,0.712,238,0.672,239,0.733,240,0.672,241,0.712,242,0.672,243,1.017,244,0.672,245,0.672,246,0.733,247,0.672,248,0.733,249,0.672,250,0.754,251,0.733,252,0.615,253,0.653,254,0.692,255,0.754,256,0.653,257,0.951,258,0.754,259,0.653,260,0.754,261,0.634,262,0.754,263,0.653,264,0.692,265,0.692,266,0.733,267,0.754,637,3.795,843,4.951,1260,3.566,1261,5.638,1262,4.061,1263,4.061]],["title/components/FogComponent.html",[109,0.037,189,0.703]],["body/components/FogComponent.html",[0,0.103,3,0.094,4,0.094,5,0.075,8,0.308,9,1.083,10,1.448,12,0.659,15,1.774,18,1.047,19,1.017,20,0.011,21,0.597,22,0.547,23,0.963,28,0.659,29,0.635,30,0.525,31,0.694,33,0.873,37,0.094,42,0.614,48,0.004,49,0.006,50,0.004,55,1.388,56,2.643,57,2.391,58,2.84,64,2.708,65,2.247,66,2.387,67,0.769,68,0.748,69,1.307,71,0.547,75,2.898,77,2.172,80,1.504,84,2.247,87,0.186,88,1.278,89,0.152,90,0.906,91,0.614,95,3.503,102,2.508,109,0.051,110,0.58,111,0.792,112,0.65,113,0.65,118,0.531,121,1.437,122,1.314,123,0.632,125,0.632,127,1.145,128,2.708,130,1.678,136,1.359,137,1.177,138,1.8,140,0.768,141,0.769,147,0.358,148,0.916,149,0.916,150,0.44,151,1.215,152,0.65,153,1.215,154,0.58,155,0.632,156,0.942,157,0.58,158,0.65,159,0.58,160,0.614,161,1.448,162,0.58,163,0.632,164,0.65,165,0.58,166,0.632,167,0.58,168,1.052,169,0.65,170,0.597,171,0.65,172,0.58,173,0.65,174,0.58,175,0.65,176,0.58,177,0.597,178,0.65,179,0.58,180,0.632,181,0.58,182,0.65,183,0.58,184,0.65,185,0.65,186,0.65,187,0.58,188,0.65,189,1.083,190,0.65,191,0.58,192,0.597,193,0.58,194,1.047,195,1.421,196,0.58,197,0.58,198,0.58,199,0.632,200,0.58,201,0.65,202,0.58,203,0.614,204,0.65,205,0.58,206,0.58,207,0.58,208,0.942,209,0.58,210,1.108,211,0.58,212,0.597,213,0.58,214,0.632,215,0.58,216,0.632,217,0.942,218,0.58,219,0.632,220,0.58,221,0.614,222,0.58,223,0.632,224,0.58,225,0.597,226,0.65,227,1.084,228,0.65,229,0.58,230,1.215,231,0.614,232,0.58,233,0.614,234,0.58,235,0.499,236,0.58,237,0.614,238,0.58,239,0.632,240,0.58,241,0.614,242,0.58,243,0.916,244,0.58,245,0.58,246,0.632,247,0.58,248,0.632,249,0.58,250,0.65,251,0.632,252,0.531,253,0.563,254,0.597,255,0.65,256,0.563,257,0.877,258,0.65,259,0.563,260,0.65,261,0.547,262,0.65,263,0.563,264,0.597,265,0.597,266,0.632,267,0.65,460,1.96,869,1.96,1062,3.127,1156,2.975,1264,3.077,1265,5.078,1266,4.256,1267,6.548,1268,6.548,1269,5.244,1270,5.75,1271,5.078,1272,5.078,1273,3.504,1274,3.504,1275,3.504,1276,3.504,1277,3.504,1278,3.504,1279,3.504,1280,3.504,1281,4.459,1282,3.504,1283,3.504,1284,5.078,1285,3.504,1286,5.078,1287,3.504,1288,3.504,1289,3.504,1290,4.459,1291,5.078,1292,3.504,1293,5.078,1294,3.504,1295,3.077,1296,3.077,1297,3.504,1298,3.504,1299,3.504]],["title/injectables/FontService.html",[268,1.758,470,2.762]],["body/injectables/FontService.html",[0,0.167,1,5.761,3,0.152,4,0.152,5,0.122,8,0.499,9,1.5,10,1.527,11,5.608,12,0.912,13,1.721,14,6.363,15,1.721,16,4.329,17,5.186,18,0.996,19,0.968,20,0.011,21,1.3,22,0.886,23,0.969,25,6.09,26,3.085,28,0.99,29,0.698,30,0.671,31,0.809,32,5.266,33,0.959,34,5.503,35,4.532,37,0.152,38,1.353,42,0.996,48,0.007,49,0.008,50,0.007,87,0.204,89,0.247,116,1.163,137,1.629,206,0.94,268,2.908,270,3.329,470,4.569,563,4.473,1300,4.989,1301,5.681,1302,4.989,1303,4.989,1304,4.989,1305,4.989,1306,5.681,1307,5.681,1308,5.681,1309,4.989,1310,4.989]],["title/components/FrameMeshComponent.html",[109,0.037,191,0.703]],["body/components/FrameMeshComponent.html",[0,0.097,3,0.088,4,0.088,5,0.071,8,0.289,10,1.357,12,0.629,13,1.093,15,1.41,18,1.01,19,0.981,20,0.011,21,0.981,22,0.513,23,0.891,28,0.629,29,0.619,30,0.426,31,0.674,33,0.723,37,0.088,38,1.86,42,1.01,48,0.004,49,0.006,50,0.004,55,1.325,58,2.739,65,2.146,67,0.734,68,0.702,69,1.279,71,0.513,73,5.464,75,2.813,77,2.074,80,0.683,84,2.146,87,0.19,88,1.22,89,0.143,90,0.851,91,0.577,102,1.625,109,0.049,110,0.544,111,0.756,112,0.611,113,0.611,116,0.802,117,1.644,118,0.498,119,0.609,121,1.432,122,1.309,123,0.593,125,0.875,126,2.465,127,1.093,130,1.786,136,1.319,137,1.124,139,0.722,140,0.722,141,0.734,142,1.441,143,0.805,147,0.336,148,0.875,149,0.875,150,0.413,151,1.179,152,0.611,153,1.179,154,0.544,155,0.593,156,0.9,157,0.544,158,0.611,159,0.544,160,0.577,161,1.425,162,0.544,163,0.593,164,0.611,165,0.544,166,0.593,167,0.544,168,1.026,169,0.611,170,0.56,171,0.611,172,0.544,173,0.611,174,0.544,175,0.611,176,0.544,177,0.56,178,0.611,179,0.544,180,0.593,181,0.544,182,0.611,183,0.544,184,0.611,185,0.611,186,0.611,187,0.544,188,0.611,189,0.544,190,0.611,191,1.051,192,0.981,193,0.544,194,1.01,195,1.396,196,0.544,197,0.544,198,0.544,199,0.593,200,0.544,201,0.611,202,0.544,203,0.577,204,0.611,205,0.544,206,0.544,207,0.544,208,0.9,209,0.544,210,1.069,211,0.544,212,0.56,213,0.544,214,0.593,215,0.544,216,0.593,217,0.9,218,0.544,219,0.593,220,0.544,221,0.577,222,0.544,223,0.593,224,0.544,225,0.56,226,0.611,227,0.513,228,0.611,229,0.544,230,1.179,231,0.577,232,0.544,233,0.577,234,0.544,235,0.469,236,0.544,237,0.577,238,0.544,239,0.593,240,0.544,241,0.577,242,0.544,243,0.875,244,0.544,245,0.544,246,0.593,247,0.544,248,0.593,249,0.544,250,0.611,251,0.593,252,0.498,253,0.529,254,0.56,255,0.611,256,0.529,257,0.846,258,0.611,259,0.529,260,0.611,261,0.513,262,0.611,263,0.529,264,0.56,265,0.56,266,0.593,267,0.611,312,1.065,317,1.006,584,1.762,585,3.375,587,3.796,596,2.625,611,2.428,616,2.224,623,2.224,624,1.841,626,2.026,663,3.578,665,2.428,666,2.224,671,3.404,756,2.026,794,1.841,865,2.026,867,3.744,869,1.841,870,2.428,1093,3.869,1311,6.606,1312,4.85,1313,6.355,1314,6.355,1315,6.355,1316,5.759,1317,4.689,1318,6.355,1319,2.889,1320,2.889,1321,7.523,1322,3.29,1323,4.85,1324,8.014,1325,3.29,1326,3.29,1327,2.889,1328,3.29,1329,3.29,1330,7.089,1331,6.355,1332,2.889,1333,3.29,1334,3.29,1335,3.29,1336,4.258,1337,4.258,1338,2.889,1339,2.889,1340,3.29,1341,2.889,1342,2.889]],["title/interfaces/GraphModel.html",[541,1.597,552,2.276]],["body/interfaces/GraphModel.html",[3,0.157,4,0.157,5,0.125,8,0.515,9,1.528,20,0.011,26,3.158,29,0.535,30,0.739,31,0.912,37,0.221,48,0.007,49,0.009,50,0.007,87,0.157,116,1.28,128,2.422,168,1.084,235,0.834,375,2.134,387,4.317,541,3.107,542,4.723,543,3.275,544,2.784,545,3.806,546,3.835,547,3.136,548,3.008,549,3.806,550,3.275,551,1.842,552,3.835,553,5.029,554,5.561,555,4.847,556,5.239,557,4.317]],["title/components/GridActorComponent.html",[109,0.037,193,0.703]],["body/components/GridActorComponent.html",[0,0.091,3,0.082,4,0.082,5,0.066,8,0.27,9,0.984,10,0.998,12,0.598,15,1.847,18,1.155,19,1.122,20,0.011,21,1.256,22,0.48,23,0.989,28,0.718,29,0.632,30,0.675,31,0.587,33,0.772,37,0.082,38,1.708,42,0.809,48,0.004,49,0.006,50,0.004,71,0.48,80,1.149,87,0.185,89,0.134,91,0.539,109,0.048,110,0.509,111,0.72,112,0.571,113,0.571,116,0.763,118,0.466,119,0.579,121,1.427,122,1.305,123,0.555,125,0.832,127,1.04,128,2.289,132,1.803,136,1.367,137,1.069,139,0.675,140,0.675,141,0.698,147,0.315,148,0.832,149,0.832,150,0.386,151,1.141,152,0.571,153,1.141,154,0.509,155,0.555,156,0.856,157,0.509,158,0.571,159,0.509,160,0.539,161,1.4,162,0.509,163,0.555,164,0.571,165,0.509,166,0.555,167,0.509,168,0.997,169,0.571,170,0.524,171,0.571,172,0.509,173,0.571,174,0.509,175,0.571,176,0.509,177,0.524,178,0.571,179,0.509,180,0.555,181,0.509,182,0.571,183,0.509,184,0.571,185,0.571,186,0.571,187,0.763,188,0.571,189,0.509,190,0.571,191,0.509,192,0.524,193,1.017,194,1.293,195,1.369,196,0.509,197,1.017,198,0.509,199,0.555,200,0.509,201,0.571,202,0.509,203,0.809,204,0.571,205,0.509,206,0.509,207,0.509,208,0.856,209,0.509,210,1.027,211,0.509,212,0.524,213,0.509,214,0.555,215,0.509,216,0.555,217,0.856,218,0.509,219,0.555,220,0.509,221,0.539,222,0.509,223,0.555,224,0.509,225,0.524,226,0.571,227,0.48,228,0.571,229,0.509,230,1.141,231,0.539,232,0.509,233,0.539,234,0.509,235,0.438,236,0.509,237,0.539,238,0.509,239,0.555,240,0.509,241,0.539,242,0.509,243,0.832,244,0.509,245,0.509,246,0.555,247,0.509,248,0.555,249,0.509,250,0.571,251,0.998,252,0.466,253,0.494,254,0.524,255,0.571,256,0.494,257,0.903,258,0.571,259,0.494,260,0.571,261,0.48,262,0.571,263,0.494,264,0.524,265,0.524,266,0.555,267,0.571,277,3.293,285,3.096,301,4.22,306,2,317,1.692,375,2.987,534,3.598,551,1.741,616,2.115,638,2.122,640,2.122,681,3.598,691,4.905,696,2.999,697,4.415,725,3.68,733,3.86,740,3.68,887,3.403,1238,2.122,1317,4.536,1343,7.196,1344,1.648,1345,4.613,1346,4.86,1347,4.613,1348,4.613,1349,4.051,1350,4.86,1351,4.86,1352,4.86,1353,5.535,1354,5.535,1355,2.701,1356,2.454,1357,4.051,1358,2.454,1359,2.999,1360,2.701,1361,3.076,1362,2.27,1363,2.454,1364,3.076,1365,4.613,1366,5.301,1367,3.076,1368,5.535,1369,3.076,1370,4.613,1371,3.076,1372,3.68,1373,2.701,1374,2.454,1375,4.613,1376,2.701,1377,2.454,1378,2.27,1379,3.076,1380,6.587,1381,4.613,1382,3.076,1383,4.613,1384,3.076,1385,3.68,1386,3.076,1387,2.701,1388,2.122,1389,3.076,1390,3.076,1391,6.916,1392,3.076,1393,2.701,1394,3.076,1395,3.076,1396,3.076,1397,2.701,1398,3.076,1399,2.701,1400,5.535,1401,3.076,1402,3.076,1403,3.076,1404,3.076,1405,4.613,1406,3.076,1407,3.076,1408,3.076,1409,3.076,1410,3.076,1411,3.076,1412,3.076]],["title/components/GridHelperComponent.html",[109,0.037,196,0.703]],["body/components/GridHelperComponent.html",[0,0.116,3,0.106,4,0.106,5,0.085,8,0.347,10,1.312,12,0.716,13,0.889,20,0.011,21,0.672,22,0.615,23,0.84,28,0.511,29,0.632,30,0.56,31,0.676,33,0.495,37,0.106,42,0.691,48,0.005,49,0.007,50,0.005,67,0.836,68,0.841,69,1.36,71,0.615,87,0.195,88,1.39,89,0.172,90,1.02,91,0.691,109,0.055,110,0.653,111,0.862,112,0.732,113,0.732,116,0.914,117,1.949,118,0.597,119,0.694,121,1.444,122,1.321,123,0.711,125,0.996,126,2.679,127,1.245,130,1.941,136,1.323,137,1.28,139,0.865,140,0.865,141,0.836,142,1.172,143,0.965,147,0.403,148,0.996,149,0.996,150,0.495,151,1.282,152,0.732,153,1.282,154,0.653,155,0.711,156,1.025,157,0.653,158,0.732,159,0.653,160,0.691,161,1.489,162,0.653,163,0.711,164,0.732,165,0.653,166,0.711,167,0.653,168,1.101,169,0.732,170,0.672,171,0.732,172,0.653,173,0.732,174,0.653,175,0.732,176,0.653,177,0.672,178,0.732,179,0.653,180,0.711,181,0.653,182,0.732,183,0.653,184,0.732,185,0.732,186,0.732,187,0.653,188,0.732,189,0.653,190,0.732,191,0.653,192,0.672,193,0.653,194,1.275,195,1.465,196,1.143,197,0.653,198,0.653,199,0.711,200,0.653,201,0.732,202,0.653,203,0.691,204,0.732,205,0.653,206,0.653,207,0.653,208,1.025,209,0.653,210,1.183,211,0.653,212,0.672,213,0.653,214,0.711,215,0.653,216,0.711,217,1.025,218,0.653,219,0.711,220,0.653,221,0.691,222,0.653,223,0.711,224,0.653,225,0.672,226,0.732,227,0.615,228,0.732,229,0.653,230,1.282,231,0.691,232,0.653,233,0.691,234,0.653,235,0.562,236,0.653,237,0.691,238,0.653,239,0.711,240,0.653,241,0.691,242,0.653,243,0.996,244,0.653,245,0.653,246,0.711,247,0.653,248,0.711,249,0.653,250,0.732,251,0.711,252,0.597,253,0.634,254,0.672,255,0.732,256,0.634,257,0.937,258,0.732,259,0.634,260,0.732,261,0.615,262,0.732,263,0.634,264,0.672,265,0.672,266,0.711,267,0.732,531,3.147,533,4.851,534,4.144,535,3.463,538,4.851,551,2.173,1413,6.386,1414,5.524,1415,6.376,1416,5.524,1417,3.944,1418,3.944,1419,3.944,1420,3.944]],["title/components/GridMeshComponent.html",[109,0.037,197,0.703]],["body/components/GridMeshComponent.html",[0,0.107,3,0.097,4,0.097,5,0.078,8,0.318,10,1.27,12,0.674,13,1.172,18,1.165,19,1.132,20,0.011,21,0.617,22,0.565,23,0.891,28,0.469,29,0.608,30,0.318,31,0.645,33,0.455,37,0.097,38,1.677,48,0.004,49,0.006,50,0.004,67,0.787,68,0.772,69,1.322,71,0.565,87,0.196,88,1.308,89,0.158,90,0.936,91,0.635,109,0.052,110,0.599,111,0.811,112,0.672,113,0.672,116,0.86,117,1.719,118,0.548,119,0.653,121,1.439,122,1.316,123,0.653,125,0.938,126,2.578,127,1.172,130,1.868,136,1.461,137,1.204,139,0.794,140,0.794,141,0.787,142,1.545,143,0.886,147,0.37,148,0.938,149,0.938,150,0.455,151,1.233,152,0.672,153,1.233,154,0.599,155,0.653,156,0.965,157,0.599,158,0.672,159,0.599,160,0.635,161,1.46,162,0.599,163,0.653,164,0.672,165,0.599,166,0.653,167,0.599,168,1.066,169,0.672,170,0.617,171,0.672,172,0.599,173,0.672,174,0.599,175,0.672,176,0.599,177,0.617,178,0.672,179,0.599,180,0.653,181,0.599,182,0.672,183,0.599,184,0.672,185,0.672,186,0.672,187,0.599,188,0.672,189,0.599,190,0.672,191,0.599,192,0.617,193,0.599,194,1.285,195,1.433,196,0.599,197,1.1,198,0.599,199,0.653,200,0.599,201,0.672,202,0.599,203,0.635,204,0.672,205,0.599,206,0.599,207,0.599,208,0.965,209,0.599,210,1.129,211,0.599,212,0.617,213,0.599,214,0.653,215,0.599,216,0.653,217,0.965,218,0.599,219,0.653,220,0.599,221,0.635,222,0.599,223,0.653,224,0.599,225,0.617,226,0.672,227,0.565,228,0.672,229,0.599,230,1.233,231,0.635,232,0.599,233,0.635,234,0.599,235,0.516,236,0.599,237,0.635,238,0.599,239,0.653,240,0.599,241,0.635,242,0.599,243,0.938,244,0.599,245,0.599,246,0.653,247,0.599,248,0.653,249,0.599,250,0.672,251,0.653,252,0.548,253,0.582,254,0.617,255,0.672,256,0.582,257,0.893,258,0.672,259,0.582,260,0.672,261,0.565,262,0.672,263,0.582,264,0.617,265,0.617,266,0.653,267,0.672,290,1.243,323,1.319,534,3.954,584,1.939,585,3.564,587,3.257,608,4.147,609,2.353,611,2.671,612,2.353,616,1.66,663,2.671,665,2.671,666,2.789,671,2.784,1350,5.341,1351,5.341,1352,5.837,1357,4.564,1359,3.379,1387,3.179,1393,3.179,1421,6.629,1422,5.198,1423,6.648,1424,2.888,1425,3.62,1426,3.62,1427,6.082,1428,3.62,1429,6.082,1430,3.179,1431,3.62,1432,3.62,1433,3.62,1434,3.62,1435,5.198,1436,3.62,1437,5.198,1438,3.62]],["title/components/HemisphereLightComponent.html",[109,0.037,198,0.703]],["body/components/HemisphereLightComponent.html",[0,0.113,3,0.103,4,0.103,5,0.082,8,0.338,10,1.299,12,0.703,13,0.866,18,1.102,19,1.07,20,0.011,21,0.654,22,0.599,23,0.875,28,0.498,29,0.624,30,0.338,31,0.666,33,0.482,37,0.103,38,0.915,42,0.673,48,0.005,49,0.007,50,0.005,67,0.821,68,0.82,69,1.348,71,0.599,87,0.2,88,1.364,89,0.167,90,0.993,91,0.673,109,0.054,110,0.636,111,0.846,112,0.713,113,0.713,115,2.65,116,0.897,117,1.933,118,0.582,119,0.681,121,1.443,122,1.319,123,0.693,124,4.711,125,0.978,126,2.648,127,1.222,128,1.589,129,4.637,130,1.919,131,2.834,132,3.178,136,1.417,137,1.256,138,1.974,139,0.842,140,0.842,141,0.821,142,1.142,143,0.94,147,0.393,148,0.978,149,0.978,150,0.482,151,1.267,152,0.713,153,1.267,154,0.636,155,0.693,156,1.006,157,0.636,158,0.713,159,0.636,160,0.673,161,1.48,162,0.636,163,0.693,164,0.713,165,0.636,166,0.693,167,0.636,168,1.09,169,0.713,170,0.654,171,0.713,172,0.636,173,0.713,174,0.636,175,0.713,176,0.636,177,0.654,178,0.713,179,0.636,180,0.693,181,0.636,182,0.713,183,0.636,184,0.713,185,0.713,186,0.713,187,0.636,188,0.713,189,0.636,190,0.713,191,0.636,192,0.654,193,0.636,194,1.102,195,1.456,196,0.636,197,0.636,198,1.13,199,1.134,200,0.636,201,0.713,202,0.636,203,0.673,204,0.713,205,0.636,206,0.636,207,0.636,208,1.006,209,0.636,210,1.166,211,0.636,212,0.654,213,0.636,214,0.693,215,0.636,216,0.693,217,1.006,218,0.636,219,0.693,220,0.636,221,0.673,222,0.636,223,0.693,224,0.636,225,0.654,226,0.713,227,0.599,228,0.713,229,0.636,230,1.267,231,0.673,232,0.636,233,0.673,234,0.636,235,0.547,236,0.636,237,0.673,238,0.636,239,0.693,240,0.636,241,0.673,242,0.636,243,0.978,244,0.636,245,0.636,246,0.693,247,0.636,248,0.693,249,0.636,250,0.713,251,0.693,252,0.582,253,0.617,254,0.654,255,0.713,256,0.617,257,0.923,258,0.713,259,0.617,260,0.713,261,0.599,262,0.713,263,0.617,264,0.654,265,0.654,266,0.693,267,0.713,602,2.038,1143,3.064,1146,3.064,1439,6.563,1440,5.423,1441,6.285,1442,6.285,1443,4.762,1444,5.423,1445,3.373,1446,3.841,1447,3.841,1448,3.841,1449,3.841]],["title/injectables/IconService.html",[268,1.758,471,2.617]],["body/injectables/IconService.html",[0,0.124,3,0.113,4,0.199,5,0.09,8,0.371,9,1.236,10,1.469,12,0.751,15,2.054,18,1.015,19,0.986,20,0.011,21,0.986,22,1.11,23,0.976,26,3.141,28,0.923,29,0.65,30,0.677,31,0.754,32,4.561,33,0.936,37,0.155,38,1.775,42,1.307,48,0.005,49,0.007,50,0.005,67,1.001,78,3.698,80,1.372,87,0.113,89,0.184,119,0.83,235,1.186,268,2.396,270,2.474,312,2.766,317,2.354,323,1.539,471,3.567,541,1.587,645,2.913,1450,3.115,1451,5.805,1452,5.792,1453,5.792,1454,4.907,1455,5.792,1456,5.792,1457,5.792,1458,5.085,1459,4.222,1460,5.924,1461,5.085,1462,4.222,1463,5.085,1464,4.222,1465,5.085,1466,4.222,1467,5.085,1468,4.222,1469,5.085,1470,4.222,1471,3.115,1472,3.115,1473,7.237,1474,7.153,1475,6.499,1476,6.499,1477,3.708,1478,3.708,1479,3.115,1480,3.708,1481,3.708,1482,3.708,1483,3.708,1484,3.708,1485,3.708,1486,3.708,1487,3.708,1488,5.805,1489,3.708,1490,3.708,1491,3.708,1492,3.708,1493,3.708,1494,3.708,1495,3.708,1496,3.708,1497,3.708,1498,3.708,1499,3.708,1500,3.708,1501,3.708,1502,3.708,1503,5.085,1504,6.246,1505,3.708,1506,3.708,1507,5.085,1508,3.708,1509,3.708,1510,3.708,1511,3.708,1512,3.708]],["title/interfaces/IconSource.html",[541,1.597,1460,3.135]],["body/interfaces/IconSource.html",[0,0.139,3,0.126,4,0.187,5,0.101,8,0.415,9,1.331,10,1.261,15,1.822,20,0.011,21,0.803,22,0.973,26,3.001,30,0.654,32,3.254,37,0.167,38,1.843,42,1.357,48,0.006,49,0.008,50,0.006,67,0.714,78,4.662,87,0.126,89,0.205,119,0.592,235,1.173,268,2.581,312,2.806,317,2.431,323,1.719,471,2.904,541,1.773,543,2.638,645,3.254,1450,3.479,1451,4.141,1454,3.254,1458,4.141,1460,5.71,1461,4.141,1463,4.141,1465,4.141,1467,4.141,1469,4.141,1471,3.479,1472,3.479,1473,7.54,1474,7.497,1475,6.811,1476,6.811,1477,4.141,1478,4.141,1479,3.479,1480,4.141,1481,4.141,1482,4.141,1483,4.141,1484,4.141,1485,4.141,1486,4.141,1487,4.141,1488,6.14,1489,4.141,1490,4.141,1491,4.141,1492,4.141,1493,4.141,1494,4.141,1495,4.141,1496,4.141,1497,4.141,1498,4.141,1499,4.141,1500,4.141,1501,4.141,1502,4.141,1503,5.479,1504,6.534,1505,4.141,1506,4.141,1507,5.479,1508,4.141,1509,4.141,1510,4.141,1511,4.141,1512,4.141]],["title/components/LayerActorComponent.html",[109,0.037,200,0.703]],["body/components/LayerActorComponent.html",[0,0.101,3,0.092,4,0.092,5,0.074,8,0.302,9,1.067,12,0.649,15,1.9,18,0.602,19,0.584,20,0.011,21,1.005,22,0.535,23,1,26,1.823,28,0.445,29,0.593,30,0.693,31,0.364,33,0.814,37,0.092,42,0.602,48,0.004,49,0.006,50,0.004,71,0.535,80,1.346,87,0.174,89,0.149,91,0.602,109,0.051,110,0.568,111,0.78,112,0.637,113,0.637,116,0.827,118,0.52,119,0.628,121,1.435,122,1.312,123,0.619,125,0.902,127,1.127,128,2.441,136,1.346,139,0.753,140,0.753,141,0.757,147,0.351,148,0.902,149,0.902,150,0.431,151,1.203,152,0.637,153,1.203,154,0.568,155,0.619,156,0.928,157,0.568,158,0.637,159,0.568,160,0.602,161,1.44,162,0.568,163,0.619,164,0.637,165,0.568,166,0.619,167,0.568,168,1.044,169,0.637,170,0.584,171,0.637,172,0.568,173,0.637,174,0.568,175,0.637,176,0.568,177,0.584,178,0.637,179,0.568,180,0.619,181,0.568,182,0.637,183,0.568,184,0.637,185,0.637,186,0.637,187,0.827,188,0.637,189,0.568,190,0.637,191,0.568,192,0.584,193,0.568,194,1.034,195,1.413,196,0.568,197,0.568,198,0.568,199,0.619,200,1.073,201,1.095,202,0.568,203,0.602,204,0.637,205,0.568,206,0.568,207,0.568,208,0.928,209,0.568,210,1.095,211,0.568,212,0.584,213,0.568,214,0.619,215,0.568,216,0.619,217,0.928,218,0.568,219,0.619,220,0.568,221,0.602,222,0.568,223,0.619,224,0.568,225,0.584,226,0.637,227,0.535,228,0.637,229,0.568,230,1.203,231,0.602,232,0.568,233,0.602,234,0.568,235,0.489,236,0.568,237,0.602,238,0.568,239,0.619,240,0.568,241,0.602,242,0.568,243,0.902,244,0.568,245,0.568,246,0.619,247,0.568,248,0.619,249,0.568,250,0.637,251,1.064,252,0.52,253,0.551,254,0.584,255,0.637,256,0.551,257,0.867,258,0.637,259,0.551,260,0.637,261,0.535,262,0.637,263,0.551,264,0.584,265,0.584,266,0.619,267,0.637,285,3.301,290,2.026,301,4.156,375,3.02,547,3.16,551,2.542,590,2.706,592,4.353,666,1.574,681,3.836,690,4.784,691,5.173,692,5.694,696,3.251,697,4.708,698,4.354,699,3.08,725,5.173,733,3.8,736,2.231,750,5.182,751,3.013,1062,2.114,1344,1.838,1346,5.182,1356,2.738,1362,2.532,1363,2.738,1374,2.738,1378,2.532,1513,7.276,1514,5.001,1515,5.901,1516,3.013,1517,3.99,1518,3.013,1519,3.013,1520,3.432,1521,3.432,1522,3.432,1523,3.013,1524,3.432,1525,3.432,1526,3.432,1527,3.432,1528,5.901,1529,3.432]],["title/components/LineConnectorComponent.html",[109,0.037,202,0.703]],["body/components/LineConnectorComponent.html",[0,0.08,3,0.072,4,0.072,5,0.058,8,0.237,9,0.891,10,1.466,12,0.542,13,0.941,15,1.25,18,1.301,19,1.352,20,0.011,21,1.167,22,0.421,23,0.981,28,0.35,29,0.525,30,0.578,31,0.541,33,0.722,37,0.112,38,1.632,42,0.473,48,0.003,49,0.005,50,0.003,55,1.141,57,2.044,66,2.095,67,0.632,68,0.576,69,1.185,71,0.421,80,1.364,87,0.189,88,1.051,89,0.117,90,0.698,91,0.473,102,1.333,109,0.044,110,0.447,111,0.651,112,0.501,113,0.501,116,0.691,117,1.486,118,0.409,119,0.524,121,1.416,122,1.295,123,0.487,125,0.753,127,0.941,128,1.116,130,1.615,132,2.447,136,1.469,137,0.968,138,1.387,139,0.592,140,0.592,141,0.632,142,0.802,143,0.661,147,0.276,148,0.753,149,0.753,150,0.339,151,1.066,152,0.501,153,1.066,154,0.447,155,0.487,156,0.775,157,0.447,158,0.501,159,0.447,160,0.473,161,1.348,162,0.447,163,0.487,164,0.501,165,0.447,166,0.487,167,0.447,168,0.941,169,0.501,170,0.46,171,0.501,172,0.447,173,0.501,174,0.447,175,0.501,176,0.447,177,0.46,178,0.501,179,0.447,180,0.487,181,0.447,182,0.501,183,0.447,184,0.501,185,0.501,186,0.501,187,0.447,188,0.501,189,0.447,190,0.501,191,0.447,192,0.46,193,0.447,194,0.895,195,1.314,196,0.447,197,0.447,198,0.447,199,0.487,200,0.447,201,0.501,202,0.951,203,1.152,204,0.501,205,0.447,206,0.447,207,0.447,208,0.775,209,0.447,210,0.948,211,0.447,212,0.46,213,0.447,214,0.487,215,0.447,216,0.487,217,0.775,218,0.447,219,0.487,220,0.447,221,0.473,222,0.447,223,0.487,224,0.447,225,0.46,226,0.501,227,0.421,228,0.501,229,0.447,230,1.066,231,0.473,232,0.447,233,0.473,234,0.447,235,0.385,236,0.447,237,0.473,238,0.447,239,0.487,240,0.447,241,0.473,242,0.447,243,0.753,244,0.447,245,0.447,246,0.487,247,0.447,248,0.487,249,0.447,250,0.501,251,0.487,252,0.409,253,0.434,254,0.711,255,0.501,256,0.434,257,0.75,258,0.501,259,0.434,260,0.501,261,0.421,262,0.501,263,0.434,264,0.46,265,0.46,266,0.487,267,0.501,269,3.385,273,3.368,279,5.047,289,3.736,290,1.753,306,1.755,312,1.352,317,1.561,323,1.861,326,3.331,551,1.314,595,1.51,602,1.919,616,2.341,623,2.85,728,2.992,735,1.51,767,1.662,1079,2.153,1085,1.862,1086,2.153,1087,2.714,1088,2.153,1202,3.331,1359,2.714,1397,3.667,1399,2.37,1530,5.996,1531,1.991,1532,5.107,1533,4.176,1534,4.484,1535,5.107,1536,6.217,1537,5.107,1538,5.748,1539,5.748,1540,6.018,1541,5.771,1542,5.771,1543,3.523,1544,5.771,1545,5.771,1546,4.176,1547,2.699,1548,2.699,1549,2.881,1550,2.699,1551,4.176,1552,2.699,1553,2.699,1554,2.699,1555,2.699,1556,2.699,1557,2.699,1558,5.748,1559,2.699,1560,2.699,1561,2.699,1562,4.176,1563,2.699,1564,2.699,1565,2.699,1566,3.331,1567,2.153,1568,6.381,1569,3.667,1570,3.667,1571,5.458,1572,4.484,1573,3.667,1574,2.37,1575,2.37,1576,2.37,1577,3.331,1578,6.018,1579,2.37,1580,4.484,1581,4.074,1582,3.667,1583,3.667,1584,2.37,1585,2.37,1586,2.37,1587,2.699,1588,4.176,1589,2.699,1590,4.176,1591,2.699,1592,2.699,1593,5.107,1594,2.699,1595,2.699,1596,2.699,1597,2.699,1598,2.699,1599,2.699,1600,2.699,1601,2.699,1602,2.699,1603,2.699,1604,2.699,1605,4.176,1606,2.699,1607,2.699,1608,4.176,1609,4.176,1610,2.699,1611,2.699,1612,2.699]],["title/components/LoaderActorComponent.html",[109,0.037,205,0.703]],["body/components/LoaderActorComponent.html",[0,0.087,3,0.079,4,0.079,5,0.063,8,0.259,9,0.953,10,1.503,12,0.579,15,1.825,18,1.055,19,1.025,20,0.011,21,1.025,22,0.46,23,0.996,28,0.382,29,0.55,30,0.598,31,0.572,33,0.914,37,0.079,38,1.064,42,0.517,48,0.004,49,0.005,50,0.004,55,1.221,56,2.387,57,2.16,58,2.565,64,2.489,66,2.194,67,0.676,68,0.629,69,1.228,71,0.46,80,1.412,87,0.195,88,1.124,89,0.128,91,0.517,109,0.046,110,0.488,111,0.697,112,0.547,113,0.547,116,0.739,117,1.557,118,0.446,119,0.561,121,1.424,122,1.302,123,0.532,125,0.532,126,2.092,127,1.007,130,1.691,136,1.119,137,1.035,139,0.647,140,0.647,141,0.676,143,0.722,147,0.302,148,0.806,149,0.806,150,0.37,151,1.117,152,0.547,153,1.117,154,0.488,155,0.532,156,0.829,157,0.488,158,0.547,159,0.488,160,0.517,161,1.383,162,0.488,163,0.532,164,0.547,165,0.488,166,0.532,167,0.488,168,0.979,169,0.547,170,0.502,171,0.547,172,0.488,173,0.547,174,0.488,175,0.547,176,0.488,177,0.502,178,0.547,179,0.488,180,0.532,181,0.488,182,0.547,183,0.488,184,0.547,185,0.547,186,0.547,187,1.07,188,0.547,189,0.488,190,0.547,191,0.488,192,0.502,193,0.488,194,0.946,195,1.351,196,0.488,197,0.488,198,0.488,199,0.532,200,0.488,201,0.547,202,0.488,203,0.517,204,0.547,205,0.996,206,0.892,207,0.488,208,0.829,209,0.488,210,1.001,211,0.488,212,0.502,213,0.488,214,0.532,215,0.488,216,0.532,217,0.829,218,0.488,219,0.532,220,0.488,221,0.517,222,0.488,223,0.532,224,0.488,225,0.761,226,0.547,227,0.46,228,0.547,229,0.488,230,1.117,231,0.517,232,0.488,233,0.517,234,0.488,235,0.42,236,0.488,237,0.517,238,0.488,239,0.532,240,0.488,241,0.517,242,0.488,243,0.806,244,0.488,245,0.488,246,0.532,247,0.488,248,0.532,249,0.488,250,0.547,251,0.973,252,0.446,253,0.474,254,0.502,255,0.547,256,0.474,257,0.792,258,0.547,259,0.474,260,0.547,261,0.46,262,0.547,263,0.474,264,0.502,265,0.502,266,0.532,267,0.547,269,3.492,273,3.527,276,4.801,289,3.506,290,2.771,293,5.285,294,4.801,312,1.746,317,1.649,323,2.194,327,4.303,536,3.564,551,0.928,563,1.728,602,2.558,616,1.352,623,2.759,624,1.649,625,3.018,636,2.352,637,1.728,667,1.917,671,3.645,728,3.161,735,1.649,767,1.816,845,2.034,1062,3.322,1072,3.296,1085,2.034,1087,1.917,1089,2.034,1118,2.589,1123,2.175,1156,1.728,1317,3.98,1344,1.579,1355,2.589,1356,2.352,1358,3.564,1359,1.917,1376,2.589,1377,2.352,1378,2.175,1454,4.462,1479,2.175,1517,2.352,1543,3.721,1613,7.194,1614,4.468,1615,5.394,1616,5.394,1617,5.394,1618,4.801,1619,2.949,1620,3.923,1621,2.949,1622,2.949,1623,2.949,1624,2.949,1625,2.949,1626,2.949,1627,2.949,1628,2.949,1629,2.034,1630,2.949,1631,2.949,1632,2.589,1633,2.175,1634,2.949,1635,2.949,1636,2.949,1637,2.949,1638,2.949,1639,4.468,1640,5.394,1641,2.949,1642,2.949,1643,2.949,1644,2.949,1645,2.949,1646,2.949,1647,2.949,1648,2.949,1649,2.949,1650,2.949,1651,2.589,1652,2.589,1653,2.589,1654,5.285,1655,2.949,1656,2.949,1657,3.923,1658,4.468,1659,4.468,1660,2.949,1661,2.949,1662,2.949,1663,2.949]],["title/components/MapControlsComponent.html",[109,0.037,207,0.703]],["body/components/MapControlsComponent.html",[0,0.087,3,0.079,4,0.079,5,0.063,8,0.258,9,0.951,10,1.344,12,0.578,13,0.663,15,1.318,18,1.388,19,1.348,20,0.011,21,0.501,22,0.84,23,1.007,28,0.578,29,0.59,30,0.528,31,0.472,33,0.755,37,0.079,42,0.515,48,0.004,49,0.005,50,0.004,55,1.218,57,2.156,58,2.561,65,1.973,66,2.19,67,0.675,68,0.627,69,1.226,71,0.459,75,2.659,77,1.257,80,1.34,84,1.973,87,0.189,89,0.128,90,0.76,91,0.515,102,2.202,109,0.046,110,0.486,111,0.695,112,0.545,113,0.545,116,0.737,118,0.445,121,1.424,122,1.302,123,0.53,125,0.804,127,1.005,136,1.66,141,0.445,143,0.72,147,0.301,148,0.804,149,0.804,150,0.369,151,1.115,152,0.545,153,1.115,154,0.486,155,0.53,156,0.827,157,0.486,158,0.545,159,0.486,160,0.515,161,1.382,162,0.486,163,0.53,164,0.545,165,0.486,166,0.53,167,0.486,168,0.978,169,0.545,170,0.501,171,0.545,172,0.486,173,0.545,174,0.486,175,0.545,176,0.486,177,0.501,178,0.545,179,0.486,180,0.53,181,0.486,182,0.545,183,0.486,184,0.545,185,0.545,186,0.545,187,0.486,188,0.545,189,0.486,190,0.545,191,0.486,192,0.501,193,0.486,194,0.944,195,1.35,196,0.486,197,0.486,198,0.486,199,0.53,200,0.486,201,0.545,202,0.486,203,0.515,204,0.545,205,0.486,206,0.486,207,0.994,208,0.827,209,0.486,210,0.999,211,0.486,212,0.501,213,0.486,214,0.804,215,0.486,216,0.53,217,0.827,218,0.486,219,0.53,220,0.486,221,0.515,222,0.486,223,0.53,224,0.486,225,0.501,226,0.545,227,0.459,228,0.545,229,0.486,230,1.115,231,0.515,232,0.486,233,0.515,234,0.486,235,0.419,236,0.486,237,0.515,238,0.486,239,0.53,240,0.486,241,0.515,242,0.486,243,0.804,244,0.486,245,0.486,246,0.53,247,0.486,248,0.53,249,0.486,250,0.545,251,0.53,252,0.445,253,0.472,254,0.501,255,0.545,256,0.472,257,0.791,258,0.545,259,0.472,260,0.545,261,0.459,262,0.545,263,0.472,264,0.501,265,0.501,266,0.53,267,0.545,269,3.593,273,3.155,312,2.201,323,1.625,339,2.258,502,3.46,551,1.402,581,1.574,590,1.348,595,2.494,602,1.105,666,2.044,667,2.897,728,3.155,735,1.644,767,1.81,865,1.81,1059,1.722,1076,2.581,1087,1.911,1089,2.028,1123,2.169,1156,1.722,1161,4.433,1317,3.289,1549,3.075,1664,2.345,1665,7.313,1666,2.345,1667,4.728,1668,4.728,1669,3.556,1670,4.728,1671,5.276,1672,5.384,1673,5.384,1674,5.384,1675,5.384,1676,5.384,1677,5.384,1678,5.384,1679,5.384,1680,5.384,1681,5.384,1682,4.728,1683,5.384,1684,4.728,1685,4.457,1686,2.939,1687,2.939,1688,2.939,1689,2.939,1690,4.457,1691,2.581,1692,2.939,1693,4.457,1694,2.939,1695,2.939,1696,2.939,1697,5.276,1698,2.939,1699,2.939,1700,2.939,1701,2.939,1702,2.939,1703,2.939,1704,2.939,1705,2.939,1706,4.457,1707,2.345,1708,2.581,1709,2.581,1710,3.914,1711,2.581,1712,3.914,1713,3.914,1714,2.581,1715,3.914,1716,3.914,1717,2.939,1718,2.939,1719,2.581,1720,2.581,1721,2.581,1722,2.939,1723,2.939,1724,2.939,1725,4.457,1726,2.939,1727,2.939,1728,2.939,1729,4.457,1730,2.939,1731,2.939,1732,2.939,1733,2.939,1734,2.939,1735,2.939,1736,2.939,1737,2.939,1738,2.939,1739,2.939,1740,2.939,1741,2.939,1742,2.939,1743,2.939,1744,4.457,1745,2.939,1746,2.939,1747,2.939,1748,2.939,1749,2.169,1750,3.289]],["title/interfaces/NearestIntersection.html",[541,1.597,1751,3.135]],["body/interfaces/NearestIntersection.html",[0,0.122,3,0.111,4,0.111,5,0.089,8,0.365,9,1.221,15,1.875,20,0.011,21,0.975,30,0.503,37,0.111,38,1.682,42,1.402,48,0.005,49,0.007,50,0.005,55,1.134,57,2.291,61,2.555,62,2.321,66,1.512,67,0.628,78,2.321,87,0.198,89,0.181,106,3.31,117,1.48,137,1.326,141,1.188,142,1.233,257,1.037,268,2.367,277,2.222,290,2.892,291,3.31,298,3.061,303,3.31,312,2.286,316,5.633,317,1.75,323,2.387,502,1.973,541,1.559,543,2.321,555,2.321,602,2.151,609,4.59,612,3.72,637,4.341,666,2.624,698,3.061,770,3.061,977,3.31,1075,2.862,1116,3.061,1195,3.061,1196,3.061,1238,4.519,1388,5.771,1549,2.862,1751,5.65,1752,3.31,1753,4.833,1754,4.258,1755,3.061,1756,4.341,1757,2.862,1758,3.643,1759,5.025,1760,3.643,1761,5.752,1762,3.643,1763,4.833,1764,3.061,1765,5.752,1766,3.643,1767,3.643,1768,3.643,1769,3.643,1770,3.643,1771,3.643,1772,3.643,1773,3.643,1774,3.643,1775,3.643,1776,3.643,1777,5.752,1778,3.643,1779,3.643,1780,3.31,1781,3.643,1782,3.948,1783,3.643,1784,3.643,1785,3.643,1786,4.034,1787,3.643,1788,3.643,1789,5.025,1790,5.752,1791,5.025,1792,5.025,1793,6.504,1794,6.504,1795,5.025,1796,3.643,1797,3.643,1798,5.752,1799,3.061,1800,3.643,1801,5.025,1802,5.025,1803,3.643,1804,3.643,1805,3.643,1806,3.643,1807,3.643,1808,3.643,1809,3.643,1810,4.565,1811,3.643,1812,3.643,1813,3.643,1814,3.643,1815,3.643,1816,3.643,1817,5.025,1818,4.565,1819,3.643,1820,6.2,1821,5.025,1822,3.643,1823,3.643,1824,3.643,1825,3.643]],["title/interfaces/Node.html",[541,1.597,548,2.184]],["body/interfaces/Node.html",[3,0.161,4,0.161,5,0.129,8,0.528,9,1.551,20,0.011,26,3.227,29,0.549,30,0.753,31,0.862,37,0.223,48,0.007,49,0.009,50,0.007,87,0.161,116,1.345,128,2.482,168,1.101,235,1.158,375,2.188,387,3.214,541,3.129,542,4.878,543,3.358,544,2.854,545,3.901,546,3.893,547,3.214,548,3.735,549,3.901,550,3.358,551,1.888,552,3.214,553,3.901,554,4.14,555,4.375,556,3.901,557,3.214]],["title/components/ObjLoaderComponent.html",[109,0.037,211,0.703]],["body/components/ObjLoaderComponent.html",[0,0.094,3,0.085,4,0.085,5,0.15,8,0.279,9,1.007,10,1.204,12,0.612,13,1.064,15,0.777,16,3.472,17,4.159,18,0.828,19,0.804,20,0.011,21,1.192,22,0.495,23,0.905,26,2.713,28,0.612,29,0.61,30,0.587,31,0.662,33,0.593,37,0.085,38,0.756,42,0.828,48,0.004,49,0.006,50,0.004,67,0.715,68,0.677,69,1.262,71,0.495,80,0.658,87,0.199,88,1.188,89,0.138,90,0.821,91,0.556,109,0.057,110,0.525,111,0.736,112,0.589,113,0.589,116,0.781,117,1.615,118,0.48,119,0.593,121,1.43,122,1.307,123,0.572,125,0.852,127,1.064,130,1.755,136,1.296,137,1.094,139,0.696,140,0.696,141,0.715,142,0.943,143,0.777,147,0.325,148,0.852,149,0.852,150,0.398,151,1.159,152,0.589,153,1.159,154,0.525,155,0.572,156,0.876,157,0.525,158,0.589,159,0.525,160,0.556,161,1.412,162,0.525,163,0.572,164,0.589,165,0.525,166,0.572,167,0.525,168,1.011,169,0.589,170,0.54,171,0.589,172,0.525,173,0.589,174,0.525,175,0.589,176,0.525,177,0.54,178,0.589,179,0.525,180,0.572,181,0.525,182,0.589,183,0.525,184,0.589,185,0.589,186,0.589,187,0.525,188,0.589,189,0.525,190,0.589,191,0.525,192,0.54,193,0.525,194,0.988,195,1.381,196,0.525,197,0.525,198,0.525,199,0.572,200,0.525,201,0.589,202,0.525,203,0.556,204,0.589,205,0.525,206,1.199,207,0.525,208,0.876,209,0.525,210,1.046,211,1.033,212,1.319,213,0.525,214,0.572,215,0.525,216,0.572,217,0.876,218,0.525,219,0.572,220,0.525,221,0.556,222,0.525,223,0.572,224,0.525,225,0.54,226,0.589,227,0.495,228,0.589,229,0.525,230,1.159,231,0.556,232,0.525,233,0.556,234,0.525,235,0.452,236,0.525,237,0.556,238,0.525,239,0.572,240,0.525,241,0.556,242,0.525,243,0.852,244,0.525,245,0.525,246,0.572,247,0.525,248,0.572,249,0.525,250,0.589,251,0.572,252,0.48,253,0.51,254,0.54,255,0.589,256,0.51,257,0.828,258,0.589,259,0.51,260,0.589,261,0.495,262,0.589,263,0.51,264,0.54,265,0.54,266,0.572,267,0.589,272,2.063,290,2.401,460,3.154,581,1.699,602,1.193,623,2.863,699,2.907,736,2.063,773,2.341,775,3.304,1106,2.341,1310,4.145,1826,6.68,1827,2.341,1828,4.721,1829,4.721,1830,4.721,1831,2.786,1832,4.498,1833,4.721,1834,7.246,1835,4.607,1836,5.483,1837,5.483,1838,4.145,1839,3.173,1840,5.861,1841,6.675,1842,6.675,1843,5.861,1844,6.675,1845,6.798,1846,4.721,1847,3.173,1848,4.95,1849,2.786,1850,3.173,1851,3.173,1852,4.721,1853,3.173,1854,3.173,1855,3.173,1856,3.173,1857,3.173,1858,2.341,1859,3.173,1860,3.173,1861,5.638,1862,2.531,1863,3.173,1864,3.766,1865,4.981,1866,3.173,1867,3.173,1868,2.786,1869,2.531,1870,2.531,1871,2.786,1872,3.173,1873,3.173,1874,3.173,1875,3.173,1876,3.173,1877,3.173,1878,3.173,1879,2.531,1880,3.173,1881,3.173,1882,2.786,1883,2.786]],["title/components/ObjectLoaderComponent.html",[109,0.037,209,0.703]],["body/components/ObjectLoaderComponent.html",[0,0.113,3,0.103,4,0.103,5,0.082,8,0.337,9,1.156,10,1.298,12,0.703,13,1.222,16,3.869,18,0.673,19,0.654,20,0.011,21,1.07,22,0.599,23,0.763,28,0.498,29,0.624,30,0.337,31,0.666,33,0.482,37,0.103,42,0.673,48,0.005,49,0.007,50,0.005,67,0.82,68,0.819,69,1.348,71,0.599,87,0.2,88,1.363,89,0.167,90,0.992,91,0.673,109,0.054,110,0.635,111,0.845,112,0.712,113,0.712,116,0.897,117,1.765,118,0.581,119,0.68,121,1.443,122,1.319,123,0.692,125,0.977,130,1.918,137,1.256,139,0.842,140,0.842,141,1.033,142,1.141,143,0.939,147,0.392,148,0.977,149,0.977,150,0.482,151,1.266,152,0.712,153,1.266,154,0.635,155,0.692,156,1.005,157,0.635,158,0.712,159,0.635,160,0.673,161,1.48,162,0.635,163,0.692,164,0.712,165,0.635,166,0.692,167,0.635,168,1.09,169,0.712,170,0.654,171,0.712,172,0.635,173,0.712,174,0.635,175,0.712,176,0.635,177,0.654,178,0.712,179,0.635,180,0.692,181,0.635,182,0.712,183,0.635,184,0.712,185,0.712,186,0.712,187,0.635,188,0.712,189,0.635,190,0.712,191,0.635,192,0.654,193,0.635,194,1.101,195,1.455,196,0.635,197,0.635,198,0.635,199,0.692,200,0.635,201,0.712,202,0.635,203,0.673,204,0.712,205,0.635,206,1.27,207,0.635,208,1.005,209,1.129,210,1.166,211,0.635,212,0.654,213,0.635,214,0.692,215,0.635,216,0.692,217,1.005,218,0.635,219,0.692,220,0.635,221,0.673,222,0.635,223,0.692,224,0.635,225,0.654,226,0.712,227,0.599,228,0.712,229,0.635,230,1.266,231,0.673,232,0.635,233,0.673,234,0.635,235,0.547,236,0.635,237,0.673,238,0.635,239,0.692,240,0.635,241,0.673,242,0.635,243,0.977,244,0.635,245,0.635,246,0.692,247,0.635,248,0.692,249,0.635,250,0.712,251,0.692,252,0.581,253,0.617,254,0.654,255,0.712,256,0.617,257,0.923,258,0.712,259,0.617,260,0.712,261,0.599,262,0.712,263,0.617,264,0.654,265,0.654,266,0.692,267,0.712,285,2.147,290,2.156,460,2.147,775,3.681,1827,2.831,1832,5.011,1835,5.035,1843,3.37,1845,3.37,1864,3.061,1865,4.323,1882,3.37,1883,3.37,1884,5.993,1885,5.419,1886,5.419,1887,3.837,1888,5.419,1889,3.837,1890,3.837,1891,3.837,1892,3.837,1893,3.37,1894,3.837,1895,3.37,1896,3.837]],["title/components/OrbitControlsComponent.html",[109,0.037,213,0.703]],["body/components/OrbitControlsComponent.html",[0,0.11,3,0.1,4,0.1,5,0.08,8,0.328,10,1.285,12,0.689,13,0.841,18,0.931,19,0.905,20,0.011,21,0.636,22,0.582,23,0.866,28,0.689,29,0.651,30,0.467,31,0.563,33,0.667,37,0.1,42,0.654,48,0.005,49,0.006,50,0.005,55,1.452,58,2.942,65,2.352,67,0.804,68,0.796,69,1.335,71,0.582,75,2.984,77,1.596,80,1.103,84,2.352,87,0.191,89,0.162,90,0.965,91,0.654,109,0.053,110,0.618,111,0.829,112,0.693,113,0.693,116,0.879,118,0.565,121,1.441,122,1.317,123,0.673,125,0.958,127,1.198,136,1.284,141,0.565,143,0.914,147,0.382,148,0.958,149,0.958,150,0.469,151,1.251,152,0.693,153,1.251,154,0.618,155,0.673,156,0.986,157,0.618,158,0.693,159,0.618,160,0.654,161,1.47,162,0.618,163,0.673,164,0.693,165,0.618,166,0.673,167,0.618,168,1.079,169,0.693,170,0.636,171,0.693,172,0.618,173,0.693,174,0.618,175,0.693,176,0.618,177,0.636,178,0.693,179,0.618,180,0.673,181,0.618,182,0.693,183,0.618,184,0.693,185,0.693,186,0.693,187,0.618,188,0.693,189,0.618,190,0.693,191,0.618,192,0.636,193,0.618,194,1.085,195,1.445,196,0.618,197,0.618,198,0.618,199,0.673,200,0.618,201,0.693,202,0.618,203,0.654,204,0.693,205,0.618,206,0.618,207,0.618,208,0.986,209,0.618,210,1.148,211,0.618,212,0.636,213,1.115,214,1.216,215,0.618,216,0.673,217,0.986,218,0.618,219,0.673,220,0.618,221,0.654,222,0.618,223,0.673,224,0.618,225,0.636,226,0.693,227,0.582,228,0.693,229,0.618,230,1.251,231,0.654,232,0.618,233,0.654,234,0.618,235,0.532,236,0.618,237,0.654,238,0.618,239,0.673,240,0.618,241,0.654,242,0.618,243,0.958,244,0.618,245,0.618,246,0.673,247,0.618,248,0.673,249,0.618,250,0.693,251,0.673,252,0.565,253,0.6,254,0.636,255,0.693,256,0.6,257,0.909,258,0.693,259,0.6,260,0.693,261,0.582,262,0.693,263,0.6,264,0.636,265,0.636,266,0.673,267,0.693,502,3.703,590,1.711,595,2.973,602,1.403,865,2.299,1059,2.187,1156,2.187,1664,2.978,1666,2.978,1667,5.433,1668,5.433,1669,4.239,1670,5.433,1671,5.919,1682,5.433,1684,5.433,1691,3.278,1697,4.666,1707,4.239,1708,3.278,1709,3.278,1710,4.666,1711,3.278,1712,4.666,1713,4.666,1714,3.278,1715,4.666,1716,4.666,1719,3.278,1720,3.278,1721,3.278,1749,2.754,1750,3.92,1897,6.501,1898,5.314,1899,3.733,1900,3.733]],["title/components/OrthographicCameraComponent.html",[109,0.037,215,0.703]],["body/components/OrthographicCameraComponent.html",[0,0.103,3,0.094,4,0.094,5,0.075,8,0.308,10,1.349,12,0.659,13,0.791,15,1.463,18,0.615,19,0.597,20,0.011,21,0.597,22,0.547,23,0.881,28,0.775,29,0.663,30,0.525,31,0.633,33,0.823,37,0.094,38,0.835,42,0.615,48,0.004,49,0.006,50,0.004,55,1.389,58,2.841,65,2.249,67,0.769,68,0.748,69,1.308,71,0.547,75,2.899,77,2.173,80,1.505,84,2.249,87,0.186,89,0.153,90,0.907,91,0.615,102,1.732,109,0.056,110,0.58,111,0.793,112,0.651,113,0.651,116,0.841,118,0.531,119,0.638,121,1.437,122,1.314,123,0.633,125,0.916,127,1.145,136,1.054,137,1.177,139,0.769,140,0.769,141,0.531,143,0.859,147,0.359,148,0.916,149,0.916,150,0.44,151,1.216,152,0.651,153,1.216,154,0.58,155,0.633,156,0.943,157,0.58,158,0.651,159,0.58,160,0.615,161,1.448,162,0.58,163,0.633,164,0.651,165,0.58,166,0.633,167,0.58,168,1.053,169,0.651,170,0.597,171,0.651,172,0.58,173,0.651,174,0.58,175,0.651,176,0.58,177,0.597,178,0.651,179,0.58,180,0.633,181,0.58,182,0.651,183,0.58,184,0.651,185,0.651,186,0.651,187,0.58,188,0.651,189,0.58,190,0.651,191,0.58,192,0.597,193,0.58,194,1.047,195,1.421,196,0.58,197,0.58,198,0.58,199,0.633,200,0.58,201,0.651,202,0.58,203,0.615,204,0.651,205,0.58,206,0.58,207,0.58,208,0.943,209,0.58,210,1.109,211,0.58,212,0.597,213,0.58,214,0.633,215,1.084,216,1.078,217,0.943,218,0.58,219,0.633,220,0.58,221,0.615,222,0.58,223,0.633,224,0.58,225,0.597,226,0.651,227,0.547,228,0.651,229,0.58,230,1.216,231,0.615,232,0.58,233,0.615,234,0.58,235,0.5,236,0.58,237,0.615,238,0.58,239,0.633,240,0.58,241,0.615,242,0.58,243,0.916,244,0.58,245,0.58,246,0.633,247,0.58,248,0.633,249,0.58,250,0.651,251,0.633,252,0.531,253,0.564,254,0.597,255,0.651,256,0.564,257,0.878,258,0.651,259,0.564,260,0.651,261,0.547,262,0.651,263,0.564,264,0.597,265,0.597,266,0.633,267,0.651,312,1.136,317,1.072,323,1.852,338,2.178,551,1.88,581,1.878,666,3.512,869,1.962,1161,2.588,1195,3.749,1196,3.749,1202,4.054,1244,3.08,1754,4.52,1756,3.501,1782,3.505,1901,6.566,1902,2.798,1903,5.081,1904,5.752,1905,4.462,1906,6.551,1907,4.462,1908,3.507,1909,3.507,1910,4.462,1911,3.507,1912,5.226,1913,3.507,1914,3.507,1915,3.507,1916,3.507,1917,5.081,1918,5.975,1919,3.507,1920,3.507,1921,3.507,1922,3.507,1923,6.953,1924,3.507,1925,3.507,1926,3.507,1927,3.507,1928,3.507,1929,3.08,1930,3.507,1931,3.507]],["title/components/PerspectiveCameraComponent.html",[109,0.037,218,0.703]],["body/components/PerspectiveCameraComponent.html",[0,0.111,3,0.101,4,0.101,5,0.081,8,0.331,10,1.221,12,0.694,13,0.85,15,1.523,20,0.011,21,0.642,22,0.588,23,0.903,28,0.694,29,0.654,30,0.629,31,0.567,33,0.672,37,0.101,48,0.005,49,0.006,50,0.005,67,0.81,68,0.804,69,1.34,71,0.588,80,1.291,87,0.191,89,0.164,90,0.975,91,0.661,109,0.053,110,0.624,111,0.835,112,0.699,113,0.699,116,0.885,118,0.571,119,0.672,121,1.442,122,1.318,123,0.68,125,0.965,127,1.206,136,1.405,137,1.24,139,0.827,140,0.827,141,0.571,143,0.923,147,0.385,148,0.965,149,0.965,150,0.473,151,1.256,152,0.699,153,1.256,154,0.624,155,0.68,156,0.993,157,0.624,158,0.699,159,0.624,160,0.661,161,1.474,162,0.624,163,0.68,164,0.699,165,0.624,166,0.68,167,0.624,168,1.083,169,0.699,170,0.642,171,0.699,172,0.624,173,0.699,174,0.624,175,0.699,176,0.624,177,0.642,178,0.699,179,0.624,180,0.68,181,0.624,182,0.699,183,0.624,184,0.699,185,0.699,186,0.699,187,0.624,188,0.699,189,0.624,190,0.699,191,0.624,192,0.642,193,0.624,194,1.09,195,1.449,196,0.624,197,0.624,198,0.624,199,0.68,200,0.624,201,0.699,202,0.624,203,0.661,204,0.699,205,0.624,206,0.624,207,0.624,208,0.993,209,0.624,210,1.154,211,0.624,212,0.642,213,0.624,214,0.68,215,0.624,216,0.68,217,0.993,218,1.12,219,1.122,220,0.624,221,0.661,222,0.624,223,0.68,224,0.624,225,0.642,226,0.699,227,0.588,228,0.699,229,0.624,230,1.256,231,0.661,232,0.624,233,0.661,234,0.624,235,0.537,236,0.624,237,0.661,238,0.624,239,0.68,240,0.624,241,0.661,242,0.624,243,0.965,244,0.624,245,0.624,246,0.68,247,0.624,248,0.68,249,0.624,250,0.699,251,0.68,252,0.571,253,0.606,254,0.642,255,0.699,256,0.606,257,0.914,258,0.699,259,0.606,260,0.699,261,0.588,262,0.699,263,0.606,264,0.642,265,0.642,266,0.68,267,0.699,311,2.781,460,2.993,551,2.498,1269,5.462,1270,5.462,1295,3.31,1296,3.31,1754,4.648,1756,3.645,1782,2.601,1902,3.007,1904,5.945,1905,4.698,1907,3.31,1910,4.698,1912,4.963,1929,3.31,1932,6.708,1933,5.351,1934,6.221,1935,5.351,1936,3.77,1937,3.77,1938,3.77,1939,3.77,1940,3.77,1941,3.77,1942,3.77,1943,3.77,1944,3.77,1945,3.77]],["title/components/PlaneMeshComponent.html",[109,0.037,220,0.703]],["body/components/PlaneMeshComponent.html",[0,0.095,3,0.086,4,0.086,5,0.069,8,0.283,10,1.211,12,0.619,13,1.076,15,1.392,18,1.102,19,1.071,20,0.011,21,0.968,22,0.502,23,0.885,28,0.619,29,0.614,30,0.419,31,0.846,33,0.599,37,0.086,38,1.675,42,0.836,48,0.004,49,0.006,50,0.004,55,1.304,58,2.704,65,2.112,67,0.722,68,0.687,69,1.268,71,0.502,75,2.783,77,2.04,80,0.668,84,2.112,87,0.188,88,1.2,89,0.14,90,0.832,91,0.564,102,1.59,109,0.049,110,0.532,111,0.744,112,0.597,113,0.597,116,0.789,117,1.626,118,0.487,119,0.599,121,1.431,122,1.308,123,0.581,125,0.861,126,2.438,127,1.076,130,1.767,136,1.393,137,1.105,139,0.706,140,0.706,141,0.722,142,1.418,143,0.788,147,0.329,148,0.861,149,0.861,150,0.404,151,1.167,152,0.597,153,1.167,154,0.532,155,0.581,156,0.885,157,0.532,158,0.597,159,0.532,160,0.564,161,1.417,162,0.532,163,0.581,164,0.597,165,0.532,166,0.581,167,0.532,168,1.017,169,0.597,170,0.548,171,0.597,172,0.532,173,0.597,174,0.532,175,0.597,176,0.532,177,0.548,178,0.597,179,0.532,180,0.581,181,0.532,182,0.597,183,0.532,184,0.597,185,0.597,186,0.597,187,0.532,188,0.597,189,0.532,190,0.597,191,0.532,192,0.548,193,0.532,194,0.997,195,1.387,196,0.532,197,0.532,198,0.532,199,0.581,200,0.532,201,0.597,202,0.532,203,0.564,204,0.597,205,0.532,206,0.532,207,0.532,208,0.885,209,0.532,210,1.055,211,0.532,212,0.548,213,0.532,214,0.581,215,0.532,216,0.581,217,0.885,218,0.532,219,0.581,220,1.04,221,0.997,222,0.532,223,0.581,224,0.532,225,0.548,226,0.597,227,0.502,228,0.597,229,0.532,230,1.167,231,0.564,232,0.532,233,0.564,234,0.532,235,0.459,236,0.532,237,0.564,238,0.532,239,0.581,240,0.532,241,0.564,242,0.532,243,0.861,244,0.532,245,0.532,246,0.581,247,0.532,248,0.581,249,0.532,250,0.597,251,0.581,252,0.487,253,0.517,254,0.548,255,0.597,256,0.517,257,0.835,258,0.597,259,0.517,260,0.597,261,0.502,262,0.597,263,0.517,264,0.548,265,0.548,266,0.581,267,0.597,312,1.042,317,0.984,551,1.978,557,3.367,584,1.724,585,3.331,587,3.766,590,3.428,591,4.194,592,4.381,593,4.639,595,3.517,596,2.568,597,5.016,598,5.016,600,5.016,601,5.964,602,2.999,603,5.521,604,5.521,605,5.521,606,5.521,607,5.521,608,2.568,609,3.101,611,2.375,612,3.101,613,4.189,616,1.476,618,3.101,620,3.52,621,3.52,623,2.188,624,1.801,625,1.801,626,1.982,671,3.367,756,1.982,794,1.801,865,1.982,867,3.695,869,1.801,870,2.375,1093,3.806,1319,2.826,1336,4.189,1337,4.189,1338,2.826,1339,2.826,1341,2.826,1342,2.826,1946,6.564,1947,4.771,1948,2.826,1949,4.189,1950,3.219,1951,3.219,1952,4.771]],["title/components/PointLightComponent.html",[109,0.037,222,0.703]],["body/components/PointLightComponent.html",[0,0.109,3,0.099,4,0.099,5,0.08,8,0.326,10,1.282,12,0.686,13,0.837,18,1.179,19,1.145,20,0.011,21,0.632,22,0.579,23,0.898,28,0.481,29,0.615,30,0.326,31,0.654,33,0.466,37,0.099,38,0.884,42,0.651,48,0.004,49,0.006,50,0.004,67,0.801,68,0.792,69,1.333,71,0.579,87,0.19,88,1.331,89,0.161,90,0.96,91,0.651,109,0.053,110,0.614,111,0.825,112,0.689,113,0.689,115,2.56,116,0.875,117,1.911,118,0.562,119,0.664,121,1.441,122,1.317,123,0.669,124,4.638,125,0.954,126,2.607,127,1.193,128,2.551,129,4.55,130,1.889,131,2.738,132,3.101,133,3.259,136,1.475,137,1.226,138,1.907,139,0.814,140,0.814,141,0.801,142,1.103,143,0.908,146,2.961,147,0.38,148,0.954,149,0.954,150,0.466,151,1.248,152,0.689,153,1.248,154,0.614,155,0.669,156,0.982,157,0.614,158,0.689,159,0.614,160,0.651,161,1.468,162,0.614,163,0.669,164,0.689,165,0.614,166,0.669,167,0.614,168,1.076,169,0.689,170,0.632,171,0.689,172,0.614,173,0.689,174,0.614,175,0.689,176,0.614,177,0.632,178,0.689,179,0.614,180,0.669,181,0.614,182,0.689,183,0.614,184,0.689,185,0.689,186,0.689,187,0.614,188,0.689,189,0.614,190,0.689,191,0.614,192,0.632,193,0.614,194,1.081,195,1.443,196,0.614,197,0.614,198,0.614,199,0.669,200,0.614,201,0.689,202,0.614,203,0.651,204,0.689,205,0.614,206,0.614,207,0.614,208,0.982,209,0.614,210,1.144,211,0.614,212,0.632,213,0.614,214,0.669,215,0.614,216,0.669,217,0.982,218,0.614,219,0.669,220,0.614,221,0.651,222,1.112,223,1.112,224,0.614,225,0.632,226,0.689,227,0.579,228,0.689,229,0.614,230,1.248,231,0.651,232,0.614,233,0.651,234,0.614,235,0.529,236,0.614,237,0.651,238,0.614,239,0.669,240,0.614,241,0.651,242,0.614,243,0.954,244,0.614,245,0.614,246,0.669,247,0.614,248,0.669,249,0.614,250,0.689,251,0.669,252,0.562,253,0.596,254,0.632,255,0.689,256,0.596,257,0.906,258,0.689,259,0.596,260,0.689,261,0.579,262,0.689,263,0.596,264,0.632,265,0.632,266,0.669,267,0.689,312,1.713,317,1.135,581,1.987,602,2.318,1140,4.92,1143,2.961,1152,4.221,1153,3.259,1154,2.961,1160,3.259,1162,3.259,1163,5.415,1165,4.646,1166,3.259,1167,3.259,1443,4.646,1445,3.259,1549,2.56,1818,4.92,1953,6.678,1954,5.292,1955,3.711,1956,3.711,1957,3.711,1958,3.711,1959,3.711]],["title/pipes/Rad2DegPipe.html",[493,2.932,1124,2.932]],["body/pipes/Rad2DegPipe.html",[0,0.184,3,0.167,4,0.167,5,0.134,12,0.811,20,0.011,23,0.76,28,0.811,29,0.728,30,0.55,31,0.663,33,0.786,37,0.167,42,1.097,48,0.008,49,0.009,50,0.008,55,1.71,87,0.167,89,0.272,118,0.947,272,4.067,493,5.142,551,2.649,667,4.067,1124,5.142,1125,4.991,1128,5.494,1131,6.545,1132,6.545,1133,7.581,1134,6.545,1135,5.494,1137,5.494,1960,5.494,1961,7.454,1962,7.454,1963,6.257]],["title/directives/RaycasterCameraDirective.html",[150,0.534,256,0.683]],["body/directives/RaycasterCameraDirective.html",[0,0.18,3,0.164,4,0.164,5,0.131,8,0.538,12,0.954,20,0.011,23,0.894,28,0.793,29,0.559,30,0.538,31,0.648,33,0.768,37,0.164,48,0.007,49,0.009,50,0.007,55,2.01,56,3.49,64,3.384,67,1.113,80,1.526,87,0.211,89,0.266,118,0.926,121,0.983,122,1.08,150,0.768,252,0.926,256,1.181,257,1.08,290,2.524,502,4.087,506,4.22,1057,4.88,1059,4.309,1077,3.976,1754,5.317,1755,4.513,1756,4.62,1964,5.125,1965,5.371,1966,6.117,1967,6.117,1968,6.117]],["title/interfaces/RaycasterEmitEvent.html",[541,1.597,1366,2.932]],["body/interfaces/RaycasterEmitEvent.html",[0,0.151,3,0.137,4,0.137,5,0.11,8,0.451,9,1.407,20,0.011,21,1.241,30,0.58,31,0.699,37,0.176,38,1.57,48,0.006,49,0.008,50,0.006,55,1.403,56,2.918,57,2.64,64,2.123,66,1.871,67,0.777,80,1.368,87,0.213,89,0.223,109,0.071,111,1.029,117,2.057,122,0.969,137,1.528,141,0.777,142,1.526,150,0.645,212,1.241,257,1.168,261,0.801,277,3.902,281,3.787,290,2.841,301,4.301,502,3.465,506,3.541,541,1.929,543,2.872,733,4.505,771,3.541,1059,3.008,1075,3.541,1077,3.337,1083,5.812,1090,5.261,1366,4.549,1372,4.095,1385,5.261,1388,5.614,1753,5.375,1757,3.541,1763,5.375,1764,3.787,1786,4.061,1799,3.787,1964,3.337,1969,4.095,1970,4.507,1971,4.095,1972,4.507,1973,4.507,1974,4.507,1975,4.507,1976,4.507,1977,4.095,1978,4.095,1979,3.787,1980,6.397,1981,4.507,1982,6.397,1983,4.507,1984,4.507,1985,4.507,1986,4.507,1987,4.507,1988,4.507,1989,4.507,1990,4.507,1991,4.507,1992,4.507,1993,4.507,1994,4.507,1995,4.507,1996,4.507,1997,4.507,1998,4.507,1999,4.507,2000,4.507]],["title/directives/RaycasterEnableDirective.html",[150,0.534,259,0.683]],["body/directives/RaycasterEnableDirective.html",[0,0.183,3,0.167,4,0.167,5,0.133,8,0.547,12,0.964,20,0.011,23,0.903,28,0.807,29,0.569,30,0.547,31,0.66,33,0.782,37,0.167,48,0.008,49,0.009,50,0.008,55,2.031,56,3.516,62,4.158,64,3.404,67,1.125,80,1.542,87,0.199,89,0.271,118,0.943,121,1,122,1.092,150,0.782,252,0.943,257,1.092,259,1.194,290,2.137,502,4.058,506,4.295,1077,4.047,1964,5.164,2001,5.467,2002,6.226,2003,6.226,2004,6.226,2005,6.226]],["title/directives/RaycasterGroupDirective.html",[150,0.534,261,0.663]],["body/directives/RaycasterGroupDirective.html",[0,0.128,3,0.116,4,0.116,5,0.093,8,0.382,12,0.766,20,0.011,21,1.143,23,1.017,28,0.87,29,0.613,30,0.633,31,0.711,33,0.998,37,0.158,38,1.407,48,0.005,49,0.007,50,0.005,55,1.615,56,2.97,57,2.687,64,2.978,66,2.624,67,0.894,80,1.701,87,0.202,89,0.189,109,0.062,111,1.123,117,1.947,118,0.658,121,0.698,122,1.058,137,1.369,141,0.658,142,1.292,150,0.546,212,1.143,252,0.658,257,1.204,261,0.922,272,2.826,277,4.033,281,4.359,290,2.968,301,4.445,502,3.779,506,2.999,541,1.634,690,4.359,696,3.84,733,4.219,771,4.076,1057,3.468,1059,3.462,1075,2.999,1077,2.826,1083,5.354,1090,4.713,1349,5.187,1366,2.999,1372,4.713,1385,4.713,1388,4.63,1753,3.207,1757,2.999,1763,4.951,1764,3.207,1786,4.434,1799,4.359,1964,5.48,1969,3.468,1970,5.187,1971,4.713,1972,5.187,1973,5.187,1974,5.187,1975,5.187,1976,5.187,1977,5.354,1978,5.354,1979,4.951,1980,5.893,1981,3.817,1982,5.893,1983,3.817,1984,3.817,1985,3.817,1986,6.322,1987,3.817,1988,3.817,1989,3.817,1990,6.322,1991,3.817,1992,3.817,1993,3.817,1994,6.322,1995,3.817,1996,3.817,1997,3.817,1998,3.817,1999,3.817,2000,3.817,2006,5.908,2007,4.347,2008,4.347,2009,4.347,2010,4.347,2011,4.347,2012,4.347,2013,4.347,2014,4.347,2015,4.347]],["title/injectables/RaycasterService.html",[268,1.758,502,2.021]],["body/injectables/RaycasterService.html",[0,0.096,3,0.087,4,0.087,5,0.07,8,0.287,9,1.029,12,0.626,15,2.049,18,1.11,19,1.079,20,0.011,21,0.977,23,1.035,28,0.949,29,0.669,30,0.643,31,0.775,33,1.024,37,0.087,38,1.509,42,1.316,48,0.004,49,0.006,50,0.004,55,0.893,57,1.932,61,3.901,62,3.544,66,2.309,67,0.868,78,3.544,80,1.661,87,0.181,89,0.142,106,2.607,117,1.638,137,1.118,141,0.959,142,0.971,257,1.039,268,1.996,270,1.915,277,3.392,290,3.023,291,4.576,298,2.411,303,5.053,312,2.289,316,5.053,317,1.475,323,2.091,502,2.295,541,1.228,555,2.699,602,1.814,609,4.597,612,3.729,637,3.712,666,2.212,690,3.56,698,4.232,699,2.972,770,4.673,977,2.607,1075,2.254,1116,2.411,1195,2.411,1196,2.411,1238,3.957,1388,5.289,1549,2.254,1751,5.217,1752,2.607,1753,2.411,1754,4.597,1755,2.411,1756,4.4,1757,2.254,1758,4.237,1759,5.562,1760,5.037,1761,5.037,1762,2.869,1763,4.232,1764,2.411,1765,5.037,1766,2.869,1767,2.869,1768,2.869,1769,2.869,1770,2.869,1771,2.869,1772,2.869,1773,2.869,1774,2.869,1775,2.869,1776,5.562,1777,5.037,1778,5.562,1779,5.037,1780,3.849,1781,2.869,1782,3.329,1783,4.237,1784,2.869,1785,2.869,1786,3.901,1787,2.869,1788,4.237,1789,4.237,1790,5.037,1791,4.237,1792,4.237,1793,5.933,1794,5.933,1795,4.237,1796,2.869,1797,2.869,1798,5.037,1799,3.56,1800,2.869,1801,4.237,1802,4.237,1803,4.237,1804,5.037,1805,2.869,1806,2.869,1807,2.869,1808,4.237,1809,4.237,1810,3.849,1811,2.869,1812,2.869,1813,4.237,1814,2.869,1815,2.869,1816,2.869,1817,4.237,1818,3.849,1819,2.869,1820,5.562,1821,4.237,1822,2.869,1823,2.869,1824,2.869,1825,2.869,2016,4.825,2017,4.825,2018,4.825,2019,4.825,2020,4.825,2021,4.237,2022,4.825,2023,3.268,2024,3.268,2025,3.268,2026,3.268,2027,3.268,2028,2.869,2029,3.268,2030,3.268,2031,3.268,2032,3.268,2033,3.268,2034,3.268,2035,3.268,2036,3.268,2037,3.268,2038,3.268,2039,3.268,2040,3.268,2041,3.268,2042,3.268,2043,3.268,2044,3.268]],["title/components/RendererCanvasComponent.html",[109,0.037,224,0.703]],["body/components/RendererCanvasComponent.html",[0,0.099,3,0.09,4,0.09,5,0.072,8,0.296,9,1.051,10,1.052,12,0.639,15,1.206,18,0.589,19,0.573,20,0.011,22,0.525,23,0.92,28,0.436,29,0.587,30,0.433,31,0.356,33,0.732,37,0.09,42,0.864,48,0.004,49,0.006,50,0.004,55,1.347,67,0.746,68,0.717,69,1.289,71,0.525,80,1.023,87,0.132,89,0.146,91,0.589,109,0.05,110,0.556,111,0.769,112,0.624,113,0.624,118,0.509,121,1.434,122,1.311,123,0.606,125,0.606,127,1.111,136,1.023,141,0.509,147,0.344,148,0.889,149,1.158,150,0.422,151,1.192,152,0.624,153,1.192,154,0.556,155,0.606,156,0.914,157,0.556,158,0.624,159,0.556,160,0.589,161,1.433,162,0.556,163,0.606,164,0.624,165,0.556,166,0.606,167,0.556,168,1.035,169,0.624,170,0.573,171,0.624,172,0.556,173,0.624,174,0.556,175,0.624,176,0.556,177,0.573,178,0.624,179,0.556,180,0.606,181,0.556,182,0.624,183,0.556,184,0.624,185,0.624,186,0.624,187,0.556,188,0.624,189,0.556,190,0.624,191,0.556,192,0.573,193,0.556,194,1.022,195,1.405,196,0.556,197,0.556,198,0.556,199,0.606,200,0.556,201,0.624,202,0.556,203,0.589,204,0.624,205,0.556,206,0.556,207,0.556,208,0.914,209,0.556,210,1.082,211,0.556,212,0.573,213,0.556,214,1.052,215,0.556,216,0.606,217,0.914,218,0.556,219,0.606,220,0.556,221,0.589,222,0.556,223,0.606,224,1.062,225,1.337,226,0.624,227,0.525,228,0.624,229,0.556,230,1.192,231,0.589,232,0.556,233,0.589,234,0.556,235,0.479,236,0.556,237,0.589,238,0.556,239,0.606,240,0.556,241,0.589,242,0.556,243,0.889,244,0.556,245,0.556,246,0.606,247,0.556,248,0.606,249,0.556,250,0.624,251,0.606,252,0.509,253,0.54,254,0.573,255,0.624,256,0.54,257,0.857,258,0.624,259,0.54,260,0.624,261,0.525,262,0.624,263,0.54,264,0.573,265,0.573,266,0.606,267,0.624,277,3.439,278,4.738,285,2.757,290,2.347,312,1.595,317,1.507,338,1.796,459,2.953,516,2.953,590,1.542,602,1.852,638,2.32,640,2.32,682,4.653,689,5.123,699,3.035,771,3.399,887,3.635,1059,1.97,1156,4.006,1243,4.327,1266,3.203,1664,2.683,1669,3.931,1749,2.481,1750,4.738,2045,6.781,2046,2.953,2047,6.039,2048,5.832,2049,4.928,2050,4.928,2051,5.832,2052,6.422,2053,5.121,2054,4.928,2055,4.928,2056,5.832,2057,4.928,2058,3.363,2059,3.363,2060,3.363,2061,3.363,2062,3.363,2063,7.381,2064,4.928,2065,3.363,2066,3.363,2067,3.363,2068,6.422,2069,4.928,2070,4.928,2071,4.928,2072,4.928,2073,6.422,2074,4.327,2075,4.928,2076,4.327,2077,4.928,2078,4.928,2079,4.928,2080,4.928,2081,4.928,2082,4.327,2083,4.327,2084,3.363,2085,3.363,2086,3.363,2087,3.363,2088,3.363,2089,3.363,2090,3.363,2091,3.363,2092,3.363,2093,4.928,2094,3.363,2095,2.953,2096,3.363,2097,3.363,2098,3.363,2099,3.363,2100,3.363,2101,3.363,2102,3.363,2103,3.363,2104,3.363,2105,3.363,2106,3.363,2107,3.363,2108,4.928,2109,3.363,2110,3.363,2111,2.683]],["title/injectables/RendererService.html",[69,0.766,268,1.758]],["body/injectables/RendererService.html",[0,0.108,3,0.098,4,0.098,5,0.078,8,0.321,9,1.116,12,0.678,15,2.136,18,0.64,19,0.622,20,0.011,21,0.622,23,1.037,26,2.228,28,1.004,29,0.708,30,0.725,31,0.821,33,1.027,37,0.098,38,1.455,42,1.17,48,0.004,49,0.006,50,0.004,55,0.998,57,2.094,66,2.432,67,0.792,69,0.943,70,4.591,71,1.146,80,1.607,87,0.197,89,0.159,91,0.64,96,4.172,137,1.212,227,1.146,268,2.163,270,2.139,285,3.733,290,2.982,312,2.161,317,2.247,323,2.228,521,4.526,534,4.591,551,1.923,581,1.955,590,3.06,592,2.139,666,1.674,842,4.593,1081,3.206,1154,2.913,1241,3.206,1266,4.591,1290,5.366,1454,4.216,1479,3.859,1754,4.777,1755,2.694,1756,4.307,1780,4.172,1782,4.604,1810,4.875,1912,4.875,2021,4.593,2047,5.863,2053,6.202,2095,7.181,2111,2.913,2112,3.206,2113,5.366,2114,5.23,2115,6.674,2116,6.674,2117,6.674,2118,5.23,2119,5.23,2120,5.23,2121,5.23,2122,3.206,2123,5.23,2124,5.23,2125,3.651,2126,3.651,2127,3.651,2128,3.651,2129,5.23,2130,3.651,2131,3.651,2132,3.651,2133,5.23,2134,3.651,2135,3.651,2136,5.23,2137,3.651,2138,5.23,2139,3.651,2140,5.23,2141,3.651,2142,3.651,2143,3.651,2144,3.651,2145,3.651,2146,6.111,2147,3.651,2148,3.651,2149,3.651,2150,5.23,2151,3.651,2152,3.651,2153,3.651,2154,5.23,2155,3.651,2156,3.651,2157,5.23,2158,3.651,2159,3.651,2160,3.651,2161,3.651,2162,6.674,2163,3.651,2164,3.651,2165,3.651,2166,3.651,2167,3.651,2168,3.651,2169,3.651,2170,3.651,2171,3.651,2172,5.23,2173,5.23,2174,3.651,2175,3.651,2176,3.651,2177,5.23,2178,3.651,2179,3.651,2180,3.651]],["title/components/SVGLoaderComponent.html",[109,0.037,240,0.703]],["body/components/SVGLoaderComponent.html",[0,0.09,3,0.082,4,0.082,5,0.065,8,0.268,9,0.978,10,1.29,12,0.594,13,1.033,16,3.391,18,1.208,19,1.253,20,0.011,21,1.043,22,0.476,23,0.987,26,2.392,28,0.714,29,0.63,30,0.647,31,0.696,33,0.691,34,3.162,37,0.082,38,1.826,42,0.965,48,0.004,49,0.006,50,0.004,67,0.694,68,0.651,69,1.243,71,0.476,80,0.951,87,0.197,88,1.153,89,0.133,90,0.789,91,0.535,109,0.047,110,0.505,111,0.715,112,0.566,113,0.566,116,0.758,117,1.583,118,0.462,119,0.575,121,1.426,122,1.304,123,0.55,125,0.827,127,1.033,128,1.261,130,1.72,136,1.591,137,1.276,138,1.567,139,0.669,140,0.669,141,0.694,142,0.906,143,0.746,147,0.312,148,0.827,149,0.827,150,0.383,151,1.136,152,0.566,153,1.136,154,0.505,155,0.55,156,0.85,157,0.505,158,0.566,159,0.505,160,0.535,161,1.396,162,0.505,163,0.55,164,0.566,165,0.505,166,0.55,167,0.505,168,0.994,169,0.566,170,0.519,171,0.566,172,0.505,173,0.566,174,0.505,175,0.566,176,0.505,177,0.519,178,0.566,179,0.505,180,0.55,181,0.505,182,0.566,183,0.505,184,0.566,185,0.566,186,0.566,187,0.505,188,0.566,189,0.505,190,0.566,191,0.505,192,0.519,193,0.505,194,0.965,195,1.365,196,0.505,197,0.505,198,0.505,199,0.55,200,0.505,201,0.566,202,0.505,203,0.535,204,0.566,205,0.505,206,1.013,207,0.505,208,0.85,209,0.505,210,1.022,211,0.505,212,0.519,213,0.505,214,0.55,215,0.505,216,0.55,217,0.85,218,0.505,219,0.55,220,0.505,221,0.535,222,0.505,223,0.55,224,0.505,225,0.519,226,0.566,227,0.476,228,0.566,229,0.505,230,1.136,231,0.535,232,0.505,233,0.535,234,0.505,235,1.048,236,0.505,237,0.535,238,0.505,239,0.55,240,1.013,241,0.965,242,0.505,243,0.827,244,0.505,245,0.505,246,0.55,247,0.505,248,0.55,249,0.505,250,0.566,251,0.55,252,0.462,253,0.49,254,0.519,255,0.566,256,0.49,257,0.809,258,0.566,259,0.49,260,0.566,261,0.476,262,0.566,263,0.49,264,0.519,265,0.519,266,0.55,267,0.566,290,1.89,312,2.232,317,1.401,323,1.111,460,3.08,471,4.404,472,3.979,551,2.449,587,1.633,616,1.398,623,3.009,625,1.706,699,2.822,736,2.979,775,1.787,794,1.706,805,4.392,862,2.433,1106,2.25,1327,4.834,1332,2.678,1475,4.392,1476,4.392,1629,2.104,1633,3.381,1786,2.822,1827,2.25,1832,4.392,1835,4.517,1838,2.678,1840,2.678,1849,2.678,1879,2.433,2181,7.185,2182,4.583,2183,5.505,2184,4.392,2185,5.505,2186,5.505,2187,6.563,2188,4.062,2189,4.583,2190,3.049,2191,3.049,2192,4.583,2193,3.049,2194,3.049,2195,3.049,2196,3.049,2197,3.049,2198,3.049,2199,3.049,2200,3.049,2201,3.049,2202,3.049,2203,2.25,2204,2.433,2205,3.049,2206,5.505,2207,3.049,2208,2.678,2209,3.049,2210,3.049,2211,3.049,2212,3.049,2213,5.505,2214,3.049,2215,3.049,2216,3.049,2217,4.583,2218,3.049,2219,3.049,2220,3.049,2221,3.049,2222,4.583,2223,3.049,2224,3.049,2225,3.049,2226,3.049,2227,3.049,2228,2.678,2229,4.583,2230,3.049,2231,3.049,2232,3.049,2233,4.583,2234,2.678,2235,3.049,2236,2.678]],["title/components/SceneComponent.html",[109,0.037,227,0.663]],["body/components/SceneComponent.html",[0,0.109,3,0.099,4,0.099,5,0.079,8,0.326,10,1.281,12,0.685,13,0.835,15,1.808,18,0.649,19,0.631,20,0.011,21,1.049,22,0.578,23,0.863,28,0.685,29,0.649,30,0.465,31,0.712,33,0.774,37,0.099,38,0.882,42,0.926,48,0.004,49,0.006,50,0.004,55,1.444,58,2.93,65,2.339,67,0.8,68,0.79,69,1.332,71,0.578,75,2.973,77,2.26,80,1.097,84,2.339,87,0.198,88,1.33,89,0.161,90,0.958,91,0.649,102,1.829,109,0.053,110,0.613,111,0.824,112,0.687,113,0.687,116,0.874,117,1.91,118,0.561,119,0.664,121,1.44,122,1.317,123,0.668,125,0.953,126,2.605,127,1.191,128,1.532,130,1.996,132,3.097,136,1.097,137,1.224,138,1.903,139,0.812,140,0.812,141,0.8,142,1.101,143,0.907,147,0.379,148,0.953,149,0.953,150,0.664,151,1.246,152,0.687,153,1.246,154,0.613,155,0.668,156,0.981,157,0.613,158,0.687,159,0.613,160,0.649,161,1.468,162,0.613,163,0.668,164,0.687,165,0.613,166,0.668,167,0.613,168,1.075,169,0.687,170,0.631,171,0.687,172,0.613,173,0.687,174,0.613,175,0.687,176,0.613,177,0.631,178,0.687,179,0.613,180,0.668,181,0.613,182,0.687,183,0.613,184,0.687,185,0.687,186,0.687,187,0.613,188,0.687,189,0.613,190,0.687,191,0.613,192,0.631,193,0.613,194,1.08,195,1.442,196,0.613,197,0.613,198,0.613,199,0.668,200,0.613,201,0.687,202,0.613,203,0.649,204,0.687,205,0.613,206,0.613,207,0.613,208,0.981,209,0.613,210,1.143,211,0.613,212,0.631,213,0.613,214,0.668,215,0.613,216,0.668,217,0.981,218,0.613,219,0.668,220,0.613,221,0.649,222,0.613,223,0.668,224,0.613,225,0.631,226,0.687,227,1.048,228,0.687,229,0.613,230,1.246,231,0.649,232,0.613,233,0.649,234,0.613,235,0.528,236,0.613,237,0.649,238,0.613,239,0.668,240,0.613,241,0.649,242,0.613,243,0.953,244,0.613,245,0.613,246,0.668,247,0.613,248,0.668,249,0.613,250,0.687,251,0.668,252,0.561,253,0.595,254,0.631,255,0.687,256,0.595,257,0.905,258,0.687,259,0.595,260,0.687,261,0.578,262,0.687,263,0.595,264,0.631,265,0.631,266,0.668,267,0.687,312,1.199,317,1.132,581,1.984,794,2.072,865,2.281,867,4.004,869,2.072,1146,2.955,1266,4.617,1281,5.409,2237,3.252,2238,5.284,2239,6.717,2240,6.161,2241,5.284,2242,3.704,2243,3.704,2244,3.704,2245,3.704,2246,3.704,2247,5.284,2248,3.704,2249,3.704,2250,3.704,2251,3.704]],["title/components/ServerBarrelActorComponent.html",[109,0.037,229,0.703]],["body/components/ServerBarrelActorComponent.html",[0,0.128,3,0.116,4,0.116,5,0.093,13,0.975,20,0.011,22,0.675,29,0.612,37,0.116,48,0.005,49,0.007,50,0.005,71,0.675,87,0.179,89,0.188,91,0.759,109,0.058,110,0.716,111,0.919,112,0.803,113,0.803,116,0.974,118,0.655,119,0.74,121,1.45,122,1.326,123,0.78,125,1.062,139,0.949,140,0.949,141,0.655,147,0.443,148,1.062,149,1.062,150,0.543,151,1.334,152,0.803,153,1.334,154,0.716,155,0.78,156,1.093,157,0.716,158,0.803,159,0.716,160,0.759,161,1.52,162,0.716,163,0.78,164,0.803,165,0.716,166,0.78,167,0.716,168,1.138,169,0.803,170,0.737,171,0.803,172,0.716,173,0.803,174,0.716,175,0.803,176,0.716,177,0.737,178,0.803,179,0.716,180,0.78,181,0.716,182,0.803,183,0.716,184,0.803,185,0.803,186,0.803,187,0.716,188,0.803,189,0.716,190,0.803,191,0.716,192,0.737,193,0.716,194,1.174,195,1.499,196,0.716,197,0.716,198,0.716,199,0.78,200,0.716,201,0.803,202,0.716,203,0.759,204,0.803,205,0.716,206,0.716,207,0.716,208,1.093,209,0.716,210,1.242,211,0.716,212,0.737,213,0.716,214,0.78,215,0.716,216,0.78,217,1.093,218,0.716,219,0.78,220,0.716,221,0.759,222,0.716,223,0.78,224,0.716,225,0.737,226,0.803,227,0.675,228,0.803,229,1.189,230,1.473,231,1.26,232,0.716,233,0.759,234,0.716,235,0.617,236,0.716,237,0.759,238,0.716,239,0.78,240,0.716,241,0.759,242,0.716,243,1.062,244,0.716,245,0.716,246,0.78,247,0.716,248,0.78,249,0.716,250,0.803,251,1.296,252,0.655,253,0.695,254,0.737,255,0.803,256,0.695,257,0.984,258,0.803,259,0.695,260,0.803,261,0.675,262,0.803,263,0.695,264,0.737,265,0.737,266,0.78,267,0.803,375,1.577,1344,2.317,2252,2.985,2253,4.619,2254,5.89]],["title/components/ServerCompactActorComponent.html",[109,0.037,232,0.703]],["body/components/ServerCompactActorComponent.html",[0,0.127,3,0.116,4,0.116,5,0.093,13,0.974,20,0.011,22,0.674,29,0.612,37,0.116,48,0.005,49,0.007,50,0.005,71,0.674,87,0.179,89,0.188,91,0.758,109,0.057,110,0.715,111,0.918,112,0.802,113,0.802,116,0.974,118,0.654,119,0.739,121,1.45,122,1.326,123,0.78,125,1.061,136,0.897,139,0.948,140,0.948,141,0.654,147,0.442,148,1.061,149,1.061,150,0.543,151,1.333,152,0.802,153,1.333,154,0.715,155,0.78,156,1.092,157,0.715,158,0.802,159,0.715,160,0.758,161,1.519,162,0.715,163,0.78,164,0.802,165,0.715,166,0.78,167,0.715,168,1.138,169,0.802,170,0.736,171,0.802,172,0.715,173,0.802,174,0.715,175,0.802,176,0.715,177,0.736,178,0.802,179,0.715,180,0.78,181,0.715,182,0.802,183,0.715,184,0.802,185,0.802,186,0.802,187,0.715,188,0.802,189,0.715,190,0.802,191,0.715,192,0.736,193,0.715,194,1.173,195,1.498,196,0.715,197,0.715,198,0.715,199,0.78,200,0.715,201,0.802,202,0.715,203,0.758,204,0.802,205,0.715,206,0.715,207,0.715,208,1.092,209,0.715,210,1.242,211,0.715,212,0.736,213,0.715,214,0.78,215,0.715,216,0.78,217,1.092,218,0.715,219,0.78,220,0.715,221,0.758,222,0.715,223,0.78,224,0.715,225,0.736,226,0.802,227,0.674,228,0.802,229,0.715,230,1.472,231,0.758,232,1.188,233,1.259,234,0.715,235,0.616,236,0.715,237,0.758,238,0.715,239,0.78,240,0.715,241,0.758,242,0.715,243,1.061,244,0.715,245,0.715,246,0.78,247,0.715,248,0.78,249,0.715,250,0.802,251,1.296,252,0.654,253,0.694,254,0.736,255,0.802,256,0.694,257,0.983,258,0.802,259,0.694,260,0.802,261,0.674,262,0.802,263,0.694,264,0.736,265,0.736,266,0.78,267,0.802,375,1.575,1344,2.315,2252,2.982,2253,4.616,2255,5.885]],["title/components/ServerIconActorComponent.html",[109,0.037,234,0.703]],["body/components/ServerIconActorComponent.html",[0,0.128,3,0.117,4,0.117,5,0.093,13,0.982,20,0.01,22,0.68,29,0.614,37,0.117,48,0.005,49,0.007,50,0.005,71,0.68,87,0.18,89,0.19,91,0.764,109,0.058,110,0.721,111,0.923,112,0.808,113,0.808,116,0.979,118,0.66,119,0.743,121,1.45,122,1.326,123,0.786,125,1.067,139,0.955,140,0.955,141,0.66,147,0.446,148,1.067,149,1.067,150,0.547,151,1.337,152,0.808,153,1.337,154,0.721,155,0.786,156,1.098,157,0.721,158,0.808,159,0.721,160,0.764,161,1.522,162,0.721,163,0.786,164,0.808,165,0.721,166,0.786,167,0.721,168,1.141,169,0.808,170,0.742,171,0.808,172,0.721,173,0.808,174,0.721,175,0.808,176,0.721,177,0.742,178,0.808,179,0.721,180,0.786,181,0.721,182,0.808,183,0.721,184,0.808,185,0.808,186,0.808,187,0.721,188,0.808,189,0.721,190,0.808,191,0.721,192,0.742,193,0.721,194,1.178,195,1.501,196,0.721,197,0.721,198,0.721,199,0.786,200,0.721,201,0.808,202,0.721,203,0.764,204,0.808,205,0.721,206,0.721,207,0.721,208,1.098,209,0.721,210,1.247,211,0.721,212,0.742,213,0.721,214,0.786,215,0.721,216,0.786,217,1.098,218,0.721,219,0.786,220,0.721,221,0.764,222,0.721,223,0.786,224,0.721,225,0.742,226,0.808,227,0.68,228,0.808,229,0.721,230,1.475,231,0.764,232,0.721,233,0.764,234,1.192,235,1.027,236,0.721,237,0.764,238,0.721,239,0.786,240,0.721,241,0.764,242,0.721,243,1.067,244,0.721,245,0.721,246,0.786,247,0.721,248,0.786,249,0.721,250,0.808,251,1.3,252,0.66,253,0.7,254,0.742,255,0.808,256,0.7,257,0.987,258,0.808,259,0.7,260,0.808,261,0.68,262,0.808,263,0.7,264,0.742,265,0.742,266,0.786,267,0.808,375,1.588,1344,2.333,2252,3.006,2253,4.635,2256,5.917]],["title/components/ServerStandActorComponent.html",[109,0.037,236,0.703]],["body/components/ServerStandActorComponent.html",[0,0.128,3,0.116,4,0.116,5,0.093,13,0.975,20,0.01,22,0.675,29,0.612,37,0.116,48,0.005,49,0.007,50,0.005,71,0.675,87,0.179,89,0.188,91,0.759,109,0.058,110,0.716,111,0.919,112,0.803,113,0.803,116,0.974,118,0.655,119,0.74,121,1.45,122,1.326,123,0.78,125,1.062,139,0.949,140,0.949,141,0.655,147,0.443,148,1.062,149,1.062,150,0.543,151,1.334,152,0.803,153,1.334,154,0.716,155,0.78,156,1.093,157,0.716,158,0.803,159,0.716,160,0.759,161,1.52,162,0.716,163,0.78,164,0.803,165,0.716,166,0.78,167,0.716,168,1.138,169,0.803,170,0.737,171,0.803,172,0.716,173,0.803,174,0.716,175,0.803,176,0.716,177,0.737,178,0.803,179,0.716,180,0.78,181,0.716,182,0.803,183,0.716,184,0.803,185,0.803,186,0.803,187,0.716,188,0.803,189,0.716,190,0.803,191,0.716,192,0.737,193,0.716,194,1.174,195,1.499,196,0.716,197,0.716,198,0.716,199,0.78,200,0.716,201,0.803,202,0.716,203,0.759,204,0.803,205,0.716,206,0.716,207,0.716,208,1.093,209,0.716,210,1.242,211,0.716,212,0.737,213,0.716,214,0.78,215,0.716,216,0.78,217,1.093,218,0.716,219,0.78,220,0.716,221,0.759,222,0.716,223,0.78,224,0.716,225,0.737,226,0.803,227,0.675,228,0.803,229,0.716,230,1.473,231,0.759,232,0.716,233,0.759,234,0.716,235,0.617,236,1.189,237,1.26,238,0.716,239,0.78,240,0.716,241,0.759,242,0.716,243,1.062,244,0.716,245,0.716,246,0.78,247,0.716,248,0.78,249,0.716,250,0.803,251,1.296,252,0.655,253,0.695,254,0.737,255,0.803,256,0.695,257,0.984,258,0.803,259,0.695,260,0.803,261,0.675,262,0.803,263,0.695,264,0.737,265,0.737,266,0.78,267,0.803,301,2.421,375,1.577,733,2.536,1344,2.317,2252,2.985,2253,4.619,2257,5.89]],["title/components/SphereMeshComponent.html",[109,0.037,238,0.703]],["body/components/SphereMeshComponent.html",[0,0.112,3,0.102,4,0.102,5,0.082,8,0.335,10,1.295,12,0.699,13,1.216,20,0.011,21,0.918,22,0.594,23,0.873,28,0.494,29,0.622,30,0.598,31,0.663,33,0.479,37,0.102,38,1.49,42,0.668,48,0.005,49,0.007,50,0.005,67,0.816,68,0.813,69,1.345,71,0.594,87,0.199,88,1.357,89,0.166,90,0.986,91,0.668,109,0.054,110,0.63,111,0.841,112,0.707,113,0.707,116,0.892,117,1.76,118,0.577,119,0.677,121,1.442,122,1.319,123,0.687,125,0.973,126,2.639,127,1.216,130,1.912,136,1.412,137,1.249,139,0.836,140,0.836,141,0.816,142,1.603,143,0.933,147,0.39,148,0.973,149,0.973,150,0.479,151,1.263,152,0.707,153,1.263,154,0.63,155,0.687,156,1.001,157,0.63,158,0.707,159,0.63,160,0.668,161,1.477,162,0.63,163,0.687,164,0.707,165,0.63,166,0.687,167,0.63,168,1.087,169,0.707,170,0.649,171,0.707,172,0.63,173,0.707,174,0.63,175,0.707,176,0.63,177,0.649,178,0.707,179,0.63,180,0.687,181,0.63,182,0.707,183,0.63,184,0.707,185,0.707,186,0.707,187,0.63,188,0.707,189,0.63,190,0.707,191,0.63,192,0.649,193,0.63,194,1.097,195,1.453,196,0.63,197,0.63,198,0.63,199,0.687,200,0.63,201,0.707,202,0.63,203,0.668,204,0.707,205,0.63,206,0.63,207,0.63,208,1.001,209,0.63,210,1.161,211,0.63,212,0.649,213,0.63,214,0.687,215,0.63,216,0.687,217,1.001,218,0.63,219,0.687,220,0.63,221,0.668,222,0.63,223,0.687,224,0.63,225,0.649,226,0.707,227,0.594,228,0.707,229,0.63,230,1.263,231,0.668,232,0.63,233,0.668,234,0.63,235,0.543,236,0.63,237,0.668,238,1.126,239,1.129,240,0.63,241,0.668,242,0.63,243,0.973,244,0.63,245,0.63,246,0.687,247,0.63,248,0.687,249,0.63,250,0.707,251,0.687,252,0.577,253,0.612,254,0.649,255,0.707,256,0.612,257,0.919,258,0.707,259,0.612,260,0.707,261,0.594,262,0.707,263,0.612,264,0.649,265,0.649,266,0.687,267,0.707,551,2.345,584,2.041,585,3.667,587,3.845,593,4.617,616,1.747,620,2.812,623,2.472,624,2.132,625,2.132,626,2.347,661,3.346,665,2.812,671,2.888,2258,6.546,2259,5.392,2260,6.258,2261,5.495,2262,5.392,2263,3.811,2264,3.811,2265,3.811,2266,3.811]],["title/directives/StatsAutoShowDirective.html",[150,0.534,263,0.683]],["body/directives/StatsAutoShowDirective.html",[0,0.182,3,0.165,4,0.165,5,0.132,8,0.543,12,0.959,20,0.011,23,0.899,28,0.801,29,0.565,30,0.543,31,0.655,33,0.775,37,0.165,48,0.007,49,0.009,50,0.007,55,2.022,56,3.504,64,3.394,67,1.12,80,1.535,87,0.198,89,0.269,118,0.935,121,0.992,122,1.086,150,0.775,252,0.935,263,1.188,264,1.26,265,1.429,266,1.334,290,2.12,521,5.246,523,5.423,1077,4.014,2122,5.423,2267,6.952,2268,5.423,2269,6.176,2270,6.176,2271,6.176]],["title/injectables/StatsService.html",[268,1.758,521,2.617]],["body/injectables/StatsService.html",[0,0.161,3,0.147,4,0.147,5,0.117,8,0.482,9,1.466,12,0.891,15,2.135,20,0.011,23,1.021,30,0.482,33,1.018,37,0.147,48,0.007,49,0.008,50,0.007,55,1.497,57,2.751,66,2.87,67,1.137,80,1.717,87,0.184,89,0.238,264,1.43,268,2.842,270,3.21,277,2.934,290,2.577,521,4.232,760,6.281,765,6.281,773,5.809,1238,4.741,2272,4.81,2273,7.874,2274,6.872,2275,5.478,2276,5.478,2277,5.478,2278,5.478,2279,5.478,2280,5.478,2281,5.478,2282,5.478,2283,5.478,2284,5.478,2285,5.478,2286,8.276,2287,5.478,2288,6.872,2289,5.478,2290,5.478,2291,5.478,2292,5.478]],["title/injectables/SvgLoaderService.html",[268,1.758,472,2.762]],["body/injectables/SvgLoaderService.html",[0,0.164,1,5.734,3,0.149,4,0.149,5,0.119,8,0.49,9,1.482,10,1.52,11,5.542,12,0.901,13,1.706,14,6.32,15,1.701,16,4.278,17,5.125,18,0.977,19,0.949,20,0.011,21,1.289,22,0.869,23,0.963,25,6.038,26,3.073,28,0.981,29,0.692,30,0.665,31,0.802,32,5.221,33,0.95,34,5.466,35,4.447,37,0.149,38,1.327,42,0.977,48,0.007,49,0.008,50,0.007,87,0.212,89,0.243,116,1.149,137,1.292,206,0.922,268,2.873,270,3.266,377,4.447,460,3.118,472,4.515,563,4.435,1302,4.894,1303,4.894,1304,4.894,1305,4.894,1309,4.894,1864,4.447,1865,5.542,2188,5.125,2293,6.1,2294,4.894,2295,5.574,2296,5.574,2297,5.574,2298,5.574,2299,5.574,2300,5.574]],["title/components/TextActorComponent.html",[109,0.037,242,0.703]],["body/components/TextActorComponent.html",[0,0.085,3,0.077,4,0.077,5,0.062,8,0.252,9,0.934,10,1.384,12,0.568,15,1.928,18,1.266,19,1.23,20,0.011,22,0.448,23,1.013,26,2.164,28,0.688,29,0.616,30,0.65,31,0.677,33,0.907,37,0.077,48,0.003,49,0.005,50,0.003,55,1.197,56,2.349,57,2.125,58,2.524,64,2.456,65,1.938,66,2.164,67,0.663,68,0.613,69,1.215,71,0.448,75,2.349,77,2.27,80,1.398,84,1.271,87,0.187,88,1.102,89,0.125,91,0.503,102,1.418,109,0.046,110,0.475,111,0.683,112,0.533,113,0.533,116,0.724,117,1.535,118,0.435,119,0.55,121,1.422,122,1.3,123,0.518,125,0.79,126,2.058,127,0.987,130,1.668,136,1.398,139,0.63,140,0.63,141,0.663,143,0.703,147,0.294,148,0.79,149,0.79,150,0.361,151,1.102,152,0.533,153,1.102,154,0.475,155,0.518,156,0.812,157,0.475,158,0.533,159,0.475,160,0.503,161,1.373,162,0.475,163,0.518,164,0.533,165,0.475,166,0.518,167,0.475,168,0.968,169,0.533,170,0.489,171,0.533,172,0.475,173,0.533,174,0.475,175,0.533,176,0.475,177,0.489,178,0.533,179,0.475,180,0.518,181,0.475,182,0.533,183,0.475,184,0.533,185,0.533,186,0.533,187,1.057,188,0.533,189,0.475,190,0.533,191,0.475,192,0.489,193,0.475,194,0.93,195,1.34,196,0.475,197,0.475,198,0.475,199,0.518,200,0.475,201,0.533,202,0.475,203,0.503,204,0.533,205,0.475,206,0.475,207,0.475,208,0.812,209,0.475,210,0.985,211,0.475,212,0.489,213,0.475,214,0.518,215,0.475,216,0.518,217,0.812,218,0.475,219,0.518,220,0.475,221,0.503,222,0.475,223,0.518,224,0.475,225,0.746,226,0.533,227,0.448,228,0.533,229,0.475,230,1.102,231,0.503,232,0.475,233,0.503,234,0.475,235,0.409,236,0.475,237,0.503,238,0.475,239,0.518,240,0.475,241,0.503,242,0.982,243,1.264,244,0.475,245,0.475,246,0.518,247,0.475,248,0.518,249,0.475,250,0.533,251,0.957,252,0.435,253,0.461,254,0.489,255,0.533,256,0.461,257,0.78,258,0.533,259,0.461,260,0.533,261,0.448,262,0.533,263,0.461,264,0.489,265,0.489,266,0.518,267,0.533,269,3.46,273,3.479,276,4.736,289,3.45,290,2.8,312,1.922,317,1.623,323,2.697,327,4.234,551,2.119,563,1.682,636,2.291,637,1.682,728,3.11,735,1.606,767,1.768,845,1.981,867,3.45,869,2.449,870,2.118,1062,2.696,1085,3.021,1087,1.866,1089,1.981,1344,1.538,1358,2.291,1359,2.846,1360,2.521,1362,2.118,1363,2.291,1373,3.845,1374,2.291,1377,2.291,1378,2.118,1454,1.981,1516,2.521,1517,2.291,1518,2.521,1519,2.521,1523,2.521,1543,3.661,1620,3.845,1651,2.521,1652,2.521,1653,2.521,1654,4.66,1657,3.845,1862,2.291,2301,7.323,2302,4.378,2303,5.307,2304,5.307,2305,5.307,2306,5.307,2307,5.307,2308,4.378,2309,5.937,2310,5.307,2311,5.307,2312,2.871,2313,2.871,2314,2.871,2315,2.871,2316,2.871,2317,3.845,2318,2.871,2319,2.871,2320,2.871,2321,2.871,2322,2.871,2323,5.307,2324,4.378,2325,5.213,2326,4.378,2327,2.871,2328,5.307,2329,2.871,2330,5.307,2331,4.378,2332,2.871,2333,2.871,2334,2.871,2335,4.378,2336,4.378,2337,2.871]],["title/components/TextMeshComponent.html",[109,0.037,244,0.703]],["body/components/TextMeshComponent.html",[0,0.079,3,0.072,4,0.072,5,0.057,8,0.235,9,0.885,10,1.381,12,0.538,13,0.935,15,1.243,16,3.128,18,1.402,19,1.362,20,0.011,21,0.865,22,0.418,23,1.027,26,2.257,28,0.742,29,0.625,30,0.637,31,0.694,33,0.777,34,2.862,37,0.072,38,1.363,42,1.148,48,0.003,49,0.005,50,0.003,67,0.628,68,0.571,69,1.181,71,0.418,80,0.861,87,0.189,88,1.044,89,0.116,90,0.692,91,0.469,109,0.044,110,0.443,111,0.647,112,0.497,113,0.497,116,0.686,117,1.48,118,0.405,119,0.521,121,1.416,122,1.294,123,0.483,125,0.748,127,0.935,130,1.608,136,1.672,137,0.961,139,0.587,140,0.587,141,0.769,142,1.233,143,0.655,147,0.274,148,0.748,149,0.748,150,0.336,151,1.062,152,0.497,153,1.062,154,0.443,155,0.483,156,0.77,157,0.443,158,0.497,159,0.443,160,0.469,161,1.345,162,0.443,163,0.483,164,0.497,165,0.443,166,0.483,167,0.443,168,0.937,169,0.497,170,0.456,171,0.497,172,0.443,173,0.497,174,0.443,175,0.497,176,0.443,177,0.456,178,0.497,179,0.443,180,0.483,181,0.443,182,0.497,183,0.443,184,0.497,185,0.497,186,0.497,187,0.443,188,0.497,189,0.443,190,0.497,191,0.443,192,0.456,193,0.443,194,0.89,195,1.31,196,0.443,197,0.443,198,0.443,199,0.483,200,0.443,201,0.497,202,0.443,203,0.469,204,0.497,205,0.443,206,0.443,207,0.443,208,0.77,209,0.443,210,0.943,211,0.443,212,0.456,213,0.443,214,0.483,215,0.443,216,0.483,217,0.77,218,0.443,219,0.483,220,0.443,221,0.469,222,0.443,223,0.483,224,0.443,225,0.456,226,0.497,227,0.418,228,0.497,229,0.443,230,1.062,231,0.469,232,0.443,233,0.469,234,0.443,235,0.381,236,0.443,237,0.469,238,0.443,239,0.483,240,0.443,241,0.469,242,0.443,243,1.43,244,0.947,245,0.443,246,0.483,247,0.443,248,0.483,249,0.443,250,0.497,251,0.483,252,0.405,253,0.43,254,0.456,255,0.497,256,0.43,257,0.746,258,0.497,259,0.43,260,0.497,261,0.418,262,0.497,263,0.43,264,0.456,265,0.456,266,0.483,267,0.497,290,2.248,312,1.852,317,2.002,323,1.512,378,1.975,470,3.719,534,3.719,551,1.948,584,1.433,587,3.064,590,2.623,602,1.559,616,1.227,618,1.74,623,2.839,624,1.497,625,1.497,658,1.975,659,2.35,663,3.061,664,2.135,666,1.902,671,2.72,699,2.555,736,2.697,756,3.524,794,2.321,805,4.052,862,2.135,1062,2.555,1072,3.061,1106,1.975,1140,4.052,1152,2.135,1161,4.221,1320,2.35,1424,3.31,1430,2.35,1543,5.001,1618,4.565,1629,1.847,1632,2.35,1633,3.061,1835,4.221,1879,2.135,2184,4.052,2203,1.975,2208,3.643,2228,2.35,2325,3.643,2338,7.444,2339,5.08,2340,4.148,2341,5.08,2342,5.08,2343,5.08,2344,4.148,2345,5.722,2346,5.722,2347,5.722,2348,5.722,2349,5.722,2350,5.722,2351,5.08,2352,5.08,2353,7.249,2354,4.148,2355,2.677,2356,2.677,2357,2.677,2358,2.677,2359,2.677,2360,2.677,2361,2.677,2362,2.677,2363,4.148,2364,2.677,2365,4.148,2366,2.677,2367,2.677,2368,2.677,2369,2.677,2370,4.148,2371,6.191,2372,2.677,2373,2.677,2374,4.148,2375,2.677,2376,2.677,2377,2.677,2378,2.677,2379,2.35,2380,2.677,2381,2.677,2382,2.677,2383,2.677,2384,2.677,2385,4.148,2386,4.148,2387,2.677,2388,4.148,2389,4.148,2390,2.677,2391,2.677,2392,2.677,2393,2.677,2394,2.677,2395,2.677,2396,2.677,2397,2.677,2398,4.148,2399,2.677,2400,2.677,2401,2.677,2402,2.677]],["title/components/TorusMeshComponent.html",[109,0.037,245,0.703]],["body/components/TorusMeshComponent.html",[0,0.105,3,0.095,4,0.095,5,0.076,8,0.313,10,1.261,12,0.666,13,1.158,18,1.156,19,1.123,20,0.011,21,0.875,22,0.555,23,0.913,28,0.462,29,0.603,30,0.53,31,0.639,33,0.447,37,0.095,38,1.435,42,0.624,48,0.004,49,0.006,50,0.004,67,0.778,68,0.759,69,1.314,71,0.555,87,0.195,88,1.292,89,0.155,90,0.921,91,0.624,109,0.052,110,0.589,111,0.801,112,0.66,113,0.66,116,0.85,117,1.706,118,0.539,119,0.645,121,1.438,122,1.315,123,0.642,125,0.926,126,2.558,127,1.158,130,1.854,136,1.512,137,1.19,139,0.781,140,0.781,141,0.778,142,1.526,143,0.871,147,0.364,148,0.926,149,0.926,150,0.447,151,1.224,152,0.66,153,1.224,154,0.589,155,0.642,156,0.953,157,0.589,158,0.66,159,0.589,160,0.624,161,1.454,162,0.589,163,0.642,164,0.66,165,0.589,166,0.642,167,0.589,168,1.059,169,0.66,170,0.606,171,0.66,172,0.589,173,0.66,174,0.589,175,0.66,176,0.589,177,0.606,178,0.66,179,0.589,180,0.642,181,0.589,182,0.66,183,0.589,184,0.66,185,0.66,186,0.66,187,0.589,188,0.66,189,0.589,190,0.66,191,0.589,192,0.606,193,0.589,194,1.056,195,1.427,196,0.589,197,0.589,198,0.589,199,0.642,200,0.589,201,0.66,202,0.589,203,0.624,204,0.66,205,0.589,206,0.589,207,0.589,208,0.953,209,0.589,210,1.118,211,0.589,212,0.606,213,0.589,214,0.642,215,0.589,216,0.642,217,0.953,218,0.589,219,0.642,220,0.589,221,0.624,222,0.589,223,0.642,224,0.589,225,0.606,226,0.66,227,0.555,228,0.66,229,0.589,230,1.224,231,0.624,232,0.589,233,0.624,234,0.589,235,0.507,236,0.589,237,0.624,238,0.589,239,0.642,240,0.589,241,0.624,242,0.589,243,0.926,244,0.589,245,1.091,246,1.355,247,0.589,248,0.642,249,0.589,250,0.66,251,0.642,252,0.539,253,0.572,254,0.606,255,0.66,256,0.572,257,0.885,258,0.66,259,0.572,260,0.66,261,0.555,262,0.66,263,0.572,264,0.606,265,0.606,266,0.642,267,0.66,378,4.866,551,2.075,584,1.906,585,3.53,587,3.746,602,2.479,616,1.632,623,2.355,624,1.991,625,1.991,626,2.192,653,5.29,658,2.626,660,3.125,662,3.543,664,2.84,666,2.355,667,3.338,671,2.75,676,4.509,2261,6.596,2403,6.752,2404,5.136,2405,6.025,2406,7.512,2407,6.025,2408,4.509,2409,3.125,2410,5.136,2411,5.136,2412,3.125,2413,3.559,2414,5.136,2415,5.136,2416,3.559]],["title/modules/UxActorModule.html",[329,0.932,2417,3.135]],["body/modules/UxActorModule.html",[0,0.175,3,0.159,4,0.159,5,0.127,20,0.011,37,0.159,48,0.007,49,0.009,50,0.007,87,0.222,89,0.258,119,0.744,147,0.606,205,1.458,206,0.981,242,1.458,329,1.3,331,2.16,332,2.16,333,3.016,334,2.299,335,3.016,338,2.63,339,2.228,340,2.228,343,2.889,351,3.086,352,2.452,354,2.889,374,5.196,379,5.205,382,5.205,383,5.205,2417,6.5,2418,5.205,2419,5.205,2420,5.927,2421,5.205,2422,5.927,2423,5.927]],["title/components/VideoMeshComponent.html",[109,0.037,247,0.703]],["body/components/VideoMeshComponent.html",[0,0.087,3,0.079,4,0.12,5,0.063,8,0.26,9,0.955,10,1.528,12,0.58,13,1.009,18,1.308,19,1.271,20,0.011,21,1.026,22,0.698,23,0.996,28,0.383,29,0.551,30,0.622,31,0.75,33,0.813,37,0.079,38,1.622,42,0.785,48,0.004,49,0.005,50,0.004,55,1.223,56,2.391,57,2.163,64,2.492,66,2.196,67,0.678,68,0.63,69,1.229,71,0.461,80,1.25,87,0.195,88,1.126,89,0.129,90,0.764,91,0.518,109,0.046,110,0.489,111,0.698,112,0.548,113,0.548,116,0.74,117,1.558,118,0.447,119,0.562,121,1.424,122,1.302,123,0.533,125,0.807,126,2.337,127,1.009,130,1.693,132,1.732,136,1.512,137,1.037,139,0.648,140,0.648,141,0.678,142,1.33,143,0.723,147,0.302,148,0.807,149,0.807,150,0.371,151,1.118,152,0.548,153,1.118,154,0.489,155,0.533,156,0.83,157,0.489,158,0.548,159,0.489,160,0.518,161,1.384,162,0.489,163,0.533,164,0.548,165,0.489,166,0.533,167,0.489,168,0.98,169,0.548,170,0.503,171,0.548,172,0.489,173,0.548,174,0.489,175,0.548,176,0.489,177,0.503,178,0.548,179,0.489,180,0.533,181,0.489,182,0.548,183,0.489,184,0.548,185,0.548,186,0.548,187,0.489,188,0.548,189,0.489,190,0.548,191,0.489,192,0.503,193,0.489,194,0.947,195,1.352,196,0.489,197,0.489,198,0.489,199,0.533,200,0.489,201,0.548,202,0.489,203,0.518,204,0.548,205,0.489,206,0.489,207,0.489,208,0.83,209,0.489,210,1.002,211,0.489,212,0.503,213,0.489,214,0.533,215,0.489,216,0.533,217,0.83,218,0.489,219,0.533,220,0.489,221,0.518,222,0.489,223,0.533,224,0.489,225,0.503,226,0.548,227,0.461,228,0.548,229,0.489,230,1.118,231,0.518,232,0.489,233,0.518,234,0.489,235,0.421,236,0.489,237,0.518,238,0.489,239,0.533,240,0.489,241,0.518,242,0.489,243,0.807,244,0.489,245,0.489,246,0.533,247,0.997,248,1.229,249,0.489,250,0.548,251,0.533,252,0.447,253,0.475,254,0.503,255,0.548,256,0.475,257,0.794,258,0.548,259,0.475,260,0.548,261,0.461,262,0.548,263,0.475,264,0.503,265,0.503,266,0.533,267,0.548,269,3.495,273,3.531,289,3.917,298,3.985,312,0.957,317,2.083,551,1.408,557,3.227,584,1.583,585,3.165,587,3.467,590,2.968,591,3.985,592,3.794,593,3.985,595,3.371,597,4.807,598,4.807,600,4.807,601,4.807,602,2.739,609,2.909,612,2.909,616,1.355,618,1.921,620,2.18,621,2.18,623,2.763,624,1.653,625,1.653,626,1.82,658,2.18,671,2.397,728,3.165,735,1.653,845,2.039,1085,2.039,1086,2.358,1087,1.921,1088,2.358,1089,2.039,1123,2.18,1424,2.358,1618,4.807,1895,3.93,1948,2.595,1949,2.595,2379,2.595,2408,2.595,2409,2.595,2412,2.595,2424,7.241,2425,4.476,2426,5.402,2427,5.402,2428,4.743,2429,4.476,2430,2.955,2431,4.476,2432,2.955,2433,2.955,2434,2.955,2435,2.955,2436,2.955,2437,2.955,2438,4.476,2439,2.955,2440,2.955,2441,2.955,2442,2.955,2443,2.955,2444,2.955,2445,2.955,2446,2.955,2447,2.955,2448,2.955,2449,2.955,2450,2.955,2451,2.955,2452,2.955,2453,2.955,2454,2.955,2455,2.955,2456,2.955,2457,2.955,2458,2.955,2459,4.476,2460,2.955,2461,2.955,2462,2.955]],["title/components/WorkstationActorComponent.html",[109,0.037,249,0.703]],["body/components/WorkstationActorComponent.html",[0,0.126,3,0.115,4,0.115,5,0.092,8,0.377,13,0.966,20,0.011,22,0.668,23,0.521,29,0.609,37,0.115,48,0.005,49,0.007,50,0.005,71,0.668,87,0.178,89,0.186,91,0.751,109,0.057,110,0.709,111,0.912,112,0.795,113,0.795,116,0.968,118,0.649,119,0.734,121,1.449,122,1.325,123,0.773,125,1.055,127,1.319,136,1.214,139,0.939,140,0.939,141,0.649,147,0.438,148,1.055,149,1.055,150,0.538,151,1.328,152,0.795,153,1.328,154,0.709,155,0.773,156,1.085,157,0.709,158,0.795,159,0.709,160,0.751,161,1.516,162,0.709,163,0.773,164,0.795,165,0.709,166,0.773,167,0.709,168,1.134,169,0.795,170,0.73,171,0.795,172,0.709,173,0.795,174,0.709,175,0.795,176,0.709,177,0.73,178,0.795,179,0.709,180,0.773,181,0.709,182,0.795,183,0.709,184,0.795,185,0.795,186,0.795,187,0.709,188,0.795,189,0.709,190,0.795,191,0.709,192,0.73,193,0.709,194,1.167,195,1.495,196,0.709,197,0.709,198,0.709,199,0.773,200,0.709,201,0.795,202,0.709,203,0.751,204,0.795,205,0.709,206,0.709,207,0.709,208,1.085,209,0.709,210,1.236,211,0.709,212,0.73,213,0.709,214,0.773,215,0.709,216,0.773,217,1.085,218,0.709,219,0.773,220,0.709,221,0.751,222,0.709,223,0.773,224,0.709,225,0.73,226,0.795,227,0.668,228,0.795,229,0.709,230,1.39,231,0.751,232,0.709,233,0.751,234,0.709,235,0.61,236,0.709,237,0.751,238,0.709,239,0.773,240,0.709,241,0.751,242,0.709,243,1.055,244,0.709,245,0.709,246,0.773,247,0.709,248,0.773,249,1.184,250,1.236,251,1.291,252,0.649,253,0.688,254,0.73,255,0.795,256,0.688,257,0.978,258,0.795,259,0.688,260,0.795,261,0.668,262,0.795,263,0.688,264,0.73,265,0.73,266,0.773,267,0.795,375,2.132,1344,2.294,1362,3.16,2253,4.595,2428,5.848,2463,5.136,2464,5.849]],["title/changelog.html",[2465,2.824,2466,2.824,2467,3.109]],["body/changelog.html",[5,0.103,15,1.173,18,0.84,20,0.009,21,1.325,23,0.582,48,0.006,49,0.008,50,0.006,61,2.952,62,2.681,69,1.137,77,2.05,109,0.041,111,1.099,122,1.214,124,3.307,130,1.347,136,0.995,141,0.955,150,0.602,160,0.84,192,0.816,221,0.84,251,0.864,252,0.955,257,1.1,269,2.367,273,4.13,277,4.011,278,4.653,282,4.208,285,2.681,311,3.536,329,1.051,377,3.824,378,3.536,502,2.279,924,5.031,1062,2.952,1116,3.536,1266,3.115,1534,4.208,1567,3.824,1581,6.207,1756,2.809,1786,4.341,1836,4.208,1837,4.208,1858,3.536,1862,3.824,1869,5.031,1870,5.031,1893,4.208,1971,5.974,2074,4.208,2076,6.189,2082,4.208,2083,5.538,2113,4.208,2467,6.189,2468,6.576,2469,4.793,2470,6.576,2471,4.793,2472,4.793,2473,4.208,2474,4.793,2475,4.793,2476,4.793,2477,4.793,2478,4.793,2479,4.793,2480,4.793,2481,6.306,2482,4.793,2483,4.208,2484,4.793,2485,6.306,2486,5.538,2487,6.189,2488,4.793,2489,4.793,2490,4.793,2491,4.208,2492,7.048,2493,4.793,2494,4.793,2495,4.793,2496,4.793,2497,4.793,2498,4.793,2499,4.793,2500,4.793,2501,4.208,2502,4.793,2503,4.793,2504,6.306,2505,4.793,2506,4.793,2507,4.793,2508,7.781,2509,6.306,2510,4.793,2511,4.793,2512,6.306,2513,6.306,2514,7.489,2515,4.793,2516,4.793,2517,4.793,2518,6.306,2519,4.793,2520,4.793,2521,4.793,2522,4.793,2523,5.538,2524,4.208,2525,4.208,2526,6.306,2527,4.793,2528,4.793,2529,4.793,2530,4.208,2531,4.793,2532,4.793,2533,4.208,2534,4.793,2535,4.793,2536,4.793,2537,4.793,2538,4.793,2539,4.793,2540,4.793,2541,7.048,2542,4.793,2543,7.048,2544,4.208,2545,4.793,2546,7.048,2547,6.306,2548,4.793,2549,7.048,2550,4.793,2551,4.793,2552,4.793,2553,4.793,2554,4.793,2555,4.793,2556,4.793,2557,6.306,2558,4.793,2559,4.793,2560,4.793,2561,4.208,2562,4.793,2563,4.793,2564,4.793,2565,4.793,2566,4.793,2567,4.208,2568,5.538,2569,4.793,2570,4.793,2571,4.793,2572,4.793,2573,4.208,2574,4.793,2575,4.793,2576,4.793,2577,4.793,2578,4.793,2579,6.306,2580,4.793,2581,4.793]],["title/coverage.html",[2582,5.108]],["body/coverage.html",[0,0.171,1,2.294,5,0.071,6,2.919,7,2.919,20,0.011,21,0.566,30,0.292,48,0.004,49,0.006,50,0.004,51,2.161,52,2.919,53,2.294,54,2.919,69,0.6,71,0.519,109,0.076,110,0.55,114,2.919,115,4.406,138,1.708,139,0.729,150,0.855,154,0.55,157,0.55,159,0.55,162,0.55,165,0.55,167,0.55,170,0.566,172,0.55,174,0.55,176,0.55,177,0.832,179,0.55,181,0.55,183,0.55,187,0.55,189,0.55,191,0.55,193,0.55,196,0.55,197,0.55,198,0.55,200,0.55,202,0.55,205,0.55,207,0.55,209,0.55,211,0.55,213,0.55,215,0.55,218,0.55,220,0.55,222,0.55,224,0.55,227,0.519,229,0.55,231,0.583,232,0.55,233,0.583,234,0.55,235,0.474,236,0.55,237,0.583,238,0.55,240,0.55,242,0.55,244,0.55,245,0.55,247,0.55,249,0.55,253,0.534,256,0.534,259,0.534,261,0.519,263,0.534,265,0.566,268,3.042,269,1.642,271,2.919,323,3.281,375,3.073,470,2.161,471,2.047,472,2.161,492,2.294,493,2.294,502,1.581,521,2.047,530,2.919,531,3.898,536,2.652,541,2.836,542,1.948,544,3.819,545,4.423,546,1.78,548,1.708,550,1.86,552,1.78,558,2.919,583,2.919,584,4.124,627,2.919,628,2.919,650,2.919,662,2.294,680,2.919,796,2.919,840,2.453,871,2.919,895,2.919,937,3.898,969,6.02,1048,2.919,1049,2.919,1124,3.371,1126,2.919,1138,2.919,1156,2.863,1168,2.919,1197,2.919,1198,2.919,1208,2.919,1209,2.919,1260,2.919,1264,2.919,1300,2.919,1311,2.919,1343,2.919,1344,4.124,1366,2.294,1413,2.919,1421,2.919,1439,2.919,1450,4.712,1460,2.453,1471,2.453,1472,2.453,1513,2.919,1530,4.275,1531,4.275,1566,2.652,1577,2.652,1613,2.919,1629,2.294,1665,2.919,1666,3.898,1751,2.453,1752,3.898,1826,2.919,1827,4.275,1884,2.919,1897,2.919,1901,2.919,1902,3.898,1932,2.919,1946,2.919,1953,2.919,1960,2.919,1964,4.152,1965,2.919,1969,3.898,2001,2.919,2045,2.919,2046,2.919,2112,2.919,2181,2.919,2188,2.453,2203,2.453,2204,2.652,2237,2.919,2252,4.406,2258,2.919,2267,2.919,2268,2.919,2272,2.919,2293,2.919,2294,2.919,2301,2.919,2338,2.919,2403,2.919,2424,2.919,2463,2.919,2582,2.919,2583,2.652,2584,3.325,2585,3.325,2586,3.325,2587,6.805,2588,4.887,2589,2.919,2590,3.325,2591,3.325,2592,6.387,2593,4.887,2594,7.546,2595,7.355,2596,3.325,2597,3.325,2598,3.325,2599,2.919,2600,8.347,2601,4.887,2602,4.887,2603,3.325,2604,3.325,2605,7.115,2606,4.887,2607,6.387,2608,3.325,2609,3.325,2610,4.887,2611,4.887,2612,6.805,2613,3.325,2614,3.325,2615,3.325,2616,3.325,2617,3.325,2618,4.887,2619,3.325,2620,3.325,2621,3.325,2622,3.325,2623,3.325,2624,3.325,2625,2.919,2626,2.919,2627,4.291,2628,2.919,2629,4.887,2630,2.919,2631,2.919,2632,2.919,2633,2.919,2634,2.919,2635,2.919,2636,2.919,2637,2.919,2638,2.919,2639,2.919,2640,2.919,2641,2.919,2642,3.325,2643,3.325]],["title/dependencies.html",[332,1.865,1871,3.109]],["body/dependencies.html",[20,0.011,48,0.008,49,0.009,50,0.008,89,0.278,137,1.481,168,0.968,177,1.089,332,2.33,352,2.644,735,3.576,2644,6.392,2645,8.735,2646,6.392,2647,6.392,2648,7.549,2649,6.022,2650,6.392,2651,6.392,2652,6.392,2653,6.392,2654,6.392,2655,6.392,2656,6.392,2657,6.392,2658,6.392,2659,6.392,2660,6.392,2661,6.392,2662,6.392,2663,6.392,2664,6.392]],["title/miscellaneous/enumerations.html",[2665,2.301,2666,4.492]],["body/miscellaneous/enumerations.html",[8,0.543,19,1.508,20,0.011,48,0.007,49,0.009,50,0.007,203,1.296,254,1.052,375,2.251,544,2.937,1079,4.927,1530,4.556,1531,5.457,1542,6.494,1545,6.494,1757,5.102,1964,4.014,1977,5.9,1978,5.9,1979,5.457,2111,5.9,2589,6.952,2665,4.014,2666,5.423,2667,7.396,2668,6.494,2669,7.396,2670,5.423,2671,6.176,2672,7.396,2673,7.396,2674,7.396,2675,7.396,2676,7.396,2677,7.396]],["title/miscellaneous/functions.html",[2665,2.301,2678,4.492]],["body/miscellaneous/functions.html",[8,0.658,18,0.953,19,1.165,20,0.011,26,1.983,28,1.1,29,0.775,30,0.601,31,0.899,33,0.94,48,0.007,49,0.008,50,0.007,62,3.043,78,3.827,109,0.047,128,3.248,136,1.129,138,3.515,139,1.5,149,1.234,177,1.165,272,4.447,375,1.983,457,4.776,462,4.776,544,2.587,547,2.913,551,2.354,555,3.043,588,4.776,623,3.137,937,5.458,970,4.776,971,6.007,1072,4.013,1543,3.752,1629,4.72,1786,4.609,2028,6.896,2184,5.458,2203,5.047,2204,5.458,2234,4.776,2236,4.776,2317,6.007,2599,6.007,2627,6.007,2628,6.007,2630,6.007,2631,4.776,2632,6.007,2633,6.007,2634,4.776,2635,6.007,2636,4.776,2637,6.007,2638,4.776,2639,6.007,2640,4.776,2641,6.007,2665,3.536,2668,4.776,2678,4.776,2679,6.841,2680,5.439,2681,5.439,2682,5.439,2683,5.439,2684,5.439,2685,5.439,2686,6.841,2687,7.484,2688,6.841,2689,5.439,2690,6.841,2691,5.439,2692,5.439,2693,5.439,2694,5.439,2695,5.439,2696,6.841,2697,5.439]],["title/index.html",[8,0.311,2465,2.824,2466,2.824]],["body/index.html",[20,0.011,48,0.006,49,0.008,50,0.006,87,0.18,111,1.252,122,1.224,125,1.212,137,1.226,142,1.572,148,0.954,225,0.901,227,0.825,278,3.902,323,1.928,329,1.16,354,2.118,374,4.139,582,4.219,590,3.082,648,4.644,736,3.438,1059,3.099,1156,3.939,1199,4.644,1266,4.369,1633,3.902,1707,4.219,1749,3.902,1750,3.902,1756,3.099,1848,4.644,1858,3.902,1869,6.202,1870,6.202,1979,3.902,2047,4.219,2468,7.202,2470,6.487,2473,4.644,2486,7.047,2487,7.202,2523,4.644,2524,4.644,2525,5.902,2530,4.644,2533,4.644,2544,6.487,2561,4.644,2567,5.902,2568,4.644,2573,4.644,2583,5.894,2649,4.219,2698,5.289,2699,5.289,2700,5.289,2701,5.289,2702,5.289,2703,4.644,2704,6.721,2705,5.289,2706,5.289,2707,5.289,2708,5.289,2709,6.721,2710,5.289,2711,5.289,2712,5.289,2713,5.289,2714,5.289,2715,5.289,2716,5.289,2717,6.721,2718,6.721,2719,5.289,2720,5.289,2721,5.289,2722,5.289,2723,5.289,2724,5.289,2725,5.289,2726,5.289,2727,5.289,2728,5.289,2729,5.289,2730,5.289,2731,5.289,2732,5.289,2733,5.289,2734,5.289,2735,5.289,2736,6.721,2737,5.289,2738,5.289,2739,5.289,2740,7.774,2741,5.289,2742,5.289,2743,5.289,2744,5.289,2745,5.289,2746,5.289,2747,5.289,2748,5.289,2749,5.289,2750,5.289,2751,5.289,2752,5.289,2753,5.289,2754,5.289,2755,5.289,2756,4.644,2757,5.289,2758,5.289,2759,5.289,2760,5.289,2761,5.289]],["title/license.html",[2465,2.824,2466,2.824,2762,3.109]],["body/license.html",[20,0.009,48,0.007,49,0.009,50,0.007,277,3.209,340,2.252,1831,5.262,1858,5.358,1868,5.262,2483,6.377,2501,5.262,2583,4.78,2703,5.262,2756,5.262,2762,5.262,2763,5.992,2764,7.815,2765,5.992,2766,5.992,2767,5.992,2768,5.992,2769,7.263,2770,5.992,2771,5.992,2772,5.992,2773,5.992,2774,5.992,2775,7.263,2776,8.697,2777,5.992,2778,5.992,2779,7.815,2780,5.992,2781,5.992,2782,5.992,2783,5.992,2784,5.992,2785,5.992,2786,5.992,2787,5.992,2788,5.992,2789,5.992,2790,7.263,2791,5.992,2792,5.992,2793,5.992,2794,5.992,2795,5.992,2796,5.992,2797,7.263,2798,7.263,2799,5.992,2800,5.992,2801,5.992,2802,5.992,2803,5.992,2804,5.992,2805,5.992,2806,5.992,2807,5.992,2808,5.992,2809,5.992,2810,5.992,2811,5.992,2812,5.992,2813,5.992,2814,5.992,2815,5.992,2816,5.992,2817,5.992,2818,5.992,2819,5.992,2820,5.992,2821,5.992,2822,5.992,2823,5.992,2824,5.992,2825,5.992]],["title/modules.html",[331,2.12]],["body/modules.html",[20,0.009,48,0.007,49,0.009,50,0.007,241,1.569,330,4.147,331,2.191,345,4.147,355,4.147,362,4.147,369,4.435,374,3.702,388,4.147,401,4.147,409,4.147,417,4.147,424,4.147,434,4.147,435,4.147,436,4.147,437,4.147,445,4.147,469,4.147,2417,4.435,2491,7.861,2649,7.142,2826,8.952]],["title/overview.html",[2827,5.108]],["body/overview.html",[2,1.891,20,0.011,48,0.003,49,0.005,50,0.003,69,0.891,71,1.049,110,1.184,111,0.4,119,0.322,120,3.943,147,0.262,154,1.112,157,1.112,159,1.112,162,0.818,165,1.112,167,1.112,170,1.145,172,1.112,174,1.112,176,1.112,179,1.112,181,1.112,183,1.112,187,1.112,189,1.112,191,1.112,193,1.112,196,1.112,197,1.112,198,1.112,200,1.112,202,1.112,205,1.112,207,1.112,209,1.112,211,1.112,213,1.112,215,1.112,218,1.112,220,1.112,222,1.112,224,1.112,227,1.049,229,1.112,232,1.112,234,1.112,236,1.112,238,1.112,240,1.112,242,1.112,244,1.112,245,1.112,247,1.112,249,1.112,252,0.388,253,1.08,256,1.08,259,1.08,261,1.049,263,1.08,269,2.441,270,1.502,329,0.562,330,4.936,331,0.934,332,0.934,333,0.994,334,0.994,335,0.994,336,2.251,337,2.251,338,1.462,339,0.964,340,0.964,345,5.301,346,2.251,347,2.251,348,2.251,355,5.049,356,2.251,357,2.251,358,2.251,362,5.301,363,2.251,364,2.251,365,2.251,369,6.386,370,2.251,371,2.251,372,2.251,373,2.251,374,5.195,388,5.761,389,2.251,390,2.251,391,2.251,401,5.471,402,2.251,403,2.251,404,2.251,409,5.595,410,2.251,411,2.251,412,2.251,413,2.251,417,5.471,418,2.251,419,2.251,420,2.251,424,5.868,425,2.251,426,2.251,427,2.251,431,2.251,432,2.251,433,2.251,434,5.931,435,5.558,436,5.228,437,5.228,445,4.801,464,2.251,465,2.251,466,2.251,467,2.251,468,2.251,469,5.049,470,3.212,471,3.044,472,3.212,489,2.251,490,2.251,491,2.251,492,4.639,493,4.639,498,2.251,499,2.251,500,2.251,501,2.251,502,2.35,509,2.251,510,2.251,511,2.251,512,2.251,517,2.251,518,2.251,519,2.251,520,2.251,521,3.044,525,2.251,526,2.251,527,2.251,543,1.434,662,1.769,666,1.175,740,2.045,924,2.045,1125,2.045,1359,1.666,2417,5.399,2418,2.251,2419,2.251,2421,2.251,2827,2.251,2828,2.564,2829,2.564]],["title/miscellaneous/variables.html",[2665,2.301,2830,4.492]],["body/miscellaneous/variables.html",[8,0.475,18,1.445,19,1.375,20,0.011,26,2.482,30,0.599,48,0.007,49,0.008,50,0.007,80,1.413,306,3.511,326,5.434,595,3.021,969,4.309,1450,3.985,1471,5.025,1472,5.025,1530,3.985,1531,5.504,1536,6.878,1540,6.551,1541,5.981,1544,5.981,1566,5.434,1567,4.309,1568,7.504,1569,5.981,1570,5.981,1571,7.091,1572,6.551,1573,5.981,1574,4.742,1575,4.742,1576,4.742,1577,5.434,1578,7.241,1579,4.742,1580,5.981,1581,5.434,1582,5.981,1583,5.981,1584,4.742,1585,4.742,1586,4.742,2188,5.025,2625,4.742,2626,4.742,2665,3.511,2670,5.981,2830,4.742,2831,6.811,2832,5.401,2833,6.811,2834,5.401,2835,5.401,2836,5.401,2837,5.401,2838,5.401,2839,5.401,2840,5.401,2841,5.401,2842,5.401,2843,5.401,2844,5.401,2845,5.401,2846,6.811,2847,5.401]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":323,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/GridMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{}}}],["0,0",{"_index":1433,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":1147,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":668,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["0.0.0",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":1167,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["0.01",{"_index":1177,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1174,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":1161,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["0.125.2",{"_index":2659,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2365,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":2410,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":1549,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":134,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":2655,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2611,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2609,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2606,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2618,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2615,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["0x0000aa",{"_index":1272,"title":{},"body":{"components/FogComponent.html":{}}}],["0x444444",{"_index":1444,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x5dade2",{"_index":1620,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["0xa0a0a0",{"_index":725,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["0xa4a4a4",{"_index":751,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["0xdadada",{"_index":2374,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0xff0000",{"_index":1060,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xffffff",{"_index":132,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1",{"_index":602,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1.0",{"_index":595,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["1.05",{"_index":1357,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["1.10.0",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1697,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["1.3.4",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["1.463.0",{"_index":2658,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1637,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["1/1",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2624,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1062,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["100",{"_index":1156,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":1924,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":1916,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2109,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":1165,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["11.1.2",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1659,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["15",{"_index":820,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["16",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":924,"title":{},"body":{"classes/DagreUtils.html":{},"changelog.html":{},"overview.html":{}}}],["180",{"_index":1137,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":666,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1323,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/18",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1317,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":1690,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":2766,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2620,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":740,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"overview.html":{}}}],["3.8.3",{"_index":2654,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1423,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["37",{"_index":2613,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":142,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["4",{"_index":1202,"title":{},"body":{"components/DotScreenComponent.html":{},"components/LineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["4/7",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2619,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":2828,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1359,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"overview.html":{}}}],["50",{"_index":536,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["500",{"_index":1163,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":2411,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["6.6.6",{"_index":2656,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":2617,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1644,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["64",{"_index":1636,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["66",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2829,"title":{},"body":{"overview.html":{}}}],["70",{"_index":1640,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["8",{"_index":662,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["8.3.2",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1891,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_height",{"_index":684,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["_materialcolor",{"_index":2341,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":2183,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":2342,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":1515,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["above",{"_index":2796,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":13,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractcacheservice",{"_index":1,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:20",{"_index":1302,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1304,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1303,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcamera",{"_index":1754,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractcomposeeffect",{"_index":51,"title":{"classes/AbstractComposeEffect.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:17",{"_index":566,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":565,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:36",{"_index":568,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:40",{"_index":570,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:44",{"_index":569,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:53",{"_index":567,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:55",{"_index":564,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:8",{"_index":571,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":1532,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["abstractemptydirective",{"_index":681,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["abstractions",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":2339,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":585,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1832,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":117,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":1667,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":2253,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accepted",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":699,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":2819,"title":{},"body":{"license.html":{}}}],["actor",{"_index":251,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":195,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":382,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":1344,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:105",{"_index":2312,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:114",{"_index":2318,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:119",{"_index":2314,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:18",{"_index":1619,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:20",{"_index":1516,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:21",{"_index":1621,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:23",{"_index":1517,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:24",{"_index":1376,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:25",{"_index":1628,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:26",{"_index":1360,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:27",{"_index":1355,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:28",{"_index":1356,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:29",{"_index":1358,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:31",{"_index":1364,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:32",{"_index":1363,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:33",{"_index":1361,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1362,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:36",{"_index":1519,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:37",{"_index":1374,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:38",{"_index":1518,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:39",{"_index":1377,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:40",{"_index":1523,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:41",{"_index":1373,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:42",{"_index":1524,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:44",{"_index":1522,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:46",{"_index":1622,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:48",{"_index":1521,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:49",{"_index":1371,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:50",{"_index":1623,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:51",{"_index":2313,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:52",{"_index":1520,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:57",{"_index":2321,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:58",{"_index":1367,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:70",{"_index":1625,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:80",{"_index":2315,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:81",{"_index":1624,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:85",{"_index":1369,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:86",{"_index":2320,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:87",{"_index":1627,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:99",{"_index":1626,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.module.ts",{"_index":379,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actors",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":267,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":1717,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":632,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":634,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["added",{"_index":1581,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["addgroup",{"_index":2016,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1783,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addnode",{"_index":688,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["addpass",{"_index":1210,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1219,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["adheres",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":1745,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["aftercontentinit",{"_index":797,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["afterviewinit",{"_index":56,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":2768,"title":{},"body":{"license.html":{}}}],["align",{"_index":804,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["allowcoloroverride",{"_index":1474,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allows",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["along",{"_index":606,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["alpha",{"_index":2159,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":2074,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["ambient",{"_index":123,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":110,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["and/or",{"_index":2788,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2486,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":2644,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":352,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2646,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2647,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2648,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2651,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":289,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animate'].some(propname",{"_index":2337,"title":{},"body":{"components/TextActorComponent.html":{}}}],["animated",{"_index":279,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{}}}],["animation",{"_index":273,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":451,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":342,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":344,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1076,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":450,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":300,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":269,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":292,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":2448,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["antialias",{"_index":2158,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":1874,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":1170,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1187,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":2567,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":2699,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":138,"title":{},"body":{"components/AmbientLightComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":2685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this._overridematerialcolor",{"_index":2225,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedcolor(this.color",{"_index":1149,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.dashcolor",{"_index":1100,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["appliedcolor(this.groundcolor",{"_index":1448,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":1449,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":1592,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":1447,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":1629,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(color",{"_index":2227,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedmaterial(materialcolor",{"_index":2689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1632,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":60,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":74,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["arc",{"_index":2405,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":2080,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":1498,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["args[1",{"_index":1501,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["arguments",{"_index":2058,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":2823,"title":{},"body":{"license.html":{}}}],["array",{"_index":555,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["arrow",{"_index":2677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":1912,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1940,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":2363,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["assets/svg/?.svg",{"_index":1481,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":2777,"title":{},"body":{"license.html":{}}}],["association",{"_index":2674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":16,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":122,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":383,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":330,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":345,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":355,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":362,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":369,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":388,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":401,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":409,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":417,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":424,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":374,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":434,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":445,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":435,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":436,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":437,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":469,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":649,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["attribute",{"_index":1567,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":2812,"title":{},"body":{"license.html":{}}}],["auto",{"_index":265,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autoplay",{"_index":2426,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":1672,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1673,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":308,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":1879,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["axes",{"_index":155,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":154,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":600,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["background",{"_index":2240,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2250,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":231,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["based",{"_index":2473,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["baseinfo",{"_index":542,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":921,"title":{},"body":{"classes/DagreUtils.html":{}}}],["basic",{"_index":1633,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["behaviour",{"_index":2103,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":2705,"title":{},"body":{"index.html":{}}}],["bevelenabled",{"_index":2345,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":2346,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":2347,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":2348,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":2349,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["binding",{"_index":2687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":2573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":1894,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["blur",{"_index":559,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":158,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":157,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2731,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1180,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1193,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":78,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":549,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["box",{"_index":160,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":159,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":2826,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2649,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":822,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["bug",{"_index":1890,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":2736,"title":{},"body":{"index.html":{}}}],["c",{"_index":2765,"title":{},"body":{"license.html":{}}}],["cache",{"_index":11,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1305,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":7,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:20",{"_index":27,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":24,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":36,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":39,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":45,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":1431,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":2114,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":2124,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":2693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":286,"title":{},"body":{"injectables/AnimationService.html":{}}}],["camera",{"_index":1756,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":217,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":353,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1902,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":1907,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1936,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":1935,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:22",{"_index":1908,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":1937,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":1938,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:36",{"_index":1909,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":1913,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:56",{"_index":1911,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":507,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1965,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1967,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1966,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":440,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":350,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1755,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":439,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":258,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cant",{"_index":1115,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":2047,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":226,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":2162,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2177,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":515,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":2050,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":2048,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":2046,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":2065,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":2057,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":2061,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":2067,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":2085,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:47",{"_index":2060,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:51",{"_index":2062,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2176,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2175,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2174,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2171,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":2051,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":457,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["cast",{"_index":1872,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":1140,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["catch",{"_index":988,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["cdref",{"_index":701,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["center",{"_index":378,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":2635,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":376,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":1343,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":1513,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/layout/dagre",{"_index":544,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["center/server/server",{"_index":2252,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":2463,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["centered",{"_index":805,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":305,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["changedetectorref",{"_index":702,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["changelog",{"_index":2467,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":77,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":1711,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1714,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":2772,"title":{},"body":{"license.html":{}}}],["child",{"_index":647,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1094,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["children",{"_index":758,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["childs",{"_index":1972,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claim",{"_index":2815,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"classes/DagreUtils.html":{}},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"classes/DagreUtils.html":{},"overview.html":{}}}],["click",{"_index":1979,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clock",{"_index":1535,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["clone",{"_index":2737,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1491,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":336,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":337,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":346,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":347,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":348,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":356,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":357,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":358,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":363,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":364,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":365,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":370,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":371,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":373,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":372,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":389,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":390,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":391,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":402,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":403,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":404,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":410,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":412,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":411,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":413,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":418,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":419,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":420,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":425,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":426,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":427,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":431,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":433,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":432,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":464,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":465,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":467,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":466,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":468,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":489,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":490,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":491,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":498,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":499,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":500,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":501,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":509,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":510,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":511,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":512,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":517,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":518,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":519,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":520,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":525,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":526,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":527,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":2418,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":2419,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":2421,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":2420,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":128,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":2628,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":2752,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":351,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["compact",{"_index":233,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":109,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["componentfactoryresolver",{"_index":949,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["components",{"_index":111,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":53,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":400,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":396,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":397,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":399,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":70,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":186,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":92,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1209,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1217,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1218,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1216,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1223,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1225,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1224,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:42",{"_index":1222,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:59",{"_index":1220,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:65",{"_index":1227,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:79",{"_index":1228,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:85",{"_index":1221,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":1976,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":546,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":169,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composition.border",{"_index":1046,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component",{"_index":966,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component.ts",{"_index":680,"title":{},"body":{"components/DagreCompositionComponent.html":{},"coverage.html":{}}}],["composition.component.ts:119",{"_index":713,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:125",{"_index":718,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:143",{"_index":722,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:161",{"_index":719,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:34",{"_index":707,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:36",{"_index":704,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:38",{"_index":724,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:40",{"_index":706,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:48",{"_index":731,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:52",{"_index":708,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:53",{"_index":710,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:54",{"_index":711,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:55",{"_index":709,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:57",{"_index":705,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:59",{"_index":726,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:60",{"_index":729,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:61",{"_index":727,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:62",{"_index":703,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:81",{"_index":717,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:85",{"_index":716,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:89",{"_index":715,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:93",{"_index":714,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:99",{"_index":712,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.composition",{"_index":1044,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.label",{"_index":1042,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.name",{"_index":1040,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref",{"_index":1038,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.border",{"_index":1045,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.composition",{"_index":1043,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.label",{"_index":1041,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.name",{"_index":1039,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositions",{"_index":554,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":913,"title":{},"body":{"classes/DagreUtils.html":{}}}],["conditions",{"_index":2795,"title":{},"body":{"license.html":{}}}],["config",{"_index":2744,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":2824,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1534,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":204,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":361,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":1531,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["connector.component.ts:118",{"_index":1560,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:126",{"_index":1559,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:133",{"_index":1556,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:57",{"_index":1553,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:60",{"_index":1555,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:61",{"_index":1548,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:62",{"_index":1550,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:63",{"_index":1554,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:64",{"_index":1552,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:66",{"_index":1547,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:67",{"_index":1561,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:68",{"_index":1564,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:69",{"_index":1565,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:70",{"_index":1563,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:72",{"_index":1546,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:83",{"_index":1557,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.module",{"_index":476,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":360,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":475,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1973,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.error('contentprojectioncomponent",{"_index":644,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":41,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":43,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":94,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":103,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":97,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":1950,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["console.log('add",{"_index":1781,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":318,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":315,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":539,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":615,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1184,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":672,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":673,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dagrecompositioncomponent.addnode",{"_index":755,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.layout",{"_index":784,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.removenode",{"_index":769,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.syncgraphnodes",{"_index":779,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.update",{"_index":793,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrelayoutcomponent.layout",{"_index":847,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('dagrelayoutcomponent.ngonchanges",{"_index":866,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrelayoutcomponent.syncgraphcontainer",{"_index":861,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrenodecomponent.addnode",{"_index":891,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.removenode",{"_index":892,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraph",{"_index":894,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraphnodes",{"_index":893,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":919,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('dagreyamlparsercomponent",{"_index":1032,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createcomposition",{"_index":1036,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createedge",{"_index":1017,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createnode",{"_index":998,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.destroyall",{"_index":1030,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.ngonchanges",{"_index":974,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.parseandcreate",{"_index":976,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1082,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1108,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":1412,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":1297,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1233,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1251,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1239,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1234,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1236,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1252,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1292,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":1386,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":1288,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1282,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1306,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('framemeshcomponent.ngonchanges",{"_index":1334,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":1383,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1418,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geticonsource",{"_index":1496,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1503,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1111,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('lineconnectorcomponent.animate",{"_index":1607,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('lineconnectorcomponent.createlinemesh",{"_index":1590,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('lineconnectorcomponent.updatelinegeometry",{"_index":1603,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('lineposition",{"_index":1411,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('loaderactorcomponent.animate",{"_index":1650,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.done",{"_index":1663,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.init",{"_index":1634,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngafterviewinit",{"_index":1630,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngondestroy",{"_index":1655,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updateanimation",{"_index":1656,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updatetext",{"_index":1649,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('looking",{"_index":1402,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":1283,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('node",{"_index":781,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":1889,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["console.log('onclick",{"_index":1998,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":1914,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":1922,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1939,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1944,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":1996,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1784,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2152,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2099,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2087,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2156,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2090,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":1379,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":2264,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('svgloadercomponent.icon",{"_index":2210,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloadercomponent.loadlazyobject",{"_index":2221,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2299,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('textactorcomponent.animate",{"_index":2327,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngafterviewinit",{"_index":2322,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngondestroy",{"_index":2334,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updateanimation",{"_index":2336,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updatetext",{"_index":2324,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":2392,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":2389,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.set",{"_index":2386,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1772,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":2440,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(event",{"_index":1805,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1117,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn('dagrecompositioncomponent.constructor",{"_index":745,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.warn('dagrenodecomponent.constructor",{"_index":890,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.warn('dagreyamlparsercomponent.parseandcreate",{"_index":990,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.warn('icon",{"_index":1506,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["const",{"_index":38,"title":{},"body":{"classes/AbstractCacheService.html":{},"components/AmbientLightComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":1057,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(raycasterservice",{"_index":2002,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":68,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(statsservice",{"_index":2122,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["container",{"_index":873,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["content",{"_index":163,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":631,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":162,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continuously",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2820,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2751,"title":{},"body":{"index.html":{}}}],["control",{"_index":2078,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["control.module",{"_index":444,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":367,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":443,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":1668,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":208,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":368,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1670,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1666,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:101",{"_index":1704,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":1899,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":1898,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:17",{"_index":1699,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1701,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1686,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1687,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1689,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1688,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1700,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1695,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1691,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1692,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1698,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1696,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1694,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:31",{"_index":1685,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":1900,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":1702,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:56",{"_index":1705,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:96",{"_index":1703,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":1131,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":1387,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["copies",{"_index":2790,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2775,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2764,"title":{},"body":{"license.html":{}}}],["core",{"_index":2652,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2582,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":760,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":1904,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createcomposition",{"_index":941,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createcomposition(composition",{"_index":953,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge",{"_index":942,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge(edge",{"_index":955,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createlinemesh",{"_index":1538,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["createnode",{"_index":943,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createnode(node",{"_index":957,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["creates",{"_index":2691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":304,"title":{},"body":{"injectables/AnimationService.html":{}}}],["css",{"_index":2104,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3drenderer",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["currentdelay",{"_index":2303,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currentgeometry",{"_index":1338,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currentgeometry.attributes",{"_index":1341,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currently",{"_index":2070,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentpos",{"_index":2304,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttext",{"_index":2305,"title":{},"body":{"components/TextActorComponent.html":{}}}],["curvesegments",{"_index":2350,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cylinder",{"_index":166,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":165,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":1429,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["dagre",{"_index":168,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["dagre.graphlabel",{"_index":553,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":721,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":920,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":167,"title":{"components/DagreCompositionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":170,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayout",{"_index":685,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["dagrelayoutcomponent",{"_index":172,"title":{"components/DagreLayoutComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":174,"title":{"components/DagreNodeComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":840,"title":{"classes/DagreUtils.html":{}},"body":{"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreutils.modeltograph(this.graphmodel",{"_index":858,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["dagreyamlparsercomponent",{"_index":176,"title":{"components/DagreYamlParserComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":2816,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1674,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dash",{"_index":1079,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1052,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":254,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":253,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1053,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashsize",{"_index":1540,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":377,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"injectables/SvgLoaderService.html":{},"changelog.html":{}}}],["deal",{"_index":2778,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2825,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":333,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":638,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultcolor",{"_index":2686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultprovider",{"_index":1451,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["defaults",{"_index":601,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["deg2rad",{"_index":1127,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":496,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":492,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1136,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1132,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["demo",{"_index":2523,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":2720,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1857,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":588,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":589,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthwrite",{"_index":2184,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":272,"title":{},"body":{"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":697,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["destroy",{"_index":1033,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["destroyall",{"_index":944,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["details",{"_index":2750,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1289,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":2716,"title":{},"body":{"index.html":{}}}],["development",{"_index":2533,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["diffuse",{"_index":1580,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":180,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":179,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":150,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1077,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":252,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":61,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["disablefog",{"_index":1267,"title":{},"body":{"components/FogComponent.html":{}}}],["discard",{"_index":1585,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":1749,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1818,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["distribute",{"_index":2786,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1415,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["dl",{"_index":814,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2281,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2290,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":2441,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":2438,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":2583,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":1169,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":182,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":181,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":112,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["done",{"_index":2307,"title":{},"body":{"components/TextActorComponent.html":{}}}],["dot",{"_index":184,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dots",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotscreencomponent",{"_index":183,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1205,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["draw",{"_index":1050,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":394,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1049,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:11",{"_index":1061,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1063,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1065,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1066,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:15",{"_index":1064,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1071,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1073,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1074,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:20",{"_index":1058,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:28",{"_index":1068,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:37",{"_index":1070,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:68",{"_index":1067,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:93",{"_index":1069,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":255,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":2650,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":989,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["e.g",{"_index":2714,"title":{},"body":{"index.html":{}}}],["edge",{"_index":550,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":171,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["edge.color",{"_index":1027,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component",{"_index":967,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component.ts",{"_index":2589,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.from",{"_index":1023,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.name",{"_index":931,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":930,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["edge.type",{"_index":1025,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref",{"_index":1020,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.from",{"_index":1022,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.materialcolor",{"_index":1028,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.to",{"_index":1024,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.type",{"_index":1026,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edges",{"_index":557,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["edgesep",{"_index":806,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["edgesgeom",{"_index":1096,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":2667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":91,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":456,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":393,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":54,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:28",{"_index":79,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:36",{"_index":83,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:40",{"_index":86,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:44",{"_index":85,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:53",{"_index":82,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:55",{"_index":76,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect.ts:8",{"_index":72,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":455,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":1229,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1240,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":71,"title":{"components/EffectComposerComponent.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":2063,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["embedded",{"_index":646,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":1971,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":275,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":325,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":328,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1828,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":843,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":188,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":408,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":187,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":636,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["enable",{"_index":62,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":508,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":2001,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":2004,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":2003,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":260,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":291,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1675,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":1268,"title":{},"body":{"components/FogComponent.html":{}}}],["end",{"_index":1081,"title":{},"body":{"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["entire",{"_index":2727,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":380,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["enum",{"_index":1587,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["enumerations",{"_index":2666,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":458,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["etc",{"_index":307,"title":{},"body":{"injectables/AnimationService.html":{}}}],["event",{"_index":277,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":2282,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1385,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.face.a",{"_index":1405,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":1407,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":1409,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":2283,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1792,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1790,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1807,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":2672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":301,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["events",{"_index":771,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":2076,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":2713,"title":{},"body":{"index.html":{}}}],["execution",{"_index":309,"title":{},"body":{"injectables/AnimationService.html":{}}}],["exploration",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":2702,"title":{},"body":{"index.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":461,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":335,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["exposition",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":2803,"title":{},"body":{"license.html":{}}}],["extends",{"_index":116,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":1388,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":605,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["factory",{"_index":1018,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["failed",{"_index":991,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["false",{"_index":312,"title":{},"body":{"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":1269,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1299,"title":{},"body":{"components/FogComponent.html":{}}}],["favor",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2755,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1831,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":1855,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":1880,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["finalurl",{"_index":1507,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["find",{"_index":1116,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"changelog.html":{}}}],["findmesh",{"_index":1092,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1114,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1107,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["fit",{"_index":2726,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":2641,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":2808,"title":{},"body":{"license.html":{}}}],["fix",{"_index":462,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":2203,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2236,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":2402,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1750,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float",{"_index":1568,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["float32array(4",{"_index":1396,"title":{},"body":{"components/GridActorComponent.html":{}}}],["focus",{"_index":1171,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1183,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1265,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":190,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":395,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":189,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":2501,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":2353,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":2343,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontservice",{"_index":470,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fonturl",{"_index":2351,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fork/svgloader",{"_index":2298,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":645,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["fov",{"_index":1934,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":1601,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["frame",{"_index":192,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":191,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":2756,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":1923,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":969,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2678,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2793,"title":{},"body":{"license.html":{}}}],["g",{"_index":723,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["g.graph().height",{"_index":864,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.graph().width",{"_index":863,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.node(name",{"_index":783,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.nodes().foreach((name",{"_index":780,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.setdefaultedgelabel(function",{"_index":917,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":929,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph",{"_index":915,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":922,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":926,"title":{},"body":{"classes/DagreUtils.html":{}}}],["gapsize",{"_index":1541,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1432,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["geo",{"_index":1389,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":1392,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry",{"_index":616,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute('position",{"_index":1394,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getcamera",{"_index":2115,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":2084,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getcomposer",{"_index":1211,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfirstintersectedgroup",{"_index":2017,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1813,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getgeometry",{"_index":1313,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["getgraph",{"_index":799,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getgraphmodel",{"_index":800,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getheight",{"_index":730,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["geticon",{"_index":2201,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["geticonsource",{"_index":1452,"title":{},"body":{"injectables/IconService.html":{}}}],["geticonsource(icon",{"_index":1458,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["geticonsourcebynamespace",{"_index":1453,"title":{},"body":{"injectables/IconService.html":{}}}],["geticonsourcebynamespace(namespace",{"_index":1461,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["getisenabled",{"_index":2043,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":898,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":903,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlineposition",{"_index":1347,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":1365,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":1618,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":2376,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getnodecomponent",{"_index":945,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodecomponent(type",{"_index":960,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getrenderpane",{"_index":2066,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscene",{"_index":2116,"title":{},"body":{"injectables/RendererService.html":{}}}],["gettext",{"_index":2378,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":2344,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":2370,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":2465,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":14,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":25,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2117,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":1525,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":2561,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["gl_fragcolor",{"_index":1586,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":1575,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["goals",{"_index":2707,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2771,"title":{},"body":{"license.html":{}}}],["graph",{"_index":761,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["graphmodel",{"_index":552,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["graphupdated",{"_index":686,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["grid",{"_index":194,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":193,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":1353,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":1354,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":196,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":197,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1441,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1786,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.add(mesh",{"_index":2231,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["group.directive",{"_index":505,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1969,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":2007,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":2008,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":2006,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":2009,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":2014,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":2015,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":2013,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":2012,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":2011,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":2010,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1785,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":262,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1759,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["halfx",{"_index":1321,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":1324,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":590,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["height(height",{"_index":737,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["heightsegments",{"_index":591,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["heightsegments'].some(propname",{"_index":1951,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":533,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":156,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":407,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":531,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":535,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1416,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":537,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":1417,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":478,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":406,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":477,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":641,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":2711,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":199,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":198,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":2770,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1078,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1054,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hierarchical",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["hightsegments",{"_index":2260,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":2813,"title":{},"body":{"license.html":{}}}],["horizontalblurshader",{"_index":576,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":2728,"title":{},"body":{"index.html":{}}}],["host",{"_index":1059,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2086,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":2097,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":2054,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2095,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":1856,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":897,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":2738,"title":{},"body":{"index.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1493,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1487,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1490,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1483,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["i.destroy",{"_index":1034,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["i.e",{"_index":2079,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1798,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.name",{"_index":778,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["i.object",{"_index":1794,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1801,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["icon",{"_index":235,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["icon(icon",{"_index":2209,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icon.indexof(separator",{"_index":1497,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icon.split(separator",{"_index":1499,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconprovider",{"_index":2211,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.allowcoloroverride",{"_index":2219,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.isccw",{"_index":2216,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.noholes",{"_index":2218,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.url",{"_index":2214,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icons/?.svg",{"_index":1488,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1485,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1484,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":471,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1460,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["ideas",{"_index":2759,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["ignorepaused",{"_index":1809,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":582,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":2072,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":55,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":2804,"title":{},"body":{"license.html":{}}}],["import",{"_index":87,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":354,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["included",{"_index":1868,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":2483,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":463,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1693,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":2748,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":563,"title":{},"body":{"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/FontService.html":{},"components/LoaderActorComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{}}}],["init",{"_index":1454,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{},"components/TextActorComponent.html":{}}}],["initcomposer",{"_index":1212,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initial",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":842,"title":{},"body":{"components/DagreLayoutComponent.html":{},"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2129,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialopacity",{"_index":1055,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":63,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":268,"title":{"injectables/AnimationService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AnimationService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":270,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":700,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["input",{"_index":136,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":127,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["install",{"_index":2525,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":1093,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["instances",{"_index":940,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["instead",{"_index":1896,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":2712,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":129,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":541,"title":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":543,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersection[0",{"_index":1824,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1823,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersections",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["isccw",{"_index":1475,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["isenabled",{"_index":1779,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isolated",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":2704,"title":{},"body":{"index.html":{}}}],["isready",{"_index":2018,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1808,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["issue",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":310,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":1350,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":1351,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["ivy",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":44,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["jetbrains",{"_index":2754,"title":{},"body":{"index.html":{}}}],["join",{"_index":2757,"title":{},"body":{"index.html":{}}}],["js",{"_index":2653,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(g.node(name",{"_index":782,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["k",{"_index":1821,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["keep",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":32,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/SvgLoaderService.html":{}}}],["kind",{"_index":2802,"title":{},"body":{"license.html":{}}}],["label",{"_index":547,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":1893,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"changelog.html":{}}}],["later",{"_index":1941,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":201,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":386,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":381,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":200,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":387,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":173,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layout.component",{"_index":734,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["layout.component.ts",{"_index":796,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:100",{"_index":834,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":835,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:126",{"_index":830,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:130",{"_index":836,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:136",{"_index":829,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":815,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":823,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":821,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":817,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":827,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:35",{"_index":818,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:36",{"_index":819,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:37",{"_index":826,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":816,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":828,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:43",{"_index":839,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:44",{"_index":813,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:60",{"_index":833,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:65",{"_index":832,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:70",{"_index":831,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:90",{"_index":838,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["lazy",{"_index":2382,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["length",{"_index":597,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":2698,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2817,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2814,"title":{},"body":{"license.html":{}}}],["library",{"_index":2468,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":2762,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":124,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":153,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":1153,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":416,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":115,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":133,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":131,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":1143,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1443,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":1144,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:19",{"_index":1142,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:24",{"_index":135,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.component.ts:26",{"_index":1445,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:28",{"_index":1145,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":145,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":480,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":415,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":1166,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":1157,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":1162,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":1158,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":1160,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":1159,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":1155,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":1958,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":1164,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":1957,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":1959,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":1150,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":479,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":2710,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":2781,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2805,"title":{},"body":{"license.html":{}}}],["line",{"_index":203,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["line.geometry.attributes.position",{"_index":1401,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineconnectorcomponent",{"_index":202,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance",{"_index":1569,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1105,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":2669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linefragshader",{"_index":1577,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lineposition",{"_index":1400,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":1404,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":1406,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":1408,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":1410,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lines",{"_index":1080,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["linetype",{"_index":1542,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linetype.dashed",{"_index":1551,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linevertshader",{"_index":1566,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listened",{"_index":2081,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":17,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":35,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loaded",{"_index":1845,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":206,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":210,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.call(this",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader.component",{"_index":423,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1827,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":1886,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":2197,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":1849,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:23",{"_index":1850,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1887,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:26",{"_index":1839,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":2192,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:33",{"_index":1846,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":1838,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":2199,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:48",{"_index":2194,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:50",{"_index":1847,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:51",{"_index":2191,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:54",{"_index":2195,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:57",{"_index":2196,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:60",{"_index":2190,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":2193,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:66",{"_index":2189,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:77",{"_index":2198,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load(key",{"_index":1309,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":482,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":422,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service.ts",{"_index":2294,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":2295,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["loader/atft",{"_index":481,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader/services/font.service",{"_index":2383,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loaderactorcomponent",{"_index":205,"title":{"components/LoaderActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadlazyobject",{"_index":1835,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":2743,"title":{},"body":{"index.html":{}}}],["logic",{"_index":280,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":298,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["main",{"_index":326,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":2568,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manager",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":22,"title":{},"body":{"classes/AbstractCacheService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":1706,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":207,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2732,"title":{},"body":{"index.html":{}}}],["marginx",{"_index":807,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marginy",{"_index":808,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marked",{"_index":1970,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":49,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":623,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":2630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["material.uniforms.time.value",{"_index":1611,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["materialcolor",{"_index":1543,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":2384,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":1876,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialcreator.preload",{"_index":1877,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":2690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["math.pi",{"_index":667,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin(this.i",{"_index":1658,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["max",{"_index":2317,"title":{},"body":{"components/TextActorComponent.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1172,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1190,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdelay",{"_index":2310,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxdistance",{"_index":1676,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpolarangle",{"_index":1677,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpos",{"_index":2306,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxx",{"_index":2185,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":2186,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxzoom",{"_index":1678,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1469,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["meant",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2807,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2784,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":587,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh'},{'name",{"_index":161,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":2399,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":430,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":584,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:102",{"_index":2373,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:103",{"_index":2437,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:110",{"_index":2372,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":2263,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":665,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":2262,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":664,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":611,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":659,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":2432,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":663,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":660,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":608,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":661,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":2409,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":669,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":658,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":596,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":2408,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":2375,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":1424,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":613,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":2430,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":670,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":2412,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":610,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":2379,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":2439,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":1948,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":2429,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":594,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":2368,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":2366,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:55",{"_index":1319,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":2361,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:57",{"_index":2435,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":614,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":2355,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":2358,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":1320,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:66",{"_index":2434,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":2356,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":2357,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":2364,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":2359,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":2367,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":2362,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:84",{"_index":2433,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":2360,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:87",{"_index":2436,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":2354,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:98",{"_index":2369,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.geometry",{"_index":1337,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.module",{"_index":484,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":429,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":2400,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":483,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["meshposition",{"_index":1391,"title":{},"body":{"components/GridActorComponent.html":{}}}],["message",{"_index":2675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":118,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["middle",{"_index":1434,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":2767,"title":{},"body":{"license.html":{}}}],["min",{"_index":2319,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindelay",{"_index":2311,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindistance",{"_index":1679,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["minzoom",{"_index":1680,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":2665,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2763,"title":{},"body":{"license.html":{}}}],["mm",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mod",{"_index":1584,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2749,"title":{},"body":{"index.html":{}}}],["model",{"_index":775,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["model.compositions",{"_index":933,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.compositions?.foreach(i",{"_index":981,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.edges",{"_index":927,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":928,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges?.foreach(i",{"_index":985,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.layout",{"_index":936,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":934,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["model.nodes.length",{"_index":980,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.nodes?.foreach(i",{"_index":983,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.ts",{"_index":545,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modeltograph",{"_index":899,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":905,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":1574,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":867,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DofComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["modify",{"_index":2783,"title":{},"body":{"license.html":{}}}],["module",{"_index":329,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":1583,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2747,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":2082,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mouseenter",{"_index":1977,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1978,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1814,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1243,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":1834,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["multigraph",{"_index":914,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiple",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["mustrerender",{"_index":1918,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":2427,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mvposition",{"_index":1573,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":1463,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["near",{"_index":1270,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1817,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1820,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1751,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1822,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1825,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["necessary",{"_index":1866,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["network",{"_index":824,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["new",{"_index":21,"title":{},"body":{"classes/AbstractCacheService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newgeometry",{"_index":1339,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newgeometry.attributes",{"_index":1342,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newobject3dinstance",{"_index":126,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["newtexturepath",{"_index":1852,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["ng",{"_index":648,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":801,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ngafterviewinit",{"_index":64,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":343,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":65,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngonchanges(changes",{"_index":84,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngondestroy",{"_index":66,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":689,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["node",{"_index":548,"title":{"interfaces/Node.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":175,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["node.component",{"_index":968,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.component.ts",{"_index":871,"title":{},"body":{"components/DagreNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:102",{"_index":882,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:16",{"_index":876,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:18",{"_index":877,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:20",{"_index":888,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:22",{"_index":889,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:23",{"_index":875,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:41",{"_index":880,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:46",{"_index":878,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:65",{"_index":879,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:70",{"_index":881,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:88",{"_index":883,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.composition",{"_index":925,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.height",{"_index":792,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.icon",{"_index":1014,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.label",{"_index":923,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.name",{"_index":1004,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.width",{"_index":791,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.x",{"_index":786,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["node.y",{"_index":788,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["nodefactory",{"_index":999,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef",{"_index":1001,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.composition",{"_index":1005,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.container.createcomponent(serverfactory",{"_index":1010,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.name",{"_index":1003,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["nodes",{"_index":556,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["nodesep",{"_index":809,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["noholes",{"_index":1476,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["none",{"_index":2111,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":2811,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":281,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":2797,"title":{},"body":{"license.html":{}}}],["now",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1870,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":1238,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":551,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"pipes/Deg2RadPipe.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":212,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":1989,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1987,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1988,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":1993,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1991,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1992,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":141,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":442,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":474,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1091,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1075,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":441,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":1378,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["object/scene.component",{"_index":2148,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":2715,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":209,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":1848,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["objloadercomponent",{"_index":211,"title":{"components/ObjLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["observers",{"_index":319,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":2774,"title":{},"body":{"license.html":{}}}],["official",{"_index":2746,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1352,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["once",{"_index":287,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":58,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["onclick",{"_index":690,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1799,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":691,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["ondestroy",{"_index":57,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["oninit",{"_index":682,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["onlyunique",{"_index":2599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlyunique(value",{"_index":970,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["onmouseclick",{"_index":1348,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":1370,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":1349,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1372,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1994,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":2019,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1788,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onresize(event",{"_index":2098,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":692,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["ontouchstart",{"_index":2020,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1803,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1544,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["openended",{"_index":652,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["optimization",{"_index":283,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":31,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2724,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":214,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":1707,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":213,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["original",{"_index":1109,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":216,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":215,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["others",{"_index":1718,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":2822,"title":{},"body":{"license.html":{}}}],["out",{"_index":340,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":2110,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":733,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerStandActorComponent.html":{}}}],["outputs",{"_index":696,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["overridematerialcolor",{"_index":2187,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":2207,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":2827,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1871,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pane",{"_index":2068,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1681,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":598,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":1135,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":130,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{}}}],["parent.ts",{"_index":2637,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentscene",{"_index":95,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":2696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseandcreate",{"_index":946,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser",{"_index":939,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser'},{'name",{"_index":178,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["parser.component.ts",{"_index":937,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parser.component.ts:105",{"_index":958,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:124",{"_index":956,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:141",{"_index":959,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:151",{"_index":954,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:38",{"_index":951,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:40",{"_index":952,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:42",{"_index":965,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:44",{"_index":950,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:54",{"_index":962,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:59",{"_index":963,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:72",{"_index":964,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:93",{"_index":961,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["particular",{"_index":2809,"title":{},"body":{"license.html":{}}}],["pass",{"_index":59,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1254,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1256,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1258,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1257,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patch",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1840,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["path.color",{"_index":2226,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.toshapes(this.isccw",{"_index":2230,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["paths",{"_index":2222,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["pause",{"_index":1776,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1760,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":282,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":2769,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2791,"title":{},"body":{"license.html":{}}}],["person",{"_index":2773,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2792,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":219,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":218,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":1124,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":447,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":495,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":446,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1125,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1134,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixels",{"_index":2107,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":221,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":220,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["point",{"_index":223,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pointlightcomponent",{"_index":222,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":2800,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1380,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":306,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":1403,"title":{},"body":{"components/GridActorComponent.html":{}}}],["preloading",{"_index":1861,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":1863,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep.then",{"_index":1881,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["preservedrawingbuffer",{"_index":2053,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["private",{"_index":290,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["project",{"_index":2470,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":630,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":164,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":488,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":628,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:15",{"_index":633,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:24",{"_index":635,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":1576,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":2679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../calculate",{"_index":2680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":2668,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":2681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../icon.service.ts",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../line",{"_index":2670,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../provide",{"_index":2682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":2671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":2683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":2684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../svgloader.ts",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":375,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":1613,"title":{},"body":{"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2301,"title":{},"body":{"components/TextActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":2422,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":271,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":302,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":295,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":297,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":299,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":296,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":341,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":438,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":349,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":1901,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1932,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":366,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1665,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":1897,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":392,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":52,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":558,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":560,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:22",{"_index":562,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:29",{"_index":561,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1168,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1176,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1175,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1173,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:24",{"_index":1178,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:50",{"_index":1179,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1197,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1208,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1048,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1264,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1273,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1275,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:15",{"_index":1274,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:17",{"_index":1271,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:28",{"_index":1278,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:37",{"_index":1277,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:43",{"_index":1276,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:49",{"_index":1280,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:54",{"_index":1279,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":473,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":359,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":1530,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/content",{"_index":627,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":405,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":530,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1260,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1262,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":1263,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1413,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":114,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":414,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":1138,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1439,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":1953,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":421,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1826,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":1884,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1300,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts:8",{"_index":1301,"title":{},"body":{"injectables/FontService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1450,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:18",{"_index":1470,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:19",{"_index":1457,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:25",{"_index":1464,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:59",{"_index":1466,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:63",{"_index":1468,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:67",{"_index":1459,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:86",{"_index":1462,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2293,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2181,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":428,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":583,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":650,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":1311,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":1421,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":1946,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2258,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":2403,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":2424,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2237,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":2241,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:26",{"_index":2242,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:32",{"_index":2244,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:36",{"_index":2243,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":528,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2338,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":494,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1126,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1130,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1960,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1963,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":503,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1964,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1752,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":2032,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":2027,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":2026,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":2041,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":2042,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":2039,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":2038,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":2040,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":2022,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":2029,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":2036,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":2037,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":2025,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":2024,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":2033,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":2034,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":2044,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":2035,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":2023,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":2031,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":2030,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":513,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":2045,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2112,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:104",{"_index":2141,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:11",{"_index":2144,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:111",{"_index":2127,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:115",{"_index":2126,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:119",{"_index":2128,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":2145,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:123",{"_index":2137,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2143,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2147,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2142,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:17",{"_index":2123,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:25",{"_index":2131,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:30",{"_index":2139,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:34",{"_index":2135,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:39",{"_index":2132,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:54",{"_index":2130,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:83",{"_index":2134,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:96",{"_index":2125,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2267,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":522,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2272,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2279,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2278,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2275,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2277,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":2276,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2274,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":2627,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":2631,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":2634,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":2636,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":2638,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":2640,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":34,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":1864,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1307,"title":{},"body":{"injectables/FontService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["property",{"_index":2073,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":869,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["props",{"_index":1154,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":10,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["provided",{"_index":2703,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":1477,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provideparent",{"_index":139,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":120,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":532,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":586,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":2695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":629,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":651,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(dagrecompositioncomponent",{"_index":683,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["provideparent(dagrelayoutcomponent",{"_index":798,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["provideparent(dagrenodecomponent",{"_index":872,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["provideparent(dagreyamlparsercomponent",{"_index":938,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":1139,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1261,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":1312,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":1345,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1414,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":1422,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1440,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":1514,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":1533,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(loaderactorcomponent",{"_index":1614,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":1885,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1833,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":1903,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":1933,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":1947,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":1954,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2238,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":2254,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":2255,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":2256,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":2257,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":2259,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":2182,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textactorcomponent",{"_index":2302,"title":{},"body":{"components/TextActorComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":2340,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":2404,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":2425,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":2464,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["provider",{"_index":1504,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.allowcoloroverride",{"_index":1510,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1511,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1512,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":1508,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["providers",{"_index":119,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["pt",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2785,"title":{},"body":{"license.html":{}}}],["published",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":2760,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2810,"title":{},"body":{"license.html":{}}}],["px",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2deg",{"_index":1961,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":497,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":493,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":653,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":1133,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":2261,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":654,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":655,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["randomint",{"_index":2308,"title":{},"body":{"components/TextActorComponent.html":{}}}],["randomint(min",{"_index":2316,"title":{},"body":{"components/TextActorComponent.html":{}}}],["rankdir",{"_index":810,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker",{"_index":811,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker'].some(propname",{"_index":868,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranksep",{"_index":812,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["raycaster",{"_index":257,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":453,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":504,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":506,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":452,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":1709,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":256,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1366,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":259,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1757,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1802,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1797,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1796,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":261,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":502,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":885,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["readonly",{"_index":288,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":2352,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rectangular",{"_index":604,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["refreshlayout",{"_index":802,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["register",{"_index":757,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["registerprovider",{"_index":1455,"title":{},"body":{"injectables/IconService.html":{}}}],["registerprovider(key",{"_index":1465,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["reject",{"_index":1865,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["relative",{"_index":1841,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":773,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removefromarray",{"_index":2639,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":2697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removenode",{"_index":693,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["removepass",{"_index":1213,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1226,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":285,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"changelog.html":{}}}],["rendered",{"_index":2069,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":225,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.module",{"_index":449,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":514,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":516,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":448,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":90,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":224,"title":{"components/RendererCanvasComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["rendererservice",{"_index":69,"title":{"injectables/RendererService.html":{}},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2245,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":2083,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":2056,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":1231,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1245,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["rendertoscreen",{"_index":1214,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":1472,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":2708,"title":{},"body":{"index.html":{}}}],["request",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":284,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":322,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":2761,"title":{},"body":{"index.html":{}}}],["reset",{"_index":339,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":2052,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2106,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2118,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2133,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2102,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1310,"title":{},"body":{"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{}}}],["resolve(data.paths",{"_index":2300,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(model",{"_index":1883,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolver",{"_index":948,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["resourcepath",{"_index":1836,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":1842,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2077,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":2780,"title":{},"body":{"license.html":{}}}],["result",{"_index":48,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1778,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":42,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returns",{"_index":33,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2782,"title":{},"body":{"license.html":{}}}],["ring1",{"_index":1615,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring2",{"_index":1616,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring3",{"_index":1617,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["root",{"_index":1478,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["rotatespeed",{"_index":1682,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["run",{"_index":2740,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":735,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{}}}],["s",{"_index":2284,"title":{},"body":{"injectables/StatsService.html":{}}}],["same",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["sample",{"_index":2734,"title":{},"body":{"index.html":{}}}],["save",{"_index":2722,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1200,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["scaletofit",{"_index":2204,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2234,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["scene",{"_index":1266,"title":{},"body":{"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":228,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":2246,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":487,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1215,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":227,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1199,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":185,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":398,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1198,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1201,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:23",{"_index":1204,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:27",{"_index":1203,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1683,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["see",{"_index":2544,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":1892,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":603,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":698,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":121,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["self",{"_index":971,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"miscellaneous/functions.html":{}}}],["self.indexof(value",{"_index":972,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["sell",{"_index":2789,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["separate",{"_index":1244,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separating",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":1471,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":2673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":230,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["server/server",{"_index":384,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":385,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":229,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":232,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverfactory",{"_index":1007,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["servericonactorcomponent",{"_index":234,"title":{"components/ServerIconActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverref",{"_index":1009,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.icon",{"_index":1013,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.label",{"_index":1012,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.name",{"_index":1011,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.svgnoholes",{"_index":1015,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverstandactorcomponent",{"_index":236,"title":{"components/ServerStandActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":274,"title":{},"body":{"injectables/AnimationService.html":{}}}],["services",{"_index":2205,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["set",{"_index":736,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":2021,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1780,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2119,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2136,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":1456,"title":{},"body":{"injectables/IconService.html":{}}}],["setdefaultprovider(key",{"_index":1467,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["setheight(height",{"_index":732,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["seticon(icon",{"_index":2202,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setmaterialcolor(materialcolor",{"_index":2377,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":2200,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":2120,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2138,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":2380,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":1851,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["setupcontrols",{"_index":1671,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":1526,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":572,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1207,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(horizontalblurshader",{"_index":580,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":579,"title":{},"body":{"components/BlurComponent.html":{}}}],["shadow",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":2798,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1327,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["shape.lineto",{"_index":1330,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":1331,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":1329,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shapepath",{"_index":2296,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["shapes",{"_index":2229,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["show",{"_index":266,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":524,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2268,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2270,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2269,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["sides",{"_index":607,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":2701,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":75,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["simplex",{"_index":825,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["single",{"_index":2101,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":534,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":2632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":1314,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":1315,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skip",{"_index":2248,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":88,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":1442,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["snyk",{"_index":2657,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2776,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1545,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":2442,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":2444,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["sphere",{"_index":239,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":238,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.component.html",{"_index":2723,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":2733,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":2745,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":2730,"title":{},"body":{"index.html":{}}}],["stand",{"_index":237,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":293,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{}}}],["started",{"_index":2466,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":887,"title":{},"body":{"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["stats",{"_index":264,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":523,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":454,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2149,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":263,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":521,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":947,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["step",{"_index":1862,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/TextActorComponent.html":{},"changelog.html":{}}}],["stop",{"_index":294,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["stories",{"_index":2524,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":2487,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":2530,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":2100,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":26,"title":{},"body":{"classes/AbstractCacheService.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":1664,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1669,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":2794,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2787,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2758,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":303,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":327,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["subscribeevents",{"_index":1986,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscription",{"_index":728,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["substantial",{"_index":2799,"title":{},"body":{"license.html":{}}}],["super(rendererservice",{"_index":143,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":845,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":865,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":767,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{}}}],["super.ngoninit",{"_index":752,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["super.updateparent",{"_index":2249,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":2491,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":2753,"title":{},"body":{"index.html":{}}}],["svg",{"_index":241,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":2188,"title":{},"body":{"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svgloadercomponent",{"_index":240,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":472,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":1509,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["switch",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["syncgraph",{"_index":694,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphcontainer",{"_index":803,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphcontainer(g",{"_index":837,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphnodes",{"_index":695,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphnodes(g",{"_index":720,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["t",{"_index":73,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{}}}],["table",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":1141,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["targetopacity",{"_index":1056,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["template",{"_index":125,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":2049,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["test",{"_index":2717,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2741,"title":{},"body":{"index.html":{}}}],["text",{"_index":243,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":2387,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":486,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":529,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":485,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":2423,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":242,"title":{"components/TextActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":244,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":1895,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texturepath",{"_index":1837,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":1859,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1843,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":656,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":657,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":1316,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["thickness'].some(propname",{"_index":1335,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._height",{"_index":738,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this._materialcolor",{"_index":2385,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":2206,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":2388,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":1528,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.addnode",{"_index":753,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.addpass(renderpass",{"_index":1246,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.align",{"_index":849,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.animate",{"_index":1085,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":1086,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":324,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":321,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":320,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animated",{"_index":1602,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.animation",{"_index":1087,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animation.unsubscribe",{"_index":1606,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1123,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1746,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1088,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe(this.updateanimation",{"_index":1653,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.animationservice.start",{"_index":1089,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":313,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":314,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1188,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":108,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.applyshadowprops(mesh",{"_index":626,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.applytranslation",{"_index":789,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.aspect",{"_index":2179,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":2456,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":1725,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1727,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":2395,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":2398,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":2397,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":2396,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.cache.get(key",{"_index":40,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":47,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.calculateaspectratio(canvas",{"_index":2180,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1782,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1945,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":1928,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1810,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.left",{"_index":1925,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":1930,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.right",{"_index":1926,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":1927,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2150,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1929,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":1920,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2094,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2096,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":1152,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.cdref.detectchanges",{"_index":742,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.cdref['destroyed",{"_index":741,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.centered",{"_index":862,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":870,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextActorComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1719,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit",{"_index":1999,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.clock.getdelta",{"_index":1610,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.color",{"_index":750,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":96,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":101,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":1255,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1253,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":104,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":2153,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1259,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1241,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1249,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composition",{"_index":764,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.container.createcomponent(factory",{"_index":1021,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.container.createcomponent(nodefactory",{"_index":1002,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.contentprojection",{"_index":642,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":643,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":1710,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1747,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":1724,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1726,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1730,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":1728,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1736,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1738,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1742,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1734,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1740,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1722,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1748,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1712,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1732,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1744,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1715,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2289,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcomposition(i",{"_index":982,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createedge(i",{"_index":986,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createnode(i",{"_index":984,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.currentdelay",{"_index":2331,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currentpos",{"_index":2328,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currenttext",{"_index":2330,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.curvesegments",{"_index":2394,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dagrelayout",{"_index":743,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getchildren().push(this",{"_index":759,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel",{"_index":754,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes",{"_index":776,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.filter(i",{"_index":777,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.push",{"_index":762,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.refreshlayout",{"_index":766,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.removechildbyname(this.name",{"_index":774,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.updated.subscribe(this.syncgraph",{"_index":749,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dampingfactor",{"_index":1731,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.dashincrement",{"_index":1119,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashsize",{"_index":1597,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.defaultdpi",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.defaultprovider",{"_index":1495,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.defaultunit",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.depth",{"_index":619,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":622,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthwrite",{"_index":2228,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.destroyall",{"_index":978,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.disable",{"_index":106,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1298,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":1956,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":1420,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.done",{"_index":2335,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.edges",{"_index":1095,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1101,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1104,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1102,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1103,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1121,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edgesep",{"_index":852,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.enable",{"_index":105,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":316,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1729,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1291,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1296,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.focus",{"_index":1185,"title":{},"body":{"components/DofComponent.html":{}}}],["this.font.load(this.fonturl",{"_index":2390,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":1943,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.gapsize",{"_index":1598,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1791,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1806,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getgeometry",{"_index":1340,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.geticonsourcebynamespace(args[0",{"_index":1500,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.geticonsourcebynamespace(this.defaultprovider",{"_index":1502,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.getlayout(model",{"_index":916,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.getlinegeometry",{"_index":1588,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getlineposition(event",{"_index":1381,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":624,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getnodecomponent(node.type",{"_index":1008,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.getobject",{"_index":1336,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.getobject().background",{"_index":2251,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.gettextmesh(font",{"_index":2391,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.getvalue(key",{"_index":46,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.graph",{"_index":857,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel",{"_index":844,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel.layout",{"_index":848,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphupdated",{"_index":748,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.graphupdated?.unsubscribe",{"_index":772,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":1390,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":1384,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":1382,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groups",{"_index":1811,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1812,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1787,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":618,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":621,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hidedash",{"_index":1120,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.hightsegments",{"_index":2266,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":1083,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1090,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.i",{"_index":1657,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.iconservice.geticonsource(icon",{"_index":2212,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.init",{"_index":1479,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1235,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialopacity",{"_index":1110,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":99,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.injector.get(dagrelayoutcomponent",{"_index":744,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.instances",{"_index":1035,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.foreach(i",{"_index":1031,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(compositionref",{"_index":1047,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(edgeref",{"_index":1029,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(noderef",{"_index":1006,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(serverref",{"_index":1016,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.intensity",{"_index":146,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isccw",{"_index":2215,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.isready",{"_index":1789,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1800,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":1426,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":1436,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":1438,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.label",{"_index":763,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.layout",{"_index":846,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.line",{"_index":1593,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.computelinedistances",{"_index":1605,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.geometry",{"_index":1604,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line?.material",{"_index":1608,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.listeningcontrolelement",{"_index":1720,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1721,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(this.model",{"_index":1882,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":1878,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.loop",{"_index":2451,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.marginx",{"_index":854,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.marginy",{"_index":855,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.material",{"_index":1106,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":1113,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1112,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.maxblur",{"_index":1192,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdelay",{"_index":2333,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxdistance",{"_index":1737,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1739,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpos",{"_index":2329,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxx",{"_index":2232,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxy",{"_index":2233,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxzoom",{"_index":1743,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1735,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1741,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.model",{"_index":2213,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.mouseenter.emit",{"_index":1997,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":1995,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":1873,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":1875,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":2453,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.name",{"_index":756,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.near",{"_index":1295,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.nodesep",{"_index":851,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.noholes",{"_index":2217,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.object",{"_index":794,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.object.add(this.ring1",{"_index":1641,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring2",{"_index":1645,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring3",{"_index":1648,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.offset",{"_index":1427,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1763,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1764,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1980,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1981,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1982,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1983,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1761,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1762,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2088,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2089,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1765,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1766,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1599,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.openended",{"_index":677,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.overridematerialcolor",{"_index":2220,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.panspeed",{"_index":1723,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":1285,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":1286,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1287,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parentscene",{"_index":1284,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parseandcreate",{"_index":973,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.pass",{"_index":107,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":100,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":578,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1182,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1189,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1186,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1191,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1777,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.preservedrawingbuffer",{"_index":2092,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":1505,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.providers.set(key",{"_index":1494,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.radialsegments",{"_index":676,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":2413,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":675,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.randomint(this.mindelay",{"_index":2332,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.rankdir",{"_index":850,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranker",{"_index":856,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranksep",{"_index":853,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1816,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1984,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":2005,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1968,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":2401,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.registerprovider('a",{"_index":1480,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1492,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1486,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1489,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1482,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2288,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.removenode",{"_index":768,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.render",{"_index":2173,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":98,"title":{},"body":{"classes/AbstractComposeEffect.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1194,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2091,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":102,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2108,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":1237,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1250,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2164,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1242,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2093,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrecompositioncomponent",{"_index":1037,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagreedgecomponent",{"_index":1019,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrenodecomponent",{"_index":1000,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(serverbarrelactorcomponent",{"_index":995,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(servercompactactorcomponent",{"_index":994,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(servericonactorcomponent",{"_index":996,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(serverstandactorcomponent",{"_index":997,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resourcepath",{"_index":1860,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.ring1",{"_index":1638,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.rotatez(math.sin(this.i",{"_index":1660,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.scale.set(70",{"_index":1639,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2",{"_index":1642,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.rotatez(math.cos(this.i",{"_index":1661,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.scale.set(60",{"_index":1643,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3",{"_index":1646,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.rotatez(math.sin(this.i",{"_index":1662,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.scale.set(50",{"_index":1647,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.rotatespeed",{"_index":1713,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":1290,"title":{},"body":{"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2163,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1293,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2151,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scenebackgroundtarget",{"_index":1247,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1248,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1733,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1793,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1795,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.size",{"_index":1430,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":1322,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":1325,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.solid",{"_index":1589,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.start",{"_index":1631,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.startloading",{"_index":2208,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":2286,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2292,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2291,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2287,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2271,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2155,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.status.emit(false",{"_index":992,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.status.emit(true",{"_index":987,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.stop",{"_index":1118,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["this.subscribe",{"_index":1767,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribed",{"_index":1654,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.subscribeevents",{"_index":1985,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.svgloader.load(this.model",{"_index":2223,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.syncgraph",{"_index":746,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraph.bind(this",{"_index":747,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraphcontainer(this.graph",{"_index":859,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.syncgraphnodes(this.dagrelayout.getgraph",{"_index":795,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.target",{"_index":1151,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.targetopacity",{"_index":1122,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.text",{"_index":2325,"title":{},"body":{"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.text.length",{"_index":2326,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.thetalength",{"_index":679,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":678,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":1326,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.time",{"_index":1609,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.timescale",{"_index":1612,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.toggle",{"_index":2285,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":1529,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.translatelabely",{"_index":739,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.translatex",{"_index":785,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatey",{"_index":787,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.trytofindgeometry",{"_index":1084,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":2414,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":2415,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":2445,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1768,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":2000,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateanimation",{"_index":1651,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updateanimation.bind(this",{"_index":1652,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updatebaseinfo(g",{"_index":932,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2172,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updated.emit",{"_index":860,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.updateedges(g",{"_index":935,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":918,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatetext",{"_index":2323,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.updatezoom",{"_index":1917,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":2459,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":2458,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":2446,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":2449,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":2447,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":2457,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":2450,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":2452,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":2461,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play",{"_index":2460,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":2462,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":2443,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":2157,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2170,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2154,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2169,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2160,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2161,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2178,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2166,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2165,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2167,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.width",{"_index":790,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.widthsegments",{"_index":620,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.zoom",{"_index":1921,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1716,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":137,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(appliedcolor(this.color",{"_index":144,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":538,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":540,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":617,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":1368,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":1395,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":1393,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["three.clock",{"_index":1562,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":2247,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color(appliedcolor(this.materialcolor",{"_index":1596,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":674,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":1148,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1097,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":1753,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(appliedcolor(this.color",{"_index":1294,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":2371,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1308,"title":{},"body":{"injectables/FontService.html":{}}}],["three.gridhelper(this.size",{"_index":1419,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":2224,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":1446,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1819,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":1869,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.line",{"_index":1558,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.line(geometry",{"_index":1397,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial",{"_index":1591,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":1398,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":1099,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1098,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":1072,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":671,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":625,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.getgeometry",{"_index":1333,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":2455,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.meshline",{"_index":2721,"title":{},"body":{"index.html":{}}}],["three.object3d",{"_index":637,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/TextActorComponent.html":{}}}],["three.objectloader",{"_index":1888,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1829,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":1915,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2168,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1942,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry",{"_index":1952,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":1949,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":1955,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1758,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.ringgeometry(0.85",{"_index":1635,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["three.scene",{"_index":1281,"title":{},"body":{"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":1594,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.shape",{"_index":1328,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry",{"_index":1318,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":1332,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":2265,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":2393,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":2416,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector3",{"_index":2694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":1931,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(this.maxx",{"_index":2235,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.vector3(x",{"_index":1815,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":2454,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":2146,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":1708,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2280,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1853,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1854,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1181,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":1230,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":93,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":1232,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":573,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1206,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":577,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":575,"title":{},"body":{"components/BlurComponent.html":{}}}],["threejs",{"_index":2297,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":2739,"title":{},"body":{"index.html":{}}}],["throw",{"_index":993,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["time",{"_index":1536,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["timescale",{"_index":1537,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["todo",{"_index":581,"title":{},"body":{"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2273,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":2821,"title":{},"body":{"license.html":{}}}],["torus",{"_index":246,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":245,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["totalsize",{"_index":1582,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["touchevent",{"_index":1804,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1128,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":1129,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1962,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":1425,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":1346,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["translatelabely",{"_index":687,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["translatez",{"_index":874,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["transparent",{"_index":1399,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["tree",{"_index":113,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["true",{"_index":317,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["try",{"_index":977,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["trytofindgeometry",{"_index":1051,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tube",{"_index":2406,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":2407,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":30,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1867,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["undefined",{"_index":460,"title":{},"body":{"modules/AtftModule.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":2075,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":459,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":1578,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":1595,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["units",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsubscribe",{"_index":770,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1990,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":2719,"title":{},"body":{"index.html":{}}}],["update",{"_index":765,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["updateanimation",{"_index":276,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["updateaspectratio",{"_index":1905,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":1910,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatebaseinfo",{"_index":900,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":907,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2121,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2140,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":311,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updateedges",{"_index":901,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":909,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":902,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":911,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":1539,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["updateparent",{"_index":2239,"title":{},"body":{"components/SceneComponent.html":{}}}],["updatetext",{"_index":2309,"title":{},"body":{"components/TextActorComponent.html":{}}}],["updatezoom",{"_index":1906,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upgrade",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1473,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["usage",{"_index":2709,"title":{},"body":{"index.html":{}}}],["use",{"_index":1858,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":278,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{},"index.html":{}}}],["usefull",{"_index":1975,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":2700,"title":{},"body":{"index.html":{}}}],["util",{"_index":140,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/applied",{"_index":1146,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":2381,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["utils",{"_index":841,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["utils.ts",{"_index":895,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":906,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:32",{"_index":908,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:43",{"_index":910,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:51",{"_index":912,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:57",{"_index":904,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":2660,"title":{},"body":{"dependencies.html":{}}}],["uxactormodule",{"_index":2417,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["v0.0.3",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["variable",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2830,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":1570,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":1579,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":1572,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":2735,"title":{},"body":{"index.html":{}}}],["version",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["vertexshader",{"_index":1600,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["verticalblurshader",{"_index":574,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":2729,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":1428,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["very",{"_index":1974,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":2718,"title":{},"body":{"index.html":{}}}],["video",{"_index":248,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":2431,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":247,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videosrc",{"_index":2428,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":640,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":2064,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('container",{"_index":884,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["viewchild('contentprojection",{"_index":639,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":1375,"title":{},"body":{"components/GridActorComponent.html":{}}}],["viewcontainerref",{"_index":886,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["vlinedistance",{"_index":1571,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":80,"title":{},"body":{"classes/AbstractComposeEffect.html":{},"injectables/AnimationService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2725,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2806,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2801,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2742,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1830,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":2706,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":2071,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":2113,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":2818,"title":{},"body":{"license.html":{}}}],["width",{"_index":592,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":1527,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":593,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["wiki",{"_index":896,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window.addeventlistener('click",{"_index":1770,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1769,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1771,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":1196,"title":{},"body":{"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":1195,"title":{},"body":{"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1774,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1773,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1775,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":2055,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":2059,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["within",{"_index":1844,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":2779,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2105,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":250,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":249,"title":{"components/WorkstationActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":2692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":612,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":1435,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y",{"_index":609,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":1437,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["yaml",{"_index":177,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yaml'].some(propname",{"_index":975,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yaml.parse(this.yaml",{"_index":979,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yanked",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":2028,"title":{},"body":{"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":599,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["zone.js",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":338,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":1919,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1684,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      return cacheHit;\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const j: any = key;\n\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractComposeEffect.html":{"url":"classes/AbstractComposeEffect.html","title":"class - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses();\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xFFFFFF;\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(appliedColor(this.color));\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent\n  ],\n  entryComponents: [\n    ServerStandActorComponent,\n    ServerBarrelActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    DagreNodeComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        composition\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        border\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Directive, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport * as THREE from 'three';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreCompositionComponent.html":{"url":"components/DagreCompositionComponent.html","title":"component - DagreCompositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreCompositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreCompositionComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-composition\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                            \n                                    Public\n                                translateLabelY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                composition\n                            \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n                \n                    \n                        Default value : 'plane'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateLabelY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:48\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-composition',\n  providers: [provideParent(DagreCompositionComponent)],\n  template: `\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n  `\n})\nexport class DagreCompositionComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() label: string;\n\n  @Input() border = 'plane';\n\n  private _height: number;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this.translateLabelY = this._height / 2 - 3;\n    if (!this.cdRef['destroyed']) {\n      this.cdRef.detectChanges();\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  @Input() width: number;\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  @Input() composition: string;\n\n  public color = 0xA0A0A0;\n  public translateLabelY: number;\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreCompositionComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.label,\n        composition: this.composition\n      });\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreCompositionComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n\n        // console.log('DagreCompositionComponent.layout: Update position node', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n\n        this.width = node.width;\n        this.height = node.height;\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreCompositionComponent.update');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreCompositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreLayoutComponent.html":{"url":"components/DagreLayoutComponent.html","title":"component - DagreLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreLayoutComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                graph\n                            \n                            \n                                    Protected\n                                graphModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getGraphModel\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                refreshLayout\n                            \n                            \n                                    Protected\n                                syncGraphContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                centered\n                            \n                            \n                                edgesep\n                            \n                            \n                                marginx\n                            \n                            \n                                marginy\n                            \n                            \n                                nodesep\n                            \n                            \n                                rankdir\n                            \n                            \n                                ranker\n                            \n                            \n                                ranksep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edgesep\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginx\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginy\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodesep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rankdir\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranker\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranksep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraphModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraphModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLayout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphContainer(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     dagre.graphlib.Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreUtils} from './dagre-utils';\nimport {GraphModel} from './dagre-model';\n\n\n@Component({\n  selector: 'atft-dagre-layout',\n  providers: [provideParent(DagreLayoutComponent)],\n  template: `\n    `\n})\nexport class DagreLayoutComponent extends AbstractEmptyDirective implements AfterViewInit, OnChanges, OnDestroy, AfterContentInit {\n\n  @Input() align = 'DL';\n  @Input() rankdir = 'BT';\n  @Input() nodesep = 15;\n  @Input() edgesep = 1;\n  @Input() ranksep = 15;\n  @Input() marginx = 0;\n  @Input() marginy = 0;\n  @Input() ranker = 'network-simplex';\n\n  @Input() centered = true;\n\n  @Output() updated = new EventEmitter();\n\n  protected graphModel: GraphModel;\n  protected graph: dagre.graphlib.Graph;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n\n    // Initialize empty model:\n    this.graphModel = {\n      layout: {},\n      nodes: [],\n      edges: []\n    };\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n  }\n\n  ngAfterContentInit() {\n    this.layout();\n  }\n\n\n  public layout() {\n    // console.log('DagreLayoutComponent.layout');\n    this.graphModel.layout = {\n      align: this.align,\n      rankdir: this.rankdir,\n      nodesep: this.nodesep,\n      edgesep: this.edgesep,\n      ranksep: this.ranksep,\n      marginx: this.marginx,\n      marginy: this.marginy,\n      ranker: this.ranker\n    };\n    this.graph = DagreUtils.modelToGraph(this.graphModel);\n    // console.log('DagreLayoutComponent.layout: graph', this.graph);\n    this.syncGraphContainer(this.graph);\n    this.updated.emit();\n    this.rendererService.render();\n  }\n\n\n  protected syncGraphContainer(g: dagre.graphlib.Graph) {\n    // console.log('DagreLayoutComponent.syncGraphContainer');\n    if (this.object && this.centered) {\n      this.translateX = -(g.graph().width / 2);\n      this.translateY = -(g.graph().height / 2);\n      this.applyTranslation();\n    }\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreLayoutComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    let modified = false;\n\n    if (['align', 'rankdir', 'ranksep', 'nodesep', 'edgesep', 'marginx', 'marginy', 'ranker'].some(propName => propName in changes)) {\n      this.layout();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      // this.rendererService.render();\n    }\n\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.graph = undefined;\n    this.graphModel = undefined;\n  }\n\n  public getGraphModel() {\n    return this.graphModel;\n  }\n\n  public refreshLayout() {\n    if (this.graph) {\n      this.layout();\n    }\n  }\n\n  public getGraph() {\n    return this.graph;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreNodeComponent.html":{"url":"components/DagreNodeComponent.html","title":"component - DagreNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreNodeComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-node\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                composition\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, Input, OnDestroy, OnInit, Optional, SkipSelf, ViewChild, ViewContainerRef} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-node',\n  providers: [provideParent(DagreNodeComponent)],\n  template: ''\n})\nexport class DagreNodeComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() composition: string;\n\n  @Input() translateZ = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container;\n\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreNodeComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.name,\n        composition: this.composition\n      });\n\n       // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreNodeComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n        // console.log('DagreLayoutComponent.layout: Update position', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreNodeComponent.syncGraph');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLayout(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.GraphLabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            modelToGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.graphlib.Graph\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateBaseInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    baseInfo\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateEdges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(\n      this.getLayout(model)\n    );\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout', g);\n    dagre.layout(g);\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n    this.updateBaseInfo(g, model.compositions);\n    this.updateBaseInfo(g, model.nodes);\n    this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): dagre.GraphLabel {\n    const layout: dagre.GraphLabel = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreYamlParserComponent.html":{"url":"components/DagreYamlParserComponent.html","title":"component - DagreYamlParserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreYamlParserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreYamlParserComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-yaml-parser\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                instances\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createComposition\n                            \n                            \n                                    Protected\n                                createEdge\n                            \n                            \n                                    Protected\n                                createNode\n                            \n                            \n                                    Protected\n                                destroyAll\n                            \n                            \n                                    Protected\n                                getNodeComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                parseAndCreate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                yaml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        yaml\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createComposition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComposition(composition: Composition)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composition\n                                    \n                                                Composition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createEdge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEdge(edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            destroyAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeComponent(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseAndCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseAndCreate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport * as yaml from 'yaml';\nimport { AbstractEmptyDirective, AbstractObject3D } from '../../../object';\nimport { RendererService } from '../../../renderer';\nimport { provideParent } from '../../../util';\nimport { ServerBarrelActorComponent, ServerCompactActorComponent, ServerIconActorComponent, ServerStandActorComponent } from '../server';\nimport { DagreCompositionComponent } from './dagre-composition.component';\nimport { DagreEdgeComponent } from './dagre-edge.component';\nimport { Composition, Edge, GraphModel, Node } from './dagre-model';\nimport { DagreNodeComponent } from './dagre-node.component';\n\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\n@Component({\n  selector: 'atft-dagre-yaml-parser',\n  providers: [provideParent(DagreYamlParserComponent)],\n  template: `\n    `\n})\nexport class DagreYamlParserComponent extends AbstractEmptyDirective implements OnChanges, AfterViewInit {\n\n  @Input() yaml;\n\n  @Output() status = new EventEmitter();\n\n  @ViewChild('container', { read: ViewContainerRef }) container;\n\n  private instances = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected resolver: ComponentFactoryResolver\n  ) {\n    super(rendererService, parent);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.parseAndCreate();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreYamlParserComponent.ngOnChanges', this.name);\n\n    if (!this.object) {\n      return;\n    }\n\n    if (['yaml'].some(propName => propName in changes)) {\n      this.parseAndCreate();\n    }\n  }\n\n  public parseAndCreate() {\n    // console.log('DagreYamlParserComponent.parseAndCreate');\n    try {\n      this.destroyAll();\n      const model: GraphModel = yaml.parse(this.yaml);\n\n      // console.log('DagreYamlParserComponent.parseAndCreate yaml', model);\n      if (model && model.nodes && model.nodes.length > 0) {\n\n        model.compositions?.forEach(i => this.createComposition(i));\n        model.nodes?.forEach(i => this.createNode(i));\n        model.edges?.forEach(i => this.createEdge(i));\n      }\n      this.status.emit(true);\n    } catch (e) {\n      console.warn('DagreYamlParserComponent.parseAndCreate failed', e);\n      this.status.emit(false);\n      throw e;\n    }\n  }\n\n  protected getNodeComponent(type: string) {\n    if (type === 'compact') {\n      return this.resolver.resolveComponentFactory(ServerCompactActorComponent);\n    } else if (type === 'barrel') {\n      return this.resolver.resolveComponentFactory(ServerBarrelActorComponent);\n    } else if (type === 'icon') {\n      return this.resolver.resolveComponentFactory(ServerIconActorComponent);\n    } else {\n      return this.resolver.resolveComponentFactory(ServerStandActorComponent);\n    }\n  }\n\n  protected createNode(node: Node) {\n    // console.log('DagreYamlParserComponent.createNode', node);\n    const nodeFactory = this.resolver.resolveComponentFactory(DagreNodeComponent);\n    const nodeRef = this.container.createComponent(nodeFactory);\n    nodeRef.instance.name = node.name;\n    nodeRef.instance.composition = node.composition;\n    this.instances.push(nodeRef);\n\n    const serverFactory = this.getNodeComponent(node.type);\n    const serverRef = nodeRef.instance.container.createComponent(serverFactory);\n    serverRef.instance.name = node.name;\n    serverRef.instance.label = (node.label ? node.label : node.name);\n    serverRef.instance.icon = node.icon;\n    serverRef.instance.svgNoHoles = true;\n\n    this.instances.push(serverRef);\n  }\n\n\n  protected createEdge(edge: Edge) {\n    // console.log('DagreYamlParserComponent.createEdge', edge);\n    const factory = this.resolver.resolveComponentFactory(DagreEdgeComponent);\n    const edgeRef = this.container.createComponent(factory);\n    edgeRef.instance.from = edge.from;\n    edgeRef.instance.to = edge.to;\n    if (edge.type) {\n      edgeRef.instance.type = edge.type;\n    }\n    if (edge.color) {\n      edgeRef.instance.materialColor = edge.color;\n    }\n\n    this.instances.push(edgeRef);\n  }\n\n\n  protected destroyAll() {\n    // console.log('DagreYamlParserComponent.destroyAll');\n    this.instances.forEach(i => {\n      // console.log('DagreYamlParserComponent destroy', i);\n      i.destroy();\n    });\n    this.instances = [];\n  }\n\n\n  private createComposition(composition: Composition) {\n    // console.log('DagreYamlParserComponent.createComposition', node);\n    const factory = this.resolver.resolveComponentFactory(DagreCompositionComponent);\n    const compositionRef = this.container.createComponent(factory);\n    compositionRef.instance.name = composition.name;\n    compositionRef.instance.label = (composition.label ? composition.label : composition.name);\n    compositionRef.instance.composition = composition.composition;\n    compositionRef.instance.border = composition.border;\n\n    this.instances.push(compositionRef);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreYamlParserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Default value : 0xFF0000\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            tryToFindGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Material\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {appliedColor} from '../util';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor = 0xFF0000;\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity;\n  @Input() targetOpacity;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material: THREE.Material;\n  private stop = false;\n  protected animation: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: appliedColor(this.dashColor)}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractComposeEffect\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractComposeEffect:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  public initComposer() {\n    if (!this.composer) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0x0000AA\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\nimport {appliedColor} from '../util';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color = 0x0000AA;\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(appliedColor(this.color), this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/font.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.ShapeBufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh implements OnChanges {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected getGeometry(): THREE.ShapeBufferGeometry {\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    return geometry;\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(this.getGeometry(), material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('FrameMeshComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['sizeX', 'sizeY', 'thickness'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.ShapeBufferGeometry) {\n          const currentGeometry: THREE.ShapeBufferGeometry = mesh.geometry;\n          const newGeometry = this.getGeometry();\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n        modified = true;\n      }\n\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        compositions\n                                \n                                \n                                            Optional\n                                        edges\n                                \n                                \n                                            Optional\n                                        layout\n                                \n                                \n                                            Optional\n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLinePosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridMeshComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('grid', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper';\nimport {provideParent} from '../../../util';\nimport { AbstractEmptyDirective, GridMeshComponent } from '../../../object';\nimport * as THREE from 'three';\nimport {RaycasterEmitEvent} from '../../../raycaster';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends AbstractEmptyDirective {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event: RaycasterEmitEvent) {\n    // console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      // console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event: RaycasterEmitEvent): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { appliedColor } from '../../util/applied-color';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIconSource\n                            \n                            \n                                    Public\n                                getIconSourceByNamespace\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIconSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIconSource(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIconSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIconSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: IconSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                IconSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'md'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface IconSource {\n  url: string;\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconService {\n\n  protected providers: Map = new Map();\n  protected defaultProvider = 'md';\n\n  constructor() {\n    this.init();\n  }\n\n  protected init() {\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n\n  }\n\n  public registerProvider(key: string, source: IconSource) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getIconSource(icon: string): IconSource {\n    // console.log('IconService.getIconSource', icon);\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getIconSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getIconSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return {\n        url: icon,\n        allowColorOverride: true,\n        isCCW: false,\n        noHoles: false\n      };\n    }\n  }\n\n  public getIconSourceByNamespace(namespace: string, icon: string): IconSource {\n    // console.log('IconService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return {\n        url: icon,\n        allowColorOverride: true,\n        isCCW: false,\n        noHoles: false\n      };\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowColorOverride\n                                \n                                \n                                        isCCW\n                                \n                                \n                                        noHoles\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface IconSource {\n  url: string;\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconService {\n\n  protected providers: Map = new Map();\n  protected defaultProvider = 'md';\n\n  constructor() {\n    this.init();\n  }\n\n  protected init() {\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n\n  }\n\n  public registerProvider(key: string, source: IconSource) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getIconSource(icon: string): IconSource {\n    // console.log('IconService.getIconSource', icon);\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getIconSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getIconSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return {\n        url: icon,\n        allowColorOverride: true,\n        isCCW: false,\n        noHoles: false\n      };\n    }\n  }\n\n  public getIconSourceByNamespace(namespace: string, icon: string): IconSource {\n    // console.log('IconService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return {\n        url: icon,\n        allowColorOverride: true,\n        isCCW: false,\n        noHoles: false\n      };\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:28\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractEmptyDirective } from '../../../object';\nimport { EmptyComponent } from '../../../object/helper';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends AbstractEmptyDirective {\n  @Input() label: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                clock\n                            \n                            \n                                    Protected\n                                line\n                            \n                            \n                                    Protected\n                                time\n                            \n                            \n                                    Protected\n                                timeScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Public\n                                createLineMesh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                dashSize\n                            \n                            \n                                gapSize\n                            \n                            \n                                lineType\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                solid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashSize\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gapSize\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineType\n                    \n                \n                \n                    \n                        Type :         LineType\n\n                    \n                \n                \n                    \n                        Default value : LineType.dashed\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solid\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createLineMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Clock()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Line\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timeScale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as THREE from 'three';\nimport { AnimationService } from '../../animation';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractConnector } from './abstract-connector';\n\nconst lineVertShader = `\n  attribute float lineDistance;\n  varying float vLineDistance;\n\n  void main() {\n    vLineDistance = lineDistance;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n  }\n  `;\n\nconst lineFragShader = `\n  uniform vec3 diffuse;\n  uniform float opacity;\n  uniform float time; // added time uniform\n\n  uniform float dashSize;\n  uniform float gapSize;\n  varying float vLineDistance;\n\n  void main() {\n\t\tfloat totalSize = dashSize + gapSize;\n\t\tfloat modulo = mod( vLineDistance + time, totalSize ); // time added to vLineDistance\n\n    if ( modulo > dashSize ) {\n      discard;\n    }\n\n    gl_FragColor = vec4( diffuse, opacity );\n  }\n  `;\n\n\nexport enum LineType {\n  dashed = 'dash',\n  solid = 'solid'\n}\n\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector implements OnDestroy {\n\n  @Input()\n  materialColor = 0xffffff;\n\n\n  @Input() solid = false;\n  @Input() dashSize = 4;\n  @Input() gapSize = 0.5;\n  @Input() opacity = 1;\n  @Input() lineType: LineType = LineType.dashed;\n\n  @Input() animated = true;\n  protected animation: Subscription;\n  protected time = 0;\n  protected timeScale = 5;\n  protected clock = new THREE.Clock();\n\n  protected line: THREE.Line;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService,\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createLineMesh(): THREE.Line {\n    const geometry = this.getLineGeometry();\n\n    if (this.solid) {\n      // console.log('LineConnectorComponent.createLineMesh solid');\n      const material = new THREE.LineBasicMaterial({\n        color: appliedColor(this.materialColor)\n      });\n      this.line = new THREE.Line(geometry, material);\n    } else {\n      // console.log('LineConnectorComponent.createLineMesh animated');\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          diffuse: { value: new THREE.Color(appliedColor(this.materialColor)) },\n          dashSize: { value: this.dashSize },\n          gapSize: { value: this.gapSize },\n          opacity: { value: this.opacity },\n          time: { value: 0 } // added uniform\n        },\n        vertexShader: lineVertShader,\n        fragmentShader: lineFragShader,\n        transparent: true\n      });\n\n      this.line = new THREE.Line(geometry, material);\n\n      if (this.animated) {\n        this.animate = this.animate.bind(this);\n        this.animation = this.animationService.animate.subscribe(this.animate);\n      }\n    }\n\n    return this.line;\n  }\n\n  updateLineGeometry(): void {\n    // console.log('LineConnectorComponent.updateLineGeometry');\n    const geometry = this.getLineGeometry();\n    this.line.geometry = geometry;\n    this.line.computeLineDistances();\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.animation) {\n      this.animation.unsubscribe();\n    }\n  }\n\n  private animate() {\n    // console.log('LineConnectorComponent.animate');\n    const material: any = this.line?.material;\n    if (this.line?.material) {\n      this.time += this.clock.getDelta();\n      material.uniforms.time.value = -1 * this.time * this.timeScale;\n      this.line.computeLineDistances();\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderActorComponent.html":{"url":"components/LoaderActorComponent.html","title":"component - LoaderActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LoaderActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-loader-actor\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                ring1\n                            \n                            \n                                    Private\n                                ring2\n                            \n                            \n                                    Private\n                                ring3\n                            \n                            \n                                    Private\n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Protected\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {appliedMaterial, provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport * as THREE from 'three';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-loader-actor',\n  providers: [provideParent(LoaderActorComponent)],\n  template: ``\n})\nexport class LoaderActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  animate = true;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  private ring1: THREE.Mesh;\n  private ring2: THREE.Mesh;\n  private ring3: THREE.Mesh;\n\n  private subscribed = false;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('LoaderActorComponent.ngAfterViewInit');\n    this.init();\n    this.start();\n  }\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, 'basic');\n  }\n\n  protected init() {\n    // console.log('LoaderActorComponent.init');\n    const geometry = new THREE.RingGeometry(0.85, 1, 64, 1, 0, Math.PI * 1.8);\n    const material = this.getMaterial();\n\n    this.ring1 = new THREE.Mesh(geometry, material);\n    this.ring1.scale.set(70, 70, 1);\n    this.object.add(this.ring1);\n\n    this.ring2 = new THREE.Mesh(geometry, material);\n    this.ring2.scale.set(60, 60, 1);\n    this.object.add(this.ring2);\n\n    this.ring3 = new THREE.Mesh(geometry, material);\n    this.ring3.scale.set(50, 50, 1);\n    this.object.add(this.ring3);\n\n\n  }\n\n  protected start() {\n    // console.log('LoaderActorComponent.updateText');\n    if (this.animate) {\n      // console.log('LoaderActorComponent.animate init');\n      this.updateAnimation = this.updateAnimation.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n      this.subscribed = true;\n      this.animationService.start();\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('LoaderActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.stop();\n  }\n\n  protected updateAnimation() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.updateAnimation');\n      this.i++;\n      this.ring1.scale.set(70 + (Math.sin(this.i / 20) * 10) + 12, 70 + (Math.sin(this.i / 20) * 10) + 12, 1);\n\n      this.ring1.rotateZ(Math.sin(this.i / 100) / 5);\n      this.ring2.rotateZ(Math.cos(this.i / 70) / 10);\n      this.ring3.rotateZ(Math.sin(this.i / 50) / 20);\n    }\n  }\n\n  public stop() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.done');\n      this.subscribed = false;\n      this.i = 0;\n      this.animation?.unsubscribe();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        face\n                                \n                                \n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:41\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:33\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private loader = new OBJLoader();\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    const preloadingStep = new Promise((resolve, reject) => {\n      if (this.material === undefined) {\n        // No preloading necessary\n        resolve();\n      } else {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.loader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      }\n    });\n\n    // Await preloading and load final model\n    return preloadingStep.then(() => {\n      return new Promise((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        }, undefined, reject);\n      });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh implements OnChanges {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['width', 'height', 'widthSegments', 'heightSegments'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.PlaneBufferGeometry) {\n          const currentGeometry: THREE.PlaneBufferGeometry = mesh.geometry;\n          const newGeometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { appliedColor, provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                            Optional\n                                        face\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:47\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            resetCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWebGlRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    preserveDrawingBuffer\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EffectComposerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                icon\n                            \n                            \n                                isCCW\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                noHoles\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, svgLoader: SvgLoaderService, iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgLoader\n                                                  \n                                                        \n                                                                        SvgLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCCW\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noHoles\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:41\n                                \n                            \n\n                \n                    \n                        seticon(icon: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            icon\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedColor, appliedMaterial, fixCenter, provideParent, scaleToFit} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {IconService, SvgLoaderService} from './services';\nimport * as THREE from 'three';\nimport {Shape} from 'three';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): number {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: number) {\n    this._overrideMaterialColor = value;\n    if (this.object) {\n      this.startLoading();\n    }\n  }\n\n  @Input()\n  set icon(icon: string) {\n    // console.log('SVGLoaderComponent.icon', icon);\n    const iconProvider = this.iconService.getIconSource(icon);\n    this.model = iconProvider.url;\n    this.isCCW = iconProvider.isCCW;\n    this.noHoles = iconProvider.noHoles;\n    if (!iconProvider.allowColorOverride) {\n      this.overrideMaterialColor = undefined;\n    }\n  }\n\n  get icon(): string {\n    return this.model;\n  }\n  private _overrideMaterialColor: number = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = false;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  @Input()\n  isCCW = false;\n\n  @Input()\n  noHoles = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected svgLoader: SvgLoaderService,\n    protected iconService: IconService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('SVGLoaderComponent.loadLazyObject', this.model);\n\n    const paths = await this.svgLoader.load(this.model);\n    const group = new THREE.Group();\n\n    for (const path of paths) {\n      const color = (this._overrideMaterialColor ? appliedColor(this._overrideMaterialColor) : path.color);\n      const material = appliedMaterial(color, this.material, this.depthWrite);\n      const shapes: Shape[] = path.toShapes(this.isCCW, this.noHoles);\n\n      for (const shape of shapes) {\n        const geometry = new THREE.ShapeBufferGeometry(shape);\n        const mesh = new THREE.Mesh(geometry, material);\n        group.add(mesh);\n      }\n    }\n\n    if (this.maxX || this.maxY) {\n      scaleToFit(group, new THREE.Vector3(this.maxX, this.maxY, 0));\n    }\n    if (this.centered) {\n      fixCenter(group);\n    }\n\n    return group;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {appliedColor} from '../util/applied-color';\nimport {AbstractObject3D} from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background = 0xffffff;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    return scene;\n  }\n\n  public updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(appliedColor(this.background));\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/svg-loader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextActorComponent.html":{"url":"components/TextActorComponent.html","title":"component - TextActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-actor\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                currentDelay\n                            \n                            \n                                    Private\n                                currentPos\n                            \n                            \n                                    Private\n                                currentText\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                maxPos\n                            \n                            \n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                done\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                randomInt\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                updateText\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                            \n                                maxDelay\n                            \n                            \n                                minDelay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0x5DADE2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDelay\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDelay\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            done\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    done()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            randomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomInt(min, max)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateText()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-text-actor',\n  providers: [provideParent(TextActorComponent)],\n  template: `\n    \n    \n  `\n})\nexport class TextActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  text: string;\n\n  @Input()\n  animate = false;\n\n  @Input()\n  materialColor = 0x5DADE2;\n\n  @Input()\n  minDelay = 5;\n\n  @Input()\n  maxDelay = 10;\n\n  subscribed = false;\n\n  private currentDelay: number;\n  private currentText: string;\n  private currentPos = 0;\n  private maxPos = 0;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('TextActorComponent.ngAfterViewInit');\n    this.updateText();\n  }\n\n  protected updateText() {\n    // console.log('TextActorComponent.updateText');\n    if (this.text && this.text.length > 0) {\n      // console.log('TextActorComponent.updateText', this.text);\n      if (this.animate) {\n        // console.log('TextActorComponent.animate init');\n        if (!this.subscribed) {\n          this.updateAnimation = this.updateAnimation.bind(this);\n          this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n          this.subscribed = true;\n          this.animationService.start();\n        }\n\n        this.currentPos = 0;\n        this.maxPos = this.text.length;\n        this.currentText = '';\n        this.currentDelay = this.randomInt(this.minDelay, this.maxDelay);\n      } else {\n        this.currentText = this.text;\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('TextActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.done();\n  }\n\n  public updateAnimation() {\n    if (this.subscribed) {\n      // console.log('TextActorComponent.updateAnimation');\n      this.i++;\n      if (this.i % this.currentDelay === 0) {\n        // console.log('TextActorComponent.updateAnimation: step');\n        this.currentPos++;\n        if (this.currentPos  propName in changes)) {\n      this.updateText();\n      modified = true;\n    }\n\n    if (['animate'].some(propName => propName in changes)) {\n      if (this.animate) {\n        this.updateText();\n      } else {\n        this.done();\n        this.currentText = this.text;\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, font: FontService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        font\n                                                  \n                                                        \n                                                                        FontService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTextMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xDADADA\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fontCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Font\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:30\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {FontService} from '../loader/services/font.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor = 0xDADADA;\n  @Input()\n  set materialColor(materialColor: number) {\n    this._materialColor = materialColor;\n    if (this.object) {\n      // console.log('TextMeshComponent.set materialColor', materialColor + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    if (this.object) {\n      // console.log('TextMeshComponent.set text', text + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = false;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected font: FontService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject', this.name);\n\n    const font = await this.font.load(this.fontUrl);\n    // console.log('TextMeshComponent.loadLazyObject font', font);\n    return this.getTextMesh(font);\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh', this.text + ' / ' + this.name);\n    if (this.text) {\n      const geometry = new THREE.TextGeometry(this.text, {\n        font: font,\n        size: this.size,\n        height: this.height,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelOffset\n      });\n\n      const material = this.getMaterial();\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.castShadow = this.castShadow;\n      mesh.receiveShadow = this.receiveShadow;\n\n      if (this.centered) {\n        fixCenter(mesh);\n      }\n      return mesh;\n    } else {\n      return new THREE.Mesh();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:27\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:21\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            heightSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            widthSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  protected animate() {\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animation?.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            function\n            onlyUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            class\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            variable\n            lineFragShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            variable\n            lineVertShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            variable\n            SVGLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.1.2\n        \n            @angular/common : ^11.1.2\n        \n            @angular/compiler : ^11.1.2\n        \n            @angular/core : ^11.1.2\n        \n            @angular/forms : ^11.1.2\n        \n            @angular/platform-browser : ^11.1.2\n        \n            @angular/platform-browser-dynamic : ^11.1.2\n        \n            @angular/router : ^11.1.2\n        \n            core-js : ^3.8.3\n        \n            dagre : ^0.8.5\n        \n            rxjs : ^6.6.6\n        \n            snyk : ^1.463.0\n        \n            three : ^0.125.2\n        \n            uuid : ^8.3.2\n        \n            yaml : ^1.10.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            onlyUnique   (projects/.../dagre-yaml-parser.component.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            onlyUnique\n                        \n                        \n                    \n                \n            \n            \n                \nonlyUnique(value, index, self)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            removeFromArray\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array, element)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    46 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            lineFragShader   (projects/.../line-connector.component.ts)\n                        \n                        \n                            lineVertShader   (projects/.../line-connector.component.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../icon.service.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../icon.service.ts)\n                        \n                        \n                            SVGLoader   (projects/.../SVGLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            lineFragShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  uniform vec3 diffuse;\n  uniform float opacity;\n  uniform float time; // added time uniform\n\n  uniform float dashSize;\n  uniform float gapSize;\n  varying float vLineDistance;\n\n  void main() {\n\t\tfloat totalSize = dashSize + gapSize;\n\t\tfloat modulo = mod( vLineDistance + time, totalSize ); // time added to vLineDistance\n\n    if ( modulo > dashSize ) {\n      discard;\n    }\n\n    gl_FragColor = vec4( diffuse, opacity );\n  }\n  `\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineVertShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  attribute float lineDistance;\n  varying float vLineDistance;\n\n  void main() {\n    vLineDistance = lineDistance;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n  }\n  `\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/object/loader/services/icon.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REPLACE_SYMBOL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '?'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ':'\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/threejs-fork/SVGLoader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SVGLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (manager?) {\n\n  Loader.call(this, manager);\n\n  // Default dots per inch\n  this.defaultDPI = 90;\n\n  // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n  this.defaultUnit = 'px';\n\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
